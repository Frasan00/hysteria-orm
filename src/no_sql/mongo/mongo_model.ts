import { CaseConvention } from "../../utils/case_utils";
import { MongoDataSource } from "./mongo_data_source";
import { getBaseCollectionName } from "./mongo_model_types";

const tableMap = new WeakMap<typeof MongoModel, string>();

export class MongoModel {
  /**
   * @description Defines the case convention for the model
   * @type {CaseConvention}
   */
  static modelCaseConvention: CaseConvention = "camel";

  /**
   * @description Defines the case convention for the database, this should be the case convention you use in your database
   * @type {CaseConvention}
   */
  static databaseCaseConvention: CaseConvention = "snake";

  /**
   * @description The sql sqlInstance generated by SqlDataSource.connect
   */
  static dataSourceInstance: MongoDataSource;

  /**
   * @description Table name for the model, if not set it will be the plural snake case of the model name given that is in PascalCase (es. User -> users)
   */
  static tableName: string;

  /**
   * @description Static getter for table;
   * @internal
   */
  static get table(): string {
    if (!tableMap.has(this)) {
      tableMap.set(this, this.tableName || getBaseCollectionName(this));
    }

    return tableMap.get(this)!;
  }

  private static establishConnection(): void {
    const sql = MongoDataSource.getInstance();
    if (!sql) {
      throw new Error(
        "sql instance not initialized, did you defined it in SqlDataSource.connect static method?",
      );
    }

    this.dataSourceInstance = sql;
  }
}
