{"version":3,"sources":["../node_modules/tsup/assets/esm_shims.js","../node_modules/make-error/index.js","../node_modules/yn/lenient.js","../node_modules/yn/index.js","../node_modules/create-require/create-require.js","../node_modules/v8-compile-cache-lib/v8-compile-cache.js","../node_modules/ts-node/src/util.ts","../node_modules/ts-node/src/ts-internals.ts","../node_modules/@tsconfig/node16/tsconfig.json","../node_modules/@tsconfig/node14/tsconfig.json","../node_modules/@tsconfig/node12/tsconfig.json","../node_modules/@tsconfig/node10/tsconfig.json","../node_modules/ts-node/src/tsconfigs.ts","../node_modules/ts-node/src/configuration.ts","../node_modules/ts-node/src/module-type-classifier.ts","../node_modules/ts-node/src/resolver-functions.ts","../node_modules/ts-node/src/cjs-resolve-hooks.ts","../node_modules/ts-node/dist-raw/node-primordials.js","../node_modules/ts-node/dist-raw/node-nativemodule.js","../node_modules/ts-node/dist-raw/node-internalBinding-fs.js","../node_modules/ts-node/dist-raw/node-internal-modules-package_json_reader.js","../node_modules/arg/index.js","../node_modules/ts-node/dist-raw/node-options.js","../node_modules/ts-node/dist-raw/node-internal-modules-cjs-helpers.js","../node_modules/ts-node/dist-raw/node-internal-errors.js","../node_modules/ts-node/dist-raw/node-internal-constants.js","../node_modules/ts-node/dist-raw/node-internal-modules-cjs-loader.js","../node_modules/ts-node/src/node-module-type-classifier.ts","../node_modules/ts-node/src/file-extensions.ts","../node_modules/ts-node/src/ts-transpile-module.ts","../node_modules/ts-node/node_modules/acorn/dist/acorn.js","../node_modules/acorn-walk/dist/walk.js","../node_modules/ts-node/dist-raw/node-internal-repl-await.js","../node_modules/diff/lib/index.es6.js","../node_modules/ts-node/src/repl.ts","../node_modules/ts-node/package.json","../node_modules/@jridgewell/sourcemap-codec/src/vlq.ts","../node_modules/@jridgewell/sourcemap-codec/src/strings.ts","../node_modules/@jridgewell/sourcemap-codec/src/scopes.ts","../node_modules/@jridgewell/sourcemap-codec/src/sourcemap-codec.ts","../node_modules/@jridgewell/resolve-uri/src/resolve-uri.ts","../node_modules/@cspotcode/source-map-support/node_modules/@jridgewell/src/resolve.ts","../node_modules/@cspotcode/source-map-support/node_modules/@jridgewell/src/strip-filename.ts","../node_modules/@cspotcode/source-map-support/node_modules/@jridgewell/src/sourcemap-segment.ts","../node_modules/@cspotcode/source-map-support/node_modules/@jridgewell/src/sort.ts","../node_modules/@cspotcode/source-map-support/node_modules/@jridgewell/src/binary-search.ts","../node_modules/@cspotcode/source-map-support/node_modules/@jridgewell/src/by-source.ts","../node_modules/@cspotcode/source-map-support/node_modules/@jridgewell/src/any-map.ts","../node_modules/@cspotcode/source-map-support/node_modules/@jridgewell/src/trace-mapping.ts","../node_modules/@cspotcode/source-map-support/source-map-support.js","../node_modules/ts-node/dist-raw/node-internal-modules-esm-resolve.js","../node_modules/ts-node/dist-raw/node-internal-modules-esm-get_format.js","../node_modules/ts-node/src/esm.ts","../node_modules/ts-node/src/index.ts","../src/cli.ts","../src/hysteria_cli/migration_create_connector.ts","../src/hysteria_cli/resources/migration_templates.ts","../src/utils/logger.ts","../src/hysteria_cli/migration_run_connector.ts","../src/hysteria_cli/postgres/run_migration.ts","../src/sql/migrations/migration_controller.ts","../src/sql/resources/query/TRANSACTION.ts","../src/sql/sql_data_source.ts","../src/data_source.ts","../src/drivers/drivers_factory.ts","../src/drivers/pg_driver.ts","../src/drivers/driver.ts","../src/drivers/driver_constants.ts","../src/drivers/mongo_driver.ts","../src/drivers/mysql_driver.ts","../src/drivers/redis_driver.ts","../src/drivers/sqlite3_driver.ts","../src/sql/mysql/mysql_model_manager.ts","../src/sql/models/model_manager/model_manager.ts","../src/sql/models/model.ts","../src/utils/case_utils.ts","../src/sql/serializer.ts","../src/utils/json_utils.ts","../src/sql/models/model_decorators.ts","../src/sql/models/relations/belongs_to.ts","../src/sql/models/relations/relation.ts","../src/sql/models/relations/has_many.ts","../src/sql/models/relations/has_one.ts","../src/sql/models/relations/many_to_many.ts","../src/entity.ts","../src/utils/date_utils.ts","../src/sql/models/model_manager/model_manager_utils.ts","../src/sql/resources/query/DELETE.ts","../src/sql/resources/query/INSERT.ts","../src/sql/resources/query/RELATION.ts","../src/sql/resources/utils.ts","../src/sql/resources/query/UPDATE.ts","../src/sql/mysql/mysql_query_builder.ts","../src/sql/pagination.ts","../src/sql/query_builder/query_builder.ts","../src/sql/resources/query/SELECT.ts","../src/sql/query_builder/where_query_builder.ts","../src/sql/resources/query/WHERE.ts","../src/sql/resources/query/JOIN.ts","../src/sql/postgres/postgres_model_manager.ts","../src/sql/postgres/postgres_query_builder.ts","../src/sql/sqlite/sql_lite_model_manager.ts","../src/sql/sqlite/sql_lite_query_builder.ts","../src/sql/transactions/transaction.ts","../src/hysteria_cli/migration_utils.ts","../src/hysteria_cli/mysql/run_migration.ts","../src/hysteria_cli/sqlite/run_migration.ts","../src/hysteria_cli/migration_rollback_connector.ts","../src/hysteria_cli/mysql/rollback_migration.ts","../src/hysteria_cli/postgres/rollback_migration.ts","../src/hysteria_cli/sqlite/rollback_migration.ts"],"sourcesContent":["// Shim globals in esm bundle\nimport { fileURLToPath } from 'url'\nimport path from 'path'\n\nconst getFilename = () => fileURLToPath(import.meta.url)\nconst getDirname = () => path.dirname(getFilename())\n\nexport const __dirname = /* @__PURE__ */ getDirname()\nexport const __filename = /* @__PURE__ */ getFilename()\n","// ISC @ Julien Fontanet\n\n\"use strict\";\n\n// ===================================================================\n\nvar construct = typeof Reflect !== \"undefined\" ? Reflect.construct : undefined;\nvar defineProperty = Object.defineProperty;\n\n// -------------------------------------------------------------------\n\nvar captureStackTrace = Error.captureStackTrace;\nif (captureStackTrace === undefined) {\n  captureStackTrace = function captureStackTrace(error) {\n    var container = new Error();\n\n    defineProperty(error, \"stack\", {\n      configurable: true,\n      get: function getStack() {\n        var stack = container.stack;\n\n        // Replace property with value for faster future accesses.\n        defineProperty(this, \"stack\", {\n          configurable: true,\n          value: stack,\n          writable: true,\n        });\n\n        return stack;\n      },\n      set: function setStack(stack) {\n        defineProperty(error, \"stack\", {\n          configurable: true,\n          value: stack,\n          writable: true,\n        });\n      },\n    });\n  };\n}\n\n// -------------------------------------------------------------------\n\nfunction BaseError(message) {\n  if (message !== undefined) {\n    defineProperty(this, \"message\", {\n      configurable: true,\n      value: message,\n      writable: true,\n    });\n  }\n\n  var cname = this.constructor.name;\n  if (cname !== undefined && cname !== this.name) {\n    defineProperty(this, \"name\", {\n      configurable: true,\n      value: cname,\n      writable: true,\n    });\n  }\n\n  captureStackTrace(this, this.constructor);\n}\n\nBaseError.prototype = Object.create(Error.prototype, {\n  // See: https://github.com/JsCommunity/make-error/issues/4\n  constructor: {\n    configurable: true,\n    value: BaseError,\n    writable: true,\n  },\n});\n\n// -------------------------------------------------------------------\n\n// Sets the name of a function if possible (depends of the JS engine).\nvar setFunctionName = (function() {\n  function setFunctionName(fn, name) {\n    return defineProperty(fn, \"name\", {\n      configurable: true,\n      value: name,\n    });\n  }\n  try {\n    var f = function() {};\n    setFunctionName(f, \"foo\");\n    if (f.name === \"foo\") {\n      return setFunctionName;\n    }\n  } catch (_) {}\n})();\n\n// -------------------------------------------------------------------\n\nfunction makeError(constructor, super_) {\n  if (super_ == null || super_ === Error) {\n    super_ = BaseError;\n  } else if (typeof super_ !== \"function\") {\n    throw new TypeError(\"super_ should be a function\");\n  }\n\n  var name;\n  if (typeof constructor === \"string\") {\n    name = constructor;\n    constructor =\n      construct !== undefined\n        ? function() {\n            return construct(super_, arguments, this.constructor);\n          }\n        : function() {\n            super_.apply(this, arguments);\n          };\n\n    // If the name can be set, do it once and for all.\n    if (setFunctionName !== undefined) {\n      setFunctionName(constructor, name);\n      name = undefined;\n    }\n  } else if (typeof constructor !== \"function\") {\n    throw new TypeError(\"constructor should be either a string or a function\");\n  }\n\n  // Also register the super constructor also as `constructor.super_` just\n  // like Node's `util.inherits()`.\n  //\n  // eslint-disable-next-line dot-notation\n  constructor.super_ = constructor[\"super\"] = super_;\n\n  var properties = {\n    constructor: {\n      configurable: true,\n      value: constructor,\n      writable: true,\n    },\n  };\n\n  // If the name could not be set on the constructor, set it on the\n  // prototype.\n  if (name !== undefined) {\n    properties.name = {\n      configurable: true,\n      value: name,\n      writable: true,\n    };\n  }\n  constructor.prototype = Object.create(super_.prototype, properties);\n\n  return constructor;\n}\nexports = module.exports = makeError;\nexports.BaseError = BaseError;\n","'use strict';\n\nconst YES_MATCH_SCORE_THRESHOLD = 2;\nconst NO_MATCH_SCORE_THRESHOLD = 1.25;\n\nconst yMatch = new Map([\n\t[5, 0.25],\n\t[6, 0.25],\n\t[7, 0.25],\n\t['t', 0.75],\n\t['y', 1],\n\t['u', 0.75],\n\t['g', 0.25],\n\t['h', 0.25],\n\t['j', 0.25]\n]);\n\nconst eMatch = new Map([\n\t[2, 0.25],\n\t[3, 0.25],\n\t[4, 0.25],\n\t['w', 0.75],\n\t['e', 1],\n\t['r', 0.75],\n\t['s', 0.25],\n\t['d', 0.25],\n\t['f', 0.25]\n]);\n\nconst sMatch = new Map([\n\t['q', 0.25],\n\t['w', 0.25],\n\t['e', 0.25],\n\t['a', 0.75],\n\t['s', 1],\n\t['d', 0.75],\n\t['z', 0.25],\n\t['x', 0.25],\n\t['c', 0.25]\n]);\n\nconst nMatch = new Map([\n\t['h', 0.25],\n\t['j', 0.25],\n\t['k', 0.25],\n\t['b', 0.75],\n\t['n', 1],\n\t['m', 0.75]\n]);\n\nconst oMatch = new Map([\n\t[9, 0.25],\n\t[0, 0.25],\n\t['i', 0.75],\n\t['o', 1],\n\t['p', 0.75],\n\t['k', 0.25],\n\t['l', 0.25]\n]);\n\nfunction getYesMatchScore(value) {\n\tconst [y, e, s] = value;\n\tlet score = 0;\n\n\tif (yMatch.has(y)) {\n\t\tscore += yMatch.get(y);\n\t}\n\n\tif (eMatch.has(e)) {\n\t\tscore += eMatch.get(e);\n\t}\n\n\tif (sMatch.has(s)) {\n\t\tscore += sMatch.get(s);\n\t}\n\n\treturn score;\n}\n\nfunction getNoMatchScore(value) {\n\tconst [n, o] = value;\n\tlet score = 0;\n\n\tif (nMatch.has(n)) {\n\t\tscore += nMatch.get(n);\n\t}\n\n\tif (oMatch.has(o)) {\n\t\tscore += oMatch.get(o);\n\t}\n\n\treturn score;\n}\n\nmodule.exports = (input, options) => {\n\tif (getYesMatchScore(input) >= YES_MATCH_SCORE_THRESHOLD) {\n\t\treturn true;\n\t}\n\n\tif (getNoMatchScore(input) >= NO_MATCH_SCORE_THRESHOLD) {\n\t\treturn false;\n\t}\n\n\treturn options.default;\n};\n","'use strict';\nconst lenient = require('./lenient');\n\nconst yn = (input, options) => {\n\tinput = String(input).trim();\n\n\toptions = Object.assign({\n\t\tlenient: false,\n\t\tdefault: null\n\t}, options);\n\n\tif (options.default !== null && typeof options.default !== 'boolean') {\n\t\tthrow new TypeError(`Expected the \\`default\\` option to be of type \\`boolean\\`, got \\`${typeof options.default}\\``);\n\t}\n\n\tif (/^(?:y|yes|true|1)$/i.test(input)) {\n\t\treturn true;\n\t}\n\n\tif (/^(?:n|no|false|0)$/i.test(input)) {\n\t\treturn false;\n\t}\n\n\tif (options.lenient === true) {\n\t\treturn lenient(input, options);\n\t}\n\n\treturn options.default;\n};\n\nmodule.exports = yn;\n// TODO: Remove this for the next major release\nmodule.exports.default = yn;\n","const nativeModule = require('module')\nconst path = require('path')\nconst fs = require('fs')\n\nfunction createRequire (filename) {\n  // Fallback to process.cwd() if no filename passed\n  if (!filename) {\n    filename = process.cwd()\n  }\n\n  // If filename is dir, createRequire goes with parent directory, so we need fakepath\n  if (isDir(filename)) {\n    filename = path.join(filename, 'index.js')\n  }\n\n  // Added in Node v12.2.0\n  if (nativeModule.createRequire) {\n    return nativeModule.createRequire(filename)\n  }\n\n  // Added in Node v10.12.0 and deprecated since Node v12.2.0\n  if (nativeModule.createRequireFromPath) {\n    return nativeModule.createRequireFromPath(filename)\n  }\n\n  // Polyfill\n  return _createRequire(filename)\n}\n\n// Polyfill\nfunction _createRequire (filename) {\n  const mod = new nativeModule.Module(filename, null)\n  mod.filename = filename\n  mod.paths = nativeModule.Module._nodeModulePaths(path.dirname(filename))\n  mod._compile('module.exports = require;', filename)\n  return mod.exports\n}\n\nfunction isDir (path) {\n  try {\n    const stat = fs.lstatSync(path)\n    return stat.isDirectory()\n  } catch (e) {\n    // lstatSync throws an error if path doesn't exist\n    return false\n  }\n}\n\nmodule.exports = createRequire\n","'use strict';\n\nconst Module = require('module');\nconst crypto = require('crypto');\nconst fs = require('fs');\nconst path = require('path');\nconst vm = require('vm');\nconst os = require('os');\n\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\n\n//------------------------------------------------------------------------------\n// FileSystemBlobStore\n//------------------------------------------------------------------------------\n\nclass FileSystemBlobStore {\n  constructor(directory, prefix) {\n    const name = prefix ? slashEscape(prefix + '.') : '';\n    this._blobFilename = path.join(directory, name + 'BLOB');\n    this._mapFilename = path.join(directory, name + 'MAP');\n    this._lockFilename = path.join(directory, name + 'LOCK');\n    this._directory = directory;\n    this._load();\n  }\n\n  has(key, invalidationKey) {\n    if (hasOwnProperty.call(this._memoryBlobs, key)) {\n      return this._invalidationKeys[key] === invalidationKey;\n    } else if (hasOwnProperty.call(this._storedMap, key)) {\n      return this._storedMap[key][0] === invalidationKey;\n    }\n    return false;\n  }\n\n  get(key, invalidationKey) {\n    if (hasOwnProperty.call(this._memoryBlobs, key)) {\n      if (this._invalidationKeys[key] === invalidationKey) {\n        return this._memoryBlobs[key];\n      }\n    } else if (hasOwnProperty.call(this._storedMap, key)) {\n      const mapping = this._storedMap[key];\n      if (mapping[0] === invalidationKey) {\n        return this._storedBlob.slice(mapping[1], mapping[2]);\n      }\n    }\n  }\n\n  set(key, invalidationKey, buffer) {\n    this._invalidationKeys[key] = invalidationKey;\n    this._memoryBlobs[key] = buffer;\n    this._dirty = true;\n  }\n\n  delete(key) {\n    if (hasOwnProperty.call(this._memoryBlobs, key)) {\n      this._dirty = true;\n      delete this._memoryBlobs[key];\n    }\n    if (hasOwnProperty.call(this._invalidationKeys, key)) {\n      this._dirty = true;\n      delete this._invalidationKeys[key];\n    }\n    if (hasOwnProperty.call(this._storedMap, key)) {\n      this._dirty = true;\n      delete this._storedMap[key];\n    }\n  }\n\n  isDirty() {\n    return this._dirty;\n  }\n\n  save() {\n    const dump = this._getDump();\n    const blobToStore = Buffer.concat(dump[0]);\n    const mapToStore = JSON.stringify(dump[1]);\n\n    try {\n      mkdirpSync(this._directory);\n      fs.writeFileSync(this._lockFilename, 'LOCK', {flag: 'wx'});\n    } catch (error) {\n      // Swallow the exception if we fail to acquire the lock.\n      return false;\n    }\n\n    try {\n      fs.writeFileSync(this._blobFilename, blobToStore);\n      fs.writeFileSync(this._mapFilename, mapToStore);\n    } finally {\n      fs.unlinkSync(this._lockFilename);\n    }\n\n    return true;\n  }\n\n  _load() {\n    try {\n      this._storedBlob = fs.readFileSync(this._blobFilename);\n      this._storedMap = JSON.parse(fs.readFileSync(this._mapFilename));\n    } catch (e) {\n      this._storedBlob = Buffer.alloc(0);\n      this._storedMap = {};\n    }\n    this._dirty = false;\n    this._memoryBlobs = {};\n    this._invalidationKeys = {};\n  }\n\n  _getDump() {\n    const buffers = [];\n    const newMap = {};\n    let offset = 0;\n\n    function push(key, invalidationKey, buffer) {\n      buffers.push(buffer);\n      newMap[key] = [invalidationKey, offset, offset + buffer.length];\n      offset += buffer.length;\n    }\n\n    for (const key of Object.keys(this._memoryBlobs)) {\n      const buffer = this._memoryBlobs[key];\n      const invalidationKey = this._invalidationKeys[key];\n      push(key, invalidationKey, buffer);\n    }\n\n    for (const key of Object.keys(this._storedMap)) {\n      if (hasOwnProperty.call(newMap, key)) continue;\n      const mapping = this._storedMap[key];\n      const buffer = this._storedBlob.slice(mapping[1], mapping[2]);\n      push(key, mapping[0], buffer);\n    }\n\n    return [buffers, newMap];\n  }\n}\n\n//------------------------------------------------------------------------------\n// NativeCompileCache\n//------------------------------------------------------------------------------\n\nclass NativeCompileCache {\n  constructor() {\n    this._cacheStore = null;\n    this._previousModuleCompile = null;\n  }\n\n  setCacheStore(cacheStore) {\n    this._cacheStore = cacheStore;\n  }\n\n  install() {\n    const self = this;\n    const hasRequireResolvePaths = typeof require.resolve.paths === 'function';\n    this._previousModuleCompile = Module.prototype._compile;\n    Module.prototype._compile = this._ownModuleCompile = _ownModuleCompile;\n    self.enabled = true;\n    function _ownModuleCompile(content, filename) {\n      if(!self.enabled) return this._previousModuleCompile.apply(this, arguments);\n      const mod = this;\n\n      function require(id) {\n        return mod.require(id);\n      }\n\n      // https://github.com/nodejs/node/blob/v10.15.3/lib/internal/modules/cjs/helpers.js#L28\n      function resolve(request, options) {\n        return Module._resolveFilename(request, mod, false, options);\n      }\n      require.resolve = resolve;\n\n      // https://github.com/nodejs/node/blob/v10.15.3/lib/internal/modules/cjs/helpers.js#L37\n      // resolve.resolve.paths was added in v8.9.0\n      if (hasRequireResolvePaths) {\n        resolve.paths = function paths(request) {\n          return Module._resolveLookupPaths(request, mod, true);\n        };\n      }\n\n      require.main = process.mainModule;\n\n      // Enable support to add extra extension types\n      require.extensions = Module._extensions;\n      require.cache = Module._cache;\n\n      const dirname = path.dirname(filename);\n\n      const compiledWrapper = self._moduleCompile(filename, content);\n\n      // We skip the debugger setup because by the time we run, node has already\n      // done that itself.\n\n      // `Buffer` is included for Electron.\n      // See https://github.com/zertosh/v8-compile-cache/pull/10#issuecomment-518042543\n      const args = [mod.exports, require, mod, filename, dirname, process, global, Buffer];\n      return compiledWrapper.apply(mod.exports, args);\n    }\n  }\n\n  uninstall() {\n    this.enabled = false;\n    // If something else has since been installed on top of us, we cannot overwrite it.\n    if(Module.prototype._compile === this._ownModuleCompile) {\n      Module.prototype._compile = this._previousModuleCompile;\n    }\n  }\n\n  _moduleCompile(filename, content) {\n    // https://github.com/nodejs/node/blob/v7.5.0/lib/module.js#L511\n\n    // Remove shebang\n    var contLen = content.length;\n    if (contLen >= 2) {\n      if (content.charCodeAt(0) === 35/*#*/ &&\n          content.charCodeAt(1) === 33/*!*/) {\n        if (contLen === 2) {\n          // Exact match\n          content = '';\n        } else {\n          // Find end of shebang line and slice it off\n          var i = 2;\n          for (; i < contLen; ++i) {\n            var code = content.charCodeAt(i);\n            if (code === 10/*\\n*/ || code === 13/*\\r*/) break;\n          }\n          if (i === contLen) {\n            content = '';\n          } else {\n            // Note that this actually includes the newline character(s) in the\n            // new output. This duplicates the behavior of the regular\n            // expression that was previously used to replace the shebang line\n            content = content.slice(i);\n          }\n        }\n      }\n    }\n\n    // create wrapper function\n    var wrapper = Module.wrap(content);\n\n    var invalidationKey = crypto\n      .createHash('sha1')\n      .update(content, 'utf8')\n      .digest('hex');\n\n    var buffer = this._cacheStore.get(filename, invalidationKey);\n\n    var script = new vm.Script(wrapper, {\n      filename: filename,\n      lineOffset: 0,\n      displayErrors: true,\n      cachedData: buffer,\n      produceCachedData: true,\n    });\n\n    if (script.cachedDataProduced) {\n      this._cacheStore.set(filename, invalidationKey, script.cachedData);\n    } else if (script.cachedDataRejected) {\n      this._cacheStore.delete(filename);\n    }\n\n    var compiledWrapper = script.runInThisContext({\n      filename: filename,\n      lineOffset: 0,\n      columnOffset: 0,\n      displayErrors: true,\n    });\n\n    return compiledWrapper;\n  }\n}\n\n//------------------------------------------------------------------------------\n// utilities\n//\n// https://github.com/substack/node-mkdirp/blob/f2003bb/index.js#L55-L98\n// https://github.com/zertosh/slash-escape/blob/e7ebb99/slash-escape.js\n//------------------------------------------------------------------------------\n\nfunction mkdirpSync(p_) {\n  _mkdirpSync(path.resolve(p_), 0o777);\n}\n\nfunction _mkdirpSync(p, mode) {\n  try {\n    fs.mkdirSync(p, mode);\n  } catch (err0) {\n    if (err0.code === 'ENOENT') {\n      _mkdirpSync(path.dirname(p));\n      _mkdirpSync(p);\n    } else {\n      try {\n        const stat = fs.statSync(p);\n        if (!stat.isDirectory()) { throw err0; }\n      } catch (err1) {\n        throw err0;\n      }\n    }\n  }\n}\n\nfunction slashEscape(str) {\n  const ESCAPE_LOOKUP = {\n    '\\\\': 'zB',\n    ':': 'zC',\n    '/': 'zS',\n    '\\x00': 'z0',\n    'z': 'zZ',\n  };\n  const ESCAPE_REGEX = /[\\\\:/\\x00z]/g; // eslint-disable-line no-control-regex\n  return str.replace(ESCAPE_REGEX, match => ESCAPE_LOOKUP[match]);\n}\n\nfunction supportsCachedData() {\n  const script = new vm.Script('\"\"', {produceCachedData: true});\n  // chakracore, as of v1.7.1.0, returns `false`.\n  return script.cachedDataProduced === true;\n}\n\nfunction getCacheDir() {\n  const v8_compile_cache_cache_dir = process.env.V8_COMPILE_CACHE_CACHE_DIR;\n  if (v8_compile_cache_cache_dir) {\n    return v8_compile_cache_cache_dir;\n  }\n\n  // Avoid cache ownership issues on POSIX systems.\n  const dirname = typeof process.getuid === 'function'\n    ? 'v8-compile-cache-' + process.getuid()\n    : 'v8-compile-cache';\n  const version = typeof process.versions.v8 === 'string'\n    ? process.versions.v8\n    : typeof process.versions.chakracore === 'string'\n      ? 'chakracore-' + process.versions.chakracore\n      : 'node-' + process.version;\n  const cacheDir = path.join(os.tmpdir(), dirname, version);\n  return cacheDir;\n}\n\nfunction getMainName() {\n  // `require.main.filename` is undefined or null when:\n  //    * node -e 'require(\"v8-compile-cache\")'\n  //    * node -r 'v8-compile-cache'\n  //    * Or, requiring from the REPL.\n  const mainName = require.main && typeof require.main.filename === 'string'\n    ? require.main.filename\n    : process.cwd();\n  return mainName;\n}\n\nfunction install(opts) {\n  if (!process.env.DISABLE_V8_COMPILE_CACHE && supportsCachedData()) {\n    if(typeof opts === 'undefined') opts = {}\n    let cacheDir = opts.cacheDir\n    if(typeof cacheDir === 'undefined') cacheDir = getCacheDir();\n    let prefix = opts.prefix\n    if(typeof prefix === 'undefined') prefix = getMainName();\n    const blobStore = new FileSystemBlobStore(cacheDir, prefix);\n\n    const nativeCompileCache = new NativeCompileCache();\n    nativeCompileCache.setCacheStore(blobStore);\n    nativeCompileCache.install();\n\n    let uninstalled = false;\n    const uninstall = () => {\n      if(uninstalled) return;\n      uninstalled = true;\n      process.removeListener('exit', uninstall);\n      if (blobStore.isDirty()) {\n        blobStore.save();\n      }\n      nativeCompileCache.uninstall();\n    }\n    process.once('exit', uninstall);\n    return {uninstall};\n  }\n}\n\n//------------------------------------------------------------------------------\n// main\n//------------------------------------------------------------------------------\n\nmodule.exports.install = install;\n\nmodule.exports.__TEST__ = {\n  FileSystemBlobStore,\n  NativeCompileCache,\n  mkdirpSync,\n  slashEscape,\n  supportsCachedData,\n  getCacheDir,\n  getMainName,\n};\n","import {\n  createRequire as nodeCreateRequire,\n  createRequireFromPath as nodeCreateRequireFromPath,\n} from 'module';\nimport type _createRequire from 'create-require';\nimport * as ynModule from 'yn';\nimport { dirname } from 'path';\n\n/** @internal */\nexport const createRequire =\n  nodeCreateRequire ??\n  nodeCreateRequireFromPath ??\n  (require('create-require') as typeof _createRequire);\n\n/**\n * Wrapper around yn module that returns `undefined` instead of `null`.\n * This is implemented by yn v4, but we're staying on v3 to avoid v4's node 10 requirement.\n * @internal\n */\nexport function yn(value: string | undefined) {\n  return ynModule(value) ?? undefined;\n}\n\n/**\n * Like `Object.assign`, but ignores `undefined` properties.\n *\n * @internal\n */\nexport function assign<T extends object>(\n  initialValue: T,\n  ...sources: Array<T>\n): T {\n  for (const source of sources) {\n    for (const key of Object.keys(source)) {\n      const value = (source as any)[key];\n      if (value !== undefined) (initialValue as any)[key] = value;\n    }\n  }\n  return initialValue;\n}\n\n/**\n * Split a string array of values\n * and remove empty strings from the resulting array.\n * @internal\n */\nexport function split(value: string | undefined) {\n  return typeof value === 'string'\n    ? value.split(/ *, */g).filter((v) => v !== '')\n    : undefined;\n}\n\n/**\n * Parse a string as JSON.\n * @internal\n */\nexport function parse(value: string | undefined): object | undefined {\n  return typeof value === 'string' ? JSON.parse(value) : undefined;\n}\n\nconst directorySeparator = '/';\nconst backslashRegExp = /\\\\/g;\n/**\n * Replace backslashes with forward slashes.\n * @internal\n */\nexport function normalizeSlashes(value: string): string {\n  return value.replace(backslashRegExp, directorySeparator);\n}\n\n/**\n * Safe `hasOwnProperty`\n * @internal\n */\nexport function hasOwnProperty(object: any, property: string): boolean {\n  return Object.prototype.hasOwnProperty.call(object, property);\n}\n\n/**\n * Cached fs operation wrapper.\n */\nexport function cachedLookup<T, R>(fn: (arg: T) => R): (arg: T) => R {\n  const cache = new Map<T, R>();\n\n  return (arg: T): R => {\n    if (!cache.has(arg)) {\n      const v = fn(arg);\n      cache.set(arg, v);\n      return v;\n    }\n    return cache.get(arg)!;\n  };\n}\n\n/**\n * @internal\n * Require something with v8-compile-cache, which should make subsequent requires faster.\n * Do lots of error-handling so that, worst case, we require without the cache, and users are not blocked.\n */\nexport function attemptRequireWithV8CompileCache(\n  requireFn: typeof require,\n  specifier: string\n) {\n  try {\n    const v8CC = (\n      require('v8-compile-cache-lib') as typeof import('v8-compile-cache-lib')\n    ).install();\n    try {\n      return requireFn(specifier);\n    } finally {\n      v8CC?.uninstall();\n    }\n  } catch (e) {\n    return requireFn(specifier);\n  }\n}\n\n/**\n * Helper to discover dependencies relative to a user's project, optionally\n * falling back to relative to ts-node.  This supports global installations of\n * ts-node, for example where someone does `#!/usr/bin/env -S ts-node --swc` and\n * we need to fallback to a global install of @swc/core\n * @internal\n */\nexport function createProjectLocalResolveHelper(localDirectory: string) {\n  return function projectLocalResolveHelper(\n    specifier: string,\n    fallbackToTsNodeRelative: boolean\n  ) {\n    return require.resolve(specifier, {\n      paths: fallbackToTsNodeRelative\n        ? [localDirectory, __dirname]\n        : [localDirectory],\n    });\n  };\n}\n/** @internal */\nexport type ProjectLocalResolveHelper = ReturnType<\n  typeof createProjectLocalResolveHelper\n>;\n\n/**\n * Used as a reminder of all the factors we must consider when finding project-local dependencies and when a config file\n * on disk may or may not exist.\n * @internal\n */\nexport function getBasePathForProjectLocalDependencyResolution(\n  configFilePath: string | undefined,\n  projectSearchDirOption: string | undefined,\n  projectOption: string | undefined,\n  cwdOption: string\n) {\n  if (configFilePath != null) return dirname(configFilePath);\n  return projectSearchDirOption ?? projectOption ?? cwdOption;\n  // TODO technically breaks if projectOption is path to a file, not a directory,\n  // and we attempt to resolve relative specifiers.  By the time we resolve relative specifiers,\n  // should have configFilePath, so not reach this codepath.\n}\n\n/** @internal */\nexport function once<Fn extends (...args: any[]) => any>(fn: Fn) {\n  let value: ReturnType<Fn>;\n  let ran = false;\n  function onceFn(...args: Parameters<Fn>): ReturnType<Fn> {\n    if (ran) return value;\n    value = fn(...args);\n    ran = true;\n    return value;\n  }\n  return onceFn;\n}\n\n/** @internal */\nexport function versionGteLt(\n  version: string,\n  gteRequirement: string,\n  ltRequirement?: string\n) {\n  const [major, minor, patch, extra] = parse(version);\n  const [gteMajor, gteMinor, gtePatch] = parse(gteRequirement);\n  const isGte =\n    major > gteMajor ||\n    (major === gteMajor &&\n      (minor > gteMinor || (minor === gteMinor && patch >= gtePatch)));\n  let isLt = true;\n  if (ltRequirement) {\n    const [ltMajor, ltMinor, ltPatch] = parse(ltRequirement);\n    isLt =\n      major < ltMajor ||\n      (major === ltMajor &&\n        (minor < ltMinor || (minor === ltMinor && patch < ltPatch)));\n  }\n  return isGte && isLt;\n\n  function parse(requirement: string) {\n    return requirement.split(/[\\.-]/).map((s) => parseInt(s, 10));\n  }\n}\n","import { isAbsolute, resolve } from 'path';\nimport { cachedLookup, normalizeSlashes, versionGteLt } from './util';\nimport type * as _ts from 'typescript';\nimport type { TSCommon, TSInternal } from './ts-compiler-types';\n\n/** @internal */\nexport const createTsInternals = cachedLookup(createTsInternalsUncached);\n/**\n * Given a reference to the TS compiler, return some TS internal functions that we\n * could not or did not want to grab off the `ts` object.\n * These have been copy-pasted from TS's source and tweaked as necessary.\n *\n * NOTE: This factory returns *only* functions which need a reference to the TS\n * compiler.  Other functions do not need a reference to the TS compiler so are\n * exported directly from this file.\n */\nfunction createTsInternalsUncached(_ts: TSCommon) {\n  const ts = _ts as TSCommon & TSInternal;\n  /**\n   * Copied from:\n   * https://github.com/microsoft/TypeScript/blob/v4.3.2/src/compiler/commandLineParser.ts#L2821-L2846\n   */\n  function getExtendsConfigPath(\n    extendedConfig: string,\n    host: _ts.ParseConfigHost,\n    basePath: string,\n    errors: _ts.Push<_ts.Diagnostic>,\n    createDiagnostic: (\n      message: _ts.DiagnosticMessage,\n      arg1?: string\n    ) => _ts.Diagnostic\n  ) {\n    extendedConfig = normalizeSlashes(extendedConfig);\n    if (\n      isRootedDiskPath(extendedConfig) ||\n      startsWith(extendedConfig, './') ||\n      startsWith(extendedConfig, '../')\n    ) {\n      let extendedConfigPath = getNormalizedAbsolutePath(\n        extendedConfig,\n        basePath\n      );\n      if (\n        !host.fileExists(extendedConfigPath) &&\n        !endsWith(extendedConfigPath, ts.Extension.Json)\n      ) {\n        extendedConfigPath = `${extendedConfigPath}.json`;\n        if (!host.fileExists(extendedConfigPath)) {\n          errors.push(\n            createDiagnostic(ts.Diagnostics.File_0_not_found, extendedConfig)\n          );\n          return undefined;\n        }\n      }\n      return extendedConfigPath;\n    }\n    // If the path isn't a rooted or relative path, resolve like a module\n    const tsGte5_3_0 = versionGteLt(ts.version, '5.3.0');\n    const resolved = ts.nodeModuleNameResolver(\n      extendedConfig,\n      combinePaths(basePath, 'tsconfig.json'),\n      { moduleResolution: ts.ModuleResolutionKind.NodeJs },\n      host,\n      /*cache*/ undefined,\n      /*projectRefs*/ undefined,\n      /*conditionsOrIsConfigLookup*/ tsGte5_3_0 ? undefined : true,\n      /*isConfigLookup*/ tsGte5_3_0 ? true : undefined\n    );\n    if (resolved.resolvedModule) {\n      return resolved.resolvedModule.resolvedFileName;\n    }\n    errors.push(\n      createDiagnostic(ts.Diagnostics.File_0_not_found, extendedConfig)\n    );\n    return undefined;\n  }\n\n  return { getExtendsConfigPath };\n}\n\n// These functions have alternative implementation to avoid copying too much from TS\nfunction isRootedDiskPath(path: string) {\n  return isAbsolute(path);\n}\nfunction combinePaths(path: string, ...paths: (string | undefined)[]): string {\n  return normalizeSlashes(\n    resolve(path, ...(paths.filter((path) => path) as string[]))\n  );\n}\nfunction getNormalizedAbsolutePath(\n  fileName: string,\n  currentDirectory: string | undefined\n) {\n  return normalizeSlashes(\n    currentDirectory != null\n      ? resolve(currentDirectory!, fileName)\n      : resolve(fileName)\n  );\n}\n\nfunction startsWith(str: string, prefix: string): boolean {\n  return str.lastIndexOf(prefix, 0) === 0;\n}\n\nfunction endsWith(str: string, suffix: string): boolean {\n  const expectedPos = str.length - suffix.length;\n  return expectedPos >= 0 && str.indexOf(suffix, expectedPos) === expectedPos;\n}\n// Reserved characters, forces escaping of any non-word (or digit), non-whitespace character.\n// It may be inefficient (we could just match (/[-[\\]{}()*+?.,\\\\^$|#\\s]/g), but this is future\n// proof.\nconst reservedCharacterPattern = /[^\\w\\s\\/]/g;\n\n/**\n * @internal\n * See also: getRegularExpressionForWildcard, which seems to do almost the same thing\n */\nexport function getPatternFromSpec(spec: string, basePath: string) {\n  const pattern = spec && getSubPatternFromSpec(spec, basePath, excludeMatcher);\n  return pattern && `^(${pattern})${'($|/)'}`;\n}\nfunction getSubPatternFromSpec(\n  spec: string,\n  basePath: string,\n  {\n    singleAsteriskRegexFragment,\n    doubleAsteriskRegexFragment,\n    replaceWildcardCharacter,\n  }: WildcardMatcher\n): string {\n  let subpattern = '';\n  let hasWrittenComponent = false;\n  const components = getNormalizedPathComponents(spec, basePath);\n  const lastComponent = last(components);\n\n  // getNormalizedPathComponents includes the separator for the root component.\n  // We need to remove to create our regex correctly.\n  components[0] = removeTrailingDirectorySeparator(components[0]);\n\n  if (isImplicitGlob(lastComponent)) {\n    components.push('**', '*');\n  }\n\n  let optionalCount = 0;\n  for (let component of components) {\n    if (component === '**') {\n      subpattern += doubleAsteriskRegexFragment;\n    } else {\n      if (hasWrittenComponent) {\n        subpattern += directorySeparator;\n      }\n      subpattern += component.replace(\n        reservedCharacterPattern,\n        replaceWildcardCharacter\n      );\n    }\n\n    hasWrittenComponent = true;\n  }\n\n  while (optionalCount > 0) {\n    subpattern += ')?';\n    optionalCount--;\n  }\n\n  return subpattern;\n}\ninterface WildcardMatcher {\n  singleAsteriskRegexFragment: string;\n  doubleAsteriskRegexFragment: string;\n  replaceWildcardCharacter: (match: string) => string;\n}\nconst directoriesMatcher: WildcardMatcher = {\n  singleAsteriskRegexFragment: '[^/]*',\n  /**\n   * Regex for the ** wildcard. Matches any num of subdirectories. When used for including\n   * files or directories, does not match subdirectories that start with a . character\n   */\n  doubleAsteriskRegexFragment: `(/[^/.][^/]*)*?`,\n  replaceWildcardCharacter: (match) =>\n    replaceWildcardCharacter(\n      match,\n      directoriesMatcher.singleAsteriskRegexFragment\n    ),\n};\nconst excludeMatcher: WildcardMatcher = {\n  singleAsteriskRegexFragment: '[^/]*',\n  doubleAsteriskRegexFragment: '(/.+?)?',\n  replaceWildcardCharacter: (match) =>\n    replaceWildcardCharacter(match, excludeMatcher.singleAsteriskRegexFragment),\n};\nfunction getNormalizedPathComponents(\n  path: string,\n  currentDirectory: string | undefined\n) {\n  return reducePathComponents(getPathComponents(path, currentDirectory));\n}\nfunction getPathComponents(path: string, currentDirectory = '') {\n  path = combinePaths(currentDirectory, path);\n  return pathComponents(path, getRootLength(path));\n}\nfunction reducePathComponents(components: readonly string[]) {\n  if (!some(components)) return [];\n  const reduced = [components[0]];\n  for (let i = 1; i < components.length; i++) {\n    const component = components[i];\n    if (!component) continue;\n    if (component === '.') continue;\n    if (component === '..') {\n      if (reduced.length > 1) {\n        if (reduced[reduced.length - 1] !== '..') {\n          reduced.pop();\n          continue;\n        }\n      } else if (reduced[0]) continue;\n    }\n    reduced.push(component);\n  }\n  return reduced;\n}\nfunction getRootLength(path: string) {\n  const rootLength = getEncodedRootLength(path);\n  return rootLength < 0 ? ~rootLength : rootLength;\n}\nfunction getEncodedRootLength(path: string): number {\n  if (!path) return 0;\n  const ch0 = path.charCodeAt(0);\n\n  // POSIX or UNC\n  if (ch0 === CharacterCodes.slash || ch0 === CharacterCodes.backslash) {\n    if (path.charCodeAt(1) !== ch0) return 1; // POSIX: \"/\" (or non-normalized \"\\\")\n\n    const p1 = path.indexOf(\n      ch0 === CharacterCodes.slash ? directorySeparator : altDirectorySeparator,\n      2\n    );\n    if (p1 < 0) return path.length; // UNC: \"//server\" or \"\\\\server\"\n\n    return p1 + 1; // UNC: \"//server/\" or \"\\\\server\\\"\n  }\n\n  // DOS\n  if (isVolumeCharacter(ch0) && path.charCodeAt(1) === CharacterCodes.colon) {\n    const ch2 = path.charCodeAt(2);\n    if (ch2 === CharacterCodes.slash || ch2 === CharacterCodes.backslash)\n      return 3; // DOS: \"c:/\" or \"c:\\\"\n    if (path.length === 2) return 2; // DOS: \"c:\" (but not \"c:d\")\n  }\n\n  // URL\n  const schemeEnd = path.indexOf(urlSchemeSeparator);\n  if (schemeEnd !== -1) {\n    const authorityStart = schemeEnd + urlSchemeSeparator.length;\n    const authorityEnd = path.indexOf(directorySeparator, authorityStart);\n    if (authorityEnd !== -1) {\n      // URL: \"file:///\", \"file://server/\", \"file://server/path\"\n      // For local \"file\" URLs, include the leading DOS volume (if present).\n      // Per https://www.ietf.org/rfc/rfc1738.txt, a host of \"\" or \"localhost\" is a\n      // special case interpreted as \"the machine from which the URL is being interpreted\".\n      const scheme = path.slice(0, schemeEnd);\n      const authority = path.slice(authorityStart, authorityEnd);\n      if (\n        scheme === 'file' &&\n        (authority === '' || authority === 'localhost') &&\n        isVolumeCharacter(path.charCodeAt(authorityEnd + 1))\n      ) {\n        const volumeSeparatorEnd = getFileUrlVolumeSeparatorEnd(\n          path,\n          authorityEnd + 2\n        );\n        if (volumeSeparatorEnd !== -1) {\n          if (path.charCodeAt(volumeSeparatorEnd) === CharacterCodes.slash) {\n            // URL: \"file:///c:/\", \"file://localhost/c:/\", \"file:///c%3a/\", \"file://localhost/c%3a/\"\n            return ~(volumeSeparatorEnd + 1);\n          }\n          if (volumeSeparatorEnd === path.length) {\n            // URL: \"file:///c:\", \"file://localhost/c:\", \"file:///c$3a\", \"file://localhost/c%3a\"\n            // but not \"file:///c:d\" or \"file:///c%3ad\"\n            return ~volumeSeparatorEnd;\n          }\n        }\n      }\n      return ~(authorityEnd + 1); // URL: \"file://server/\", \"http://server/\"\n    }\n    return ~path.length; // URL: \"file://server\", \"http://server\"\n  }\n\n  // relative\n  return 0;\n}\nfunction ensureTrailingDirectorySeparator(path: string) {\n  if (!hasTrailingDirectorySeparator(path)) {\n    return path + directorySeparator;\n  }\n\n  return path;\n}\nfunction hasTrailingDirectorySeparator(path: string) {\n  return (\n    path.length > 0 && isAnyDirectorySeparator(path.charCodeAt(path.length - 1))\n  );\n}\nfunction isAnyDirectorySeparator(charCode: number): boolean {\n  return (\n    charCode === CharacterCodes.slash || charCode === CharacterCodes.backslash\n  );\n}\nfunction removeTrailingDirectorySeparator(path: string) {\n  if (hasTrailingDirectorySeparator(path)) {\n    return path.substr(0, path.length - 1);\n  }\n\n  return path;\n}\nconst directorySeparator = '/';\nconst altDirectorySeparator = '\\\\';\nconst urlSchemeSeparator = '://';\nfunction isVolumeCharacter(charCode: number) {\n  return (\n    (charCode >= CharacterCodes.a && charCode <= CharacterCodes.z) ||\n    (charCode >= CharacterCodes.A && charCode <= CharacterCodes.Z)\n  );\n}\nfunction getFileUrlVolumeSeparatorEnd(url: string, start: number) {\n  const ch0 = url.charCodeAt(start);\n  if (ch0 === CharacterCodes.colon) return start + 1;\n  if (\n    ch0 === CharacterCodes.percent &&\n    url.charCodeAt(start + 1) === CharacterCodes._3\n  ) {\n    const ch2 = url.charCodeAt(start + 2);\n    if (ch2 === CharacterCodes.a || ch2 === CharacterCodes.A) return start + 3;\n  }\n  return -1;\n}\nfunction some<T>(array: readonly T[] | undefined): array is readonly T[];\nfunction some<T>(\n  array: readonly T[] | undefined,\n  predicate: (value: T) => boolean\n): boolean;\nfunction some<T>(\n  array: readonly T[] | undefined,\n  predicate?: (value: T) => boolean\n): boolean {\n  if (array) {\n    if (predicate) {\n      for (const v of array) {\n        if (predicate(v)) {\n          return true;\n        }\n      }\n    } else {\n      return array.length > 0;\n    }\n  }\n  return false;\n}\n/* @internal */\nconst enum CharacterCodes {\n  _3 = 0x33,\n  a = 0x61,\n  z = 0x7a,\n  A = 0x41,\n  Z = 0x5a,\n  asterisk = 0x2a, // *\n  backslash = 0x5c, // \\\n  colon = 0x3a, // :\n  percent = 0x25, // %\n  question = 0x3f, // ?\n  slash = 0x2f, // /\n}\nfunction pathComponents(path: string, rootLength: number) {\n  const root = path.substring(0, rootLength);\n  const rest = path.substring(rootLength).split(directorySeparator);\n  if (rest.length && !lastOrUndefined(rest)) rest.pop();\n  return [root, ...rest];\n}\nfunction lastOrUndefined<T>(array: readonly T[]): T | undefined {\n  return array.length === 0 ? undefined : array[array.length - 1];\n}\nfunction last<T>(array: readonly T[]): T {\n  // Debug.assert(array.length !== 0);\n  return array[array.length - 1];\n}\nfunction replaceWildcardCharacter(\n  match: string,\n  singleAsteriskRegexFragment: string\n) {\n  return match === '*'\n    ? singleAsteriskRegexFragment\n    : match === '?'\n    ? '[^/]'\n    : '\\\\' + match;\n}\n/**\n * An \"includes\" path \"foo\" is implicitly a glob \"foo/** /*\" (without the space) if its last component has no extension,\n * and does not contain any glob characters itself.\n */\nfunction isImplicitGlob(lastPathComponent: string): boolean {\n  return !/[.*?]/.test(lastPathComponent);\n}\n\nconst ts_ScriptTarget_ES5 = 1;\nconst ts_ScriptTarget_ES2022 = 9;\nconst ts_ScriptTarget_ESNext = 99;\nconst ts_ModuleKind_Node16 = 100;\nconst ts_ModuleKind_NodeNext = 199;\n// https://github.com/microsoft/TypeScript/blob/fc418a2e611c88cf9afa0115ff73490b2397d311/src/compiler/utilities.ts#L8761\nexport function getUseDefineForClassFields(compilerOptions: _ts.CompilerOptions): boolean {\n  return compilerOptions.useDefineForClassFields === undefined\n    ? getEmitScriptTarget(compilerOptions) >= ts_ScriptTarget_ES2022\n    : compilerOptions.useDefineForClassFields;\n}\n\n// https://github.com/microsoft/TypeScript/blob/fc418a2e611c88cf9afa0115ff73490b2397d311/src/compiler/utilities.ts#L8556\nexport function getEmitScriptTarget(compilerOptions: {\n  module?: _ts.CompilerOptions['module'];\n  target?: _ts.CompilerOptions['target'];\n}): _ts.ScriptTarget {\n  return (\n    compilerOptions.target ??\n    ((compilerOptions.module === ts_ModuleKind_Node16 && ts_ScriptTarget_ES2022) ||\n      (compilerOptions.module === ts_ModuleKind_NodeNext && ts_ScriptTarget_ESNext) ||\n      ts_ScriptTarget_ES5)\n  );\n}\n","{\n  \"$schema\": \"https://json.schemastore.org/tsconfig\",\n  \"display\": \"Node 16\",\n\n  \"compilerOptions\": {\n    \"lib\": [\"es2021\"],\n    \"module\": \"Node16\",\n    \"target\": \"es2021\",\n\n    \"strict\": true,\n    \"esModuleInterop\": true,\n    \"skipLibCheck\": true,\n    \"forceConsistentCasingInFileNames\": true,\n    \"moduleResolution\": \"node\"\n  }\n}\n","{\n  \"$schema\": \"https://json.schemastore.org/tsconfig\",\n  \"display\": \"Node 14\",\n\n  \"compilerOptions\": {\n    \"lib\": [\"es2020\"],\n    \"module\": \"commonjs\",\n    \"target\": \"es2020\",\n\n    \"strict\": true,\n    \"esModuleInterop\": true,\n    \"skipLibCheck\": true,\n    \"forceConsistentCasingInFileNames\": true,\n    \"moduleResolution\": \"node\"\n  }\n}\n","{\n  \"$schema\": \"https://json.schemastore.org/tsconfig\",\n  \"display\": \"Node 12\",\n\n  \"compilerOptions\": {\n    \"lib\": [\"es2019\", \"es2020.promise\", \"es2020.bigint\", \"es2020.string\"],\n    \"module\": \"commonjs\",\n    \"target\": \"es2019\",\n\n    \"strict\": true,\n    \"esModuleInterop\": true,\n    \"skipLibCheck\": true,\n    \"forceConsistentCasingInFileNames\": true,\n    \"moduleResolution\": \"node\"\n  }\n}\n","{\n  \"$schema\": \"https://json.schemastore.org/tsconfig\",\n\n  \"compilerOptions\": {\n    \"lib\": [\"es2018\"],\n    \"module\": \"commonjs\",\n    \"target\": \"es2018\",\n\n    \"strict\": true,\n    \"esModuleInterop\": true,\n    \"skipLibCheck\": true,\n    \"moduleResolution\": \"node\"\n  }\n}\n","import type { TSCommon, TSInternal } from './ts-compiler-types';\n\nconst nodeMajor = parseInt(process.versions.node.split('.')[0], 10);\n/**\n * return parsed JSON of the bundled @tsconfig/bases config appropriate for the\n * running version of nodejs\n * @internal\n */\nexport function getDefaultTsconfigJsonForNodeVersion(ts: TSCommon): any {\n  const tsInternal = ts as any as TSInternal;\n  if (nodeMajor >= 16) {\n    const config = require('@tsconfig/node16/tsconfig.json');\n    if (configCompatible(config)) return config;\n  }\n  if (nodeMajor >= 14) {\n    const config = require('@tsconfig/node14/tsconfig.json');\n    if (configCompatible(config)) return config;\n  }\n  if (nodeMajor >= 12) {\n    const config = require('@tsconfig/node12/tsconfig.json');\n    if (configCompatible(config)) return config;\n  }\n  return require('@tsconfig/node10/tsconfig.json');\n\n  // Verify that tsconfig target and lib options are compatible with TypeScript compiler\n  function configCompatible(config: {\n    compilerOptions: {\n      lib: string[];\n      target: string;\n    };\n  }) {\n    return (\n      typeof (ts.ScriptTarget as any)[\n        config.compilerOptions.target.toUpperCase()\n      ] === 'number' &&\n      tsInternal.libs &&\n      config.compilerOptions.lib.every((lib) => tsInternal.libs!.includes(lib))\n    );\n  }\n}\n","import { resolve, dirname, join } from 'path';\nimport type * as _ts from 'typescript';\nimport {\n  CreateOptions,\n  DEFAULTS,\n  OptionBasePaths,\n  RegisterOptions,\n  TSCommon,\n  TsConfigOptions,\n} from './index';\nimport type { TSInternal } from './ts-compiler-types';\nimport { createTsInternals } from './ts-internals';\nimport { getDefaultTsconfigJsonForNodeVersion } from './tsconfigs';\nimport {\n  assign,\n  attemptRequireWithV8CompileCache,\n  createProjectLocalResolveHelper,\n  getBasePathForProjectLocalDependencyResolution,\n} from './util';\n\n/**\n * TypeScript compiler option values required by `ts-node` which cannot be overridden.\n */\nconst TS_NODE_COMPILER_OPTIONS = {\n  sourceMap: true,\n  inlineSourceMap: false,\n  inlineSources: true,\n  declaration: false,\n  noEmit: false,\n  outDir: '.ts-node',\n};\n\n/*\n * Do post-processing on config options to support `ts-node`.\n */\nfunction fixConfig(ts: TSCommon, config: _ts.ParsedCommandLine) {\n  // Delete options that *should not* be passed through.\n  delete config.options.out;\n  delete config.options.outFile;\n  delete config.options.composite;\n  delete config.options.declarationDir;\n  delete config.options.declarationMap;\n  delete config.options.emitDeclarationOnly;\n\n  // Target ES5 output by default (instead of ES3).\n  if (config.options.target === undefined) {\n    config.options.target = ts.ScriptTarget.ES5;\n  }\n\n  // Target CommonJS modules by default (instead of magically switching to ES6 when the target is ES6).\n  if (config.options.module === undefined) {\n    config.options.module = ts.ModuleKind.CommonJS;\n  }\n\n  return config;\n}\n\n/** @internal */\nexport function findAndReadConfig(rawOptions: CreateOptions) {\n  const cwd = resolve(\n    rawOptions.cwd ?? rawOptions.dir ?? DEFAULTS.cwd ?? process.cwd()\n  );\n  const compilerName = rawOptions.compiler ?? DEFAULTS.compiler;\n\n  // Compute minimum options to read the config file.\n  let projectLocalResolveDir = getBasePathForProjectLocalDependencyResolution(\n    undefined,\n    rawOptions.projectSearchDir,\n    rawOptions.project,\n    cwd\n  );\n  let { compiler, ts } = resolveAndLoadCompiler(\n    compilerName,\n    projectLocalResolveDir\n  );\n\n  // Read config file and merge new options between env and CLI options.\n  const { configFilePath, config, tsNodeOptionsFromTsconfig, optionBasePaths } =\n    readConfig(cwd, ts, rawOptions);\n\n  const options = assign<RegisterOptions>(\n    {},\n    DEFAULTS,\n    tsNodeOptionsFromTsconfig || {},\n    { optionBasePaths },\n    rawOptions\n  );\n  options.require = [\n    ...(tsNodeOptionsFromTsconfig.require || []),\n    ...(rawOptions.require || []),\n  ];\n\n  // Re-resolve the compiler in case it has changed.\n  // Compiler is loaded relative to tsconfig.json, so tsconfig discovery may cause us to load a\n  // different compiler than we did above, even if the name has not changed.\n  if (configFilePath) {\n    projectLocalResolveDir = getBasePathForProjectLocalDependencyResolution(\n      configFilePath,\n      rawOptions.projectSearchDir,\n      rawOptions.project,\n      cwd\n    );\n    ({ compiler } = resolveCompiler(\n      options.compiler,\n      optionBasePaths.compiler ?? projectLocalResolveDir\n    ));\n  }\n\n  return {\n    options,\n    config,\n    projectLocalResolveDir,\n    optionBasePaths,\n    configFilePath,\n    cwd,\n    compiler,\n  };\n}\n\n/**\n * Load TypeScript configuration. Returns the parsed TypeScript config and\n * any `ts-node` options specified in the config file.\n *\n * Even when a tsconfig.json is not loaded, this function still handles merging\n * compilerOptions from various sources: API, environment variables, etc.\n *\n * @internal\n */\nexport function readConfig(\n  cwd: string,\n  ts: TSCommon,\n  rawApiOptions: CreateOptions\n): {\n  /**\n   * Path of tsconfig file if one was loaded\n   */\n  configFilePath: string | undefined;\n  /**\n   * Parsed TypeScript configuration with compilerOptions merged from all other sources (env vars, etc)\n   */\n  config: _ts.ParsedCommandLine;\n  /**\n   * ts-node options pulled from `tsconfig.json`, NOT merged with any other sources.  Merging must happen outside\n   * this function.\n   */\n  tsNodeOptionsFromTsconfig: TsConfigOptions;\n  optionBasePaths: OptionBasePaths;\n} {\n  // Ordered [a, b, c] where config a extends b extends c\n  const configChain: Array<{\n    config: any;\n    basePath: string;\n    configPath: string;\n  }> = [];\n  let config: any = { compilerOptions: {} };\n  let basePath = cwd;\n  let configFilePath: string | undefined = undefined;\n  const projectSearchDir = resolve(cwd, rawApiOptions.projectSearchDir ?? cwd);\n\n  const {\n    fileExists = ts.sys.fileExists,\n    readFile = ts.sys.readFile,\n    skipProject = DEFAULTS.skipProject,\n    project = DEFAULTS.project,\n    tsTrace = DEFAULTS.tsTrace,\n  } = rawApiOptions;\n\n  // Read project configuration when available.\n  if (!skipProject) {\n    if (project) {\n      const resolved = resolve(cwd, project);\n      const nested = join(resolved, 'tsconfig.json');\n      configFilePath = fileExists(nested) ? nested : resolved;\n    } else {\n      configFilePath = ts.findConfigFile(projectSearchDir, fileExists);\n    }\n\n    if (configFilePath) {\n      let pathToNextConfigInChain = configFilePath;\n      const tsInternals = createTsInternals(ts);\n      const errors: Array<_ts.Diagnostic> = [];\n\n      // Follow chain of \"extends\"\n      while (true) {\n        const result = ts.readConfigFile(pathToNextConfigInChain, readFile);\n\n        // Return diagnostics.\n        if (result.error) {\n          return {\n            configFilePath,\n            config: { errors: [result.error], fileNames: [], options: {} },\n            tsNodeOptionsFromTsconfig: {},\n            optionBasePaths: {},\n          };\n        }\n\n        const c = result.config;\n        const bp = dirname(pathToNextConfigInChain);\n        configChain.push({\n          config: c,\n          basePath: bp,\n          configPath: pathToNextConfigInChain,\n        });\n\n        if (c.extends == null) break;\n        const resolvedExtendedConfigPath = tsInternals.getExtendsConfigPath(\n          c.extends,\n          {\n            fileExists,\n            readDirectory: ts.sys.readDirectory,\n            readFile,\n            useCaseSensitiveFileNames: ts.sys.useCaseSensitiveFileNames,\n            trace: tsTrace,\n          },\n          bp,\n          errors,\n          (ts as unknown as TSInternal).createCompilerDiagnostic\n        );\n        if (errors.length) {\n          return {\n            configFilePath,\n            config: { errors, fileNames: [], options: {} },\n            tsNodeOptionsFromTsconfig: {},\n            optionBasePaths: {},\n          };\n        }\n        if (resolvedExtendedConfigPath == null) break;\n        pathToNextConfigInChain = resolvedExtendedConfigPath;\n      }\n\n      ({ config, basePath } = configChain[0]);\n    }\n  }\n\n  // Merge and fix ts-node options that come from tsconfig.json(s)\n  const tsNodeOptionsFromTsconfig: TsConfigOptions = {};\n  const optionBasePaths: OptionBasePaths = {};\n  for (let i = configChain.length - 1; i >= 0; i--) {\n    const { config, basePath, configPath } = configChain[i];\n    const options = filterRecognizedTsConfigTsNodeOptions(\n      config['ts-node']\n    ).recognized;\n\n    // Some options are relative to the config file, so must be converted to absolute paths here\n    if (options.require) {\n      // Modules are found relative to the tsconfig file, not the `dir` option\n      const tsconfigRelativeResolver = createProjectLocalResolveHelper(\n        dirname(configPath)\n      );\n      options.require = options.require.map((path: string) =>\n        tsconfigRelativeResolver(path, false)\n      );\n    }\n    if (options.scopeDir) {\n      options.scopeDir = resolve(basePath, options.scopeDir!);\n    }\n\n    // Downstream code uses the basePath; we do not do that here.\n    if (options.moduleTypes) {\n      optionBasePaths.moduleTypes = basePath;\n    }\n    if (options.transpiler != null) {\n      optionBasePaths.transpiler = basePath;\n    }\n    if (options.compiler != null) {\n      optionBasePaths.compiler = basePath;\n    }\n    if (options.swc != null) {\n      optionBasePaths.swc = basePath;\n    }\n\n    assign(tsNodeOptionsFromTsconfig, options);\n  }\n\n  // Remove resolution of \"files\".\n  const files =\n    rawApiOptions.files ?? tsNodeOptionsFromTsconfig.files ?? DEFAULTS.files;\n\n  // Only if a config file is *not* loaded, load an implicit configuration from @tsconfig/bases\n  const skipDefaultCompilerOptions = configFilePath != null;\n  const defaultCompilerOptionsForNodeVersion = skipDefaultCompilerOptions\n    ? undefined\n    : {\n        ...getDefaultTsconfigJsonForNodeVersion(ts).compilerOptions,\n        types: ['node'],\n      };\n\n  // Merge compilerOptions from all sources\n  config.compilerOptions = Object.assign(\n    {},\n    // automatically-applied options from @tsconfig/bases\n    defaultCompilerOptionsForNodeVersion,\n    // tsconfig.json \"compilerOptions\"\n    config.compilerOptions,\n    // from env var\n    DEFAULTS.compilerOptions,\n    // tsconfig.json \"ts-node\": \"compilerOptions\"\n    tsNodeOptionsFromTsconfig.compilerOptions,\n    // passed programmatically\n    rawApiOptions.compilerOptions,\n    // overrides required by ts-node, cannot be changed\n    TS_NODE_COMPILER_OPTIONS\n  );\n\n  const fixedConfig = fixConfig(\n    ts,\n    ts.parseJsonConfigFileContent(\n      config,\n      {\n        fileExists,\n        readFile,\n        // Only used for globbing \"files\", \"include\", \"exclude\"\n        // When `files` option disabled, we want to avoid the fs calls\n        readDirectory: files ? ts.sys.readDirectory : () => [],\n        useCaseSensitiveFileNames: ts.sys.useCaseSensitiveFileNames,\n      },\n      basePath,\n      undefined,\n      configFilePath\n    )\n  );\n\n  return {\n    configFilePath,\n    config: fixedConfig,\n    tsNodeOptionsFromTsconfig,\n    optionBasePaths,\n  };\n}\n\n/**\n * Load the typescript compiler. It is required to load the tsconfig but might\n * be changed by the tsconfig, so we have to do this twice.\n * @internal\n */\nexport function resolveAndLoadCompiler(\n  name: string | undefined,\n  relativeToPath: string\n) {\n  const { compiler } = resolveCompiler(name, relativeToPath);\n  const ts = loadCompiler(compiler);\n  return { compiler, ts };\n}\n\nfunction resolveCompiler(name: string | undefined, relativeToPath: string) {\n  const projectLocalResolveHelper =\n    createProjectLocalResolveHelper(relativeToPath);\n  const compiler = projectLocalResolveHelper(name || 'typescript', true);\n  return { compiler };\n}\n\n/** @internal */\nexport function loadCompiler(compiler: string): TSCommon {\n  return attemptRequireWithV8CompileCache(require, compiler);\n}\n\n/**\n * Given the raw \"ts-node\" sub-object from a tsconfig, return an object with only the properties\n * recognized by \"ts-node\"\n */\nfunction filterRecognizedTsConfigTsNodeOptions(jsonObject: any): {\n  recognized: TsConfigOptions;\n  unrecognized: any;\n} {\n  if (jsonObject == null) return { recognized: {}, unrecognized: {} };\n  const {\n    compiler,\n    compilerHost,\n    compilerOptions,\n    emit,\n    files,\n    ignore,\n    ignoreDiagnostics,\n    logError,\n    preferTsExts,\n    pretty,\n    require,\n    skipIgnore,\n    transpileOnly,\n    typeCheck,\n    transpiler,\n    scope,\n    scopeDir,\n    moduleTypes,\n    experimentalReplAwait,\n    swc,\n    experimentalResolver,\n    esm,\n    experimentalSpecifierResolution,\n    experimentalTsImportSpecifiers,\n    ...unrecognized\n  } = jsonObject as TsConfigOptions;\n  const filteredTsConfigOptions = {\n    compiler,\n    compilerHost,\n    compilerOptions,\n    emit,\n    experimentalReplAwait,\n    files,\n    ignore,\n    ignoreDiagnostics,\n    logError,\n    preferTsExts,\n    pretty,\n    require,\n    skipIgnore,\n    transpileOnly,\n    typeCheck,\n    transpiler,\n    scope,\n    scopeDir,\n    moduleTypes,\n    swc,\n    experimentalResolver,\n    esm,\n    experimentalSpecifierResolution,\n    experimentalTsImportSpecifiers,\n  };\n  // Use the typechecker to make sure this implementation has the correct set of properties\n  const catchExtraneousProps: keyof TsConfigOptions =\n    null as any as keyof typeof filteredTsConfigOptions;\n  const catchMissingProps: keyof typeof filteredTsConfigOptions =\n    null as any as keyof TsConfigOptions;\n  return { recognized: filteredTsConfigOptions, unrecognized };\n}\n\n/** @internal */\nexport const ComputeAsCommonRootOfFiles = Symbol();\n\n/**\n * Some TS compiler options have defaults which are not provided by TS's config parsing functions.\n * This function centralizes the logic for computing those defaults.\n * @internal\n */\nexport function getTsConfigDefaults(\n  config: _ts.ParsedCommandLine,\n  basePath: string,\n  _files: string[] | undefined,\n  _include: string[] | undefined,\n  _exclude: string[] | undefined\n) {\n  const { composite = false } = config.options;\n  let rootDir: string | typeof ComputeAsCommonRootOfFiles =\n    config.options.rootDir!;\n  if (rootDir == null) {\n    if (composite) rootDir = basePath;\n    // Return this symbol to avoid computing from `files`, which would require fs calls\n    else rootDir = ComputeAsCommonRootOfFiles;\n  }\n  const { outDir = rootDir } = config.options;\n  // Docs are wrong: https://www.typescriptlang.org/tsconfig#include\n  // Docs say **, but it's actually **/*; compiler throws error for **\n  const include = _files ? [] : ['**/*'];\n  const files = _files ?? [];\n  // Docs are misleading: https://www.typescriptlang.org/tsconfig#exclude\n  // Docs say it excludes node_modules, bower_components, jspm_packages, but actually those are excluded via behavior of \"include\"\n  const exclude = _exclude ?? [outDir]; // TODO technically, outDir is absolute path, but exclude should be relative glob pattern?\n\n  // TODO compute baseUrl\n\n  return { rootDir, outDir, include, files, exclude, composite };\n}\n","import type { ModuleTypeOverride, ModuleTypes } from '.';\nimport { getPatternFromSpec } from './ts-internals';\nimport { cachedLookup, normalizeSlashes } from './util';\n\n// Logic to support our `moduleTypes` option, which allows overriding node's default ESM / CJS\n// classification of `.js` files based on package.json `type` field.\n\n/**\n * Seperate internal type because `auto` is clearer than `package`, but changing\n * the public API is a breaking change.\n * @internal\n */\nexport type InternalModuleTypeOverride = 'cjs' | 'esm' | 'auto';\n/** @internal */\nexport interface ModuleTypeClassification {\n  moduleType: InternalModuleTypeOverride;\n}\n/** @internal */\nexport interface ModuleTypeClassifierOptions {\n  basePath?: string;\n  patterns?: ModuleTypes;\n}\n/** @internal */\nexport type ModuleTypeClassifier = ReturnType<\n  typeof createModuleTypeClassifier\n>;\n/**\n * @internal\n * May receive non-normalized options -- basePath and patterns -- and will normalize them\n * internally.\n * However, calls to `classifyModule` must pass pre-normalized paths!\n */\nexport function createModuleTypeClassifier(\n  options: ModuleTypeClassifierOptions\n) {\n  const { patterns, basePath: _basePath } = options;\n  const basePath =\n    _basePath !== undefined\n      ? normalizeSlashes(_basePath).replace(/\\/$/, '')\n      : undefined;\n\n  const patternTypePairs = Object.entries(patterns ?? []).map(\n    ([_pattern, type]) => {\n      const pattern = normalizeSlashes(_pattern);\n      return { pattern: parsePattern(basePath!, pattern), type };\n    }\n  );\n\n  const classifications: Record<ModuleTypeOverride, ModuleTypeClassification> =\n    {\n      package: {\n        moduleType: 'auto',\n      },\n      cjs: {\n        moduleType: 'cjs',\n      },\n      esm: {\n        moduleType: 'esm',\n      },\n    };\n  const auto = classifications.package;\n\n  // Passed path must be normalized!\n  function classifyModuleNonCached(path: string): ModuleTypeClassification {\n    const matched = matchPatterns(patternTypePairs, (_) => _.pattern, path);\n    if (matched) return classifications[matched.type];\n    return auto;\n  }\n\n  const classifyModule = cachedLookup(classifyModuleNonCached);\n\n  function classifyModuleAuto(path: String) {\n    return auto;\n  }\n\n  return {\n    classifyModuleByModuleTypeOverrides: patternTypePairs.length\n      ? classifyModule\n      : classifyModuleAuto,\n  };\n}\n\nfunction parsePattern(basePath: string, patternString: string): RegExp {\n  const pattern = getPatternFromSpec(patternString, basePath);\n  return pattern !== undefined ? new RegExp(pattern) : /(?:)/;\n}\n\nfunction matchPatterns<T>(\n  objects: T[],\n  getPattern: (t: T) => RegExp,\n  candidate: string\n): T | undefined {\n  for (let i = objects.length - 1; i >= 0; i--) {\n    const object = objects[i];\n    const pattern = getPattern(object);\n\n    if (pattern?.test(candidate)) {\n      return object;\n    }\n  }\n}\n","import { resolve } from 'path';\nimport type { CreateOptions } from '.';\nimport type { Extensions } from './file-extensions';\nimport type { TSCommon, TSInternal } from './ts-compiler-types';\nimport type { ProjectLocalResolveHelper } from './util';\n\n/**\n * @internal\n * In a factory because these are shared across both CompilerHost and LanguageService codepaths\n */\nexport function createResolverFunctions(kwargs: {\n  ts: TSCommon;\n  host: TSCommon.ModuleResolutionHost;\n  cwd: string;\n  getCanonicalFileName: (filename: string) => string;\n  config: TSCommon.ParsedCommandLine;\n  projectLocalResolveHelper: ProjectLocalResolveHelper;\n  options: CreateOptions;\n  extensions: Extensions;\n}) {\n  const {\n    host,\n    ts,\n    config,\n    cwd,\n    getCanonicalFileName,\n    projectLocalResolveHelper,\n    options,\n    extensions,\n  } = kwargs;\n  const moduleResolutionCache = ts.createModuleResolutionCache(\n    cwd,\n    getCanonicalFileName,\n    config.options\n  );\n  const knownInternalFilenames = new Set<string>();\n  /** \"Buckets\" (module directories) whose contents should be marked \"internal\" */\n  const internalBuckets = new Set<string>();\n\n  // Get bucket for a source filename.  Bucket is the containing `./node_modules/*/` directory\n  // For '/project/node_modules/foo/node_modules/bar/lib/index.js' bucket is '/project/node_modules/foo/node_modules/bar/'\n  // For '/project/node_modules/foo/node_modules/@scope/bar/lib/index.js' bucket is '/project/node_modules/foo/node_modules/@scope/bar/'\n  const moduleBucketRe = /.*\\/node_modules\\/(?:@[^\\/]+\\/)?[^\\/]+\\//;\n  function getModuleBucket(filename: string) {\n    const find = moduleBucketRe.exec(filename);\n    if (find) return find[0];\n    return '';\n  }\n\n  // Mark that this file and all siblings in its bucket should be \"internal\"\n  function markBucketOfFilenameInternal(filename: string) {\n    internalBuckets.add(getModuleBucket(filename));\n  }\n\n  function isFileInInternalBucket(filename: string) {\n    return internalBuckets.has(getModuleBucket(filename));\n  }\n\n  function isFileKnownToBeInternal(filename: string) {\n    return knownInternalFilenames.has(filename);\n  }\n\n  /**\n   * If we need to emit JS for a file, force TS to consider it non-external\n   */\n  const fixupResolvedModule = (\n    resolvedModule:\n      | TSCommon.ResolvedModule\n      | TSCommon.ResolvedTypeReferenceDirective\n  ) => {\n    const { resolvedFileName } = resolvedModule;\n    if (resolvedFileName === undefined) return;\n    // [MUST_UPDATE_FOR_NEW_FILE_EXTENSIONS]\n    // .ts,.mts,.cts is always switched to internal\n    // .js is switched on-demand\n    if (\n      resolvedModule.isExternalLibraryImport &&\n      ((resolvedFileName.endsWith('.ts') &&\n        !resolvedFileName.endsWith('.d.ts')) ||\n        (resolvedFileName.endsWith('.cts') &&\n          !resolvedFileName.endsWith('.d.cts')) ||\n        (resolvedFileName.endsWith('.mts') &&\n          !resolvedFileName.endsWith('.d.mts')) ||\n        isFileKnownToBeInternal(resolvedFileName) ||\n        isFileInInternalBucket(resolvedFileName))\n    ) {\n      resolvedModule.isExternalLibraryImport = false;\n    }\n    if (!resolvedModule.isExternalLibraryImport) {\n      knownInternalFilenames.add(resolvedFileName);\n    }\n  };\n  /*\n   * NOTE:\n   * Older ts versions do not pass `redirectedReference` nor `options`.\n   * We must pass `redirectedReference` to newer ts versions, but cannot rely on `options`, hence the weird argument name\n   */\n  const resolveModuleNames: TSCommon.LanguageServiceHost['resolveModuleNames'] =\n    (\n      moduleNames: string[],\n      containingFile: string,\n      reusedNames: string[] | undefined,\n      redirectedReference: TSCommon.ResolvedProjectReference | undefined,\n      optionsOnlyWithNewerTsVersions: TSCommon.CompilerOptions,\n      containingSourceFile?: TSCommon.SourceFile\n    ): (TSCommon.ResolvedModule | undefined)[] => {\n      return moduleNames.map((moduleName, i) => {\n        const mode = containingSourceFile\n          ? (ts as any as TSInternal).getModeForResolutionAtIndex?.(\n              containingSourceFile,\n              i\n            )\n          : undefined;\n        let { resolvedModule } = ts.resolveModuleName(\n          moduleName,\n          containingFile,\n          config.options,\n          host,\n          moduleResolutionCache,\n          redirectedReference,\n          mode\n        );\n        if (!resolvedModule && options.experimentalTsImportSpecifiers) {\n          const lastDotIndex = moduleName.lastIndexOf('.');\n          const ext = lastDotIndex >= 0 ? moduleName.slice(lastDotIndex) : '';\n          if (ext) {\n            const replacements = extensions.tsResolverEquivalents.get(ext);\n            for (const replacementExt of replacements ?? []) {\n              ({ resolvedModule } = ts.resolveModuleName(\n                moduleName.slice(0, -ext.length) + replacementExt,\n                containingFile,\n                config.options,\n                host,\n                moduleResolutionCache,\n                redirectedReference,\n                mode\n              ));\n              if (resolvedModule) break;\n            }\n          }\n        }\n        if (resolvedModule) {\n          fixupResolvedModule(resolvedModule);\n        }\n        return resolvedModule;\n      });\n    };\n\n  // language service never calls this, but TS docs recommend that we implement it\n  const getResolvedModuleWithFailedLookupLocationsFromCache: TSCommon.LanguageServiceHost['getResolvedModuleWithFailedLookupLocationsFromCache'] =\n    (\n      moduleName,\n      containingFile,\n      resolutionMode?: TSCommon.ModuleKind.CommonJS | TSCommon.ModuleKind.ESNext\n    ): TSCommon.ResolvedModuleWithFailedLookupLocations | undefined => {\n      const ret = ts.resolveModuleNameFromCache(\n        moduleName,\n        containingFile,\n        moduleResolutionCache,\n        resolutionMode\n      );\n      if (ret && ret.resolvedModule) {\n        fixupResolvedModule(ret.resolvedModule);\n      }\n      return ret;\n    };\n\n  const resolveTypeReferenceDirectives: TSCommon.LanguageServiceHost['resolveTypeReferenceDirectives'] =\n    (\n      typeDirectiveNames: string[] | readonly TSCommon.FileReference[],\n      containingFile: string,\n      redirectedReference: TSCommon.ResolvedProjectReference | undefined,\n      options: TSCommon.CompilerOptions,\n      containingFileMode?: TSCommon.SourceFile['impliedNodeFormat'] | undefined // new impliedNodeFormat is accepted by compilerHost\n    ): (TSCommon.ResolvedTypeReferenceDirective | undefined)[] => {\n      // Note: seems to be called with empty typeDirectiveNames array for all files.\n      // TODO consider using `ts.loadWithTypeDirectiveCache`\n      return typeDirectiveNames.map((typeDirectiveName) => {\n        // Copy-pasted from TS source:\n        const nameIsString = typeof typeDirectiveName === 'string';\n        const mode = nameIsString\n          ? undefined\n          : (ts as any as TSInternal).getModeForFileReference!(\n              typeDirectiveName,\n              containingFileMode\n            );\n        const strName = nameIsString\n          ? typeDirectiveName\n          : typeDirectiveName.fileName.toLowerCase();\n        let { resolvedTypeReferenceDirective } =\n          ts.resolveTypeReferenceDirective(\n            strName,\n            containingFile,\n            config.options,\n            host,\n            redirectedReference,\n            undefined,\n            mode\n          );\n        if (typeDirectiveName === 'node' && !resolvedTypeReferenceDirective) {\n          // Resolve @types/node relative to project first, then __dirname (copy logic from elsewhere / refactor into reusable function)\n          let typesNodePackageJsonPath: string | undefined;\n          try {\n            typesNodePackageJsonPath = projectLocalResolveHelper(\n              '@types/node/package.json',\n              true\n            );\n          } catch {} // gracefully do nothing when @types/node is not installed for any reason\n          if (typesNodePackageJsonPath) {\n            const typeRoots = [resolve(typesNodePackageJsonPath, '../..')];\n            ({ resolvedTypeReferenceDirective } =\n              ts.resolveTypeReferenceDirective(\n                typeDirectiveName,\n                containingFile,\n                {\n                  ...config.options,\n                  typeRoots,\n                },\n                host,\n                redirectedReference\n              ));\n          }\n        }\n        if (resolvedTypeReferenceDirective) {\n          fixupResolvedModule(resolvedTypeReferenceDirective);\n        }\n        return resolvedTypeReferenceDirective;\n      });\n    };\n\n  return {\n    resolveModuleNames,\n    getResolvedModuleWithFailedLookupLocationsFromCache,\n    resolveTypeReferenceDirectives,\n    isFileKnownToBeInternal,\n    markBucketOfFilenameInternal,\n  };\n}\n","import type Module = require('module');\nimport type { Service } from '.';\n\n/** @internal */\nexport type ModuleConstructorWithInternals = typeof Module & {\n  _resolveFilename(\n    request: string,\n    parent?: Module,\n    isMain?: boolean,\n    options?: ModuleResolveFilenameOptions,\n    ...rest: any[]\n  ): string;\n  _preloadModules(requests?: string[]): void;\n  _findPath(request: string, paths: string[], isMain: boolean): string;\n};\n\ninterface ModuleResolveFilenameOptions {\n  paths?: Array<string>;\n}\n\n/**\n * @internal\n */\nexport function installCommonjsResolveHooksIfNecessary(tsNodeService: Service) {\n  const Module = require('module') as ModuleConstructorWithInternals;\n  const originalResolveFilename = Module._resolveFilename;\n  const originalFindPath = Module._findPath;\n  const shouldInstallHook = tsNodeService.options.experimentalResolver;\n  if (shouldInstallHook) {\n    const { Module_findPath, Module_resolveFilename } =\n      tsNodeService.getNodeCjsLoader();\n    Module._resolveFilename = _resolveFilename;\n    Module._findPath = _findPath;\n    function _resolveFilename(\n      this: any,\n      request: string,\n      parent?: Module,\n      isMain?: boolean,\n      options?: ModuleResolveFilenameOptions,\n      ...rest: []\n    ): string {\n      if (!tsNodeService.enabled())\n        return originalResolveFilename.call(\n          this,\n          request,\n          parent,\n          isMain,\n          options,\n          ...rest\n        );\n\n      return Module_resolveFilename.call(\n        this,\n        request,\n        parent,\n        isMain,\n        options,\n        ...rest\n      );\n    }\n    function _findPath(this: any): string {\n      if (!tsNodeService.enabled())\n        return originalFindPath.apply(this, arguments as any);\n      return Module_findPath.apply(this, arguments as any);\n    }\n  }\n}\n","module.exports = {\n  ArrayFrom: Array.from,\n  ArrayIsArray: Array.isArray,\n  ArrayPrototypeShift: (obj) => Array.prototype.shift.call(obj),\n  ArrayPrototypeForEach: (arr, ...rest) => Array.prototype.forEach.apply(arr, rest),\n  ArrayPrototypeIncludes: (arr, ...rest) => Array.prototype.includes.apply(arr, rest),\n  ArrayPrototypeJoin: (arr, ...rest) => Array.prototype.join.apply(arr, rest),\n  ArrayPrototypePop: (arr, ...rest) => Array.prototype.pop.apply(arr, rest),\n  ArrayPrototypePush: (arr, ...rest) => Array.prototype.push.apply(arr, rest),\n  FunctionPrototype: Function.prototype,\n  JSONParse: JSON.parse,\n  JSONStringify: JSON.stringify,\n  ObjectFreeze: Object.freeze,\n  ObjectKeys: Object.keys,\n  ObjectGetOwnPropertyNames: Object.getOwnPropertyNames,\n  ObjectDefineProperty: Object.defineProperty,\n  ObjectPrototypeHasOwnProperty: (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop),\n  RegExpPrototypeExec: (obj, string) => RegExp.prototype.exec.call(obj, string),\n  RegExpPrototypeTest: (obj, string) => RegExp.prototype.test.call(obj, string),\n  RegExpPrototypeSymbolReplace: (obj, ...rest) => RegExp.prototype[Symbol.replace].apply(obj, rest),\n  SafeMap: Map,\n  SafeSet: Set,\n  SafeWeakMap: WeakMap,\n  StringPrototypeEndsWith: (str, ...rest) => String.prototype.endsWith.apply(str, rest),\n  StringPrototypeIncludes: (str, ...rest) => String.prototype.includes.apply(str, rest),\n  StringPrototypeLastIndexOf: (str, ...rest) => String.prototype.lastIndexOf.apply(str, rest),\n  StringPrototypeIndexOf: (str, ...rest) => String.prototype.indexOf.apply(str, rest),\n  StringPrototypeRepeat: (str, ...rest) => String.prototype.repeat.apply(str, rest),\n  StringPrototypeReplace: (str, ...rest) => String.prototype.replace.apply(str, rest),\n  StringPrototypeSlice: (str, ...rest) => String.prototype.slice.apply(str, rest),\n  StringPrototypeSplit: (str, ...rest) => String.prototype.split.apply(str, rest),\n  StringPrototypeStartsWith: (str, ...rest) => String.prototype.startsWith.apply(str, rest),\n  StringPrototypeSubstr: (str, ...rest) => String.prototype.substr.apply(str, rest),\n  StringPrototypeCharCodeAt: (str, ...rest) => String.prototype.charCodeAt.apply(str, rest),\n  StringPrototypeMatch: (str, ...rest) => String.prototype.match.apply(str, rest),\n  SyntaxError: SyntaxError\n};\n","\n// Node imports this from 'internal/bootstrap/loaders'\nconst Module = require('module');\nconst NativeModule = {\n  canBeRequiredByUsers(specifier) {\n    return Module.builtinModules.includes(specifier)\n  }\n};\nexports.NativeModule = NativeModule;\n","const fs = require('fs');\nconst {versionGteLt} = require('../dist/util');\n\n// In node's core, this is implemented in C\n// https://github.com/nodejs/node/blob/v15.3.0/src/node_file.cc#L891-L985\n/**\n * @param {string} path\n * @returns {[] | [string, boolean]}\n */\nfunction internalModuleReadJSON(path) {\n  let string\n  try {\n    string = fs.readFileSync(path, 'utf8')\n  } catch (e) {\n    if (e.code === 'ENOENT') return []\n    throw e\n  }\n  // Node's implementation checks for the presence of relevant keys: main, name, type, exports, imports\n  // Node does this for performance to skip unnecessary parsing.\n  // This would slow us down and, based on our usage, we can skip it.\n  const containsKeys = true\n  return [string, containsKeys]\n}\n\n// In node's core, this is implemented in C\n// https://github.com/nodejs/node/blob/63e7dc1e5c71b70c80ed9eda230991edb00811e2/src/node_file.cc#L987-L1005\n/**\n * @param {string} path\n * @returns {number} 0 = file, 1 = dir, negative = error\n */\nfunction internalModuleStat(path) {\n  const stat = fs.statSync(path, { throwIfNoEntry: false });\n  if(!stat) return -1;\n  if(stat.isFile()) return 0;\n  if(stat.isDirectory()) return 1;\n}\n\n/**\n * @param {string} path\n * @returns {number} 0 = file, 1 = dir, negative = error\n */\nfunction internalModuleStatInefficient(path) {\n  try {\n    const stat = fs.statSync(path);\n    if(stat.isFile()) return 0;\n    if(stat.isDirectory()) return 1;\n  } catch(e) {\n    return -e.errno || -1;\n  }\n}\n\nconst statSupportsThrowIfNoEntry = versionGteLt(process.versions.node, '15.3.0') ||\n  versionGteLt(process.versions.node, '14.17.0', '15.0.0');\n\nmodule.exports = {\n  internalModuleReadJSON,\n  internalModuleStat: statSupportsThrowIfNoEntry ? internalModuleStat : internalModuleStatInefficient\n};\n","// copied from https://github.com/nodejs/node/blob/v15.3.0/lib/internal/modules/package_json_reader.js\n'use strict';\n\nconst { SafeMap } = require('./node-primordials');\nconst { internalModuleReadJSON } = require('./node-internalBinding-fs');\nconst { pathToFileURL } = require('url');\nconst { toNamespacedPath } = require('path');\n// const { getOptionValue } = require('./node-options');\n\nconst cache = new SafeMap();\n\nlet manifest;\n\n/**\n * @param {string} jsonPath\n * @return {{string: string, containsKeys: boolean}}\n */\nfunction read(jsonPath) {\n  if (cache.has(jsonPath)) {\n    return cache.get(jsonPath);\n  }\n\n  const [string, containsKeys] = internalModuleReadJSON(\n    toNamespacedPath(jsonPath)\n  );\n  const result = { string, containsKeys };\n  if (string !== undefined) {\n    if (manifest === undefined) {\n      // manifest = getOptionValue('--experimental-policy') ?\n      //   require('internal/process/policy').manifest :\n      //   null;\n      // disabled for now.  I am not sure if/how we should support this\n      manifest = null;\n    }\n    if (manifest !== null) {\n      const jsonURL = pathToFileURL(jsonPath);\n      manifest.assertIntegrity(jsonURL, string);\n    }\n  }\n  cache.set(jsonPath, result);\n  return result;\n}\n\nmodule.exports = { read };\n","const flagSymbol = Symbol('arg flag');\n\nfunction arg(opts, {argv = process.argv.slice(2), permissive = false, stopAtPositional = false} = {}) {\n\tif (!opts) {\n\t\tthrow new Error('Argument specification object is required');\n\t}\n\n\tconst result = {_: []};\n\n\tconst aliases = {};\n\tconst handlers = {};\n\n\tfor (const key of Object.keys(opts)) {\n\t\tif (!key) {\n\t\t\tthrow new TypeError('Argument key cannot be an empty string');\n\t\t}\n\n\t\tif (key[0] !== '-') {\n\t\t\tthrow new TypeError(`Argument key must start with '-' but found: '${key}'`);\n\t\t}\n\n\t\tif (key.length === 1) {\n\t\t\tthrow new TypeError(`Argument key must have a name; singular '-' keys are not allowed: ${key}`);\n\t\t}\n\n\t\tif (typeof opts[key] === 'string') {\n\t\t\taliases[key] = opts[key];\n\t\t\tcontinue;\n\t\t}\n\n\t\tlet type = opts[key];\n\t\tlet isFlag = false;\n\n\t\tif (Array.isArray(type) && type.length === 1 && typeof type[0] === 'function') {\n\t\t\tconst [fn] = type;\n\t\t\ttype = (value, name, prev = []) => {\n\t\t\t\tprev.push(fn(value, name, prev[prev.length - 1]));\n\t\t\t\treturn prev;\n\t\t\t};\n\t\t\tisFlag = fn === Boolean || fn[flagSymbol] === true;\n\t\t} else if (typeof type === 'function') {\n\t\t\tisFlag = type === Boolean || type[flagSymbol] === true;\n\t\t} else {\n\t\t\tthrow new TypeError(`Type missing or not a function or valid array type: ${key}`);\n\t\t}\n\n\t\tif (key[1] !== '-' && key.length > 2) {\n\t\t\tthrow new TypeError(`Short argument keys (with a single hyphen) must have only one character: ${key}`);\n\t\t}\n\n\t\thandlers[key] = [type, isFlag];\n\t}\n\n\tfor (let i = 0, len = argv.length; i < len; i++) {\n\t\tconst wholeArg = argv[i];\n\n\t\tif (stopAtPositional && result._.length > 0) {\n\t\t\tresult._ = result._.concat(argv.slice(i));\n\t\t\tbreak;\n\t\t}\n\n\t\tif (wholeArg === '--') {\n\t\t\tresult._ = result._.concat(argv.slice(i + 1));\n\t\t\tbreak;\n\t\t}\n\n\t\tif (wholeArg.length > 1 && wholeArg[0] === '-') {\n\t\t\t/* eslint-disable operator-linebreak */\n\t\t\tconst separatedArguments = (wholeArg[1] === '-' || wholeArg.length === 2)\n\t\t\t\t? [wholeArg]\n\t\t\t\t: wholeArg.slice(1).split('').map(a => `-${a}`);\n\t\t\t/* eslint-enable operator-linebreak */\n\n\t\t\tfor (let j = 0; j < separatedArguments.length; j++) {\n\t\t\t\tconst arg = separatedArguments[j];\n\t\t\t\tconst [originalArgName, argStr] = arg[1] === '-' ? arg.split(/=(.*)/, 2) : [arg, undefined];\n\n\t\t\t\tlet argName = originalArgName;\n\t\t\t\twhile (argName in aliases) {\n\t\t\t\t\targName = aliases[argName];\n\t\t\t\t}\n\n\t\t\t\tif (!(argName in handlers)) {\n\t\t\t\t\tif (permissive) {\n\t\t\t\t\t\tresult._.push(arg);\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconst err = new Error(`Unknown or unexpected option: ${originalArgName}`);\n\t\t\t\t\t\terr.code = 'ARG_UNKNOWN_OPTION';\n\t\t\t\t\t\tthrow err;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tconst [type, isFlag] = handlers[argName];\n\n\t\t\t\tif (!isFlag && ((j + 1) < separatedArguments.length)) {\n\t\t\t\t\tthrow new TypeError(`Option requires argument (but was followed by another short argument): ${originalArgName}`);\n\t\t\t\t}\n\n\t\t\t\tif (isFlag) {\n\t\t\t\t\tresult[argName] = type(true, argName, result[argName]);\n\t\t\t\t} else if (argStr === undefined) {\n\t\t\t\t\tif (\n\t\t\t\t\t\targv.length < i + 2 ||\n\t\t\t\t\t\t(\n\t\t\t\t\t\t\targv[i + 1].length > 1 &&\n\t\t\t\t\t\t\t(argv[i + 1][0] === '-') &&\n\t\t\t\t\t\t\t!(\n\t\t\t\t\t\t\t\targv[i + 1].match(/^-?\\d*(\\.(?=\\d))?\\d*$/) &&\n\t\t\t\t\t\t\t\t(\n\t\t\t\t\t\t\t\t\ttype === Number ||\n\t\t\t\t\t\t\t\t\t// eslint-disable-next-line no-undef\n\t\t\t\t\t\t\t\t\t(typeof BigInt !== 'undefined' && type === BigInt)\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t)\n\t\t\t\t\t) {\n\t\t\t\t\t\tconst extended = originalArgName === argName ? '' : ` (alias for ${argName})`;\n\t\t\t\t\t\tthrow new Error(`Option requires argument: ${originalArgName}${extended}`);\n\t\t\t\t\t}\n\n\t\t\t\t\tresult[argName] = type(argv[i + 1], argName, result[argName]);\n\t\t\t\t\t++i;\n\t\t\t\t} else {\n\t\t\t\t\tresult[argName] = type(argStr, argName, result[argName]);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tresult._.push(wholeArg);\n\t\t}\n\t}\n\n\treturn result;\n}\n\narg.flag = fn => {\n\tfn[flagSymbol] = true;\n\treturn fn;\n};\n\n// Utility types\narg.COUNT = arg.flag((v, name, existingCount) => (existingCount || 0) + 1);\n\nmodule.exports = arg;\n","// Replacement for node's internal 'internal/options' module\n\nexports.getOptionValue = getOptionValue;\nfunction getOptionValue(opt) {\n  parseOptions();\n  return options[opt];\n}\n\nlet options;\nfunction parseOptions() {\n  if (!options) {\n    options = {\n      '--preserve-symlinks': false,\n      '--preserve-symlinks-main': false,\n      '--input-type': undefined,\n      '--experimental-specifier-resolution': 'explicit',\n      '--experimental-policy': undefined,\n      '--conditions': [],\n      '--pending-deprecation': false,\n      ...parseArgv(getNodeOptionsEnvArgv()),\n      ...parseArgv(process.execArgv),\n      ...getOptionValuesFromOtherEnvVars()\n    }\n  }\n}\n\nfunction parseArgv(argv) {\n  return require('arg')({\n    '--preserve-symlinks': Boolean,\n    '--preserve-symlinks-main': Boolean,\n    '--input-type': String,\n    '--experimental-specifier-resolution': String,\n    // Legacy alias for node versions prior to 12.16\n    '--es-module-specifier-resolution': '--experimental-specifier-resolution',\n    '--experimental-policy': String,\n    '--conditions': [String],\n    '--pending-deprecation': Boolean,\n    '--experimental-json-modules': Boolean,\n    '--experimental-wasm-modules': Boolean,\n  }, {\n    argv,\n    permissive: true\n  });\n}\n\nfunction getNodeOptionsEnvArgv() {\n  const errors = [];\n  const envArgv = ParseNodeOptionsEnvVar(process.env.NODE_OPTIONS || '', errors);\n  if (errors.length !== 0) {\n    // TODO: handle errors somehow\n  }\n  return envArgv;\n}\n\n// Direct JS port of C implementation: https://github.com/nodejs/node/blob/67ba825037b4082d5d16f922fb9ce54516b4a869/src/node_options.cc#L1024-L1063\nfunction ParseNodeOptionsEnvVar(node_options, errors) {\n  const env_argv = [];\n\n  let is_in_string = false;\n  let will_start_new_arg = true;\n  for (let index = 0; index < node_options.length; ++index) {\n      let c = node_options[index];\n\n      // Backslashes escape the following character\n      if (c === '\\\\' && is_in_string) {\n          if (index + 1 === node_options.length) {\n              errors.push(\"invalid value for NODE_OPTIONS \" +\n                  \"(invalid escape)\\n\");\n              return env_argv;\n          } else {\n              c = node_options[++index];\n          }\n      } else if (c === ' ' && !is_in_string) {\n          will_start_new_arg = true;\n          continue;\n      } else if (c === '\"') {\n          is_in_string = !is_in_string;\n          continue;\n      }\n\n      if (will_start_new_arg) {\n          env_argv.push(c);\n          will_start_new_arg = false;\n      } else {\n          env_argv[env_argv.length - 1] += c;\n      }\n  }\n\n  if (is_in_string) {\n      errors.push(\"invalid value for NODE_OPTIONS \" +\n          \"(unterminated string)\\n\");\n  }\n  return env_argv;\n}\n\n// Get option values that can be specified via env vars besides NODE_OPTIONS\nfunction getOptionValuesFromOtherEnvVars() {\n  const options = {};\n  if(process.env.NODE_PENDING_DEPRECATION === '1') {\n    options['--pending-deprecation'] = true;\n  }\n  return options;\n}\n","// Copied from https://github.com/nodejs/node/blob/v17.0.1/lib/internal/modules/cjs/helpers.js\n\n'use strict';\n\nconst {\n  ArrayPrototypeForEach,\n  ObjectDefineProperty,\n  ObjectPrototypeHasOwnProperty,\n  SafeSet,\n  StringPrototypeIncludes,\n  StringPrototypeStartsWith,\n} = require('./node-primordials');\n\nconst { getOptionValue } = require('./node-options');\nconst userConditions = getOptionValue('--conditions');\n\nconst noAddons = getOptionValue('--no-addons');\nconst addonConditions = noAddons ? [] : ['node-addons'];\n\n// TODO: Use this set when resolving pkg#exports conditions in loader.js.\nconst cjsConditions = new SafeSet([\n  'require',\n  'node',\n  ...addonConditions,\n  ...userConditions,\n]);\n\n/**\n * @param {any} object\n * @param {string} [dummyModuleName]\n * @return {void}\n */\nfunction addBuiltinLibsToObject(object, dummyModuleName) {\n  // Make built-in modules available directly (loaded lazily).\n  const Module = require('module').Module;\n  const { builtinModules } = Module;\n\n  // To require built-in modules in user-land and ignore modules whose\n  // `canBeRequiredByUsers` is false. So we create a dummy module object and not\n  // use `require()` directly.\n  const dummyModule = new Module(dummyModuleName);\n\n  ArrayPrototypeForEach(builtinModules, (name) => {\n    // Neither add underscored modules, nor ones that contain slashes (e.g.,\n    // 'fs/promises') or ones that are already defined.\n    if (StringPrototypeStartsWith(name, '_') ||\n        StringPrototypeIncludes(name, '/') ||\n        ObjectPrototypeHasOwnProperty(object, name)) {\n      return;\n    }\n    // Goals of this mechanism are:\n    // - Lazy loading of built-in modules\n    // - Having all built-in modules available as non-enumerable properties\n    // - Allowing the user to re-assign these variables as if there were no\n    //   pre-existing globals with the same name.\n\n    const setReal = (val) => {\n      // Deleting the property before re-assigning it disables the\n      // getter/setter mechanism.\n      delete object[name];\n      object[name] = val;\n    };\n\n    ObjectDefineProperty(object, name, {\n      get: () => {\n        // Node 12 hack; remove when we drop node12 support\n        const lib = (dummyModule.require || require)(name);\n\n        // Disable the current getter/setter and set up a new\n        // non-enumerable property.\n        delete object[name];\n        ObjectDefineProperty(object, name, {\n          get: () => lib,\n          set: setReal,\n          configurable: true,\n          enumerable: false\n        });\n\n        return lib;\n      },\n      set: setReal,\n      configurable: true,\n      enumerable: false\n    });\n  });\n}\n\nexports.addBuiltinLibsToObject = addBuiltinLibsToObject;\nexports.cjsConditions = cjsConditions;\n","'use strict';\n\nconst path = require('path');\n\nexports.codes = {\n  ERR_INPUT_TYPE_NOT_ALLOWED: createErrorCtor(joinArgs('ERR_INPUT_TYPE_NOT_ALLOWED')),\n  ERR_INVALID_ARG_VALUE: createErrorCtor(joinArgs('ERR_INVALID_ARG_VALUE')),\n  ERR_INVALID_MODULE_SPECIFIER: createErrorCtor(joinArgs('ERR_INVALID_MODULE_SPECIFIER')),\n  ERR_INVALID_PACKAGE_CONFIG: createErrorCtor(joinArgs('ERR_INVALID_PACKAGE_CONFIG')),\n  ERR_INVALID_PACKAGE_TARGET: createErrorCtor(joinArgs('ERR_INVALID_PACKAGE_TARGET')),\n  ERR_MANIFEST_DEPENDENCY_MISSING: createErrorCtor(joinArgs('ERR_MANIFEST_DEPENDENCY_MISSING')),\n  ERR_MODULE_NOT_FOUND: createErrorCtor((path, base, type = 'package') => {\n    return `Cannot find ${type} '${path}' imported from ${base}`\n  }),\n  ERR_PACKAGE_IMPORT_NOT_DEFINED: createErrorCtor(joinArgs('ERR_PACKAGE_IMPORT_NOT_DEFINED')),\n  ERR_PACKAGE_PATH_NOT_EXPORTED: createErrorCtor(joinArgs('ERR_PACKAGE_PATH_NOT_EXPORTED')),\n  ERR_UNSUPPORTED_DIR_IMPORT: createErrorCtor(joinArgs('ERR_UNSUPPORTED_DIR_IMPORT')),\n  ERR_UNSUPPORTED_ESM_URL_SCHEME: createErrorCtor(joinArgs('ERR_UNSUPPORTED_ESM_URL_SCHEME')),\n  ERR_UNKNOWN_FILE_EXTENSION: createErrorCtor(joinArgs('ERR_UNKNOWN_FILE_EXTENSION')),\n}\n\nfunction joinArgs(name) {\n  return (...args) => {\n    return [name, ...args].join(' ')\n  }\n}\n\nfunction createErrorCtor(errorMessageCreator) {\n  return class CustomError extends Error {\n    constructor(...args) {\n      super(errorMessageCreator(...args))\n    }\n  }\n}\nexports.createErrRequireEsm = createErrRequireEsm;\n\n// Native ERR_REQUIRE_ESM Error is declared here:\n//   https://github.com/nodejs/node/blob/2d5d77306f6dff9110c1f77fefab25f973415770/lib/internal/errors.js#L1294-L1313\n// Error class factory is implemented here:\n//   function E: https://github.com/nodejs/node/blob/2d5d77306f6dff9110c1f77fefab25f973415770/lib/internal/errors.js#L323-L341\n//   function makeNodeErrorWithCode: https://github.com/nodejs/node/blob/2d5d77306f6dff9110c1f77fefab25f973415770/lib/internal/errors.js#L251-L278\n// The code below should create an error that matches the native error as closely as possible.\n// Third-party libraries which attempt to catch the native ERR_REQUIRE_ESM should recognize our imitation error.\nfunction createErrRequireEsm(filename, parentPath, packageJsonPath) {\n  const code = 'ERR_REQUIRE_ESM'\n  const err = new Error(getErrRequireEsmMessage(filename, parentPath, packageJsonPath))\n  // Set `name` to be used in stack trace, generate stack trace with that name baked in, then re-declare the `name` field.\n  // This trick is copied from node's source.\n  err.name = `Error [${ code }]`\n  err.stack\n  Object.defineProperty(err, 'name', {\n    value: 'Error',\n    enumerable: false,\n    writable: true,\n    configurable: true\n  })\n  err.code = code\n  return err\n}\n\n// Copy-pasted from https://github.com/nodejs/node/blob/b533fb3508009e5f567cc776daba8fbf665386a6/lib/internal/errors.js#L1293-L1311\n// so that our error message is identical to the native message.\nfunction getErrRequireEsmMessage(filename, parentPath = null, packageJsonPath = null) {\n  const ext = path.extname(filename)\n  let msg = `Must use import to load ES Module: ${filename}`;\n  if (parentPath && packageJsonPath) {\n    const path = require('path');\n    const basename = path.basename(filename) === path.basename(parentPath) ?\n      filename : path.basename(filename);\n    msg +=\n      '\\nrequire() of ES modules is not supported.\\nrequire() of ' +\n      `${filename} ${parentPath ? `from ${parentPath} ` : ''}` +\n      `is an ES module file as it is a ${ext} file whose nearest parent ` +\n      `package.json contains \"type\": \"module\" which defines all ${ext} ` +\n      'files in that package scope as ES modules.\\nInstead ' +\n      'change the requiring code to use ' +\n      'import(), or remove \"type\": \"module\" from ' +\n      `${packageJsonPath}.\\n`;\n    return msg;\n  }\n  return msg;\n}\n","// Copied from https://github.com/nodejs/node/blob/master/lib/internal/constants.js\nmodule.exports = {\n  CHAR_FORWARD_SLASH: 47, /* / */\n};\n","// Copied from several files in node's source code.\n// https://github.com/nodejs/node/blob/2d5d77306f6dff9110c1f77fefab25f973415770/lib/internal/modules/cjs/loader.js\n// Each function and variable below must have a comment linking to the source in node's github repo.\n\n'use strict';\n\nconst {\n  ArrayIsArray,\n  ArrayPrototypeIncludes,\n  ArrayPrototypeJoin,\n  ArrayPrototypePush,\n  JSONParse,\n  ObjectKeys,\n  RegExpPrototypeTest,\n  SafeMap,\n  SafeWeakMap,\n  StringPrototypeCharCodeAt,\n  StringPrototypeEndsWith,\n  StringPrototypeLastIndexOf,\n  StringPrototypeIndexOf,\n  StringPrototypeMatch,\n  StringPrototypeSlice,\n  StringPrototypeStartsWith,\n} = require('./node-primordials');\nconst { NativeModule } = require('./node-nativemodule');\nconst { pathToFileURL, fileURLToPath } = require('url');\nconst fs = require('fs');\nconst path = require('path');\nconst { sep } = path;\nconst { internalModuleStat } = require('./node-internalBinding-fs');\nconst packageJsonReader = require('./node-internal-modules-package_json_reader');\nconst {\n  cjsConditions,\n} = require('./node-internal-modules-cjs-helpers');\nconst { getOptionValue } = require('./node-options');\nconst preserveSymlinks = getOptionValue('--preserve-symlinks');\nconst preserveSymlinksMain = getOptionValue('--preserve-symlinks-main');\nconst {normalizeSlashes} = require('../dist/util');\nconst {createErrRequireEsm} = require('./node-internal-errors');\nconst {\n  codes: {\n    ERR_INVALID_MODULE_SPECIFIER,\n  },\n} = require('./node-internal-errors');\n\nconst {\n  CHAR_FORWARD_SLASH,\n} = require('./node-internal-constants');\n\nconst Module = require('module');\n\nconst isWindows = process.platform === 'win32';\n\nlet statCache = null;\n\nfunction stat(filename) {\n  filename = path.toNamespacedPath(filename);\n  if (statCache !== null) {\n    const result = statCache.get(filename);\n    if (result !== undefined) return result;\n  }\n  const result = internalModuleStat(filename);\n  if (statCache !== null && result >= 0) {\n    // Only set cache when `internalModuleStat(filename)` succeeds.\n    statCache.set(filename, result);\n  }\n  return result;\n}\n\n// Note:\n// we cannot get access to node's internal cache, which is populated from\n// within node's Module constructor.  So the cache here will always be empty.\n// It's possible we could approximate our own cache by building it up with\n// hacky workarounds, but it's not worth the complexity and flakiness.\nconst moduleParentCache = new SafeWeakMap();\n\n// Given a module name, and a list of paths to test, returns the first\n// matching file in the following precedence.\n//\n// require(\"a.<ext>\")\n//   -> a.<ext>\n//\n// require(\"a\")\n//   -> a\n//   -> a.<ext>\n//   -> a/index.<ext>\n\nconst packageJsonCache = new SafeMap();\n\nfunction readPackage(requestPath) {\n  const jsonPath = path.resolve(requestPath, 'package.json');\n\n  const existing = packageJsonCache.get(jsonPath);\n  if (existing !== undefined) return existing;\n\n  const result = packageJsonReader.read(jsonPath);\n  const json = result.containsKeys === false ? '{}' : result.string;\n  if (json === undefined) {\n    packageJsonCache.set(jsonPath, false);\n    return false;\n  }\n\n  try {\n    const parsed = JSONParse(json);\n    const filtered = {\n      name: parsed.name,\n      main: parsed.main,\n      exports: parsed.exports,\n      imports: parsed.imports,\n      type: parsed.type\n    };\n    packageJsonCache.set(jsonPath, filtered);\n    return filtered;\n  } catch (e) {\n    e.path = jsonPath;\n    e.message = 'Error parsing ' + jsonPath + ': ' + e.message;\n    throw e;\n  }\n}\n\nfunction readPackageScope(checkPath) {\n  const rootSeparatorIndex = StringPrototypeIndexOf(checkPath, sep);\n  let separatorIndex;\n  do {\n    separatorIndex = StringPrototypeLastIndexOf(checkPath, sep);\n    checkPath = StringPrototypeSlice(checkPath, 0, separatorIndex);\n    if (StringPrototypeEndsWith(checkPath, sep + 'node_modules'))\n      return false;\n    const pjson = readPackage(checkPath + sep);\n    if (pjson) return {\n      data: pjson,\n      path: checkPath,\n    };\n  } while (separatorIndex > rootSeparatorIndex);\n  return false;\n}\n\n/**\n * @param {{\n *   nodeEsmResolver: ReturnType<typeof import('./node-internal-modules-esm-resolve').createResolve>,\n *   extensions: import('../src/file-extensions').Extensions,\n *   preferTsExts\n * }} opts\n */\nfunction createCjsLoader(opts) {\nconst {nodeEsmResolver, preferTsExts} = opts;\nconst {replacementsForCjs, replacementsForJs, replacementsForMjs, replacementsForJsx} = opts.extensions;\nconst {\n  encodedSepRegEx,\n  packageExportsResolve,\n  packageImportsResolve\n} = nodeEsmResolver;\n\nfunction tryPackage(requestPath, exts, isMain, originalPath) {\n  // const pkg = readPackage(requestPath)?.main;\n  const tmp = readPackage(requestPath)\n  const pkg = tmp != null ? tmp.main : undefined;\n\n  if (!pkg) {\n    return tryExtensions(path.resolve(requestPath, 'index'), exts, isMain);\n  }\n\n  const filename = path.resolve(requestPath, pkg);\n  let actual = tryReplacementExtensions(filename, isMain) ||\n    tryFile(filename, isMain) ||\n    tryExtensions(filename, exts, isMain) ||\n    tryExtensions(path.resolve(filename, 'index'), exts, isMain);\n  if (actual === false) {\n    actual = tryExtensions(path.resolve(requestPath, 'index'), exts, isMain);\n    if (!actual) {\n      // eslint-disable-next-line no-restricted-syntax\n      const err = new Error(\n        `Cannot find module '${filename}'. ` +\n        'Please verify that the package.json has a valid \"main\" entry'\n      );\n      err.code = 'MODULE_NOT_FOUND';\n      err.path = path.resolve(requestPath, 'package.json');\n      err.requestPath = originalPath;\n      // TODO(BridgeAR): Add the requireStack as well.\n      throw err;\n    } else {\n      const jsonPath = path.resolve(requestPath, 'package.json');\n      process.emitWarning(\n        `Invalid 'main' field in '${jsonPath}' of '${pkg}'. ` +\n          'Please either fix that or report it to the module author',\n        'DeprecationWarning',\n        'DEP0128'\n      );\n    }\n  }\n  return actual;\n}\n\n// In order to minimize unnecessary lstat() calls,\n// this cache is a list of known-real paths.\n// Set to an empty Map to reset.\nconst realpathCache = new SafeMap();\n\n// Check if the file exists and is not a directory\n// if using --preserve-symlinks and isMain is false,\n// keep symlinks intact, otherwise resolve to the\n// absolute realpath.\nfunction tryFile(requestPath, isMain) {\n  const rc = stat(requestPath);\n  if (rc !== 0) return;\n  if (preserveSymlinks && !isMain) {\n    return path.resolve(requestPath);\n  }\n  return toRealPath(requestPath);\n}\n\nfunction toRealPath(requestPath) {\n  return fs.realpathSync(requestPath, {\n    // [internalFS.realpathCacheKey]: realpathCache\n  });\n}\n\nfunction statReplacementExtensions(p) {\n  const lastDotIndex = p.lastIndexOf('.');\n  if(lastDotIndex >= 0) {\n    const ext = p.slice(lastDotIndex);\n    if (ext === '.js' || ext === '.jsx' || ext === '.mjs' || ext === '.cjs') {\n      const pathnameWithoutExtension = p.slice(0, lastDotIndex);\n      const replacementExts =\n        ext === '.js' ? replacementsForJs\n        : ext === '.jsx' ? replacementsForJsx\n        : ext === '.mjs' ? replacementsForMjs\n        : replacementsForCjs;\n      for (let i = 0; i < replacementExts.length; i++) {\n        const filename = pathnameWithoutExtension + replacementExts[i];\n        const rc = stat(filename);\n        if (rc === 0) {\n          return [rc, filename];\n        }\n      }\n    }\n  }\n  return [stat(p), p];\n}\nfunction tryReplacementExtensions(p, isMain) {\n  const lastDotIndex = p.lastIndexOf('.');\n  if(lastDotIndex >= 0) {\n    const ext = p.slice(lastDotIndex);\n    if (ext === '.js' || ext === '.jsx' || ext === '.mjs' || ext === '.cjs') {\n      const pathnameWithoutExtension = p.slice(0, lastDotIndex);\n      const replacementExts =\n        ext === '.js' ? replacementsForJs\n        : ext === '.jsx' ? replacementsForJsx\n        : ext === '.mjs' ? replacementsForMjs\n        : replacementsForCjs;\n      for (let i = 0; i < replacementExts.length; i++) {\n        const filename = tryFile(pathnameWithoutExtension + replacementExts[i], isMain);\n        if (filename) {\n          return filename;\n        }\n      }\n    }\n  }\n  return false;\n}\n\n// Given a path, check if the file exists with any of the set extensions\nfunction tryExtensions(p, exts, isMain) {\n  for (let i = 0; i < exts.length; i++) {\n    const filename = tryFile(p + exts[i], isMain);\n\n    if (filename) {\n      return filename;\n    }\n  }\n  return false;\n}\n\nfunction trySelfParentPath(parent) {\n  if (!parent) return false;\n\n  if (parent.filename) {\n    return parent.filename;\n  } else if (parent.id === '<repl>' || parent.id === 'internal/preload') {\n    try {\n      return process.cwd() + path.sep;\n    } catch {\n      return false;\n    }\n  }\n}\n\nfunction trySelf(parentPath, request) {\n  if (!parentPath) return false;\n\n  const { data: pkg, path: pkgPath } = readPackageScope(parentPath) || {};\n  if (!pkg || pkg.exports === undefined) return false;\n  if (typeof pkg.name !== 'string') return false;\n\n  let expansion;\n  if (request === pkg.name) {\n    expansion = '.';\n  } else if (StringPrototypeStartsWith(request, `${pkg.name}/`)) {\n    expansion = '.' + StringPrototypeSlice(request, pkg.name.length);\n  } else {\n    return false;\n  }\n\n  try {\n    return finalizeEsmResolution(packageExportsResolve(\n      pathToFileURL(pkgPath + '/package.json'), expansion, pkg,\n      pathToFileURL(parentPath), cjsConditions).resolved, parentPath, pkgPath);\n  } catch (e) {\n    if (e.code === 'ERR_MODULE_NOT_FOUND')\n      throw createEsmNotFoundErr(request, pkgPath + '/package.json');\n    throw e;\n  }\n}\n\n// This only applies to requests of a specific form:\n// 1. name/.*\n// 2. @scope/name/.*\nconst EXPORTS_PATTERN = /^((?:@[^/\\\\%]+\\/)?[^./\\\\%][^/\\\\%]*)(\\/.*)?$/;\nfunction resolveExports(nmPath, request) {\n  // The implementation's behavior is meant to mirror resolution in ESM.\n  const { 1: name, 2: expansion = '' } =\n    StringPrototypeMatch(request, EXPORTS_PATTERN) || [];\n  if (!name)\n    return;\n  const pkgPath = path.resolve(nmPath, name);\n  const pkg = readPackage(pkgPath);\n  // if (pkg?.exports != null) {\n  if (pkg != null && pkg.exports != null) {\n    try {\n      return finalizeEsmResolution(packageExportsResolve(\n        pathToFileURL(pkgPath + '/package.json'), '.' + expansion, pkg, null,\n        cjsConditions).resolved, null, pkgPath);\n    } catch (e) {\n      if (e.code === 'ERR_MODULE_NOT_FOUND')\n        throw createEsmNotFoundErr(request, pkgPath + '/package.json');\n      throw e;\n    }\n  }\n}\n\n// Backwards compat for old node versions\nconst hasModulePathCache = !!require('module')._pathCache;\nconst Module_pathCache = Object.create(null);\nconst Module_pathCache_get = hasModulePathCache ? (cacheKey) => Module._pathCache[cacheKey] : (cacheKey) => Module_pathCache[cacheKey];\nconst Module_pathCache_set = hasModulePathCache ? (cacheKey, value) => (Module._pathCache[cacheKey] = value) : (cacheKey) => (Module_pathCache[cacheKey] = value);\n\nconst trailingSlashRegex = /(?:^|\\/)\\.?\\.$/;\nconst Module_findPath = function _findPath(request, paths, isMain) {\n  const absoluteRequest = path.isAbsolute(request);\n  if (absoluteRequest) {\n    paths = [''];\n  } else if (!paths || paths.length === 0) {\n    return false;\n  }\n\n  const cacheKey = request + '\\x00' + ArrayPrototypeJoin(paths, '\\x00');\n  const entry = Module_pathCache_get(cacheKey);\n  if (entry)\n    return entry;\n\n  let exts;\n  let trailingSlash = request.length > 0 &&\n    StringPrototypeCharCodeAt(request, request.length - 1) ===\n    CHAR_FORWARD_SLASH;\n  if (!trailingSlash) {\n    trailingSlash = RegExpPrototypeTest(trailingSlashRegex, request);\n  }\n\n  // For each path\n  for (let i = 0; i < paths.length; i++) {\n    // Don't search further if path doesn't exist\n    const curPath = paths[i];\n    if (curPath && stat(curPath) < 1) continue;\n\n    if (!absoluteRequest) {\n      const exportsResolved = resolveExports(curPath, request);\n      if (exportsResolved)\n        return exportsResolved;\n    }\n\n    const _basePath = path.resolve(curPath, request);\n    let filename;\n\n    const [rc, basePath] = statReplacementExtensions(_basePath);\n    if (!trailingSlash) {\n      if (rc === 0) {  // File.\n        if (!isMain) {\n          if (preserveSymlinks) {\n            filename = path.resolve(basePath);\n          } else {\n            filename = toRealPath(basePath);\n          }\n        } else if (preserveSymlinksMain) {\n          // For the main module, we use the preserveSymlinksMain flag instead\n          // mainly for backward compatibility, as the preserveSymlinks flag\n          // historically has not applied to the main module.  Most likely this\n          // was intended to keep .bin/ binaries working, as following those\n          // symlinks is usually required for the imports in the corresponding\n          // files to resolve; that said, in some use cases following symlinks\n          // causes bigger problems which is why the preserveSymlinksMain option\n          // is needed.\n          filename = path.resolve(basePath);\n        } else {\n          filename = toRealPath(basePath);\n        }\n      }\n\n      if (!filename) {\n        // Try it with each of the extensions\n        if (exts === undefined)\n          exts = ObjectKeys(Module._extensions);\n        filename = tryExtensions(basePath, exts, isMain);\n      }\n    }\n\n    if (!filename && rc === 1) {  // Directory.\n      // try it with each of the extensions at \"index\"\n      if (exts === undefined)\n        exts = ObjectKeys(Module._extensions);\n      filename = tryPackage(basePath, exts, isMain, request);\n    }\n\n    if (filename) {\n      Module_pathCache_set(cacheKey, filename);\n      return filename;\n    }\n  }\n\n  return false;\n};\n\nconst Module_resolveFilename = function _resolveFilename(request, parent, isMain, options) {\n  if (StringPrototypeStartsWith(request, 'node:') ||\n      NativeModule.canBeRequiredByUsers(request)) {\n    return request;\n  }\n\n  let paths;\n\n  if (typeof options === 'object' && options !== null) {\n    if (ArrayIsArray(options.paths)) {\n      const isRelative = StringPrototypeStartsWith(request, './') ||\n          StringPrototypeStartsWith(request, '../') ||\n          ((isWindows && StringPrototypeStartsWith(request, '.\\\\')) ||\n          StringPrototypeStartsWith(request, '..\\\\'));\n\n      if (isRelative) {\n        paths = options.paths;\n      } else {\n        const fakeParent = new Module('', null);\n\n        paths = [];\n\n        for (let i = 0; i < options.paths.length; i++) {\n          const path = options.paths[i];\n          fakeParent.paths = Module._nodeModulePaths(path);\n          const lookupPaths = Module._resolveLookupPaths(request, fakeParent);\n\n          for (let j = 0; j < lookupPaths.length; j++) {\n            if (!ArrayPrototypeIncludes(paths, lookupPaths[j]))\n              ArrayPrototypePush(paths, lookupPaths[j]);\n          }\n        }\n      }\n    } else if (options.paths === undefined) {\n      paths = Module._resolveLookupPaths(request, parent);\n    } else {\n      throw new ERR_INVALID_ARG_VALUE('options.paths', options.paths);\n    }\n  } else {\n    paths = Module._resolveLookupPaths(request, parent);\n  }\n\n  // if (parent?.filename) {\n  // node 12 hack\n  if (parent != null && parent.filename) {\n    if (request[0] === '#') {\n      const pkg = readPackageScope(parent.filename) || {};\n\n      // if (pkg.data?.imports != null) {\n      // node 12 hack\n      if (pkg.data != null && pkg.data.imports != null) {\n        try {\n          return finalizeEsmResolution(\n            packageImportsResolve(request, pathToFileURL(parent.filename),\n                                  cjsConditions), parent.filename,\n            pkg.path);\n        } catch (e) {\n          if (e.code === 'ERR_MODULE_NOT_FOUND')\n            throw createEsmNotFoundErr(request);\n          throw e;\n        }\n      }\n    }\n  }\n\n  // Try module self resolution first\n  const parentPath = trySelfParentPath(parent);\n  const selfResolved = trySelf(parentPath, request);\n  if (selfResolved) {\n    const cacheKey = request + '\\x00' +\n         (paths.length === 1 ? paths[0] : ArrayPrototypeJoin(paths, '\\x00'));\n    Module._pathCache[cacheKey] = selfResolved;\n    return selfResolved;\n  }\n\n  // Look up the filename first, since that's the cache key.\n  const filename = Module._findPath(request, paths, isMain, false);\n  if (filename) return filename;\n  const requireStack = [];\n  for (let cursor = parent;\n    cursor;\n    cursor = moduleParentCache.get(cursor)) {\n    ArrayPrototypePush(requireStack, cursor.filename || cursor.id);\n  }\n  let message = `Cannot find module '${request}'`;\n  if (requireStack.length > 0) {\n    message = message + '\\nRequire stack:\\n- ' +\n              ArrayPrototypeJoin(requireStack, '\\n- ');\n  }\n  // eslint-disable-next-line no-restricted-syntax\n  const err = new Error(message);\n  err.code = 'MODULE_NOT_FOUND';\n  err.requireStack = requireStack;\n  throw err;\n};\n\nfunction finalizeEsmResolution(resolved, parentPath, pkgPath) {\n  if (RegExpPrototypeTest(encodedSepRegEx, resolved))\n    throw new ERR_INVALID_MODULE_SPECIFIER(\n      resolved, 'must not include encoded \"/\" or \"\\\\\" characters', parentPath);\n  const filename = fileURLToPath(resolved);\n  const actual = tryReplacementExtensions(filename) || tryFile(filename);\n  if (actual)\n    return actual;\n  const err = createEsmNotFoundErr(filename,\n                                   path.resolve(pkgPath, 'package.json'));\n  throw err;\n}\n\nfunction createEsmNotFoundErr(request, path) {\n  // eslint-disable-next-line no-restricted-syntax\n  const err = new Error(`Cannot find module '${request}'`);\n  err.code = 'MODULE_NOT_FOUND';\n  if (path)\n    err.path = path;\n  // TODO(BridgeAR): Add the requireStack as well.\n  return err;\n}\n\n\nreturn {\n  Module_findPath,\n  Module_resolveFilename\n}\n\n}\n\n/**\n * copied from Module._extensions['.js']\n * https://github.com/nodejs/node/blob/v15.3.0/lib/internal/modules/cjs/loader.js#L1113-L1120\n * @param {import('../src/index').Service} service\n * @param {NodeJS.Module} module\n * @param {string} filename\n */\nfunction assertScriptCanLoadAsCJSImpl(service, module, filename) {\n  const pkg = readPackageScope(filename);\n\n  // ts-node modification: allow our configuration to override\n  const tsNodeClassification = service.moduleTypeClassifier.classifyModuleByModuleTypeOverrides(normalizeSlashes(filename));\n  if(tsNodeClassification.moduleType === 'cjs') return;\n\n  // ignore package.json when file extension is ESM-only or CJS-only\n  // [MUST_UPDATE_FOR_NEW_FILE_EXTENSIONS]\n  const lastDotIndex = filename.lastIndexOf('.');\n  const ext = lastDotIndex >= 0 ? filename.slice(lastDotIndex) : '';\n\n  if((ext === '.cts' || ext === '.cjs') && tsNodeClassification.moduleType === 'auto') return;\n\n  // Function require shouldn't be used in ES modules.\n  if (ext === '.mts' || ext === '.mjs' || tsNodeClassification.moduleType === 'esm' || (pkg && pkg.data && pkg.data.type === 'module')) {\n    const parentPath = module.parent && module.parent.filename;\n    const packageJsonPath = pkg ? path.resolve(pkg.path, 'package.json') : null;\n    throw createErrRequireEsm(filename, parentPath, packageJsonPath);\n  }\n}\n\n\nmodule.exports = {\n  createCjsLoader,\n  assertScriptCanLoadAsCJSImpl,\n  readPackageScope\n};\n","import { readPackageScope } from '../dist-raw/node-internal-modules-cjs-loader';\n\n/**\n * Determine how to emit a module based on tsconfig \"module\" and package.json \"type\"\n *\n * Supports module=nodenext/node16 with transpileOnly, where we cannot ask the\n * TS typechecker to tell us if a file is CJS or ESM.\n *\n * Return values indicate:\n * - cjs\n * - esm\n * - nodecjs == node-flavored cjs where dynamic imports are *not* transformed into `require()`\n * - undefined == emit according to tsconfig `module` config, whatever that is\n * @internal\n */\nexport function classifyModule(\n  nativeFilename: string,\n  isNodeModuleType: boolean\n): 'nodecjs' | 'cjs' | 'esm' | 'nodeesm' | undefined {\n  // [MUST_UPDATE_FOR_NEW_FILE_EXTENSIONS]\n  const lastDotIndex = nativeFilename.lastIndexOf('.');\n  const ext = lastDotIndex >= 0 ? nativeFilename.slice(lastDotIndex) : '';\n  switch (ext) {\n    case '.cjs':\n    case '.cts':\n      return isNodeModuleType ? 'nodecjs' : 'cjs';\n    case '.mjs':\n    case '.mts':\n      return isNodeModuleType ? 'nodeesm' : 'esm';\n  }\n  if (isNodeModuleType) {\n    const packageScope = readPackageScope(nativeFilename);\n    if (packageScope && packageScope.data.type === 'module') return 'nodeesm';\n    return 'nodecjs';\n  }\n  return undefined;\n}\n","import type * as _ts from 'typescript';\nimport type { RegisterOptions } from '.';\nimport { versionGteLt } from './util';\n\n/**\n * Centralized specification of how we deal with file extensions based on\n * project options:\n * which ones we do/don't support, in what situations, etc.  These rules drive\n * logic elsewhere.\n * @internal\n * */\nexport type Extensions = ReturnType<typeof getExtensions>;\n\nconst nodeEquivalents = new Map<string, string>([\n  ['.ts', '.js'],\n  ['.tsx', '.js'],\n  ['.jsx', '.js'],\n  ['.mts', '.mjs'],\n  ['.cts', '.cjs'],\n]);\n\nconst tsResolverEquivalents = new Map<string, readonly string[]>([\n  ['.ts', ['.js']],\n  ['.tsx', ['.js', '.jsx']],\n  ['.mts', ['.mjs']],\n  ['.cts', ['.cjs']],\n]);\n\n// All extensions understood by vanilla node\nconst vanillaNodeExtensions: readonly string[] = [\n  '.js',\n  '.json',\n  '.node',\n  '.mjs',\n  '.cjs',\n];\n\n// Extensions added by vanilla node's require() if you omit them:\n// js, json, node\n// Extensions added by vanilla node if you omit them with --experimental-specifier-resolution=node\n// js, json, node, mjs\n// Extensions added by ESM codepath's legacy package.json \"main\" resolver\n// js, json, node (not mjs!)\n\nconst nodeDoesNotUnderstand: readonly string[] = [\n  '.ts',\n  '.tsx',\n  '.jsx',\n  '.cts',\n  '.mts',\n];\n\n/**\n * [MUST_UPDATE_FOR_NEW_FILE_EXTENSIONS]\n * @internal\n */\nexport function getExtensions(\n  config: _ts.ParsedCommandLine,\n  options: RegisterOptions,\n  tsVersion: string\n) {\n  // TS 4.5 is first version to understand .cts, .mts, .cjs, and .mjs extensions\n  const tsSupportsMtsCtsExts = versionGteLt(tsVersion, '4.5.0');\n\n  const requiresHigherTypescriptVersion: string[] = [];\n  if (!tsSupportsMtsCtsExts)\n    requiresHigherTypescriptVersion.push('.cts', '.cjs', '.mts', '.mjs');\n\n  const allPossibleExtensionsSortedByPreference = Array.from(\n    new Set([\n      ...(options.preferTsExts ? nodeDoesNotUnderstand : []),\n      ...vanillaNodeExtensions,\n      ...nodeDoesNotUnderstand,\n    ])\n  );\n\n  const compiledJsUnsorted: string[] = ['.ts'];\n  const compiledJsxUnsorted: string[] = [];\n\n  if (config.options.jsx) compiledJsxUnsorted.push('.tsx');\n  if (tsSupportsMtsCtsExts) compiledJsUnsorted.push('.mts', '.cts');\n  if (config.options.allowJs) {\n    compiledJsUnsorted.push('.js');\n    if (config.options.jsx) compiledJsxUnsorted.push('.jsx');\n    if (tsSupportsMtsCtsExts) compiledJsUnsorted.push('.mjs', '.cjs');\n  }\n\n  const compiledUnsorted = [...compiledJsUnsorted, ...compiledJsxUnsorted];\n  const compiled = allPossibleExtensionsSortedByPreference.filter((ext) =>\n    compiledUnsorted.includes(ext)\n  );\n\n  const compiledNodeDoesNotUnderstand = nodeDoesNotUnderstand.filter((ext) =>\n    compiled.includes(ext)\n  );\n\n  /**\n   * TS's resolver can resolve foo.js to foo.ts, by replacing .js extension with several source extensions.\n   * IMPORTANT: Must preserve ordering according to preferTsExts!\n   *            Must include the .js/.mjs/.cjs extension in the array!\n   *            This affects resolution behavior!\n   * [MUST_UPDATE_FOR_NEW_FILE_EXTENSIONS]\n   */\n  const r = allPossibleExtensionsSortedByPreference.filter((ext) =>\n    [...compiledUnsorted, '.js', '.mjs', '.cjs', '.mts', '.cts'].includes(ext)\n  );\n  const replacementsForJs = r.filter((ext) =>\n    ['.js', '.jsx', '.ts', '.tsx'].includes(ext)\n  );\n  const replacementsForJsx = r.filter((ext) => ['.jsx', '.tsx'].includes(ext));\n  const replacementsForMjs = r.filter((ext) => ['.mjs', '.mts'].includes(ext));\n  const replacementsForCjs = r.filter((ext) => ['.cjs', '.cts'].includes(ext));\n  const replacementsForJsOrMjs = r.filter((ext) =>\n    ['.js', '.jsx', '.ts', '.tsx', '.mjs', '.mts'].includes(ext)\n  );\n\n  // Node allows omitting .js or .mjs extension in certain situations (CJS, ESM w/experimental flag)\n  // So anything that compiles to .js or .mjs can also be omitted.\n  const experimentalSpecifierResolutionAddsIfOmitted = Array.from(\n    new Set([...replacementsForJsOrMjs, '.json', '.node'])\n  );\n  // Same as above, except node curiuosly doesn't do .mjs here\n  const legacyMainResolveAddsIfOmitted = Array.from(\n    new Set([...replacementsForJs, '.json', '.node'])\n  );\n\n  return {\n    /** All file extensions we transform, ordered by resolution preference according to preferTsExts */\n    compiled,\n    /** Resolved extensions that vanilla node will not understand; we should handle them */\n    nodeDoesNotUnderstand,\n    /** Like the above, but only the ones we're compiling */\n    compiledNodeDoesNotUnderstand,\n    /**\n     * Mapping from extensions understood by tsc to the equivalent for node,\n     * as far as getFormat is concerned.\n     */\n    nodeEquivalents,\n    /**\n     * Mapping from extensions rejected by TSC in import specifiers, to the\n     * possible alternatives that TS's resolver will accept.\n     *\n     * When we allow users to opt-in to .ts extensions in import specifiers, TS's\n     * resolver requires us to replace the .ts extensions with .js alternatives.\n     * Otherwise, resolution fails.\n     *\n     * Note TS's resolver is only used by, and only required for, typechecking.\n     * This is separate from node's resolver, which we hook separately and which\n     * does not require this mapping.\n     */\n    tsResolverEquivalents,\n    /**\n     * Extensions that we can support if the user upgrades their typescript version.\n     * Used when raising hints.\n     */\n    requiresHigherTypescriptVersion,\n    /**\n     * --experimental-specifier-resolution=node will add these extensions.\n     */\n    experimentalSpecifierResolutionAddsIfOmitted,\n    /**\n     * ESM loader will add these extensions to package.json \"main\" field\n     */\n    legacyMainResolveAddsIfOmitted,\n    replacementsForMjs,\n    replacementsForCjs,\n    replacementsForJsx,\n    replacementsForJs,\n  };\n}\n","import type {\n  CompilerHost,\n  CompilerOptions,\n  Diagnostic,\n  SourceFile,\n  TranspileOptions,\n  TranspileOutput,\n} from 'typescript';\nimport type { TSCommon } from './ts-compiler-types';\n\n/** @internal */\nexport function createTsTranspileModule(\n  ts: TSCommon,\n  transpileOptions: Pick<\n    TranspileOptions,\n    'compilerOptions' | 'reportDiagnostics' | 'transformers'\n  >\n) {\n  const {\n    createProgram,\n    createSourceFile,\n    getDefaultCompilerOptions,\n    getImpliedNodeFormatForFile,\n    fixupCompilerOptions,\n    transpileOptionValueCompilerOptions,\n    getNewLineCharacter,\n    fileExtensionIs,\n    normalizePath,\n    Debug,\n    toPath,\n    getSetExternalModuleIndicator,\n    getEntries,\n    addRange,\n    hasProperty,\n    getEmitScriptTarget,\n    getDirectoryPath,\n  } = ts as any;\n\n  const compilerOptionsDiagnostics: Diagnostic[] = [];\n\n  const options: CompilerOptions = transpileOptions.compilerOptions\n    ? fixupCompilerOptions(\n        transpileOptions.compilerOptions,\n        compilerOptionsDiagnostics\n      )\n    : {};\n\n  // mix in default options\n  const defaultOptions = getDefaultCompilerOptions();\n  for (const key in defaultOptions) {\n    if (hasProperty(defaultOptions, key) && options[key] === undefined) {\n      options[key] = defaultOptions[key];\n    }\n  }\n\n  for (const option of transpileOptionValueCompilerOptions) {\n    options[option.name] = option.transpileOptionValue;\n  }\n\n  // transpileModule does not write anything to disk so there is no need to verify that there are no conflicts between input and output paths.\n  options.suppressOutputPathCheck = true;\n\n  // Filename can be non-ts file.\n  options.allowNonTsExtensions = true;\n\n  const newLine = getNewLineCharacter(options);\n  // Create a compilerHost object to allow the compiler to read and write files\n  const compilerHost: CompilerHost = {\n    getSourceFile: (fileName) =>\n      fileName === normalizePath(inputFileName) ? sourceFile : undefined,\n    writeFile: (name, text) => {\n      if (fileExtensionIs(name, '.map')) {\n        Debug.assertEqual(\n          sourceMapText,\n          undefined,\n          'Unexpected multiple source map outputs, file:',\n          name\n        );\n        sourceMapText = text;\n      } else {\n        Debug.assertEqual(\n          outputText,\n          undefined,\n          'Unexpected multiple outputs, file:',\n          name\n        );\n        outputText = text;\n      }\n    },\n    getDefaultLibFileName: () => 'lib.d.ts',\n    useCaseSensitiveFileNames: () => true,\n    getCanonicalFileName: (fileName) => fileName,\n    getCurrentDirectory: () => '',\n    getNewLine: () => newLine,\n    fileExists: (fileName): boolean =>\n      fileName === inputFileName || fileName === packageJsonFileName,\n    readFile: (fileName) =>\n      fileName === packageJsonFileName ? `{\"type\": \"${_packageJsonType}\"}` : '',\n    directoryExists: () => true,\n    getDirectories: () => [],\n  };\n\n  let inputFileName: string;\n  let packageJsonFileName: string;\n  let _packageJsonType: 'module' | 'commonjs';\n  let sourceFile: SourceFile;\n  let outputText: string | undefined;\n  let sourceMapText: string | undefined;\n\n  return transpileModule;\n\n  function transpileModule(\n    input: string,\n    transpileOptions2: Pick<\n      TranspileOptions,\n      'fileName' | 'moduleName' | 'renamedDependencies'\n    >,\n    packageJsonType: 'module' | 'commonjs' = 'commonjs'\n  ): TranspileOutput {\n    // if jsx is specified then treat file as .tsx\n    inputFileName =\n      transpileOptions2.fileName ||\n      (transpileOptions.compilerOptions && transpileOptions.compilerOptions.jsx\n        ? 'module.tsx'\n        : 'module.ts');\n    packageJsonFileName = getDirectoryPath(inputFileName) + '/package.json';\n    _packageJsonType = packageJsonType;\n\n    sourceFile = createSourceFile(inputFileName, input, {\n      languageVersion: getEmitScriptTarget(options),\n      impliedNodeFormat: getImpliedNodeFormatForFile(\n        toPath(inputFileName, '', compilerHost.getCanonicalFileName),\n        /*cache*/ undefined,\n        compilerHost,\n        options\n      ),\n      setExternalModuleIndicator: getSetExternalModuleIndicator(options),\n    });\n    if (transpileOptions2.moduleName) {\n      sourceFile.moduleName = transpileOptions2.moduleName;\n    }\n\n    if (transpileOptions2.renamedDependencies) {\n      (sourceFile as any).renamedDependencies = new Map(\n        getEntries(transpileOptions2.renamedDependencies)\n      );\n    }\n\n    // Output\n    outputText = undefined;\n    sourceMapText = undefined;\n\n    const program = createProgram([inputFileName], options, compilerHost);\n\n    const diagnostics = compilerOptionsDiagnostics.slice();\n\n    if (transpileOptions.reportDiagnostics) {\n      addRange(\n        /*to*/ diagnostics,\n        /*from*/ program.getSyntacticDiagnostics(sourceFile)\n      );\n      addRange(/*to*/ diagnostics, /*from*/ program.getOptionsDiagnostics());\n    }\n    // Emit\n    program.emit(\n      /*targetSourceFile*/ undefined,\n      /*writeFile*/ undefined,\n      /*cancellationToken*/ undefined,\n      /*emitOnlyDtsFiles*/ undefined,\n      transpileOptions.transformers\n    );\n\n    if (outputText === undefined) return Debug.fail('Output generation failed');\n\n    return { outputText, diagnostics, sourceMapText };\n  }\n}\n","(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.acorn = {}));\n})(this, (function (exports) { 'use strict';\n\n  // This file was generated. Do not modify manually!\n  var astralIdentifierCodes = [509, 0, 227, 0, 150, 4, 294, 9, 1368, 2, 2, 1, 6, 3, 41, 2, 5, 0, 166, 1, 574, 3, 9, 9, 7, 9, 32, 4, 318, 1, 80, 3, 71, 10, 50, 3, 123, 2, 54, 14, 32, 10, 3, 1, 11, 3, 46, 10, 8, 0, 46, 9, 7, 2, 37, 13, 2, 9, 6, 1, 45, 0, 13, 2, 49, 13, 9, 3, 2, 11, 83, 11, 7, 0, 3, 0, 158, 11, 6, 9, 7, 3, 56, 1, 2, 6, 3, 1, 3, 2, 10, 0, 11, 1, 3, 6, 4, 4, 68, 8, 2, 0, 3, 0, 2, 3, 2, 4, 2, 0, 15, 1, 83, 17, 10, 9, 5, 0, 82, 19, 13, 9, 214, 6, 3, 8, 28, 1, 83, 16, 16, 9, 82, 12, 9, 9, 7, 19, 58, 14, 5, 9, 243, 14, 166, 9, 71, 5, 2, 1, 3, 3, 2, 0, 2, 1, 13, 9, 120, 6, 3, 6, 4, 0, 29, 9, 41, 6, 2, 3, 9, 0, 10, 10, 47, 15, 343, 9, 54, 7, 2, 7, 17, 9, 57, 21, 2, 13, 123, 5, 4, 0, 2, 1, 2, 6, 2, 0, 9, 9, 49, 4, 2, 1, 2, 4, 9, 9, 330, 3, 10, 1, 2, 0, 49, 6, 4, 4, 14, 10, 5350, 0, 7, 14, 11465, 27, 2343, 9, 87, 9, 39, 4, 60, 6, 26, 9, 535, 9, 470, 0, 2, 54, 8, 3, 82, 0, 12, 1, 19628, 1, 4178, 9, 519, 45, 3, 22, 543, 4, 4, 5, 9, 7, 3, 6, 31, 3, 149, 2, 1418, 49, 513, 54, 5, 49, 9, 0, 15, 0, 23, 4, 2, 14, 1361, 6, 2, 16, 3, 6, 2, 1, 2, 4, 101, 0, 161, 6, 10, 9, 357, 0, 62, 13, 499, 13, 245, 1, 2, 9, 726, 6, 110, 6, 6, 9, 4759, 9, 787719, 239];\n\n  // This file was generated. Do not modify manually!\n  var astralIdentifierStartCodes = [0, 11, 2, 25, 2, 18, 2, 1, 2, 14, 3, 13, 35, 122, 70, 52, 268, 28, 4, 48, 48, 31, 14, 29, 6, 37, 11, 29, 3, 35, 5, 7, 2, 4, 43, 157, 19, 35, 5, 35, 5, 39, 9, 51, 13, 10, 2, 14, 2, 6, 2, 1, 2, 10, 2, 14, 2, 6, 2, 1, 4, 51, 13, 310, 10, 21, 11, 7, 25, 5, 2, 41, 2, 8, 70, 5, 3, 0, 2, 43, 2, 1, 4, 0, 3, 22, 11, 22, 10, 30, 66, 18, 2, 1, 11, 21, 11, 25, 71, 55, 7, 1, 65, 0, 16, 3, 2, 2, 2, 28, 43, 28, 4, 28, 36, 7, 2, 27, 28, 53, 11, 21, 11, 18, 14, 17, 111, 72, 56, 50, 14, 50, 14, 35, 39, 27, 10, 22, 251, 41, 7, 1, 17, 2, 60, 28, 11, 0, 9, 21, 43, 17, 47, 20, 28, 22, 13, 52, 58, 1, 3, 0, 14, 44, 33, 24, 27, 35, 30, 0, 3, 0, 9, 34, 4, 0, 13, 47, 15, 3, 22, 0, 2, 0, 36, 17, 2, 24, 20, 1, 64, 6, 2, 0, 2, 3, 2, 14, 2, 9, 8, 46, 39, 7, 3, 1, 3, 21, 2, 6, 2, 1, 2, 4, 4, 0, 19, 0, 13, 4, 31, 9, 2, 0, 3, 0, 2, 37, 2, 0, 26, 0, 2, 0, 45, 52, 19, 3, 21, 2, 31, 47, 21, 1, 2, 0, 185, 46, 42, 3, 37, 47, 21, 0, 60, 42, 14, 0, 72, 26, 38, 6, 186, 43, 117, 63, 32, 7, 3, 0, 3, 7, 2, 1, 2, 23, 16, 0, 2, 0, 95, 7, 3, 38, 17, 0, 2, 0, 29, 0, 11, 39, 8, 0, 22, 0, 12, 45, 20, 0, 19, 72, 200, 32, 32, 8, 2, 36, 18, 0, 50, 29, 113, 6, 2, 1, 2, 37, 22, 0, 26, 5, 2, 1, 2, 31, 15, 0, 328, 18, 16, 0, 2, 12, 2, 33, 125, 0, 80, 921, 103, 110, 18, 195, 2637, 96, 16, 1071, 18, 5, 26, 3994, 6, 582, 6842, 29, 1763, 568, 8, 30, 18, 78, 18, 29, 19, 47, 17, 3, 32, 20, 6, 18, 433, 44, 212, 63, 129, 74, 6, 0, 67, 12, 65, 1, 2, 0, 29, 6135, 9, 1237, 42, 9, 8936, 3, 2, 6, 2, 1, 2, 290, 16, 0, 30, 2, 3, 0, 15, 3, 9, 395, 2309, 106, 6, 12, 4, 8, 8, 9, 5991, 84, 2, 70, 2, 1, 3, 0, 3, 1, 3, 3, 2, 11, 2, 0, 2, 6, 2, 64, 2, 3, 3, 7, 2, 6, 2, 27, 2, 3, 2, 4, 2, 0, 4, 6, 2, 339, 3, 24, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 7, 1845, 30, 7, 5, 262, 61, 147, 44, 11, 6, 17, 0, 322, 29, 19, 43, 485, 27, 229, 29, 3, 0, 496, 6, 2, 3, 2, 1, 2, 14, 2, 196, 60, 67, 8, 0, 1205, 3, 2, 26, 2, 1, 2, 0, 3, 0, 2, 9, 2, 3, 2, 0, 2, 0, 7, 0, 5, 0, 2, 0, 2, 0, 2, 2, 2, 1, 2, 0, 3, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 1, 2, 0, 3, 3, 2, 6, 2, 3, 2, 3, 2, 0, 2, 9, 2, 16, 6, 2, 2, 4, 2, 16, 4421, 42719, 33, 4153, 7, 221, 3, 5761, 15, 7472, 16, 621, 2467, 541, 1507, 4938, 6, 4191];\n\n  // This file was generated. Do not modify manually!\n  var nonASCIIidentifierChars = \"\\u200c\\u200d\\xb7\\u0300-\\u036f\\u0387\\u0483-\\u0487\\u0591-\\u05bd\\u05bf\\u05c1\\u05c2\\u05c4\\u05c5\\u05c7\\u0610-\\u061a\\u064b-\\u0669\\u0670\\u06d6-\\u06dc\\u06df-\\u06e4\\u06e7\\u06e8\\u06ea-\\u06ed\\u06f0-\\u06f9\\u0711\\u0730-\\u074a\\u07a6-\\u07b0\\u07c0-\\u07c9\\u07eb-\\u07f3\\u07fd\\u0816-\\u0819\\u081b-\\u0823\\u0825-\\u0827\\u0829-\\u082d\\u0859-\\u085b\\u0897-\\u089f\\u08ca-\\u08e1\\u08e3-\\u0903\\u093a-\\u093c\\u093e-\\u094f\\u0951-\\u0957\\u0962\\u0963\\u0966-\\u096f\\u0981-\\u0983\\u09bc\\u09be-\\u09c4\\u09c7\\u09c8\\u09cb-\\u09cd\\u09d7\\u09e2\\u09e3\\u09e6-\\u09ef\\u09fe\\u0a01-\\u0a03\\u0a3c\\u0a3e-\\u0a42\\u0a47\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a66-\\u0a71\\u0a75\\u0a81-\\u0a83\\u0abc\\u0abe-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ae2\\u0ae3\\u0ae6-\\u0aef\\u0afa-\\u0aff\\u0b01-\\u0b03\\u0b3c\\u0b3e-\\u0b44\\u0b47\\u0b48\\u0b4b-\\u0b4d\\u0b55-\\u0b57\\u0b62\\u0b63\\u0b66-\\u0b6f\\u0b82\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd7\\u0be6-\\u0bef\\u0c00-\\u0c04\\u0c3c\\u0c3e-\\u0c44\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55\\u0c56\\u0c62\\u0c63\\u0c66-\\u0c6f\\u0c81-\\u0c83\\u0cbc\\u0cbe-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5\\u0cd6\\u0ce2\\u0ce3\\u0ce6-\\u0cef\\u0cf3\\u0d00-\\u0d03\\u0d3b\\u0d3c\\u0d3e-\\u0d44\\u0d46-\\u0d48\\u0d4a-\\u0d4d\\u0d57\\u0d62\\u0d63\\u0d66-\\u0d6f\\u0d81-\\u0d83\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0de6-\\u0def\\u0df2\\u0df3\\u0e31\\u0e34-\\u0e3a\\u0e47-\\u0e4e\\u0e50-\\u0e59\\u0eb1\\u0eb4-\\u0ebc\\u0ec8-\\u0ece\\u0ed0-\\u0ed9\\u0f18\\u0f19\\u0f20-\\u0f29\\u0f35\\u0f37\\u0f39\\u0f3e\\u0f3f\\u0f71-\\u0f84\\u0f86\\u0f87\\u0f8d-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u102b-\\u103e\\u1040-\\u1049\\u1056-\\u1059\\u105e-\\u1060\\u1062-\\u1064\\u1067-\\u106d\\u1071-\\u1074\\u1082-\\u108d\\u108f-\\u109d\\u135d-\\u135f\\u1369-\\u1371\\u1712-\\u1715\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17b4-\\u17d3\\u17dd\\u17e0-\\u17e9\\u180b-\\u180d\\u180f-\\u1819\\u18a9\\u1920-\\u192b\\u1930-\\u193b\\u1946-\\u194f\\u19d0-\\u19da\\u1a17-\\u1a1b\\u1a55-\\u1a5e\\u1a60-\\u1a7c\\u1a7f-\\u1a89\\u1a90-\\u1a99\\u1ab0-\\u1abd\\u1abf-\\u1ace\\u1b00-\\u1b04\\u1b34-\\u1b44\\u1b50-\\u1b59\\u1b6b-\\u1b73\\u1b80-\\u1b82\\u1ba1-\\u1bad\\u1bb0-\\u1bb9\\u1be6-\\u1bf3\\u1c24-\\u1c37\\u1c40-\\u1c49\\u1c50-\\u1c59\\u1cd0-\\u1cd2\\u1cd4-\\u1ce8\\u1ced\\u1cf4\\u1cf7-\\u1cf9\\u1dc0-\\u1dff\\u200c\\u200d\\u203f\\u2040\\u2054\\u20d0-\\u20dc\\u20e1\\u20e5-\\u20f0\\u2cef-\\u2cf1\\u2d7f\\u2de0-\\u2dff\\u302a-\\u302f\\u3099\\u309a\\u30fb\\ua620-\\ua629\\ua66f\\ua674-\\ua67d\\ua69e\\ua69f\\ua6f0\\ua6f1\\ua802\\ua806\\ua80b\\ua823-\\ua827\\ua82c\\ua880\\ua881\\ua8b4-\\ua8c5\\ua8d0-\\ua8d9\\ua8e0-\\ua8f1\\ua8ff-\\ua909\\ua926-\\ua92d\\ua947-\\ua953\\ua980-\\ua983\\ua9b3-\\ua9c0\\ua9d0-\\ua9d9\\ua9e5\\ua9f0-\\ua9f9\\uaa29-\\uaa36\\uaa43\\uaa4c\\uaa4d\\uaa50-\\uaa59\\uaa7b-\\uaa7d\\uaab0\\uaab2-\\uaab4\\uaab7\\uaab8\\uaabe\\uaabf\\uaac1\\uaaeb-\\uaaef\\uaaf5\\uaaf6\\uabe3-\\uabea\\uabec\\uabed\\uabf0-\\uabf9\\ufb1e\\ufe00-\\ufe0f\\ufe20-\\ufe2f\\ufe33\\ufe34\\ufe4d-\\ufe4f\\uff10-\\uff19\\uff3f\\uff65\";\n\n  // This file was generated. Do not modify manually!\n  var nonASCIIidentifierStartChars = \"\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u037f\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u052f\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05d0-\\u05ea\\u05ef-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086a\\u0870-\\u0887\\u0889-\\u088e\\u08a0-\\u08c9\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u09fc\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0af9\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c39\\u0c3d\\u0c58-\\u0c5a\\u0c5d\\u0c60\\u0c61\\u0c80\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cdd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d04-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d54-\\u0d56\\u0d5f-\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e86-\\u0e8a\\u0e8c-\\u0ea3\\u0ea5\\u0ea7-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f5\\u13f8-\\u13fd\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f8\\u1700-\\u1711\\u171f-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1878\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191e\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19b0-\\u19c9\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4c\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1c80-\\u1c8a\\u1c90-\\u1cba\\u1cbd-\\u1cbf\\u1ce9-\\u1cec\\u1cee-\\u1cf3\\u1cf5\\u1cf6\\u1cfa\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2118-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309b-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312f\\u3131-\\u318e\\u31a0-\\u31bf\\u31f0-\\u31ff\\u3400-\\u4dbf\\u4e00-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua69d\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua7cd\\ua7d0\\ua7d1\\ua7d3\\ua7d5-\\ua7dc\\ua7f2-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua8fd\\ua8fe\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\ua9e0-\\ua9e4\\ua9e6-\\ua9ef\\ua9fa-\\ua9fe\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa7e-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uab30-\\uab5a\\uab5c-\\uab69\\uab70-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc\";\n\n  // These are a run-length and offset encoded representation of the\n  // >0xffff code points that are a valid part of identifiers. The\n  // offset starts at 0x10000, and each pair of numbers represents an\n  // offset to the next range, and then a size of the range.\n\n  // Reserved word lists for various dialects of the language\n\n  var reservedWords = {\n    3: \"abstract boolean byte char class double enum export extends final float goto implements import int interface long native package private protected public short static super synchronized throws transient volatile\",\n    5: \"class enum extends super const export import\",\n    6: \"enum\",\n    strict: \"implements interface let package private protected public static yield\",\n    strictBind: \"eval arguments\"\n  };\n\n  // And the keywords\n\n  var ecma5AndLessKeywords = \"break case catch continue debugger default do else finally for function if return switch throw try var while with null true false instanceof typeof void delete new in this\";\n\n  var keywords$1 = {\n    5: ecma5AndLessKeywords,\n    \"5module\": ecma5AndLessKeywords + \" export import\",\n    6: ecma5AndLessKeywords + \" const class extends export import super\"\n  };\n\n  var keywordRelationalOperator = /^in(stanceof)?$/;\n\n  // ## Character categories\n\n  var nonASCIIidentifierStart = new RegExp(\"[\" + nonASCIIidentifierStartChars + \"]\");\n  var nonASCIIidentifier = new RegExp(\"[\" + nonASCIIidentifierStartChars + nonASCIIidentifierChars + \"]\");\n\n  // This has a complexity linear to the value of the code. The\n  // assumption is that looking up astral identifier characters is\n  // rare.\n  function isInAstralSet(code, set) {\n    var pos = 0x10000;\n    for (var i = 0; i < set.length; i += 2) {\n      pos += set[i];\n      if (pos > code) { return false }\n      pos += set[i + 1];\n      if (pos >= code) { return true }\n    }\n    return false\n  }\n\n  // Test whether a given character code starts an identifier.\n\n  function isIdentifierStart(code, astral) {\n    if (code < 65) { return code === 36 }\n    if (code < 91) { return true }\n    if (code < 97) { return code === 95 }\n    if (code < 123) { return true }\n    if (code <= 0xffff) { return code >= 0xaa && nonASCIIidentifierStart.test(String.fromCharCode(code)) }\n    if (astral === false) { return false }\n    return isInAstralSet(code, astralIdentifierStartCodes)\n  }\n\n  // Test whether a given character is part of an identifier.\n\n  function isIdentifierChar(code, astral) {\n    if (code < 48) { return code === 36 }\n    if (code < 58) { return true }\n    if (code < 65) { return false }\n    if (code < 91) { return true }\n    if (code < 97) { return code === 95 }\n    if (code < 123) { return true }\n    if (code <= 0xffff) { return code >= 0xaa && nonASCIIidentifier.test(String.fromCharCode(code)) }\n    if (astral === false) { return false }\n    return isInAstralSet(code, astralIdentifierStartCodes) || isInAstralSet(code, astralIdentifierCodes)\n  }\n\n  // ## Token types\n\n  // The assignment of fine-grained, information-carrying type objects\n  // allows the tokenizer to store the information it has about a\n  // token in a way that is very cheap for the parser to look up.\n\n  // All token type variables start with an underscore, to make them\n  // easy to recognize.\n\n  // The `beforeExpr` property is used to disambiguate between regular\n  // expressions and divisions. It is set on all token types that can\n  // be followed by an expression (thus, a slash after them would be a\n  // regular expression).\n  //\n  // The `startsExpr` property is used to check if the token ends a\n  // `yield` expression. It is set on all token types that either can\n  // directly start an expression (like a quotation mark) or can\n  // continue an expression (like the body of a string).\n  //\n  // `isLoop` marks a keyword as starting a loop, which is important\n  // to know when parsing a label, in order to allow or disallow\n  // continue jumps to that label.\n\n  var TokenType = function TokenType(label, conf) {\n    if ( conf === void 0 ) conf = {};\n\n    this.label = label;\n    this.keyword = conf.keyword;\n    this.beforeExpr = !!conf.beforeExpr;\n    this.startsExpr = !!conf.startsExpr;\n    this.isLoop = !!conf.isLoop;\n    this.isAssign = !!conf.isAssign;\n    this.prefix = !!conf.prefix;\n    this.postfix = !!conf.postfix;\n    this.binop = conf.binop || null;\n    this.updateContext = null;\n  };\n\n  function binop(name, prec) {\n    return new TokenType(name, {beforeExpr: true, binop: prec})\n  }\n  var beforeExpr = {beforeExpr: true}, startsExpr = {startsExpr: true};\n\n  // Map keyword names to token types.\n\n  var keywords = {};\n\n  // Succinct definitions of keyword token types\n  function kw(name, options) {\n    if ( options === void 0 ) options = {};\n\n    options.keyword = name;\n    return keywords[name] = new TokenType(name, options)\n  }\n\n  var types$1 = {\n    num: new TokenType(\"num\", startsExpr),\n    regexp: new TokenType(\"regexp\", startsExpr),\n    string: new TokenType(\"string\", startsExpr),\n    name: new TokenType(\"name\", startsExpr),\n    privateId: new TokenType(\"privateId\", startsExpr),\n    eof: new TokenType(\"eof\"),\n\n    // Punctuation token types.\n    bracketL: new TokenType(\"[\", {beforeExpr: true, startsExpr: true}),\n    bracketR: new TokenType(\"]\"),\n    braceL: new TokenType(\"{\", {beforeExpr: true, startsExpr: true}),\n    braceR: new TokenType(\"}\"),\n    parenL: new TokenType(\"(\", {beforeExpr: true, startsExpr: true}),\n    parenR: new TokenType(\")\"),\n    comma: new TokenType(\",\", beforeExpr),\n    semi: new TokenType(\";\", beforeExpr),\n    colon: new TokenType(\":\", beforeExpr),\n    dot: new TokenType(\".\"),\n    question: new TokenType(\"?\", beforeExpr),\n    questionDot: new TokenType(\"?.\"),\n    arrow: new TokenType(\"=>\", beforeExpr),\n    template: new TokenType(\"template\"),\n    invalidTemplate: new TokenType(\"invalidTemplate\"),\n    ellipsis: new TokenType(\"...\", beforeExpr),\n    backQuote: new TokenType(\"`\", startsExpr),\n    dollarBraceL: new TokenType(\"${\", {beforeExpr: true, startsExpr: true}),\n\n    // Operators. These carry several kinds of properties to help the\n    // parser use them properly (the presence of these properties is\n    // what categorizes them as operators).\n    //\n    // `binop`, when present, specifies that this operator is a binary\n    // operator, and will refer to its precedence.\n    //\n    // `prefix` and `postfix` mark the operator as a prefix or postfix\n    // unary operator.\n    //\n    // `isAssign` marks all of `=`, `+=`, `-=` etcetera, which act as\n    // binary operators with a very low precedence, that should result\n    // in AssignmentExpression nodes.\n\n    eq: new TokenType(\"=\", {beforeExpr: true, isAssign: true}),\n    assign: new TokenType(\"_=\", {beforeExpr: true, isAssign: true}),\n    incDec: new TokenType(\"++/--\", {prefix: true, postfix: true, startsExpr: true}),\n    prefix: new TokenType(\"!/~\", {beforeExpr: true, prefix: true, startsExpr: true}),\n    logicalOR: binop(\"||\", 1),\n    logicalAND: binop(\"&&\", 2),\n    bitwiseOR: binop(\"|\", 3),\n    bitwiseXOR: binop(\"^\", 4),\n    bitwiseAND: binop(\"&\", 5),\n    equality: binop(\"==/!=/===/!==\", 6),\n    relational: binop(\"</>/<=/>=\", 7),\n    bitShift: binop(\"<</>>/>>>\", 8),\n    plusMin: new TokenType(\"+/-\", {beforeExpr: true, binop: 9, prefix: true, startsExpr: true}),\n    modulo: binop(\"%\", 10),\n    star: binop(\"*\", 10),\n    slash: binop(\"/\", 10),\n    starstar: new TokenType(\"**\", {beforeExpr: true}),\n    coalesce: binop(\"??\", 1),\n\n    // Keyword token types.\n    _break: kw(\"break\"),\n    _case: kw(\"case\", beforeExpr),\n    _catch: kw(\"catch\"),\n    _continue: kw(\"continue\"),\n    _debugger: kw(\"debugger\"),\n    _default: kw(\"default\", beforeExpr),\n    _do: kw(\"do\", {isLoop: true, beforeExpr: true}),\n    _else: kw(\"else\", beforeExpr),\n    _finally: kw(\"finally\"),\n    _for: kw(\"for\", {isLoop: true}),\n    _function: kw(\"function\", startsExpr),\n    _if: kw(\"if\"),\n    _return: kw(\"return\", beforeExpr),\n    _switch: kw(\"switch\"),\n    _throw: kw(\"throw\", beforeExpr),\n    _try: kw(\"try\"),\n    _var: kw(\"var\"),\n    _const: kw(\"const\"),\n    _while: kw(\"while\", {isLoop: true}),\n    _with: kw(\"with\"),\n    _new: kw(\"new\", {beforeExpr: true, startsExpr: true}),\n    _this: kw(\"this\", startsExpr),\n    _super: kw(\"super\", startsExpr),\n    _class: kw(\"class\", startsExpr),\n    _extends: kw(\"extends\", beforeExpr),\n    _export: kw(\"export\"),\n    _import: kw(\"import\", startsExpr),\n    _null: kw(\"null\", startsExpr),\n    _true: kw(\"true\", startsExpr),\n    _false: kw(\"false\", startsExpr),\n    _in: kw(\"in\", {beforeExpr: true, binop: 7}),\n    _instanceof: kw(\"instanceof\", {beforeExpr: true, binop: 7}),\n    _typeof: kw(\"typeof\", {beforeExpr: true, prefix: true, startsExpr: true}),\n    _void: kw(\"void\", {beforeExpr: true, prefix: true, startsExpr: true}),\n    _delete: kw(\"delete\", {beforeExpr: true, prefix: true, startsExpr: true})\n  };\n\n  // Matches a whole line break (where CRLF is considered a single\n  // line break). Used to count lines.\n\n  var lineBreak = /\\r\\n?|\\n|\\u2028|\\u2029/;\n  var lineBreakG = new RegExp(lineBreak.source, \"g\");\n\n  function isNewLine(code) {\n    return code === 10 || code === 13 || code === 0x2028 || code === 0x2029\n  }\n\n  function nextLineBreak(code, from, end) {\n    if ( end === void 0 ) end = code.length;\n\n    for (var i = from; i < end; i++) {\n      var next = code.charCodeAt(i);\n      if (isNewLine(next))\n        { return i < end - 1 && next === 13 && code.charCodeAt(i + 1) === 10 ? i + 2 : i + 1 }\n    }\n    return -1\n  }\n\n  var nonASCIIwhitespace = /[\\u1680\\u2000-\\u200a\\u202f\\u205f\\u3000\\ufeff]/;\n\n  var skipWhiteSpace = /(?:\\s|\\/\\/.*|\\/\\*[^]*?\\*\\/)*/g;\n\n  var ref = Object.prototype;\n  var hasOwnProperty = ref.hasOwnProperty;\n  var toString = ref.toString;\n\n  var hasOwn = Object.hasOwn || (function (obj, propName) { return (\n    hasOwnProperty.call(obj, propName)\n  ); });\n\n  var isArray = Array.isArray || (function (obj) { return (\n    toString.call(obj) === \"[object Array]\"\n  ); });\n\n  var regexpCache = Object.create(null);\n\n  function wordsRegexp(words) {\n    return regexpCache[words] || (regexpCache[words] = new RegExp(\"^(?:\" + words.replace(/ /g, \"|\") + \")$\"))\n  }\n\n  function codePointToString(code) {\n    // UTF-16 Decoding\n    if (code <= 0xFFFF) { return String.fromCharCode(code) }\n    code -= 0x10000;\n    return String.fromCharCode((code >> 10) + 0xD800, (code & 1023) + 0xDC00)\n  }\n\n  var loneSurrogate = /(?:[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])/;\n\n  // These are used when `options.locations` is on, for the\n  // `startLoc` and `endLoc` properties.\n\n  var Position = function Position(line, col) {\n    this.line = line;\n    this.column = col;\n  };\n\n  Position.prototype.offset = function offset (n) {\n    return new Position(this.line, this.column + n)\n  };\n\n  var SourceLocation = function SourceLocation(p, start, end) {\n    this.start = start;\n    this.end = end;\n    if (p.sourceFile !== null) { this.source = p.sourceFile; }\n  };\n\n  // The `getLineInfo` function is mostly useful when the\n  // `locations` option is off (for performance reasons) and you\n  // want to find the line/column position for a given character\n  // offset. `input` should be the code string that the offset refers\n  // into.\n\n  function getLineInfo(input, offset) {\n    for (var line = 1, cur = 0;;) {\n      var nextBreak = nextLineBreak(input, cur, offset);\n      if (nextBreak < 0) { return new Position(line, offset - cur) }\n      ++line;\n      cur = nextBreak;\n    }\n  }\n\n  // A second argument must be given to configure the parser process.\n  // These options are recognized (only `ecmaVersion` is required):\n\n  var defaultOptions = {\n    // `ecmaVersion` indicates the ECMAScript version to parse. Must be\n    // either 3, 5, 6 (or 2015), 7 (2016), 8 (2017), 9 (2018), 10\n    // (2019), 11 (2020), 12 (2021), 13 (2022), 14 (2023), or `\"latest\"`\n    // (the latest version the library supports). This influences\n    // support for strict mode, the set of reserved words, and support\n    // for new syntax features.\n    ecmaVersion: null,\n    // `sourceType` indicates the mode the code should be parsed in.\n    // Can be either `\"script\"` or `\"module\"`. This influences global\n    // strict mode and parsing of `import` and `export` declarations.\n    sourceType: \"script\",\n    // `onInsertedSemicolon` can be a callback that will be called when\n    // a semicolon is automatically inserted. It will be passed the\n    // position of the inserted semicolon as an offset, and if\n    // `locations` is enabled, it is given the location as a `{line,\n    // column}` object as second argument.\n    onInsertedSemicolon: null,\n    // `onTrailingComma` is similar to `onInsertedSemicolon`, but for\n    // trailing commas.\n    onTrailingComma: null,\n    // By default, reserved words are only enforced if ecmaVersion >= 5.\n    // Set `allowReserved` to a boolean value to explicitly turn this on\n    // an off. When this option has the value \"never\", reserved words\n    // and keywords can also not be used as property names.\n    allowReserved: null,\n    // When enabled, a return at the top level is not considered an\n    // error.\n    allowReturnOutsideFunction: false,\n    // When enabled, import/export statements are not constrained to\n    // appearing at the top of the program, and an import.meta expression\n    // in a script isn't considered an error.\n    allowImportExportEverywhere: false,\n    // By default, await identifiers are allowed to appear at the top-level scope only if ecmaVersion >= 2022.\n    // When enabled, await identifiers are allowed to appear at the top-level scope,\n    // but they are still not allowed in non-async functions.\n    allowAwaitOutsideFunction: null,\n    // When enabled, super identifiers are not constrained to\n    // appearing in methods and do not raise an error when they appear elsewhere.\n    allowSuperOutsideMethod: null,\n    // When enabled, hashbang directive in the beginning of file is\n    // allowed and treated as a line comment. Enabled by default when\n    // `ecmaVersion` >= 2023.\n    allowHashBang: false,\n    // By default, the parser will verify that private properties are\n    // only used in places where they are valid and have been declared.\n    // Set this to false to turn such checks off.\n    checkPrivateFields: true,\n    // When `locations` is on, `loc` properties holding objects with\n    // `start` and `end` properties in `{line, column}` form (with\n    // line being 1-based and column 0-based) will be attached to the\n    // nodes.\n    locations: false,\n    // A function can be passed as `onToken` option, which will\n    // cause Acorn to call that function with object in the same\n    // format as tokens returned from `tokenizer().getToken()`. Note\n    // that you are not allowed to call the parser from the\n    // callback—that will corrupt its internal state.\n    onToken: null,\n    // A function can be passed as `onComment` option, which will\n    // cause Acorn to call that function with `(block, text, start,\n    // end)` parameters whenever a comment is skipped. `block` is a\n    // boolean indicating whether this is a block (`/* */`) comment,\n    // `text` is the content of the comment, and `start` and `end` are\n    // character offsets that denote the start and end of the comment.\n    // When the `locations` option is on, two more parameters are\n    // passed, the full `{line, column}` locations of the start and\n    // end of the comments. Note that you are not allowed to call the\n    // parser from the callback—that will corrupt its internal state.\n    // When this option has an array as value, objects representing the\n    // comments are pushed to it.\n    onComment: null,\n    // Nodes have their start and end characters offsets recorded in\n    // `start` and `end` properties (directly on the node, rather than\n    // the `loc` object, which holds line/column data. To also add a\n    // [semi-standardized][range] `range` property holding a `[start,\n    // end]` array with the same numbers, set the `ranges` option to\n    // `true`.\n    //\n    // [range]: https://bugzilla.mozilla.org/show_bug.cgi?id=745678\n    ranges: false,\n    // It is possible to parse multiple files into a single AST by\n    // passing the tree produced by parsing the first file as\n    // `program` option in subsequent parses. This will add the\n    // toplevel forms of the parsed file to the `Program` (top) node\n    // of an existing parse tree.\n    program: null,\n    // When `locations` is on, you can pass this to record the source\n    // file in every node's `loc` object.\n    sourceFile: null,\n    // This value, if given, is stored in every node, whether\n    // `locations` is on or off.\n    directSourceFile: null,\n    // When enabled, parenthesized expressions are represented by\n    // (non-standard) ParenthesizedExpression nodes\n    preserveParens: false\n  };\n\n  // Interpret and default an options object\n\n  var warnedAboutEcmaVersion = false;\n\n  function getOptions(opts) {\n    var options = {};\n\n    for (var opt in defaultOptions)\n      { options[opt] = opts && hasOwn(opts, opt) ? opts[opt] : defaultOptions[opt]; }\n\n    if (options.ecmaVersion === \"latest\") {\n      options.ecmaVersion = 1e8;\n    } else if (options.ecmaVersion == null) {\n      if (!warnedAboutEcmaVersion && typeof console === \"object\" && console.warn) {\n        warnedAboutEcmaVersion = true;\n        console.warn(\"Since Acorn 8.0.0, options.ecmaVersion is required.\\nDefaulting to 2020, but this will stop working in the future.\");\n      }\n      options.ecmaVersion = 11;\n    } else if (options.ecmaVersion >= 2015) {\n      options.ecmaVersion -= 2009;\n    }\n\n    if (options.allowReserved == null)\n      { options.allowReserved = options.ecmaVersion < 5; }\n\n    if (!opts || opts.allowHashBang == null)\n      { options.allowHashBang = options.ecmaVersion >= 14; }\n\n    if (isArray(options.onToken)) {\n      var tokens = options.onToken;\n      options.onToken = function (token) { return tokens.push(token); };\n    }\n    if (isArray(options.onComment))\n      { options.onComment = pushComment(options, options.onComment); }\n\n    return options\n  }\n\n  function pushComment(options, array) {\n    return function(block, text, start, end, startLoc, endLoc) {\n      var comment = {\n        type: block ? \"Block\" : \"Line\",\n        value: text,\n        start: start,\n        end: end\n      };\n      if (options.locations)\n        { comment.loc = new SourceLocation(this, startLoc, endLoc); }\n      if (options.ranges)\n        { comment.range = [start, end]; }\n      array.push(comment);\n    }\n  }\n\n  // Each scope gets a bitset that may contain these flags\n  var\n      SCOPE_TOP = 1,\n      SCOPE_FUNCTION = 2,\n      SCOPE_ASYNC = 4,\n      SCOPE_GENERATOR = 8,\n      SCOPE_ARROW = 16,\n      SCOPE_SIMPLE_CATCH = 32,\n      SCOPE_SUPER = 64,\n      SCOPE_DIRECT_SUPER = 128,\n      SCOPE_CLASS_STATIC_BLOCK = 256,\n      SCOPE_VAR = SCOPE_TOP | SCOPE_FUNCTION | SCOPE_CLASS_STATIC_BLOCK;\n\n  function functionFlags(async, generator) {\n    return SCOPE_FUNCTION | (async ? SCOPE_ASYNC : 0) | (generator ? SCOPE_GENERATOR : 0)\n  }\n\n  // Used in checkLVal* and declareName to determine the type of a binding\n  var\n      BIND_NONE = 0, // Not a binding\n      BIND_VAR = 1, // Var-style binding\n      BIND_LEXICAL = 2, // Let- or const-style binding\n      BIND_FUNCTION = 3, // Function declaration\n      BIND_SIMPLE_CATCH = 4, // Simple (identifier pattern) catch binding\n      BIND_OUTSIDE = 5; // Special case for function names as bound inside the function\n\n  var Parser = function Parser(options, input, startPos) {\n    this.options = options = getOptions(options);\n    this.sourceFile = options.sourceFile;\n    this.keywords = wordsRegexp(keywords$1[options.ecmaVersion >= 6 ? 6 : options.sourceType === \"module\" ? \"5module\" : 5]);\n    var reserved = \"\";\n    if (options.allowReserved !== true) {\n      reserved = reservedWords[options.ecmaVersion >= 6 ? 6 : options.ecmaVersion === 5 ? 5 : 3];\n      if (options.sourceType === \"module\") { reserved += \" await\"; }\n    }\n    this.reservedWords = wordsRegexp(reserved);\n    var reservedStrict = (reserved ? reserved + \" \" : \"\") + reservedWords.strict;\n    this.reservedWordsStrict = wordsRegexp(reservedStrict);\n    this.reservedWordsStrictBind = wordsRegexp(reservedStrict + \" \" + reservedWords.strictBind);\n    this.input = String(input);\n\n    // Used to signal to callers of `readWord1` whether the word\n    // contained any escape sequences. This is needed because words with\n    // escape sequences must not be interpreted as keywords.\n    this.containsEsc = false;\n\n    // Set up token state\n\n    // The current position of the tokenizer in the input.\n    if (startPos) {\n      this.pos = startPos;\n      this.lineStart = this.input.lastIndexOf(\"\\n\", startPos - 1) + 1;\n      this.curLine = this.input.slice(0, this.lineStart).split(lineBreak).length;\n    } else {\n      this.pos = this.lineStart = 0;\n      this.curLine = 1;\n    }\n\n    // Properties of the current token:\n    // Its type\n    this.type = types$1.eof;\n    // For tokens that include more information than their type, the value\n    this.value = null;\n    // Its start and end offset\n    this.start = this.end = this.pos;\n    // And, if locations are used, the {line, column} object\n    // corresponding to those offsets\n    this.startLoc = this.endLoc = this.curPosition();\n\n    // Position information for the previous token\n    this.lastTokEndLoc = this.lastTokStartLoc = null;\n    this.lastTokStart = this.lastTokEnd = this.pos;\n\n    // The context stack is used to superficially track syntactic\n    // context to predict whether a regular expression is allowed in a\n    // given position.\n    this.context = this.initialContext();\n    this.exprAllowed = true;\n\n    // Figure out if it's a module code.\n    this.inModule = options.sourceType === \"module\";\n    this.strict = this.inModule || this.strictDirective(this.pos);\n\n    // Used to signify the start of a potential arrow function\n    this.potentialArrowAt = -1;\n    this.potentialArrowInForAwait = false;\n\n    // Positions to delayed-check that yield/await does not exist in default parameters.\n    this.yieldPos = this.awaitPos = this.awaitIdentPos = 0;\n    // Labels in scope.\n    this.labels = [];\n    // Thus-far undefined exports.\n    this.undefinedExports = Object.create(null);\n\n    // If enabled, skip leading hashbang line.\n    if (this.pos === 0 && options.allowHashBang && this.input.slice(0, 2) === \"#!\")\n      { this.skipLineComment(2); }\n\n    // Scope tracking for duplicate variable names (see scope.js)\n    this.scopeStack = [];\n    this.enterScope(SCOPE_TOP);\n\n    // For RegExp validation\n    this.regexpState = null;\n\n    // The stack of private names.\n    // Each element has two properties: 'declared' and 'used'.\n    // When it exited from the outermost class definition, all used private names must be declared.\n    this.privateNameStack = [];\n  };\n\n  var prototypeAccessors = { inFunction: { configurable: true },inGenerator: { configurable: true },inAsync: { configurable: true },canAwait: { configurable: true },allowSuper: { configurable: true },allowDirectSuper: { configurable: true },treatFunctionsAsVar: { configurable: true },allowNewDotTarget: { configurable: true },inClassStaticBlock: { configurable: true } };\n\n  Parser.prototype.parse = function parse () {\n    var node = this.options.program || this.startNode();\n    this.nextToken();\n    return this.parseTopLevel(node)\n  };\n\n  prototypeAccessors.inFunction.get = function () { return (this.currentVarScope().flags & SCOPE_FUNCTION) > 0 };\n\n  prototypeAccessors.inGenerator.get = function () { return (this.currentVarScope().flags & SCOPE_GENERATOR) > 0 && !this.currentVarScope().inClassFieldInit };\n\n  prototypeAccessors.inAsync.get = function () { return (this.currentVarScope().flags & SCOPE_ASYNC) > 0 && !this.currentVarScope().inClassFieldInit };\n\n  prototypeAccessors.canAwait.get = function () {\n    for (var i = this.scopeStack.length - 1; i >= 0; i--) {\n      var scope = this.scopeStack[i];\n      if (scope.inClassFieldInit || scope.flags & SCOPE_CLASS_STATIC_BLOCK) { return false }\n      if (scope.flags & SCOPE_FUNCTION) { return (scope.flags & SCOPE_ASYNC) > 0 }\n    }\n    return (this.inModule && this.options.ecmaVersion >= 13) || this.options.allowAwaitOutsideFunction\n  };\n\n  prototypeAccessors.allowSuper.get = function () {\n    var ref = this.currentThisScope();\n      var flags = ref.flags;\n      var inClassFieldInit = ref.inClassFieldInit;\n    return (flags & SCOPE_SUPER) > 0 || inClassFieldInit || this.options.allowSuperOutsideMethod\n  };\n\n  prototypeAccessors.allowDirectSuper.get = function () { return (this.currentThisScope().flags & SCOPE_DIRECT_SUPER) > 0 };\n\n  prototypeAccessors.treatFunctionsAsVar.get = function () { return this.treatFunctionsAsVarInScope(this.currentScope()) };\n\n  prototypeAccessors.allowNewDotTarget.get = function () {\n    var ref = this.currentThisScope();\n      var flags = ref.flags;\n      var inClassFieldInit = ref.inClassFieldInit;\n    return (flags & (SCOPE_FUNCTION | SCOPE_CLASS_STATIC_BLOCK)) > 0 || inClassFieldInit\n  };\n\n  prototypeAccessors.inClassStaticBlock.get = function () {\n    return (this.currentVarScope().flags & SCOPE_CLASS_STATIC_BLOCK) > 0\n  };\n\n  Parser.extend = function extend () {\n      var plugins = [], len = arguments.length;\n      while ( len-- ) plugins[ len ] = arguments[ len ];\n\n    var cls = this;\n    for (var i = 0; i < plugins.length; i++) { cls = plugins[i](cls); }\n    return cls\n  };\n\n  Parser.parse = function parse (input, options) {\n    return new this(options, input).parse()\n  };\n\n  Parser.parseExpressionAt = function parseExpressionAt (input, pos, options) {\n    var parser = new this(options, input, pos);\n    parser.nextToken();\n    return parser.parseExpression()\n  };\n\n  Parser.tokenizer = function tokenizer (input, options) {\n    return new this(options, input)\n  };\n\n  Object.defineProperties( Parser.prototype, prototypeAccessors );\n\n  var pp$9 = Parser.prototype;\n\n  // ## Parser utilities\n\n  var literal = /^(?:'((?:\\\\[^]|[^'\\\\])*?)'|\"((?:\\\\[^]|[^\"\\\\])*?)\")/;\n  pp$9.strictDirective = function(start) {\n    if (this.options.ecmaVersion < 5) { return false }\n    for (;;) {\n      // Try to find string literal.\n      skipWhiteSpace.lastIndex = start;\n      start += skipWhiteSpace.exec(this.input)[0].length;\n      var match = literal.exec(this.input.slice(start));\n      if (!match) { return false }\n      if ((match[1] || match[2]) === \"use strict\") {\n        skipWhiteSpace.lastIndex = start + match[0].length;\n        var spaceAfter = skipWhiteSpace.exec(this.input), end = spaceAfter.index + spaceAfter[0].length;\n        var next = this.input.charAt(end);\n        return next === \";\" || next === \"}\" ||\n          (lineBreak.test(spaceAfter[0]) &&\n           !(/[(`.[+\\-/*%<>=,?^&]/.test(next) || next === \"!\" && this.input.charAt(end + 1) === \"=\"))\n      }\n      start += match[0].length;\n\n      // Skip semicolon, if any.\n      skipWhiteSpace.lastIndex = start;\n      start += skipWhiteSpace.exec(this.input)[0].length;\n      if (this.input[start] === \";\")\n        { start++; }\n    }\n  };\n\n  // Predicate that tests whether the next token is of the given\n  // type, and if yes, consumes it as a side effect.\n\n  pp$9.eat = function(type) {\n    if (this.type === type) {\n      this.next();\n      return true\n    } else {\n      return false\n    }\n  };\n\n  // Tests whether parsed token is a contextual keyword.\n\n  pp$9.isContextual = function(name) {\n    return this.type === types$1.name && this.value === name && !this.containsEsc\n  };\n\n  // Consumes contextual keyword if possible.\n\n  pp$9.eatContextual = function(name) {\n    if (!this.isContextual(name)) { return false }\n    this.next();\n    return true\n  };\n\n  // Asserts that following token is given contextual keyword.\n\n  pp$9.expectContextual = function(name) {\n    if (!this.eatContextual(name)) { this.unexpected(); }\n  };\n\n  // Test whether a semicolon can be inserted at the current position.\n\n  pp$9.canInsertSemicolon = function() {\n    return this.type === types$1.eof ||\n      this.type === types$1.braceR ||\n      lineBreak.test(this.input.slice(this.lastTokEnd, this.start))\n  };\n\n  pp$9.insertSemicolon = function() {\n    if (this.canInsertSemicolon()) {\n      if (this.options.onInsertedSemicolon)\n        { this.options.onInsertedSemicolon(this.lastTokEnd, this.lastTokEndLoc); }\n      return true\n    }\n  };\n\n  // Consume a semicolon, or, failing that, see if we are allowed to\n  // pretend that there is a semicolon at this position.\n\n  pp$9.semicolon = function() {\n    if (!this.eat(types$1.semi) && !this.insertSemicolon()) { this.unexpected(); }\n  };\n\n  pp$9.afterTrailingComma = function(tokType, notNext) {\n    if (this.type === tokType) {\n      if (this.options.onTrailingComma)\n        { this.options.onTrailingComma(this.lastTokStart, this.lastTokStartLoc); }\n      if (!notNext)\n        { this.next(); }\n      return true\n    }\n  };\n\n  // Expect a token of a given type. If found, consume it, otherwise,\n  // raise an unexpected token error.\n\n  pp$9.expect = function(type) {\n    this.eat(type) || this.unexpected();\n  };\n\n  // Raise an unexpected token error.\n\n  pp$9.unexpected = function(pos) {\n    this.raise(pos != null ? pos : this.start, \"Unexpected token\");\n  };\n\n  var DestructuringErrors = function DestructuringErrors() {\n    this.shorthandAssign =\n    this.trailingComma =\n    this.parenthesizedAssign =\n    this.parenthesizedBind =\n    this.doubleProto =\n      -1;\n  };\n\n  pp$9.checkPatternErrors = function(refDestructuringErrors, isAssign) {\n    if (!refDestructuringErrors) { return }\n    if (refDestructuringErrors.trailingComma > -1)\n      { this.raiseRecoverable(refDestructuringErrors.trailingComma, \"Comma is not permitted after the rest element\"); }\n    var parens = isAssign ? refDestructuringErrors.parenthesizedAssign : refDestructuringErrors.parenthesizedBind;\n    if (parens > -1) { this.raiseRecoverable(parens, isAssign ? \"Assigning to rvalue\" : \"Parenthesized pattern\"); }\n  };\n\n  pp$9.checkExpressionErrors = function(refDestructuringErrors, andThrow) {\n    if (!refDestructuringErrors) { return false }\n    var shorthandAssign = refDestructuringErrors.shorthandAssign;\n    var doubleProto = refDestructuringErrors.doubleProto;\n    if (!andThrow) { return shorthandAssign >= 0 || doubleProto >= 0 }\n    if (shorthandAssign >= 0)\n      { this.raise(shorthandAssign, \"Shorthand property assignments are valid only in destructuring patterns\"); }\n    if (doubleProto >= 0)\n      { this.raiseRecoverable(doubleProto, \"Redefinition of __proto__ property\"); }\n  };\n\n  pp$9.checkYieldAwaitInDefaultParams = function() {\n    if (this.yieldPos && (!this.awaitPos || this.yieldPos < this.awaitPos))\n      { this.raise(this.yieldPos, \"Yield expression cannot be a default value\"); }\n    if (this.awaitPos)\n      { this.raise(this.awaitPos, \"Await expression cannot be a default value\"); }\n  };\n\n  pp$9.isSimpleAssignTarget = function(expr) {\n    if (expr.type === \"ParenthesizedExpression\")\n      { return this.isSimpleAssignTarget(expr.expression) }\n    return expr.type === \"Identifier\" || expr.type === \"MemberExpression\"\n  };\n\n  var pp$8 = Parser.prototype;\n\n  // ### Statement parsing\n\n  // Parse a program. Initializes the parser, reads any number of\n  // statements, and wraps them in a Program node.  Optionally takes a\n  // `program` argument.  If present, the statements will be appended\n  // to its body instead of creating a new node.\n\n  pp$8.parseTopLevel = function(node) {\n    var exports = Object.create(null);\n    if (!node.body) { node.body = []; }\n    while (this.type !== types$1.eof) {\n      var stmt = this.parseStatement(null, true, exports);\n      node.body.push(stmt);\n    }\n    if (this.inModule)\n      { for (var i = 0, list = Object.keys(this.undefinedExports); i < list.length; i += 1)\n        {\n          var name = list[i];\n\n          this.raiseRecoverable(this.undefinedExports[name].start, (\"Export '\" + name + \"' is not defined\"));\n        } }\n    this.adaptDirectivePrologue(node.body);\n    this.next();\n    node.sourceType = this.options.sourceType;\n    return this.finishNode(node, \"Program\")\n  };\n\n  var loopLabel = {kind: \"loop\"}, switchLabel = {kind: \"switch\"};\n\n  pp$8.isLet = function(context) {\n    if (this.options.ecmaVersion < 6 || !this.isContextual(\"let\")) { return false }\n    skipWhiteSpace.lastIndex = this.pos;\n    var skip = skipWhiteSpace.exec(this.input);\n    var next = this.pos + skip[0].length, nextCh = this.input.charCodeAt(next);\n    // For ambiguous cases, determine if a LexicalDeclaration (or only a\n    // Statement) is allowed here. If context is not empty then only a Statement\n    // is allowed. However, `let [` is an explicit negative lookahead for\n    // ExpressionStatement, so special-case it first.\n    if (nextCh === 91 || nextCh === 92) { return true } // '[', '\\'\n    if (context) { return false }\n\n    if (nextCh === 123 || nextCh > 0xd7ff && nextCh < 0xdc00) { return true } // '{', astral\n    if (isIdentifierStart(nextCh, true)) {\n      var pos = next + 1;\n      while (isIdentifierChar(nextCh = this.input.charCodeAt(pos), true)) { ++pos; }\n      if (nextCh === 92 || nextCh > 0xd7ff && nextCh < 0xdc00) { return true }\n      var ident = this.input.slice(next, pos);\n      if (!keywordRelationalOperator.test(ident)) { return true }\n    }\n    return false\n  };\n\n  // check 'async [no LineTerminator here] function'\n  // - 'async /*foo*/ function' is OK.\n  // - 'async /*\\n*/ function' is invalid.\n  pp$8.isAsyncFunction = function() {\n    if (this.options.ecmaVersion < 8 || !this.isContextual(\"async\"))\n      { return false }\n\n    skipWhiteSpace.lastIndex = this.pos;\n    var skip = skipWhiteSpace.exec(this.input);\n    var next = this.pos + skip[0].length, after;\n    return !lineBreak.test(this.input.slice(this.pos, next)) &&\n      this.input.slice(next, next + 8) === \"function\" &&\n      (next + 8 === this.input.length ||\n       !(isIdentifierChar(after = this.input.charCodeAt(next + 8)) || after > 0xd7ff && after < 0xdc00))\n  };\n\n  // Parse a single statement.\n  //\n  // If expecting a statement and finding a slash operator, parse a\n  // regular expression literal. This is to handle cases like\n  // `if (foo) /blah/.exec(foo)`, where looking at the previous token\n  // does not help.\n\n  pp$8.parseStatement = function(context, topLevel, exports) {\n    var starttype = this.type, node = this.startNode(), kind;\n\n    if (this.isLet(context)) {\n      starttype = types$1._var;\n      kind = \"let\";\n    }\n\n    // Most types of statements are recognized by the keyword they\n    // start with. Many are trivial to parse, some require a bit of\n    // complexity.\n\n    switch (starttype) {\n    case types$1._break: case types$1._continue: return this.parseBreakContinueStatement(node, starttype.keyword)\n    case types$1._debugger: return this.parseDebuggerStatement(node)\n    case types$1._do: return this.parseDoStatement(node)\n    case types$1._for: return this.parseForStatement(node)\n    case types$1._function:\n      // Function as sole body of either an if statement or a labeled statement\n      // works, but not when it is part of a labeled statement that is the sole\n      // body of an if statement.\n      if ((context && (this.strict || context !== \"if\" && context !== \"label\")) && this.options.ecmaVersion >= 6) { this.unexpected(); }\n      return this.parseFunctionStatement(node, false, !context)\n    case types$1._class:\n      if (context) { this.unexpected(); }\n      return this.parseClass(node, true)\n    case types$1._if: return this.parseIfStatement(node)\n    case types$1._return: return this.parseReturnStatement(node)\n    case types$1._switch: return this.parseSwitchStatement(node)\n    case types$1._throw: return this.parseThrowStatement(node)\n    case types$1._try: return this.parseTryStatement(node)\n    case types$1._const: case types$1._var:\n      kind = kind || this.value;\n      if (context && kind !== \"var\") { this.unexpected(); }\n      return this.parseVarStatement(node, kind)\n    case types$1._while: return this.parseWhileStatement(node)\n    case types$1._with: return this.parseWithStatement(node)\n    case types$1.braceL: return this.parseBlock(true, node)\n    case types$1.semi: return this.parseEmptyStatement(node)\n    case types$1._export:\n    case types$1._import:\n      if (this.options.ecmaVersion > 10 && starttype === types$1._import) {\n        skipWhiteSpace.lastIndex = this.pos;\n        var skip = skipWhiteSpace.exec(this.input);\n        var next = this.pos + skip[0].length, nextCh = this.input.charCodeAt(next);\n        if (nextCh === 40 || nextCh === 46) // '(' or '.'\n          { return this.parseExpressionStatement(node, this.parseExpression()) }\n      }\n\n      if (!this.options.allowImportExportEverywhere) {\n        if (!topLevel)\n          { this.raise(this.start, \"'import' and 'export' may only appear at the top level\"); }\n        if (!this.inModule)\n          { this.raise(this.start, \"'import' and 'export' may appear only with 'sourceType: module'\"); }\n      }\n      return starttype === types$1._import ? this.parseImport(node) : this.parseExport(node, exports)\n\n      // If the statement does not start with a statement keyword or a\n      // brace, it's an ExpressionStatement or LabeledStatement. We\n      // simply start parsing an expression, and afterwards, if the\n      // next token is a colon and the expression was a simple\n      // Identifier node, we switch to interpreting it as a label.\n    default:\n      if (this.isAsyncFunction()) {\n        if (context) { this.unexpected(); }\n        this.next();\n        return this.parseFunctionStatement(node, true, !context)\n      }\n\n      var maybeName = this.value, expr = this.parseExpression();\n      if (starttype === types$1.name && expr.type === \"Identifier\" && this.eat(types$1.colon))\n        { return this.parseLabeledStatement(node, maybeName, expr, context) }\n      else { return this.parseExpressionStatement(node, expr) }\n    }\n  };\n\n  pp$8.parseBreakContinueStatement = function(node, keyword) {\n    var isBreak = keyword === \"break\";\n    this.next();\n    if (this.eat(types$1.semi) || this.insertSemicolon()) { node.label = null; }\n    else if (this.type !== types$1.name) { this.unexpected(); }\n    else {\n      node.label = this.parseIdent();\n      this.semicolon();\n    }\n\n    // Verify that there is an actual destination to break or\n    // continue to.\n    var i = 0;\n    for (; i < this.labels.length; ++i) {\n      var lab = this.labels[i];\n      if (node.label == null || lab.name === node.label.name) {\n        if (lab.kind != null && (isBreak || lab.kind === \"loop\")) { break }\n        if (node.label && isBreak) { break }\n      }\n    }\n    if (i === this.labels.length) { this.raise(node.start, \"Unsyntactic \" + keyword); }\n    return this.finishNode(node, isBreak ? \"BreakStatement\" : \"ContinueStatement\")\n  };\n\n  pp$8.parseDebuggerStatement = function(node) {\n    this.next();\n    this.semicolon();\n    return this.finishNode(node, \"DebuggerStatement\")\n  };\n\n  pp$8.parseDoStatement = function(node) {\n    this.next();\n    this.labels.push(loopLabel);\n    node.body = this.parseStatement(\"do\");\n    this.labels.pop();\n    this.expect(types$1._while);\n    node.test = this.parseParenExpression();\n    if (this.options.ecmaVersion >= 6)\n      { this.eat(types$1.semi); }\n    else\n      { this.semicolon(); }\n    return this.finishNode(node, \"DoWhileStatement\")\n  };\n\n  // Disambiguating between a `for` and a `for`/`in` or `for`/`of`\n  // loop is non-trivial. Basically, we have to parse the init `var`\n  // statement or expression, disallowing the `in` operator (see\n  // the second parameter to `parseExpression`), and then check\n  // whether the next token is `in` or `of`. When there is no init\n  // part (semicolon immediately after the opening parenthesis), it\n  // is a regular `for` loop.\n\n  pp$8.parseForStatement = function(node) {\n    this.next();\n    var awaitAt = (this.options.ecmaVersion >= 9 && this.canAwait && this.eatContextual(\"await\")) ? this.lastTokStart : -1;\n    this.labels.push(loopLabel);\n    this.enterScope(0);\n    this.expect(types$1.parenL);\n    if (this.type === types$1.semi) {\n      if (awaitAt > -1) { this.unexpected(awaitAt); }\n      return this.parseFor(node, null)\n    }\n    var isLet = this.isLet();\n    if (this.type === types$1._var || this.type === types$1._const || isLet) {\n      var init$1 = this.startNode(), kind = isLet ? \"let\" : this.value;\n      this.next();\n      this.parseVar(init$1, true, kind);\n      this.finishNode(init$1, \"VariableDeclaration\");\n      if ((this.type === types$1._in || (this.options.ecmaVersion >= 6 && this.isContextual(\"of\"))) && init$1.declarations.length === 1) {\n        if (this.options.ecmaVersion >= 9) {\n          if (this.type === types$1._in) {\n            if (awaitAt > -1) { this.unexpected(awaitAt); }\n          } else { node.await = awaitAt > -1; }\n        }\n        return this.parseForIn(node, init$1)\n      }\n      if (awaitAt > -1) { this.unexpected(awaitAt); }\n      return this.parseFor(node, init$1)\n    }\n    var startsWithLet = this.isContextual(\"let\"), isForOf = false;\n    var containsEsc = this.containsEsc;\n    var refDestructuringErrors = new DestructuringErrors;\n    var initPos = this.start;\n    var init = awaitAt > -1\n      ? this.parseExprSubscripts(refDestructuringErrors, \"await\")\n      : this.parseExpression(true, refDestructuringErrors);\n    if (this.type === types$1._in || (isForOf = this.options.ecmaVersion >= 6 && this.isContextual(\"of\"))) {\n      if (awaitAt > -1) { // implies `ecmaVersion >= 9` (see declaration of awaitAt)\n        if (this.type === types$1._in) { this.unexpected(awaitAt); }\n        node.await = true;\n      } else if (isForOf && this.options.ecmaVersion >= 8) {\n        if (init.start === initPos && !containsEsc && init.type === \"Identifier\" && init.name === \"async\") { this.unexpected(); }\n        else if (this.options.ecmaVersion >= 9) { node.await = false; }\n      }\n      if (startsWithLet && isForOf) { this.raise(init.start, \"The left-hand side of a for-of loop may not start with 'let'.\"); }\n      this.toAssignable(init, false, refDestructuringErrors);\n      this.checkLValPattern(init);\n      return this.parseForIn(node, init)\n    } else {\n      this.checkExpressionErrors(refDestructuringErrors, true);\n    }\n    if (awaitAt > -1) { this.unexpected(awaitAt); }\n    return this.parseFor(node, init)\n  };\n\n  pp$8.parseFunctionStatement = function(node, isAsync, declarationPosition) {\n    this.next();\n    return this.parseFunction(node, FUNC_STATEMENT | (declarationPosition ? 0 : FUNC_HANGING_STATEMENT), false, isAsync)\n  };\n\n  pp$8.parseIfStatement = function(node) {\n    this.next();\n    node.test = this.parseParenExpression();\n    // allow function declarations in branches, but only in non-strict mode\n    node.consequent = this.parseStatement(\"if\");\n    node.alternate = this.eat(types$1._else) ? this.parseStatement(\"if\") : null;\n    return this.finishNode(node, \"IfStatement\")\n  };\n\n  pp$8.parseReturnStatement = function(node) {\n    if (!this.inFunction && !this.options.allowReturnOutsideFunction)\n      { this.raise(this.start, \"'return' outside of function\"); }\n    this.next();\n\n    // In `return` (and `break`/`continue`), the keywords with\n    // optional arguments, we eagerly look for a semicolon or the\n    // possibility to insert one.\n\n    if (this.eat(types$1.semi) || this.insertSemicolon()) { node.argument = null; }\n    else { node.argument = this.parseExpression(); this.semicolon(); }\n    return this.finishNode(node, \"ReturnStatement\")\n  };\n\n  pp$8.parseSwitchStatement = function(node) {\n    this.next();\n    node.discriminant = this.parseParenExpression();\n    node.cases = [];\n    this.expect(types$1.braceL);\n    this.labels.push(switchLabel);\n    this.enterScope(0);\n\n    // Statements under must be grouped (by label) in SwitchCase\n    // nodes. `cur` is used to keep the node that we are currently\n    // adding statements to.\n\n    var cur;\n    for (var sawDefault = false; this.type !== types$1.braceR;) {\n      if (this.type === types$1._case || this.type === types$1._default) {\n        var isCase = this.type === types$1._case;\n        if (cur) { this.finishNode(cur, \"SwitchCase\"); }\n        node.cases.push(cur = this.startNode());\n        cur.consequent = [];\n        this.next();\n        if (isCase) {\n          cur.test = this.parseExpression();\n        } else {\n          if (sawDefault) { this.raiseRecoverable(this.lastTokStart, \"Multiple default clauses\"); }\n          sawDefault = true;\n          cur.test = null;\n        }\n        this.expect(types$1.colon);\n      } else {\n        if (!cur) { this.unexpected(); }\n        cur.consequent.push(this.parseStatement(null));\n      }\n    }\n    this.exitScope();\n    if (cur) { this.finishNode(cur, \"SwitchCase\"); }\n    this.next(); // Closing brace\n    this.labels.pop();\n    return this.finishNode(node, \"SwitchStatement\")\n  };\n\n  pp$8.parseThrowStatement = function(node) {\n    this.next();\n    if (lineBreak.test(this.input.slice(this.lastTokEnd, this.start)))\n      { this.raise(this.lastTokEnd, \"Illegal newline after throw\"); }\n    node.argument = this.parseExpression();\n    this.semicolon();\n    return this.finishNode(node, \"ThrowStatement\")\n  };\n\n  // Reused empty array added for node fields that are always empty.\n\n  var empty$1 = [];\n\n  pp$8.parseCatchClauseParam = function() {\n    var param = this.parseBindingAtom();\n    var simple = param.type === \"Identifier\";\n    this.enterScope(simple ? SCOPE_SIMPLE_CATCH : 0);\n    this.checkLValPattern(param, simple ? BIND_SIMPLE_CATCH : BIND_LEXICAL);\n    this.expect(types$1.parenR);\n\n    return param\n  };\n\n  pp$8.parseTryStatement = function(node) {\n    this.next();\n    node.block = this.parseBlock();\n    node.handler = null;\n    if (this.type === types$1._catch) {\n      var clause = this.startNode();\n      this.next();\n      if (this.eat(types$1.parenL)) {\n        clause.param = this.parseCatchClauseParam();\n      } else {\n        if (this.options.ecmaVersion < 10) { this.unexpected(); }\n        clause.param = null;\n        this.enterScope(0);\n      }\n      clause.body = this.parseBlock(false);\n      this.exitScope();\n      node.handler = this.finishNode(clause, \"CatchClause\");\n    }\n    node.finalizer = this.eat(types$1._finally) ? this.parseBlock() : null;\n    if (!node.handler && !node.finalizer)\n      { this.raise(node.start, \"Missing catch or finally clause\"); }\n    return this.finishNode(node, \"TryStatement\")\n  };\n\n  pp$8.parseVarStatement = function(node, kind, allowMissingInitializer) {\n    this.next();\n    this.parseVar(node, false, kind, allowMissingInitializer);\n    this.semicolon();\n    return this.finishNode(node, \"VariableDeclaration\")\n  };\n\n  pp$8.parseWhileStatement = function(node) {\n    this.next();\n    node.test = this.parseParenExpression();\n    this.labels.push(loopLabel);\n    node.body = this.parseStatement(\"while\");\n    this.labels.pop();\n    return this.finishNode(node, \"WhileStatement\")\n  };\n\n  pp$8.parseWithStatement = function(node) {\n    if (this.strict) { this.raise(this.start, \"'with' in strict mode\"); }\n    this.next();\n    node.object = this.parseParenExpression();\n    node.body = this.parseStatement(\"with\");\n    return this.finishNode(node, \"WithStatement\")\n  };\n\n  pp$8.parseEmptyStatement = function(node) {\n    this.next();\n    return this.finishNode(node, \"EmptyStatement\")\n  };\n\n  pp$8.parseLabeledStatement = function(node, maybeName, expr, context) {\n    for (var i$1 = 0, list = this.labels; i$1 < list.length; i$1 += 1)\n      {\n      var label = list[i$1];\n\n      if (label.name === maybeName)\n        { this.raise(expr.start, \"Label '\" + maybeName + \"' is already declared\");\n    } }\n    var kind = this.type.isLoop ? \"loop\" : this.type === types$1._switch ? \"switch\" : null;\n    for (var i = this.labels.length - 1; i >= 0; i--) {\n      var label$1 = this.labels[i];\n      if (label$1.statementStart === node.start) {\n        // Update information about previous labels on this node\n        label$1.statementStart = this.start;\n        label$1.kind = kind;\n      } else { break }\n    }\n    this.labels.push({name: maybeName, kind: kind, statementStart: this.start});\n    node.body = this.parseStatement(context ? context.indexOf(\"label\") === -1 ? context + \"label\" : context : \"label\");\n    this.labels.pop();\n    node.label = expr;\n    return this.finishNode(node, \"LabeledStatement\")\n  };\n\n  pp$8.parseExpressionStatement = function(node, expr) {\n    node.expression = expr;\n    this.semicolon();\n    return this.finishNode(node, \"ExpressionStatement\")\n  };\n\n  // Parse a semicolon-enclosed block of statements, handling `\"use\n  // strict\"` declarations when `allowStrict` is true (used for\n  // function bodies).\n\n  pp$8.parseBlock = function(createNewLexicalScope, node, exitStrict) {\n    if ( createNewLexicalScope === void 0 ) createNewLexicalScope = true;\n    if ( node === void 0 ) node = this.startNode();\n\n    node.body = [];\n    this.expect(types$1.braceL);\n    if (createNewLexicalScope) { this.enterScope(0); }\n    while (this.type !== types$1.braceR) {\n      var stmt = this.parseStatement(null);\n      node.body.push(stmt);\n    }\n    if (exitStrict) { this.strict = false; }\n    this.next();\n    if (createNewLexicalScope) { this.exitScope(); }\n    return this.finishNode(node, \"BlockStatement\")\n  };\n\n  // Parse a regular `for` loop. The disambiguation code in\n  // `parseStatement` will already have parsed the init statement or\n  // expression.\n\n  pp$8.parseFor = function(node, init) {\n    node.init = init;\n    this.expect(types$1.semi);\n    node.test = this.type === types$1.semi ? null : this.parseExpression();\n    this.expect(types$1.semi);\n    node.update = this.type === types$1.parenR ? null : this.parseExpression();\n    this.expect(types$1.parenR);\n    node.body = this.parseStatement(\"for\");\n    this.exitScope();\n    this.labels.pop();\n    return this.finishNode(node, \"ForStatement\")\n  };\n\n  // Parse a `for`/`in` and `for`/`of` loop, which are almost\n  // same from parser's perspective.\n\n  pp$8.parseForIn = function(node, init) {\n    var isForIn = this.type === types$1._in;\n    this.next();\n\n    if (\n      init.type === \"VariableDeclaration\" &&\n      init.declarations[0].init != null &&\n      (\n        !isForIn ||\n        this.options.ecmaVersion < 8 ||\n        this.strict ||\n        init.kind !== \"var\" ||\n        init.declarations[0].id.type !== \"Identifier\"\n      )\n    ) {\n      this.raise(\n        init.start,\n        ((isForIn ? \"for-in\" : \"for-of\") + \" loop variable declaration may not have an initializer\")\n      );\n    }\n    node.left = init;\n    node.right = isForIn ? this.parseExpression() : this.parseMaybeAssign();\n    this.expect(types$1.parenR);\n    node.body = this.parseStatement(\"for\");\n    this.exitScope();\n    this.labels.pop();\n    return this.finishNode(node, isForIn ? \"ForInStatement\" : \"ForOfStatement\")\n  };\n\n  // Parse a list of variable declarations.\n\n  pp$8.parseVar = function(node, isFor, kind, allowMissingInitializer) {\n    node.declarations = [];\n    node.kind = kind;\n    for (;;) {\n      var decl = this.startNode();\n      this.parseVarId(decl, kind);\n      if (this.eat(types$1.eq)) {\n        decl.init = this.parseMaybeAssign(isFor);\n      } else if (!allowMissingInitializer && kind === \"const\" && !(this.type === types$1._in || (this.options.ecmaVersion >= 6 && this.isContextual(\"of\")))) {\n        this.unexpected();\n      } else if (!allowMissingInitializer && decl.id.type !== \"Identifier\" && !(isFor && (this.type === types$1._in || this.isContextual(\"of\")))) {\n        this.raise(this.lastTokEnd, \"Complex binding patterns require an initialization value\");\n      } else {\n        decl.init = null;\n      }\n      node.declarations.push(this.finishNode(decl, \"VariableDeclarator\"));\n      if (!this.eat(types$1.comma)) { break }\n    }\n    return node\n  };\n\n  pp$8.parseVarId = function(decl, kind) {\n    decl.id = this.parseBindingAtom();\n    this.checkLValPattern(decl.id, kind === \"var\" ? BIND_VAR : BIND_LEXICAL, false);\n  };\n\n  var FUNC_STATEMENT = 1, FUNC_HANGING_STATEMENT = 2, FUNC_NULLABLE_ID = 4;\n\n  // Parse a function declaration or literal (depending on the\n  // `statement & FUNC_STATEMENT`).\n\n  // Remove `allowExpressionBody` for 7.0.0, as it is only called with false\n  pp$8.parseFunction = function(node, statement, allowExpressionBody, isAsync, forInit) {\n    this.initFunction(node);\n    if (this.options.ecmaVersion >= 9 || this.options.ecmaVersion >= 6 && !isAsync) {\n      if (this.type === types$1.star && (statement & FUNC_HANGING_STATEMENT))\n        { this.unexpected(); }\n      node.generator = this.eat(types$1.star);\n    }\n    if (this.options.ecmaVersion >= 8)\n      { node.async = !!isAsync; }\n\n    if (statement & FUNC_STATEMENT) {\n      node.id = (statement & FUNC_NULLABLE_ID) && this.type !== types$1.name ? null : this.parseIdent();\n      if (node.id && !(statement & FUNC_HANGING_STATEMENT))\n        // If it is a regular function declaration in sloppy mode, then it is\n        // subject to Annex B semantics (BIND_FUNCTION). Otherwise, the binding\n        // mode depends on properties of the current scope (see\n        // treatFunctionsAsVar).\n        { this.checkLValSimple(node.id, (this.strict || node.generator || node.async) ? this.treatFunctionsAsVar ? BIND_VAR : BIND_LEXICAL : BIND_FUNCTION); }\n    }\n\n    var oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, oldAwaitIdentPos = this.awaitIdentPos;\n    this.yieldPos = 0;\n    this.awaitPos = 0;\n    this.awaitIdentPos = 0;\n    this.enterScope(functionFlags(node.async, node.generator));\n\n    if (!(statement & FUNC_STATEMENT))\n      { node.id = this.type === types$1.name ? this.parseIdent() : null; }\n\n    this.parseFunctionParams(node);\n    this.parseFunctionBody(node, allowExpressionBody, false, forInit);\n\n    this.yieldPos = oldYieldPos;\n    this.awaitPos = oldAwaitPos;\n    this.awaitIdentPos = oldAwaitIdentPos;\n    return this.finishNode(node, (statement & FUNC_STATEMENT) ? \"FunctionDeclaration\" : \"FunctionExpression\")\n  };\n\n  pp$8.parseFunctionParams = function(node) {\n    this.expect(types$1.parenL);\n    node.params = this.parseBindingList(types$1.parenR, false, this.options.ecmaVersion >= 8);\n    this.checkYieldAwaitInDefaultParams();\n  };\n\n  // Parse a class declaration or literal (depending on the\n  // `isStatement` parameter).\n\n  pp$8.parseClass = function(node, isStatement) {\n    this.next();\n\n    // ecma-262 14.6 Class Definitions\n    // A class definition is always strict mode code.\n    var oldStrict = this.strict;\n    this.strict = true;\n\n    this.parseClassId(node, isStatement);\n    this.parseClassSuper(node);\n    var privateNameMap = this.enterClassBody();\n    var classBody = this.startNode();\n    var hadConstructor = false;\n    classBody.body = [];\n    this.expect(types$1.braceL);\n    while (this.type !== types$1.braceR) {\n      var element = this.parseClassElement(node.superClass !== null);\n      if (element) {\n        classBody.body.push(element);\n        if (element.type === \"MethodDefinition\" && element.kind === \"constructor\") {\n          if (hadConstructor) { this.raiseRecoverable(element.start, \"Duplicate constructor in the same class\"); }\n          hadConstructor = true;\n        } else if (element.key && element.key.type === \"PrivateIdentifier\" && isPrivateNameConflicted(privateNameMap, element)) {\n          this.raiseRecoverable(element.key.start, (\"Identifier '#\" + (element.key.name) + \"' has already been declared\"));\n        }\n      }\n    }\n    this.strict = oldStrict;\n    this.next();\n    node.body = this.finishNode(classBody, \"ClassBody\");\n    this.exitClassBody();\n    return this.finishNode(node, isStatement ? \"ClassDeclaration\" : \"ClassExpression\")\n  };\n\n  pp$8.parseClassElement = function(constructorAllowsSuper) {\n    if (this.eat(types$1.semi)) { return null }\n\n    var ecmaVersion = this.options.ecmaVersion;\n    var node = this.startNode();\n    var keyName = \"\";\n    var isGenerator = false;\n    var isAsync = false;\n    var kind = \"method\";\n    var isStatic = false;\n\n    if (this.eatContextual(\"static\")) {\n      // Parse static init block\n      if (ecmaVersion >= 13 && this.eat(types$1.braceL)) {\n        this.parseClassStaticBlock(node);\n        return node\n      }\n      if (this.isClassElementNameStart() || this.type === types$1.star) {\n        isStatic = true;\n      } else {\n        keyName = \"static\";\n      }\n    }\n    node.static = isStatic;\n    if (!keyName && ecmaVersion >= 8 && this.eatContextual(\"async\")) {\n      if ((this.isClassElementNameStart() || this.type === types$1.star) && !this.canInsertSemicolon()) {\n        isAsync = true;\n      } else {\n        keyName = \"async\";\n      }\n    }\n    if (!keyName && (ecmaVersion >= 9 || !isAsync) && this.eat(types$1.star)) {\n      isGenerator = true;\n    }\n    if (!keyName && !isAsync && !isGenerator) {\n      var lastValue = this.value;\n      if (this.eatContextual(\"get\") || this.eatContextual(\"set\")) {\n        if (this.isClassElementNameStart()) {\n          kind = lastValue;\n        } else {\n          keyName = lastValue;\n        }\n      }\n    }\n\n    // Parse element name\n    if (keyName) {\n      // 'async', 'get', 'set', or 'static' were not a keyword contextually.\n      // The last token is any of those. Make it the element name.\n      node.computed = false;\n      node.key = this.startNodeAt(this.lastTokStart, this.lastTokStartLoc);\n      node.key.name = keyName;\n      this.finishNode(node.key, \"Identifier\");\n    } else {\n      this.parseClassElementName(node);\n    }\n\n    // Parse element value\n    if (ecmaVersion < 13 || this.type === types$1.parenL || kind !== \"method\" || isGenerator || isAsync) {\n      var isConstructor = !node.static && checkKeyName(node, \"constructor\");\n      var allowsDirectSuper = isConstructor && constructorAllowsSuper;\n      // Couldn't move this check into the 'parseClassMethod' method for backward compatibility.\n      if (isConstructor && kind !== \"method\") { this.raise(node.key.start, \"Constructor can't have get/set modifier\"); }\n      node.kind = isConstructor ? \"constructor\" : kind;\n      this.parseClassMethod(node, isGenerator, isAsync, allowsDirectSuper);\n    } else {\n      this.parseClassField(node);\n    }\n\n    return node\n  };\n\n  pp$8.isClassElementNameStart = function() {\n    return (\n      this.type === types$1.name ||\n      this.type === types$1.privateId ||\n      this.type === types$1.num ||\n      this.type === types$1.string ||\n      this.type === types$1.bracketL ||\n      this.type.keyword\n    )\n  };\n\n  pp$8.parseClassElementName = function(element) {\n    if (this.type === types$1.privateId) {\n      if (this.value === \"constructor\") {\n        this.raise(this.start, \"Classes can't have an element named '#constructor'\");\n      }\n      element.computed = false;\n      element.key = this.parsePrivateIdent();\n    } else {\n      this.parsePropertyName(element);\n    }\n  };\n\n  pp$8.parseClassMethod = function(method, isGenerator, isAsync, allowsDirectSuper) {\n    // Check key and flags\n    var key = method.key;\n    if (method.kind === \"constructor\") {\n      if (isGenerator) { this.raise(key.start, \"Constructor can't be a generator\"); }\n      if (isAsync) { this.raise(key.start, \"Constructor can't be an async method\"); }\n    } else if (method.static && checkKeyName(method, \"prototype\")) {\n      this.raise(key.start, \"Classes may not have a static property named prototype\");\n    }\n\n    // Parse value\n    var value = method.value = this.parseMethod(isGenerator, isAsync, allowsDirectSuper);\n\n    // Check value\n    if (method.kind === \"get\" && value.params.length !== 0)\n      { this.raiseRecoverable(value.start, \"getter should have no params\"); }\n    if (method.kind === \"set\" && value.params.length !== 1)\n      { this.raiseRecoverable(value.start, \"setter should have exactly one param\"); }\n    if (method.kind === \"set\" && value.params[0].type === \"RestElement\")\n      { this.raiseRecoverable(value.params[0].start, \"Setter cannot use rest params\"); }\n\n    return this.finishNode(method, \"MethodDefinition\")\n  };\n\n  pp$8.parseClassField = function(field) {\n    if (checkKeyName(field, \"constructor\")) {\n      this.raise(field.key.start, \"Classes can't have a field named 'constructor'\");\n    } else if (field.static && checkKeyName(field, \"prototype\")) {\n      this.raise(field.key.start, \"Classes can't have a static field named 'prototype'\");\n    }\n\n    if (this.eat(types$1.eq)) {\n      // To raise SyntaxError if 'arguments' exists in the initializer.\n      var scope = this.currentThisScope();\n      var inClassFieldInit = scope.inClassFieldInit;\n      scope.inClassFieldInit = true;\n      field.value = this.parseMaybeAssign();\n      scope.inClassFieldInit = inClassFieldInit;\n    } else {\n      field.value = null;\n    }\n    this.semicolon();\n\n    return this.finishNode(field, \"PropertyDefinition\")\n  };\n\n  pp$8.parseClassStaticBlock = function(node) {\n    node.body = [];\n\n    var oldLabels = this.labels;\n    this.labels = [];\n    this.enterScope(SCOPE_CLASS_STATIC_BLOCK | SCOPE_SUPER);\n    while (this.type !== types$1.braceR) {\n      var stmt = this.parseStatement(null);\n      node.body.push(stmt);\n    }\n    this.next();\n    this.exitScope();\n    this.labels = oldLabels;\n\n    return this.finishNode(node, \"StaticBlock\")\n  };\n\n  pp$8.parseClassId = function(node, isStatement) {\n    if (this.type === types$1.name) {\n      node.id = this.parseIdent();\n      if (isStatement)\n        { this.checkLValSimple(node.id, BIND_LEXICAL, false); }\n    } else {\n      if (isStatement === true)\n        { this.unexpected(); }\n      node.id = null;\n    }\n  };\n\n  pp$8.parseClassSuper = function(node) {\n    node.superClass = this.eat(types$1._extends) ? this.parseExprSubscripts(null, false) : null;\n  };\n\n  pp$8.enterClassBody = function() {\n    var element = {declared: Object.create(null), used: []};\n    this.privateNameStack.push(element);\n    return element.declared\n  };\n\n  pp$8.exitClassBody = function() {\n    var ref = this.privateNameStack.pop();\n    var declared = ref.declared;\n    var used = ref.used;\n    if (!this.options.checkPrivateFields) { return }\n    var len = this.privateNameStack.length;\n    var parent = len === 0 ? null : this.privateNameStack[len - 1];\n    for (var i = 0; i < used.length; ++i) {\n      var id = used[i];\n      if (!hasOwn(declared, id.name)) {\n        if (parent) {\n          parent.used.push(id);\n        } else {\n          this.raiseRecoverable(id.start, (\"Private field '#\" + (id.name) + \"' must be declared in an enclosing class\"));\n        }\n      }\n    }\n  };\n\n  function isPrivateNameConflicted(privateNameMap, element) {\n    var name = element.key.name;\n    var curr = privateNameMap[name];\n\n    var next = \"true\";\n    if (element.type === \"MethodDefinition\" && (element.kind === \"get\" || element.kind === \"set\")) {\n      next = (element.static ? \"s\" : \"i\") + element.kind;\n    }\n\n    // `class { get #a(){}; static set #a(_){} }` is also conflict.\n    if (\n      curr === \"iget\" && next === \"iset\" ||\n      curr === \"iset\" && next === \"iget\" ||\n      curr === \"sget\" && next === \"sset\" ||\n      curr === \"sset\" && next === \"sget\"\n    ) {\n      privateNameMap[name] = \"true\";\n      return false\n    } else if (!curr) {\n      privateNameMap[name] = next;\n      return false\n    } else {\n      return true\n    }\n  }\n\n  function checkKeyName(node, name) {\n    var computed = node.computed;\n    var key = node.key;\n    return !computed && (\n      key.type === \"Identifier\" && key.name === name ||\n      key.type === \"Literal\" && key.value === name\n    )\n  }\n\n  // Parses module export declaration.\n\n  pp$8.parseExportAllDeclaration = function(node, exports) {\n    if (this.options.ecmaVersion >= 11) {\n      if (this.eatContextual(\"as\")) {\n        node.exported = this.parseModuleExportName();\n        this.checkExport(exports, node.exported, this.lastTokStart);\n      } else {\n        node.exported = null;\n      }\n    }\n    this.expectContextual(\"from\");\n    if (this.type !== types$1.string) { this.unexpected(); }\n    node.source = this.parseExprAtom();\n    if (this.options.ecmaVersion >= 16)\n      { node.attributes = this.parseWithClause(); }\n    this.semicolon();\n    return this.finishNode(node, \"ExportAllDeclaration\")\n  };\n\n  pp$8.parseExport = function(node, exports) {\n    this.next();\n    // export * from '...'\n    if (this.eat(types$1.star)) {\n      return this.parseExportAllDeclaration(node, exports)\n    }\n    if (this.eat(types$1._default)) { // export default ...\n      this.checkExport(exports, \"default\", this.lastTokStart);\n      node.declaration = this.parseExportDefaultDeclaration();\n      return this.finishNode(node, \"ExportDefaultDeclaration\")\n    }\n    // export var|const|let|function|class ...\n    if (this.shouldParseExportStatement()) {\n      node.declaration = this.parseExportDeclaration(node);\n      if (node.declaration.type === \"VariableDeclaration\")\n        { this.checkVariableExport(exports, node.declaration.declarations); }\n      else\n        { this.checkExport(exports, node.declaration.id, node.declaration.id.start); }\n      node.specifiers = [];\n      node.source = null;\n    } else { // export { x, y as z } [from '...']\n      node.declaration = null;\n      node.specifiers = this.parseExportSpecifiers(exports);\n      if (this.eatContextual(\"from\")) {\n        if (this.type !== types$1.string) { this.unexpected(); }\n        node.source = this.parseExprAtom();\n        if (this.options.ecmaVersion >= 16)\n          { node.attributes = this.parseWithClause(); }\n      } else {\n        for (var i = 0, list = node.specifiers; i < list.length; i += 1) {\n          // check for keywords used as local names\n          var spec = list[i];\n\n          this.checkUnreserved(spec.local);\n          // check if export is defined\n          this.checkLocalExport(spec.local);\n\n          if (spec.local.type === \"Literal\") {\n            this.raise(spec.local.start, \"A string literal cannot be used as an exported binding without `from`.\");\n          }\n        }\n\n        node.source = null;\n      }\n      this.semicolon();\n    }\n    return this.finishNode(node, \"ExportNamedDeclaration\")\n  };\n\n  pp$8.parseExportDeclaration = function(node) {\n    return this.parseStatement(null)\n  };\n\n  pp$8.parseExportDefaultDeclaration = function() {\n    var isAsync;\n    if (this.type === types$1._function || (isAsync = this.isAsyncFunction())) {\n      var fNode = this.startNode();\n      this.next();\n      if (isAsync) { this.next(); }\n      return this.parseFunction(fNode, FUNC_STATEMENT | FUNC_NULLABLE_ID, false, isAsync)\n    } else if (this.type === types$1._class) {\n      var cNode = this.startNode();\n      return this.parseClass(cNode, \"nullableID\")\n    } else {\n      var declaration = this.parseMaybeAssign();\n      this.semicolon();\n      return declaration\n    }\n  };\n\n  pp$8.checkExport = function(exports, name, pos) {\n    if (!exports) { return }\n    if (typeof name !== \"string\")\n      { name = name.type === \"Identifier\" ? name.name : name.value; }\n    if (hasOwn(exports, name))\n      { this.raiseRecoverable(pos, \"Duplicate export '\" + name + \"'\"); }\n    exports[name] = true;\n  };\n\n  pp$8.checkPatternExport = function(exports, pat) {\n    var type = pat.type;\n    if (type === \"Identifier\")\n      { this.checkExport(exports, pat, pat.start); }\n    else if (type === \"ObjectPattern\")\n      { for (var i = 0, list = pat.properties; i < list.length; i += 1)\n        {\n          var prop = list[i];\n\n          this.checkPatternExport(exports, prop);\n        } }\n    else if (type === \"ArrayPattern\")\n      { for (var i$1 = 0, list$1 = pat.elements; i$1 < list$1.length; i$1 += 1) {\n        var elt = list$1[i$1];\n\n          if (elt) { this.checkPatternExport(exports, elt); }\n      } }\n    else if (type === \"Property\")\n      { this.checkPatternExport(exports, pat.value); }\n    else if (type === \"AssignmentPattern\")\n      { this.checkPatternExport(exports, pat.left); }\n    else if (type === \"RestElement\")\n      { this.checkPatternExport(exports, pat.argument); }\n  };\n\n  pp$8.checkVariableExport = function(exports, decls) {\n    if (!exports) { return }\n    for (var i = 0, list = decls; i < list.length; i += 1)\n      {\n      var decl = list[i];\n\n      this.checkPatternExport(exports, decl.id);\n    }\n  };\n\n  pp$8.shouldParseExportStatement = function() {\n    return this.type.keyword === \"var\" ||\n      this.type.keyword === \"const\" ||\n      this.type.keyword === \"class\" ||\n      this.type.keyword === \"function\" ||\n      this.isLet() ||\n      this.isAsyncFunction()\n  };\n\n  // Parses a comma-separated list of module exports.\n\n  pp$8.parseExportSpecifier = function(exports) {\n    var node = this.startNode();\n    node.local = this.parseModuleExportName();\n\n    node.exported = this.eatContextual(\"as\") ? this.parseModuleExportName() : node.local;\n    this.checkExport(\n      exports,\n      node.exported,\n      node.exported.start\n    );\n\n    return this.finishNode(node, \"ExportSpecifier\")\n  };\n\n  pp$8.parseExportSpecifiers = function(exports) {\n    var nodes = [], first = true;\n    // export { x, y as z } [from '...']\n    this.expect(types$1.braceL);\n    while (!this.eat(types$1.braceR)) {\n      if (!first) {\n        this.expect(types$1.comma);\n        if (this.afterTrailingComma(types$1.braceR)) { break }\n      } else { first = false; }\n\n      nodes.push(this.parseExportSpecifier(exports));\n    }\n    return nodes\n  };\n\n  // Parses import declaration.\n\n  pp$8.parseImport = function(node) {\n    this.next();\n\n    // import '...'\n    if (this.type === types$1.string) {\n      node.specifiers = empty$1;\n      node.source = this.parseExprAtom();\n    } else {\n      node.specifiers = this.parseImportSpecifiers();\n      this.expectContextual(\"from\");\n      node.source = this.type === types$1.string ? this.parseExprAtom() : this.unexpected();\n    }\n    if (this.options.ecmaVersion >= 16)\n      { node.attributes = this.parseWithClause(); }\n    this.semicolon();\n    return this.finishNode(node, \"ImportDeclaration\")\n  };\n\n  // Parses a comma-separated list of module imports.\n\n  pp$8.parseImportSpecifier = function() {\n    var node = this.startNode();\n    node.imported = this.parseModuleExportName();\n\n    if (this.eatContextual(\"as\")) {\n      node.local = this.parseIdent();\n    } else {\n      this.checkUnreserved(node.imported);\n      node.local = node.imported;\n    }\n    this.checkLValSimple(node.local, BIND_LEXICAL);\n\n    return this.finishNode(node, \"ImportSpecifier\")\n  };\n\n  pp$8.parseImportDefaultSpecifier = function() {\n    // import defaultObj, { x, y as z } from '...'\n    var node = this.startNode();\n    node.local = this.parseIdent();\n    this.checkLValSimple(node.local, BIND_LEXICAL);\n    return this.finishNode(node, \"ImportDefaultSpecifier\")\n  };\n\n  pp$8.parseImportNamespaceSpecifier = function() {\n    var node = this.startNode();\n    this.next();\n    this.expectContextual(\"as\");\n    node.local = this.parseIdent();\n    this.checkLValSimple(node.local, BIND_LEXICAL);\n    return this.finishNode(node, \"ImportNamespaceSpecifier\")\n  };\n\n  pp$8.parseImportSpecifiers = function() {\n    var nodes = [], first = true;\n    if (this.type === types$1.name) {\n      nodes.push(this.parseImportDefaultSpecifier());\n      if (!this.eat(types$1.comma)) { return nodes }\n    }\n    if (this.type === types$1.star) {\n      nodes.push(this.parseImportNamespaceSpecifier());\n      return nodes\n    }\n    this.expect(types$1.braceL);\n    while (!this.eat(types$1.braceR)) {\n      if (!first) {\n        this.expect(types$1.comma);\n        if (this.afterTrailingComma(types$1.braceR)) { break }\n      } else { first = false; }\n\n      nodes.push(this.parseImportSpecifier());\n    }\n    return nodes\n  };\n\n  pp$8.parseWithClause = function() {\n    var nodes = [];\n    if (!this.eat(types$1._with)) {\n      return nodes\n    }\n    this.expect(types$1.braceL);\n    var attributeKeys = {};\n    var first = true;\n    while (!this.eat(types$1.braceR)) {\n      if (!first) {\n        this.expect(types$1.comma);\n        if (this.afterTrailingComma(types$1.braceR)) { break }\n      } else { first = false; }\n\n      var attr = this.parseImportAttribute();\n      var keyName = attr.key.type === \"Identifier\" ? attr.key.name : attr.key.value;\n      if (hasOwn(attributeKeys, keyName))\n        { this.raiseRecoverable(attr.key.start, \"Duplicate attribute key '\" + keyName + \"'\"); }\n      attributeKeys[keyName] = true;\n      nodes.push(attr);\n    }\n    return nodes\n  };\n\n  pp$8.parseImportAttribute = function() {\n    var node = this.startNode();\n    node.key = this.type === types$1.string ? this.parseExprAtom() : this.parseIdent(this.options.allowReserved !== \"never\");\n    this.expect(types$1.colon);\n    if (this.type !== types$1.string) {\n      this.unexpected();\n    }\n    node.value = this.parseExprAtom();\n    return this.finishNode(node, \"ImportAttribute\")\n  };\n\n  pp$8.parseModuleExportName = function() {\n    if (this.options.ecmaVersion >= 13 && this.type === types$1.string) {\n      var stringLiteral = this.parseLiteral(this.value);\n      if (loneSurrogate.test(stringLiteral.value)) {\n        this.raise(stringLiteral.start, \"An export name cannot include a lone surrogate.\");\n      }\n      return stringLiteral\n    }\n    return this.parseIdent(true)\n  };\n\n  // Set `ExpressionStatement#directive` property for directive prologues.\n  pp$8.adaptDirectivePrologue = function(statements) {\n    for (var i = 0; i < statements.length && this.isDirectiveCandidate(statements[i]); ++i) {\n      statements[i].directive = statements[i].expression.raw.slice(1, -1);\n    }\n  };\n  pp$8.isDirectiveCandidate = function(statement) {\n    return (\n      this.options.ecmaVersion >= 5 &&\n      statement.type === \"ExpressionStatement\" &&\n      statement.expression.type === \"Literal\" &&\n      typeof statement.expression.value === \"string\" &&\n      // Reject parenthesized strings.\n      (this.input[statement.start] === \"\\\"\" || this.input[statement.start] === \"'\")\n    )\n  };\n\n  var pp$7 = Parser.prototype;\n\n  // Convert existing expression atom to assignable pattern\n  // if possible.\n\n  pp$7.toAssignable = function(node, isBinding, refDestructuringErrors) {\n    if (this.options.ecmaVersion >= 6 && node) {\n      switch (node.type) {\n      case \"Identifier\":\n        if (this.inAsync && node.name === \"await\")\n          { this.raise(node.start, \"Cannot use 'await' as identifier inside an async function\"); }\n        break\n\n      case \"ObjectPattern\":\n      case \"ArrayPattern\":\n      case \"AssignmentPattern\":\n      case \"RestElement\":\n        break\n\n      case \"ObjectExpression\":\n        node.type = \"ObjectPattern\";\n        if (refDestructuringErrors) { this.checkPatternErrors(refDestructuringErrors, true); }\n        for (var i = 0, list = node.properties; i < list.length; i += 1) {\n          var prop = list[i];\n\n        this.toAssignable(prop, isBinding);\n          // Early error:\n          //   AssignmentRestProperty[Yield, Await] :\n          //     `...` DestructuringAssignmentTarget[Yield, Await]\n          //\n          //   It is a Syntax Error if |DestructuringAssignmentTarget| is an |ArrayLiteral| or an |ObjectLiteral|.\n          if (\n            prop.type === \"RestElement\" &&\n            (prop.argument.type === \"ArrayPattern\" || prop.argument.type === \"ObjectPattern\")\n          ) {\n            this.raise(prop.argument.start, \"Unexpected token\");\n          }\n        }\n        break\n\n      case \"Property\":\n        // AssignmentProperty has type === \"Property\"\n        if (node.kind !== \"init\") { this.raise(node.key.start, \"Object pattern can't contain getter or setter\"); }\n        this.toAssignable(node.value, isBinding);\n        break\n\n      case \"ArrayExpression\":\n        node.type = \"ArrayPattern\";\n        if (refDestructuringErrors) { this.checkPatternErrors(refDestructuringErrors, true); }\n        this.toAssignableList(node.elements, isBinding);\n        break\n\n      case \"SpreadElement\":\n        node.type = \"RestElement\";\n        this.toAssignable(node.argument, isBinding);\n        if (node.argument.type === \"AssignmentPattern\")\n          { this.raise(node.argument.start, \"Rest elements cannot have a default value\"); }\n        break\n\n      case \"AssignmentExpression\":\n        if (node.operator !== \"=\") { this.raise(node.left.end, \"Only '=' operator can be used for specifying default value.\"); }\n        node.type = \"AssignmentPattern\";\n        delete node.operator;\n        this.toAssignable(node.left, isBinding);\n        break\n\n      case \"ParenthesizedExpression\":\n        this.toAssignable(node.expression, isBinding, refDestructuringErrors);\n        break\n\n      case \"ChainExpression\":\n        this.raiseRecoverable(node.start, \"Optional chaining cannot appear in left-hand side\");\n        break\n\n      case \"MemberExpression\":\n        if (!isBinding) { break }\n\n      default:\n        this.raise(node.start, \"Assigning to rvalue\");\n      }\n    } else if (refDestructuringErrors) { this.checkPatternErrors(refDestructuringErrors, true); }\n    return node\n  };\n\n  // Convert list of expression atoms to binding list.\n\n  pp$7.toAssignableList = function(exprList, isBinding) {\n    var end = exprList.length;\n    for (var i = 0; i < end; i++) {\n      var elt = exprList[i];\n      if (elt) { this.toAssignable(elt, isBinding); }\n    }\n    if (end) {\n      var last = exprList[end - 1];\n      if (this.options.ecmaVersion === 6 && isBinding && last && last.type === \"RestElement\" && last.argument.type !== \"Identifier\")\n        { this.unexpected(last.argument.start); }\n    }\n    return exprList\n  };\n\n  // Parses spread element.\n\n  pp$7.parseSpread = function(refDestructuringErrors) {\n    var node = this.startNode();\n    this.next();\n    node.argument = this.parseMaybeAssign(false, refDestructuringErrors);\n    return this.finishNode(node, \"SpreadElement\")\n  };\n\n  pp$7.parseRestBinding = function() {\n    var node = this.startNode();\n    this.next();\n\n    // RestElement inside of a function parameter must be an identifier\n    if (this.options.ecmaVersion === 6 && this.type !== types$1.name)\n      { this.unexpected(); }\n\n    node.argument = this.parseBindingAtom();\n\n    return this.finishNode(node, \"RestElement\")\n  };\n\n  // Parses lvalue (assignable) atom.\n\n  pp$7.parseBindingAtom = function() {\n    if (this.options.ecmaVersion >= 6) {\n      switch (this.type) {\n      case types$1.bracketL:\n        var node = this.startNode();\n        this.next();\n        node.elements = this.parseBindingList(types$1.bracketR, true, true);\n        return this.finishNode(node, \"ArrayPattern\")\n\n      case types$1.braceL:\n        return this.parseObj(true)\n      }\n    }\n    return this.parseIdent()\n  };\n\n  pp$7.parseBindingList = function(close, allowEmpty, allowTrailingComma, allowModifiers) {\n    var elts = [], first = true;\n    while (!this.eat(close)) {\n      if (first) { first = false; }\n      else { this.expect(types$1.comma); }\n      if (allowEmpty && this.type === types$1.comma) {\n        elts.push(null);\n      } else if (allowTrailingComma && this.afterTrailingComma(close)) {\n        break\n      } else if (this.type === types$1.ellipsis) {\n        var rest = this.parseRestBinding();\n        this.parseBindingListItem(rest);\n        elts.push(rest);\n        if (this.type === types$1.comma) { this.raiseRecoverable(this.start, \"Comma is not permitted after the rest element\"); }\n        this.expect(close);\n        break\n      } else {\n        elts.push(this.parseAssignableListItem(allowModifiers));\n      }\n    }\n    return elts\n  };\n\n  pp$7.parseAssignableListItem = function(allowModifiers) {\n    var elem = this.parseMaybeDefault(this.start, this.startLoc);\n    this.parseBindingListItem(elem);\n    return elem\n  };\n\n  pp$7.parseBindingListItem = function(param) {\n    return param\n  };\n\n  // Parses assignment pattern around given atom if possible.\n\n  pp$7.parseMaybeDefault = function(startPos, startLoc, left) {\n    left = left || this.parseBindingAtom();\n    if (this.options.ecmaVersion < 6 || !this.eat(types$1.eq)) { return left }\n    var node = this.startNodeAt(startPos, startLoc);\n    node.left = left;\n    node.right = this.parseMaybeAssign();\n    return this.finishNode(node, \"AssignmentPattern\")\n  };\n\n  // The following three functions all verify that a node is an lvalue —\n  // something that can be bound, or assigned to. In order to do so, they perform\n  // a variety of checks:\n  //\n  // - Check that none of the bound/assigned-to identifiers are reserved words.\n  // - Record name declarations for bindings in the appropriate scope.\n  // - Check duplicate argument names, if checkClashes is set.\n  //\n  // If a complex binding pattern is encountered (e.g., object and array\n  // destructuring), the entire pattern is recursively checked.\n  //\n  // There are three versions of checkLVal*() appropriate for different\n  // circumstances:\n  //\n  // - checkLValSimple() shall be used if the syntactic construct supports\n  //   nothing other than identifiers and member expressions. Parenthesized\n  //   expressions are also correctly handled. This is generally appropriate for\n  //   constructs for which the spec says\n  //\n  //   > It is a Syntax Error if AssignmentTargetType of [the production] is not\n  //   > simple.\n  //\n  //   It is also appropriate for checking if an identifier is valid and not\n  //   defined elsewhere, like import declarations or function/class identifiers.\n  //\n  //   Examples where this is used include:\n  //     a += …;\n  //     import a from '…';\n  //   where a is the node to be checked.\n  //\n  // - checkLValPattern() shall be used if the syntactic construct supports\n  //   anything checkLValSimple() supports, as well as object and array\n  //   destructuring patterns. This is generally appropriate for constructs for\n  //   which the spec says\n  //\n  //   > It is a Syntax Error if [the production] is neither an ObjectLiteral nor\n  //   > an ArrayLiteral and AssignmentTargetType of [the production] is not\n  //   > simple.\n  //\n  //   Examples where this is used include:\n  //     (a = …);\n  //     const a = …;\n  //     try { … } catch (a) { … }\n  //   where a is the node to be checked.\n  //\n  // - checkLValInnerPattern() shall be used if the syntactic construct supports\n  //   anything checkLValPattern() supports, as well as default assignment\n  //   patterns, rest elements, and other constructs that may appear within an\n  //   object or array destructuring pattern.\n  //\n  //   As a special case, function parameters also use checkLValInnerPattern(),\n  //   as they also support defaults and rest constructs.\n  //\n  // These functions deliberately support both assignment and binding constructs,\n  // as the logic for both is exceedingly similar. If the node is the target of\n  // an assignment, then bindingType should be set to BIND_NONE. Otherwise, it\n  // should be set to the appropriate BIND_* constant, like BIND_VAR or\n  // BIND_LEXICAL.\n  //\n  // If the function is called with a non-BIND_NONE bindingType, then\n  // additionally a checkClashes object may be specified to allow checking for\n  // duplicate argument names. checkClashes is ignored if the provided construct\n  // is an assignment (i.e., bindingType is BIND_NONE).\n\n  pp$7.checkLValSimple = function(expr, bindingType, checkClashes) {\n    if ( bindingType === void 0 ) bindingType = BIND_NONE;\n\n    var isBind = bindingType !== BIND_NONE;\n\n    switch (expr.type) {\n    case \"Identifier\":\n      if (this.strict && this.reservedWordsStrictBind.test(expr.name))\n        { this.raiseRecoverable(expr.start, (isBind ? \"Binding \" : \"Assigning to \") + expr.name + \" in strict mode\"); }\n      if (isBind) {\n        if (bindingType === BIND_LEXICAL && expr.name === \"let\")\n          { this.raiseRecoverable(expr.start, \"let is disallowed as a lexically bound name\"); }\n        if (checkClashes) {\n          if (hasOwn(checkClashes, expr.name))\n            { this.raiseRecoverable(expr.start, \"Argument name clash\"); }\n          checkClashes[expr.name] = true;\n        }\n        if (bindingType !== BIND_OUTSIDE) { this.declareName(expr.name, bindingType, expr.start); }\n      }\n      break\n\n    case \"ChainExpression\":\n      this.raiseRecoverable(expr.start, \"Optional chaining cannot appear in left-hand side\");\n      break\n\n    case \"MemberExpression\":\n      if (isBind) { this.raiseRecoverable(expr.start, \"Binding member expression\"); }\n      break\n\n    case \"ParenthesizedExpression\":\n      if (isBind) { this.raiseRecoverable(expr.start, \"Binding parenthesized expression\"); }\n      return this.checkLValSimple(expr.expression, bindingType, checkClashes)\n\n    default:\n      this.raise(expr.start, (isBind ? \"Binding\" : \"Assigning to\") + \" rvalue\");\n    }\n  };\n\n  pp$7.checkLValPattern = function(expr, bindingType, checkClashes) {\n    if ( bindingType === void 0 ) bindingType = BIND_NONE;\n\n    switch (expr.type) {\n    case \"ObjectPattern\":\n      for (var i = 0, list = expr.properties; i < list.length; i += 1) {\n        var prop = list[i];\n\n      this.checkLValInnerPattern(prop, bindingType, checkClashes);\n      }\n      break\n\n    case \"ArrayPattern\":\n      for (var i$1 = 0, list$1 = expr.elements; i$1 < list$1.length; i$1 += 1) {\n        var elem = list$1[i$1];\n\n      if (elem) { this.checkLValInnerPattern(elem, bindingType, checkClashes); }\n      }\n      break\n\n    default:\n      this.checkLValSimple(expr, bindingType, checkClashes);\n    }\n  };\n\n  pp$7.checkLValInnerPattern = function(expr, bindingType, checkClashes) {\n    if ( bindingType === void 0 ) bindingType = BIND_NONE;\n\n    switch (expr.type) {\n    case \"Property\":\n      // AssignmentProperty has type === \"Property\"\n      this.checkLValInnerPattern(expr.value, bindingType, checkClashes);\n      break\n\n    case \"AssignmentPattern\":\n      this.checkLValPattern(expr.left, bindingType, checkClashes);\n      break\n\n    case \"RestElement\":\n      this.checkLValPattern(expr.argument, bindingType, checkClashes);\n      break\n\n    default:\n      this.checkLValPattern(expr, bindingType, checkClashes);\n    }\n  };\n\n  // The algorithm used to determine whether a regexp can appear at a\n  // given point in the program is loosely based on sweet.js' approach.\n  // See https://github.com/mozilla/sweet.js/wiki/design\n\n\n  var TokContext = function TokContext(token, isExpr, preserveSpace, override, generator) {\n    this.token = token;\n    this.isExpr = !!isExpr;\n    this.preserveSpace = !!preserveSpace;\n    this.override = override;\n    this.generator = !!generator;\n  };\n\n  var types = {\n    b_stat: new TokContext(\"{\", false),\n    b_expr: new TokContext(\"{\", true),\n    b_tmpl: new TokContext(\"${\", false),\n    p_stat: new TokContext(\"(\", false),\n    p_expr: new TokContext(\"(\", true),\n    q_tmpl: new TokContext(\"`\", true, true, function (p) { return p.tryReadTemplateToken(); }),\n    f_stat: new TokContext(\"function\", false),\n    f_expr: new TokContext(\"function\", true),\n    f_expr_gen: new TokContext(\"function\", true, false, null, true),\n    f_gen: new TokContext(\"function\", false, false, null, true)\n  };\n\n  var pp$6 = Parser.prototype;\n\n  pp$6.initialContext = function() {\n    return [types.b_stat]\n  };\n\n  pp$6.curContext = function() {\n    return this.context[this.context.length - 1]\n  };\n\n  pp$6.braceIsBlock = function(prevType) {\n    var parent = this.curContext();\n    if (parent === types.f_expr || parent === types.f_stat)\n      { return true }\n    if (prevType === types$1.colon && (parent === types.b_stat || parent === types.b_expr))\n      { return !parent.isExpr }\n\n    // The check for `tt.name && exprAllowed` detects whether we are\n    // after a `yield` or `of` construct. See the `updateContext` for\n    // `tt.name`.\n    if (prevType === types$1._return || prevType === types$1.name && this.exprAllowed)\n      { return lineBreak.test(this.input.slice(this.lastTokEnd, this.start)) }\n    if (prevType === types$1._else || prevType === types$1.semi || prevType === types$1.eof || prevType === types$1.parenR || prevType === types$1.arrow)\n      { return true }\n    if (prevType === types$1.braceL)\n      { return parent === types.b_stat }\n    if (prevType === types$1._var || prevType === types$1._const || prevType === types$1.name)\n      { return false }\n    return !this.exprAllowed\n  };\n\n  pp$6.inGeneratorContext = function() {\n    for (var i = this.context.length - 1; i >= 1; i--) {\n      var context = this.context[i];\n      if (context.token === \"function\")\n        { return context.generator }\n    }\n    return false\n  };\n\n  pp$6.updateContext = function(prevType) {\n    var update, type = this.type;\n    if (type.keyword && prevType === types$1.dot)\n      { this.exprAllowed = false; }\n    else if (update = type.updateContext)\n      { update.call(this, prevType); }\n    else\n      { this.exprAllowed = type.beforeExpr; }\n  };\n\n  // Used to handle edge cases when token context could not be inferred correctly during tokenization phase\n\n  pp$6.overrideContext = function(tokenCtx) {\n    if (this.curContext() !== tokenCtx) {\n      this.context[this.context.length - 1] = tokenCtx;\n    }\n  };\n\n  // Token-specific context update code\n\n  types$1.parenR.updateContext = types$1.braceR.updateContext = function() {\n    if (this.context.length === 1) {\n      this.exprAllowed = true;\n      return\n    }\n    var out = this.context.pop();\n    if (out === types.b_stat && this.curContext().token === \"function\") {\n      out = this.context.pop();\n    }\n    this.exprAllowed = !out.isExpr;\n  };\n\n  types$1.braceL.updateContext = function(prevType) {\n    this.context.push(this.braceIsBlock(prevType) ? types.b_stat : types.b_expr);\n    this.exprAllowed = true;\n  };\n\n  types$1.dollarBraceL.updateContext = function() {\n    this.context.push(types.b_tmpl);\n    this.exprAllowed = true;\n  };\n\n  types$1.parenL.updateContext = function(prevType) {\n    var statementParens = prevType === types$1._if || prevType === types$1._for || prevType === types$1._with || prevType === types$1._while;\n    this.context.push(statementParens ? types.p_stat : types.p_expr);\n    this.exprAllowed = true;\n  };\n\n  types$1.incDec.updateContext = function() {\n    // tokExprAllowed stays unchanged\n  };\n\n  types$1._function.updateContext = types$1._class.updateContext = function(prevType) {\n    if (prevType.beforeExpr && prevType !== types$1._else &&\n        !(prevType === types$1.semi && this.curContext() !== types.p_stat) &&\n        !(prevType === types$1._return && lineBreak.test(this.input.slice(this.lastTokEnd, this.start))) &&\n        !((prevType === types$1.colon || prevType === types$1.braceL) && this.curContext() === types.b_stat))\n      { this.context.push(types.f_expr); }\n    else\n      { this.context.push(types.f_stat); }\n    this.exprAllowed = false;\n  };\n\n  types$1.colon.updateContext = function() {\n    if (this.curContext().token === \"function\") { this.context.pop(); }\n    this.exprAllowed = true;\n  };\n\n  types$1.backQuote.updateContext = function() {\n    if (this.curContext() === types.q_tmpl)\n      { this.context.pop(); }\n    else\n      { this.context.push(types.q_tmpl); }\n    this.exprAllowed = false;\n  };\n\n  types$1.star.updateContext = function(prevType) {\n    if (prevType === types$1._function) {\n      var index = this.context.length - 1;\n      if (this.context[index] === types.f_expr)\n        { this.context[index] = types.f_expr_gen; }\n      else\n        { this.context[index] = types.f_gen; }\n    }\n    this.exprAllowed = true;\n  };\n\n  types$1.name.updateContext = function(prevType) {\n    var allowed = false;\n    if (this.options.ecmaVersion >= 6 && prevType !== types$1.dot) {\n      if (this.value === \"of\" && !this.exprAllowed ||\n          this.value === \"yield\" && this.inGeneratorContext())\n        { allowed = true; }\n    }\n    this.exprAllowed = allowed;\n  };\n\n  // A recursive descent parser operates by defining functions for all\n  // syntactic elements, and recursively calling those, each function\n  // advancing the input stream and returning an AST node. Precedence\n  // of constructs (for example, the fact that `!x[1]` means `!(x[1])`\n  // instead of `(!x)[1]` is handled by the fact that the parser\n  // function that parses unary prefix operators is called first, and\n  // in turn calls the function that parses `[]` subscripts — that\n  // way, it'll receive the node for `x[1]` already parsed, and wraps\n  // *that* in the unary operator node.\n  //\n  // Acorn uses an [operator precedence parser][opp] to handle binary\n  // operator precedence, because it is much more compact than using\n  // the technique outlined above, which uses different, nesting\n  // functions to specify precedence, for all of the ten binary\n  // precedence levels that JavaScript defines.\n  //\n  // [opp]: http://en.wikipedia.org/wiki/Operator-precedence_parser\n\n\n  var pp$5 = Parser.prototype;\n\n  // Check if property name clashes with already added.\n  // Object/class getters and setters are not allowed to clash —\n  // either with each other or with an init property — and in\n  // strict mode, init properties are also not allowed to be repeated.\n\n  pp$5.checkPropClash = function(prop, propHash, refDestructuringErrors) {\n    if (this.options.ecmaVersion >= 9 && prop.type === \"SpreadElement\")\n      { return }\n    if (this.options.ecmaVersion >= 6 && (prop.computed || prop.method || prop.shorthand))\n      { return }\n    var key = prop.key;\n    var name;\n    switch (key.type) {\n    case \"Identifier\": name = key.name; break\n    case \"Literal\": name = String(key.value); break\n    default: return\n    }\n    var kind = prop.kind;\n    if (this.options.ecmaVersion >= 6) {\n      if (name === \"__proto__\" && kind === \"init\") {\n        if (propHash.proto) {\n          if (refDestructuringErrors) {\n            if (refDestructuringErrors.doubleProto < 0) {\n              refDestructuringErrors.doubleProto = key.start;\n            }\n          } else {\n            this.raiseRecoverable(key.start, \"Redefinition of __proto__ property\");\n          }\n        }\n        propHash.proto = true;\n      }\n      return\n    }\n    name = \"$\" + name;\n    var other = propHash[name];\n    if (other) {\n      var redefinition;\n      if (kind === \"init\") {\n        redefinition = this.strict && other.init || other.get || other.set;\n      } else {\n        redefinition = other.init || other[kind];\n      }\n      if (redefinition)\n        { this.raiseRecoverable(key.start, \"Redefinition of property\"); }\n    } else {\n      other = propHash[name] = {\n        init: false,\n        get: false,\n        set: false\n      };\n    }\n    other[kind] = true;\n  };\n\n  // ### Expression parsing\n\n  // These nest, from the most general expression type at the top to\n  // 'atomic', nondivisible expression types at the bottom. Most of\n  // the functions will simply let the function(s) below them parse,\n  // and, *if* the syntactic construct they handle is present, wrap\n  // the AST node that the inner parser gave them in another node.\n\n  // Parse a full expression. The optional arguments are used to\n  // forbid the `in` operator (in for loops initalization expressions)\n  // and provide reference for storing '=' operator inside shorthand\n  // property assignment in contexts where both object expression\n  // and object pattern might appear (so it's possible to raise\n  // delayed syntax error at correct position).\n\n  pp$5.parseExpression = function(forInit, refDestructuringErrors) {\n    var startPos = this.start, startLoc = this.startLoc;\n    var expr = this.parseMaybeAssign(forInit, refDestructuringErrors);\n    if (this.type === types$1.comma) {\n      var node = this.startNodeAt(startPos, startLoc);\n      node.expressions = [expr];\n      while (this.eat(types$1.comma)) { node.expressions.push(this.parseMaybeAssign(forInit, refDestructuringErrors)); }\n      return this.finishNode(node, \"SequenceExpression\")\n    }\n    return expr\n  };\n\n  // Parse an assignment expression. This includes applications of\n  // operators like `+=`.\n\n  pp$5.parseMaybeAssign = function(forInit, refDestructuringErrors, afterLeftParse) {\n    if (this.isContextual(\"yield\")) {\n      if (this.inGenerator) { return this.parseYield(forInit) }\n      // The tokenizer will assume an expression is allowed after\n      // `yield`, but this isn't that kind of yield\n      else { this.exprAllowed = false; }\n    }\n\n    var ownDestructuringErrors = false, oldParenAssign = -1, oldTrailingComma = -1, oldDoubleProto = -1;\n    if (refDestructuringErrors) {\n      oldParenAssign = refDestructuringErrors.parenthesizedAssign;\n      oldTrailingComma = refDestructuringErrors.trailingComma;\n      oldDoubleProto = refDestructuringErrors.doubleProto;\n      refDestructuringErrors.parenthesizedAssign = refDestructuringErrors.trailingComma = -1;\n    } else {\n      refDestructuringErrors = new DestructuringErrors;\n      ownDestructuringErrors = true;\n    }\n\n    var startPos = this.start, startLoc = this.startLoc;\n    if (this.type === types$1.parenL || this.type === types$1.name) {\n      this.potentialArrowAt = this.start;\n      this.potentialArrowInForAwait = forInit === \"await\";\n    }\n    var left = this.parseMaybeConditional(forInit, refDestructuringErrors);\n    if (afterLeftParse) { left = afterLeftParse.call(this, left, startPos, startLoc); }\n    if (this.type.isAssign) {\n      var node = this.startNodeAt(startPos, startLoc);\n      node.operator = this.value;\n      if (this.type === types$1.eq)\n        { left = this.toAssignable(left, false, refDestructuringErrors); }\n      if (!ownDestructuringErrors) {\n        refDestructuringErrors.parenthesizedAssign = refDestructuringErrors.trailingComma = refDestructuringErrors.doubleProto = -1;\n      }\n      if (refDestructuringErrors.shorthandAssign >= left.start)\n        { refDestructuringErrors.shorthandAssign = -1; } // reset because shorthand default was used correctly\n      if (this.type === types$1.eq)\n        { this.checkLValPattern(left); }\n      else\n        { this.checkLValSimple(left); }\n      node.left = left;\n      this.next();\n      node.right = this.parseMaybeAssign(forInit);\n      if (oldDoubleProto > -1) { refDestructuringErrors.doubleProto = oldDoubleProto; }\n      return this.finishNode(node, \"AssignmentExpression\")\n    } else {\n      if (ownDestructuringErrors) { this.checkExpressionErrors(refDestructuringErrors, true); }\n    }\n    if (oldParenAssign > -1) { refDestructuringErrors.parenthesizedAssign = oldParenAssign; }\n    if (oldTrailingComma > -1) { refDestructuringErrors.trailingComma = oldTrailingComma; }\n    return left\n  };\n\n  // Parse a ternary conditional (`?:`) operator.\n\n  pp$5.parseMaybeConditional = function(forInit, refDestructuringErrors) {\n    var startPos = this.start, startLoc = this.startLoc;\n    var expr = this.parseExprOps(forInit, refDestructuringErrors);\n    if (this.checkExpressionErrors(refDestructuringErrors)) { return expr }\n    if (this.eat(types$1.question)) {\n      var node = this.startNodeAt(startPos, startLoc);\n      node.test = expr;\n      node.consequent = this.parseMaybeAssign();\n      this.expect(types$1.colon);\n      node.alternate = this.parseMaybeAssign(forInit);\n      return this.finishNode(node, \"ConditionalExpression\")\n    }\n    return expr\n  };\n\n  // Start the precedence parser.\n\n  pp$5.parseExprOps = function(forInit, refDestructuringErrors) {\n    var startPos = this.start, startLoc = this.startLoc;\n    var expr = this.parseMaybeUnary(refDestructuringErrors, false, false, forInit);\n    if (this.checkExpressionErrors(refDestructuringErrors)) { return expr }\n    return expr.start === startPos && expr.type === \"ArrowFunctionExpression\" ? expr : this.parseExprOp(expr, startPos, startLoc, -1, forInit)\n  };\n\n  // Parse binary operators with the operator precedence parsing\n  // algorithm. `left` is the left-hand side of the operator.\n  // `minPrec` provides context that allows the function to stop and\n  // defer further parser to one of its callers when it encounters an\n  // operator that has a lower precedence than the set it is parsing.\n\n  pp$5.parseExprOp = function(left, leftStartPos, leftStartLoc, minPrec, forInit) {\n    var prec = this.type.binop;\n    if (prec != null && (!forInit || this.type !== types$1._in)) {\n      if (prec > minPrec) {\n        var logical = this.type === types$1.logicalOR || this.type === types$1.logicalAND;\n        var coalesce = this.type === types$1.coalesce;\n        if (coalesce) {\n          // Handle the precedence of `tt.coalesce` as equal to the range of logical expressions.\n          // In other words, `node.right` shouldn't contain logical expressions in order to check the mixed error.\n          prec = types$1.logicalAND.binop;\n        }\n        var op = this.value;\n        this.next();\n        var startPos = this.start, startLoc = this.startLoc;\n        var right = this.parseExprOp(this.parseMaybeUnary(null, false, false, forInit), startPos, startLoc, prec, forInit);\n        var node = this.buildBinary(leftStartPos, leftStartLoc, left, right, op, logical || coalesce);\n        if ((logical && this.type === types$1.coalesce) || (coalesce && (this.type === types$1.logicalOR || this.type === types$1.logicalAND))) {\n          this.raiseRecoverable(this.start, \"Logical expressions and coalesce expressions cannot be mixed. Wrap either by parentheses\");\n        }\n        return this.parseExprOp(node, leftStartPos, leftStartLoc, minPrec, forInit)\n      }\n    }\n    return left\n  };\n\n  pp$5.buildBinary = function(startPos, startLoc, left, right, op, logical) {\n    if (right.type === \"PrivateIdentifier\") { this.raise(right.start, \"Private identifier can only be left side of binary expression\"); }\n    var node = this.startNodeAt(startPos, startLoc);\n    node.left = left;\n    node.operator = op;\n    node.right = right;\n    return this.finishNode(node, logical ? \"LogicalExpression\" : \"BinaryExpression\")\n  };\n\n  // Parse unary operators, both prefix and postfix.\n\n  pp$5.parseMaybeUnary = function(refDestructuringErrors, sawUnary, incDec, forInit) {\n    var startPos = this.start, startLoc = this.startLoc, expr;\n    if (this.isContextual(\"await\") && this.canAwait) {\n      expr = this.parseAwait(forInit);\n      sawUnary = true;\n    } else if (this.type.prefix) {\n      var node = this.startNode(), update = this.type === types$1.incDec;\n      node.operator = this.value;\n      node.prefix = true;\n      this.next();\n      node.argument = this.parseMaybeUnary(null, true, update, forInit);\n      this.checkExpressionErrors(refDestructuringErrors, true);\n      if (update) { this.checkLValSimple(node.argument); }\n      else if (this.strict && node.operator === \"delete\" && isLocalVariableAccess(node.argument))\n        { this.raiseRecoverable(node.start, \"Deleting local variable in strict mode\"); }\n      else if (node.operator === \"delete\" && isPrivateFieldAccess(node.argument))\n        { this.raiseRecoverable(node.start, \"Private fields can not be deleted\"); }\n      else { sawUnary = true; }\n      expr = this.finishNode(node, update ? \"UpdateExpression\" : \"UnaryExpression\");\n    } else if (!sawUnary && this.type === types$1.privateId) {\n      if ((forInit || this.privateNameStack.length === 0) && this.options.checkPrivateFields) { this.unexpected(); }\n      expr = this.parsePrivateIdent();\n      // only could be private fields in 'in', such as #x in obj\n      if (this.type !== types$1._in) { this.unexpected(); }\n    } else {\n      expr = this.parseExprSubscripts(refDestructuringErrors, forInit);\n      if (this.checkExpressionErrors(refDestructuringErrors)) { return expr }\n      while (this.type.postfix && !this.canInsertSemicolon()) {\n        var node$1 = this.startNodeAt(startPos, startLoc);\n        node$1.operator = this.value;\n        node$1.prefix = false;\n        node$1.argument = expr;\n        this.checkLValSimple(expr);\n        this.next();\n        expr = this.finishNode(node$1, \"UpdateExpression\");\n      }\n    }\n\n    if (!incDec && this.eat(types$1.starstar)) {\n      if (sawUnary)\n        { this.unexpected(this.lastTokStart); }\n      else\n        { return this.buildBinary(startPos, startLoc, expr, this.parseMaybeUnary(null, false, false, forInit), \"**\", false) }\n    } else {\n      return expr\n    }\n  };\n\n  function isLocalVariableAccess(node) {\n    return (\n      node.type === \"Identifier\" ||\n      node.type === \"ParenthesizedExpression\" && isLocalVariableAccess(node.expression)\n    )\n  }\n\n  function isPrivateFieldAccess(node) {\n    return (\n      node.type === \"MemberExpression\" && node.property.type === \"PrivateIdentifier\" ||\n      node.type === \"ChainExpression\" && isPrivateFieldAccess(node.expression) ||\n      node.type === \"ParenthesizedExpression\" && isPrivateFieldAccess(node.expression)\n    )\n  }\n\n  // Parse call, dot, and `[]`-subscript expressions.\n\n  pp$5.parseExprSubscripts = function(refDestructuringErrors, forInit) {\n    var startPos = this.start, startLoc = this.startLoc;\n    var expr = this.parseExprAtom(refDestructuringErrors, forInit);\n    if (expr.type === \"ArrowFunctionExpression\" && this.input.slice(this.lastTokStart, this.lastTokEnd) !== \")\")\n      { return expr }\n    var result = this.parseSubscripts(expr, startPos, startLoc, false, forInit);\n    if (refDestructuringErrors && result.type === \"MemberExpression\") {\n      if (refDestructuringErrors.parenthesizedAssign >= result.start) { refDestructuringErrors.parenthesizedAssign = -1; }\n      if (refDestructuringErrors.parenthesizedBind >= result.start) { refDestructuringErrors.parenthesizedBind = -1; }\n      if (refDestructuringErrors.trailingComma >= result.start) { refDestructuringErrors.trailingComma = -1; }\n    }\n    return result\n  };\n\n  pp$5.parseSubscripts = function(base, startPos, startLoc, noCalls, forInit) {\n    var maybeAsyncArrow = this.options.ecmaVersion >= 8 && base.type === \"Identifier\" && base.name === \"async\" &&\n        this.lastTokEnd === base.end && !this.canInsertSemicolon() && base.end - base.start === 5 &&\n        this.potentialArrowAt === base.start;\n    var optionalChained = false;\n\n    while (true) {\n      var element = this.parseSubscript(base, startPos, startLoc, noCalls, maybeAsyncArrow, optionalChained, forInit);\n\n      if (element.optional) { optionalChained = true; }\n      if (element === base || element.type === \"ArrowFunctionExpression\") {\n        if (optionalChained) {\n          var chainNode = this.startNodeAt(startPos, startLoc);\n          chainNode.expression = element;\n          element = this.finishNode(chainNode, \"ChainExpression\");\n        }\n        return element\n      }\n\n      base = element;\n    }\n  };\n\n  pp$5.shouldParseAsyncArrow = function() {\n    return !this.canInsertSemicolon() && this.eat(types$1.arrow)\n  };\n\n  pp$5.parseSubscriptAsyncArrow = function(startPos, startLoc, exprList, forInit) {\n    return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), exprList, true, forInit)\n  };\n\n  pp$5.parseSubscript = function(base, startPos, startLoc, noCalls, maybeAsyncArrow, optionalChained, forInit) {\n    var optionalSupported = this.options.ecmaVersion >= 11;\n    var optional = optionalSupported && this.eat(types$1.questionDot);\n    if (noCalls && optional) { this.raise(this.lastTokStart, \"Optional chaining cannot appear in the callee of new expressions\"); }\n\n    var computed = this.eat(types$1.bracketL);\n    if (computed || (optional && this.type !== types$1.parenL && this.type !== types$1.backQuote) || this.eat(types$1.dot)) {\n      var node = this.startNodeAt(startPos, startLoc);\n      node.object = base;\n      if (computed) {\n        node.property = this.parseExpression();\n        this.expect(types$1.bracketR);\n      } else if (this.type === types$1.privateId && base.type !== \"Super\") {\n        node.property = this.parsePrivateIdent();\n      } else {\n        node.property = this.parseIdent(this.options.allowReserved !== \"never\");\n      }\n      node.computed = !!computed;\n      if (optionalSupported) {\n        node.optional = optional;\n      }\n      base = this.finishNode(node, \"MemberExpression\");\n    } else if (!noCalls && this.eat(types$1.parenL)) {\n      var refDestructuringErrors = new DestructuringErrors, oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, oldAwaitIdentPos = this.awaitIdentPos;\n      this.yieldPos = 0;\n      this.awaitPos = 0;\n      this.awaitIdentPos = 0;\n      var exprList = this.parseExprList(types$1.parenR, this.options.ecmaVersion >= 8, false, refDestructuringErrors);\n      if (maybeAsyncArrow && !optional && this.shouldParseAsyncArrow()) {\n        this.checkPatternErrors(refDestructuringErrors, false);\n        this.checkYieldAwaitInDefaultParams();\n        if (this.awaitIdentPos > 0)\n          { this.raise(this.awaitIdentPos, \"Cannot use 'await' as identifier inside an async function\"); }\n        this.yieldPos = oldYieldPos;\n        this.awaitPos = oldAwaitPos;\n        this.awaitIdentPos = oldAwaitIdentPos;\n        return this.parseSubscriptAsyncArrow(startPos, startLoc, exprList, forInit)\n      }\n      this.checkExpressionErrors(refDestructuringErrors, true);\n      this.yieldPos = oldYieldPos || this.yieldPos;\n      this.awaitPos = oldAwaitPos || this.awaitPos;\n      this.awaitIdentPos = oldAwaitIdentPos || this.awaitIdentPos;\n      var node$1 = this.startNodeAt(startPos, startLoc);\n      node$1.callee = base;\n      node$1.arguments = exprList;\n      if (optionalSupported) {\n        node$1.optional = optional;\n      }\n      base = this.finishNode(node$1, \"CallExpression\");\n    } else if (this.type === types$1.backQuote) {\n      if (optional || optionalChained) {\n        this.raise(this.start, \"Optional chaining cannot appear in the tag of tagged template expressions\");\n      }\n      var node$2 = this.startNodeAt(startPos, startLoc);\n      node$2.tag = base;\n      node$2.quasi = this.parseTemplate({isTagged: true});\n      base = this.finishNode(node$2, \"TaggedTemplateExpression\");\n    }\n    return base\n  };\n\n  // Parse an atomic expression — either a single token that is an\n  // expression, an expression started by a keyword like `function` or\n  // `new`, or an expression wrapped in punctuation like `()`, `[]`,\n  // or `{}`.\n\n  pp$5.parseExprAtom = function(refDestructuringErrors, forInit, forNew) {\n    // If a division operator appears in an expression position, the\n    // tokenizer got confused, and we force it to read a regexp instead.\n    if (this.type === types$1.slash) { this.readRegexp(); }\n\n    var node, canBeArrow = this.potentialArrowAt === this.start;\n    switch (this.type) {\n    case types$1._super:\n      if (!this.allowSuper)\n        { this.raise(this.start, \"'super' keyword outside a method\"); }\n      node = this.startNode();\n      this.next();\n      if (this.type === types$1.parenL && !this.allowDirectSuper)\n        { this.raise(node.start, \"super() call outside constructor of a subclass\"); }\n      // The `super` keyword can appear at below:\n      // SuperProperty:\n      //     super [ Expression ]\n      //     super . IdentifierName\n      // SuperCall:\n      //     super ( Arguments )\n      if (this.type !== types$1.dot && this.type !== types$1.bracketL && this.type !== types$1.parenL)\n        { this.unexpected(); }\n      return this.finishNode(node, \"Super\")\n\n    case types$1._this:\n      node = this.startNode();\n      this.next();\n      return this.finishNode(node, \"ThisExpression\")\n\n    case types$1.name:\n      var startPos = this.start, startLoc = this.startLoc, containsEsc = this.containsEsc;\n      var id = this.parseIdent(false);\n      if (this.options.ecmaVersion >= 8 && !containsEsc && id.name === \"async\" && !this.canInsertSemicolon() && this.eat(types$1._function)) {\n        this.overrideContext(types.f_expr);\n        return this.parseFunction(this.startNodeAt(startPos, startLoc), 0, false, true, forInit)\n      }\n      if (canBeArrow && !this.canInsertSemicolon()) {\n        if (this.eat(types$1.arrow))\n          { return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), [id], false, forInit) }\n        if (this.options.ecmaVersion >= 8 && id.name === \"async\" && this.type === types$1.name && !containsEsc &&\n            (!this.potentialArrowInForAwait || this.value !== \"of\" || this.containsEsc)) {\n          id = this.parseIdent(false);\n          if (this.canInsertSemicolon() || !this.eat(types$1.arrow))\n            { this.unexpected(); }\n          return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), [id], true, forInit)\n        }\n      }\n      return id\n\n    case types$1.regexp:\n      var value = this.value;\n      node = this.parseLiteral(value.value);\n      node.regex = {pattern: value.pattern, flags: value.flags};\n      return node\n\n    case types$1.num: case types$1.string:\n      return this.parseLiteral(this.value)\n\n    case types$1._null: case types$1._true: case types$1._false:\n      node = this.startNode();\n      node.value = this.type === types$1._null ? null : this.type === types$1._true;\n      node.raw = this.type.keyword;\n      this.next();\n      return this.finishNode(node, \"Literal\")\n\n    case types$1.parenL:\n      var start = this.start, expr = this.parseParenAndDistinguishExpression(canBeArrow, forInit);\n      if (refDestructuringErrors) {\n        if (refDestructuringErrors.parenthesizedAssign < 0 && !this.isSimpleAssignTarget(expr))\n          { refDestructuringErrors.parenthesizedAssign = start; }\n        if (refDestructuringErrors.parenthesizedBind < 0)\n          { refDestructuringErrors.parenthesizedBind = start; }\n      }\n      return expr\n\n    case types$1.bracketL:\n      node = this.startNode();\n      this.next();\n      node.elements = this.parseExprList(types$1.bracketR, true, true, refDestructuringErrors);\n      return this.finishNode(node, \"ArrayExpression\")\n\n    case types$1.braceL:\n      this.overrideContext(types.b_expr);\n      return this.parseObj(false, refDestructuringErrors)\n\n    case types$1._function:\n      node = this.startNode();\n      this.next();\n      return this.parseFunction(node, 0)\n\n    case types$1._class:\n      return this.parseClass(this.startNode(), false)\n\n    case types$1._new:\n      return this.parseNew()\n\n    case types$1.backQuote:\n      return this.parseTemplate()\n\n    case types$1._import:\n      if (this.options.ecmaVersion >= 11) {\n        return this.parseExprImport(forNew)\n      } else {\n        return this.unexpected()\n      }\n\n    default:\n      return this.parseExprAtomDefault()\n    }\n  };\n\n  pp$5.parseExprAtomDefault = function() {\n    this.unexpected();\n  };\n\n  pp$5.parseExprImport = function(forNew) {\n    var node = this.startNode();\n\n    // Consume `import` as an identifier for `import.meta`.\n    // Because `this.parseIdent(true)` doesn't check escape sequences, it needs the check of `this.containsEsc`.\n    if (this.containsEsc) { this.raiseRecoverable(this.start, \"Escape sequence in keyword import\"); }\n    this.next();\n\n    if (this.type === types$1.parenL && !forNew) {\n      return this.parseDynamicImport(node)\n    } else if (this.type === types$1.dot) {\n      var meta = this.startNodeAt(node.start, node.loc && node.loc.start);\n      meta.name = \"import\";\n      node.meta = this.finishNode(meta, \"Identifier\");\n      return this.parseImportMeta(node)\n    } else {\n      this.unexpected();\n    }\n  };\n\n  pp$5.parseDynamicImport = function(node) {\n    this.next(); // skip `(`\n\n    // Parse node.source.\n    node.source = this.parseMaybeAssign();\n\n    if (this.options.ecmaVersion >= 16) {\n      if (!this.eat(types$1.parenR)) {\n        this.expect(types$1.comma);\n        if (!this.afterTrailingComma(types$1.parenR)) {\n          node.options = this.parseMaybeAssign();\n          if (!this.eat(types$1.parenR)) {\n            this.expect(types$1.comma);\n            if (!this.afterTrailingComma(types$1.parenR)) {\n              this.unexpected();\n            }\n          }\n        } else {\n          node.options = null;\n        }\n      } else {\n        node.options = null;\n      }\n    } else {\n      // Verify ending.\n      if (!this.eat(types$1.parenR)) {\n        var errorPos = this.start;\n        if (this.eat(types$1.comma) && this.eat(types$1.parenR)) {\n          this.raiseRecoverable(errorPos, \"Trailing comma is not allowed in import()\");\n        } else {\n          this.unexpected(errorPos);\n        }\n      }\n    }\n\n    return this.finishNode(node, \"ImportExpression\")\n  };\n\n  pp$5.parseImportMeta = function(node) {\n    this.next(); // skip `.`\n\n    var containsEsc = this.containsEsc;\n    node.property = this.parseIdent(true);\n\n    if (node.property.name !== \"meta\")\n      { this.raiseRecoverable(node.property.start, \"The only valid meta property for import is 'import.meta'\"); }\n    if (containsEsc)\n      { this.raiseRecoverable(node.start, \"'import.meta' must not contain escaped characters\"); }\n    if (this.options.sourceType !== \"module\" && !this.options.allowImportExportEverywhere)\n      { this.raiseRecoverable(node.start, \"Cannot use 'import.meta' outside a module\"); }\n\n    return this.finishNode(node, \"MetaProperty\")\n  };\n\n  pp$5.parseLiteral = function(value) {\n    var node = this.startNode();\n    node.value = value;\n    node.raw = this.input.slice(this.start, this.end);\n    if (node.raw.charCodeAt(node.raw.length - 1) === 110) { node.bigint = node.raw.slice(0, -1).replace(/_/g, \"\"); }\n    this.next();\n    return this.finishNode(node, \"Literal\")\n  };\n\n  pp$5.parseParenExpression = function() {\n    this.expect(types$1.parenL);\n    var val = this.parseExpression();\n    this.expect(types$1.parenR);\n    return val\n  };\n\n  pp$5.shouldParseArrow = function(exprList) {\n    return !this.canInsertSemicolon()\n  };\n\n  pp$5.parseParenAndDistinguishExpression = function(canBeArrow, forInit) {\n    var startPos = this.start, startLoc = this.startLoc, val, allowTrailingComma = this.options.ecmaVersion >= 8;\n    if (this.options.ecmaVersion >= 6) {\n      this.next();\n\n      var innerStartPos = this.start, innerStartLoc = this.startLoc;\n      var exprList = [], first = true, lastIsComma = false;\n      var refDestructuringErrors = new DestructuringErrors, oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, spreadStart;\n      this.yieldPos = 0;\n      this.awaitPos = 0;\n      // Do not save awaitIdentPos to allow checking awaits nested in parameters\n      while (this.type !== types$1.parenR) {\n        first ? first = false : this.expect(types$1.comma);\n        if (allowTrailingComma && this.afterTrailingComma(types$1.parenR, true)) {\n          lastIsComma = true;\n          break\n        } else if (this.type === types$1.ellipsis) {\n          spreadStart = this.start;\n          exprList.push(this.parseParenItem(this.parseRestBinding()));\n          if (this.type === types$1.comma) {\n            this.raiseRecoverable(\n              this.start,\n              \"Comma is not permitted after the rest element\"\n            );\n          }\n          break\n        } else {\n          exprList.push(this.parseMaybeAssign(false, refDestructuringErrors, this.parseParenItem));\n        }\n      }\n      var innerEndPos = this.lastTokEnd, innerEndLoc = this.lastTokEndLoc;\n      this.expect(types$1.parenR);\n\n      if (canBeArrow && this.shouldParseArrow(exprList) && this.eat(types$1.arrow)) {\n        this.checkPatternErrors(refDestructuringErrors, false);\n        this.checkYieldAwaitInDefaultParams();\n        this.yieldPos = oldYieldPos;\n        this.awaitPos = oldAwaitPos;\n        return this.parseParenArrowList(startPos, startLoc, exprList, forInit)\n      }\n\n      if (!exprList.length || lastIsComma) { this.unexpected(this.lastTokStart); }\n      if (spreadStart) { this.unexpected(spreadStart); }\n      this.checkExpressionErrors(refDestructuringErrors, true);\n      this.yieldPos = oldYieldPos || this.yieldPos;\n      this.awaitPos = oldAwaitPos || this.awaitPos;\n\n      if (exprList.length > 1) {\n        val = this.startNodeAt(innerStartPos, innerStartLoc);\n        val.expressions = exprList;\n        this.finishNodeAt(val, \"SequenceExpression\", innerEndPos, innerEndLoc);\n      } else {\n        val = exprList[0];\n      }\n    } else {\n      val = this.parseParenExpression();\n    }\n\n    if (this.options.preserveParens) {\n      var par = this.startNodeAt(startPos, startLoc);\n      par.expression = val;\n      return this.finishNode(par, \"ParenthesizedExpression\")\n    } else {\n      return val\n    }\n  };\n\n  pp$5.parseParenItem = function(item) {\n    return item\n  };\n\n  pp$5.parseParenArrowList = function(startPos, startLoc, exprList, forInit) {\n    return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), exprList, false, forInit)\n  };\n\n  // New's precedence is slightly tricky. It must allow its argument to\n  // be a `[]` or dot subscript expression, but not a call — at least,\n  // not without wrapping it in parentheses. Thus, it uses the noCalls\n  // argument to parseSubscripts to prevent it from consuming the\n  // argument list.\n\n  var empty = [];\n\n  pp$5.parseNew = function() {\n    if (this.containsEsc) { this.raiseRecoverable(this.start, \"Escape sequence in keyword new\"); }\n    var node = this.startNode();\n    this.next();\n    if (this.options.ecmaVersion >= 6 && this.type === types$1.dot) {\n      var meta = this.startNodeAt(node.start, node.loc && node.loc.start);\n      meta.name = \"new\";\n      node.meta = this.finishNode(meta, \"Identifier\");\n      this.next();\n      var containsEsc = this.containsEsc;\n      node.property = this.parseIdent(true);\n      if (node.property.name !== \"target\")\n        { this.raiseRecoverable(node.property.start, \"The only valid meta property for new is 'new.target'\"); }\n      if (containsEsc)\n        { this.raiseRecoverable(node.start, \"'new.target' must not contain escaped characters\"); }\n      if (!this.allowNewDotTarget)\n        { this.raiseRecoverable(node.start, \"'new.target' can only be used in functions and class static block\"); }\n      return this.finishNode(node, \"MetaProperty\")\n    }\n    var startPos = this.start, startLoc = this.startLoc;\n    node.callee = this.parseSubscripts(this.parseExprAtom(null, false, true), startPos, startLoc, true, false);\n    if (this.eat(types$1.parenL)) { node.arguments = this.parseExprList(types$1.parenR, this.options.ecmaVersion >= 8, false); }\n    else { node.arguments = empty; }\n    return this.finishNode(node, \"NewExpression\")\n  };\n\n  // Parse template expression.\n\n  pp$5.parseTemplateElement = function(ref) {\n    var isTagged = ref.isTagged;\n\n    var elem = this.startNode();\n    if (this.type === types$1.invalidTemplate) {\n      if (!isTagged) {\n        this.raiseRecoverable(this.start, \"Bad escape sequence in untagged template literal\");\n      }\n      elem.value = {\n        raw: this.value.replace(/\\r\\n?/g, \"\\n\"),\n        cooked: null\n      };\n    } else {\n      elem.value = {\n        raw: this.input.slice(this.start, this.end).replace(/\\r\\n?/g, \"\\n\"),\n        cooked: this.value\n      };\n    }\n    this.next();\n    elem.tail = this.type === types$1.backQuote;\n    return this.finishNode(elem, \"TemplateElement\")\n  };\n\n  pp$5.parseTemplate = function(ref) {\n    if ( ref === void 0 ) ref = {};\n    var isTagged = ref.isTagged; if ( isTagged === void 0 ) isTagged = false;\n\n    var node = this.startNode();\n    this.next();\n    node.expressions = [];\n    var curElt = this.parseTemplateElement({isTagged: isTagged});\n    node.quasis = [curElt];\n    while (!curElt.tail) {\n      if (this.type === types$1.eof) { this.raise(this.pos, \"Unterminated template literal\"); }\n      this.expect(types$1.dollarBraceL);\n      node.expressions.push(this.parseExpression());\n      this.expect(types$1.braceR);\n      node.quasis.push(curElt = this.parseTemplateElement({isTagged: isTagged}));\n    }\n    this.next();\n    return this.finishNode(node, \"TemplateLiteral\")\n  };\n\n  pp$5.isAsyncProp = function(prop) {\n    return !prop.computed && prop.key.type === \"Identifier\" && prop.key.name === \"async\" &&\n      (this.type === types$1.name || this.type === types$1.num || this.type === types$1.string || this.type === types$1.bracketL || this.type.keyword || (this.options.ecmaVersion >= 9 && this.type === types$1.star)) &&\n      !lineBreak.test(this.input.slice(this.lastTokEnd, this.start))\n  };\n\n  // Parse an object literal or binding pattern.\n\n  pp$5.parseObj = function(isPattern, refDestructuringErrors) {\n    var node = this.startNode(), first = true, propHash = {};\n    node.properties = [];\n    this.next();\n    while (!this.eat(types$1.braceR)) {\n      if (!first) {\n        this.expect(types$1.comma);\n        if (this.options.ecmaVersion >= 5 && this.afterTrailingComma(types$1.braceR)) { break }\n      } else { first = false; }\n\n      var prop = this.parseProperty(isPattern, refDestructuringErrors);\n      if (!isPattern) { this.checkPropClash(prop, propHash, refDestructuringErrors); }\n      node.properties.push(prop);\n    }\n    return this.finishNode(node, isPattern ? \"ObjectPattern\" : \"ObjectExpression\")\n  };\n\n  pp$5.parseProperty = function(isPattern, refDestructuringErrors) {\n    var prop = this.startNode(), isGenerator, isAsync, startPos, startLoc;\n    if (this.options.ecmaVersion >= 9 && this.eat(types$1.ellipsis)) {\n      if (isPattern) {\n        prop.argument = this.parseIdent(false);\n        if (this.type === types$1.comma) {\n          this.raiseRecoverable(this.start, \"Comma is not permitted after the rest element\");\n        }\n        return this.finishNode(prop, \"RestElement\")\n      }\n      // Parse argument.\n      prop.argument = this.parseMaybeAssign(false, refDestructuringErrors);\n      // To disallow trailing comma via `this.toAssignable()`.\n      if (this.type === types$1.comma && refDestructuringErrors && refDestructuringErrors.trailingComma < 0) {\n        refDestructuringErrors.trailingComma = this.start;\n      }\n      // Finish\n      return this.finishNode(prop, \"SpreadElement\")\n    }\n    if (this.options.ecmaVersion >= 6) {\n      prop.method = false;\n      prop.shorthand = false;\n      if (isPattern || refDestructuringErrors) {\n        startPos = this.start;\n        startLoc = this.startLoc;\n      }\n      if (!isPattern)\n        { isGenerator = this.eat(types$1.star); }\n    }\n    var containsEsc = this.containsEsc;\n    this.parsePropertyName(prop);\n    if (!isPattern && !containsEsc && this.options.ecmaVersion >= 8 && !isGenerator && this.isAsyncProp(prop)) {\n      isAsync = true;\n      isGenerator = this.options.ecmaVersion >= 9 && this.eat(types$1.star);\n      this.parsePropertyName(prop);\n    } else {\n      isAsync = false;\n    }\n    this.parsePropertyValue(prop, isPattern, isGenerator, isAsync, startPos, startLoc, refDestructuringErrors, containsEsc);\n    return this.finishNode(prop, \"Property\")\n  };\n\n  pp$5.parseGetterSetter = function(prop) {\n    prop.kind = prop.key.name;\n    this.parsePropertyName(prop);\n    prop.value = this.parseMethod(false);\n    var paramCount = prop.kind === \"get\" ? 0 : 1;\n    if (prop.value.params.length !== paramCount) {\n      var start = prop.value.start;\n      if (prop.kind === \"get\")\n        { this.raiseRecoverable(start, \"getter should have no params\"); }\n      else\n        { this.raiseRecoverable(start, \"setter should have exactly one param\"); }\n    } else {\n      if (prop.kind === \"set\" && prop.value.params[0].type === \"RestElement\")\n        { this.raiseRecoverable(prop.value.params[0].start, \"Setter cannot use rest params\"); }\n    }\n  };\n\n  pp$5.parsePropertyValue = function(prop, isPattern, isGenerator, isAsync, startPos, startLoc, refDestructuringErrors, containsEsc) {\n    if ((isGenerator || isAsync) && this.type === types$1.colon)\n      { this.unexpected(); }\n\n    if (this.eat(types$1.colon)) {\n      prop.value = isPattern ? this.parseMaybeDefault(this.start, this.startLoc) : this.parseMaybeAssign(false, refDestructuringErrors);\n      prop.kind = \"init\";\n    } else if (this.options.ecmaVersion >= 6 && this.type === types$1.parenL) {\n      if (isPattern) { this.unexpected(); }\n      prop.kind = \"init\";\n      prop.method = true;\n      prop.value = this.parseMethod(isGenerator, isAsync);\n    } else if (!isPattern && !containsEsc &&\n               this.options.ecmaVersion >= 5 && !prop.computed && prop.key.type === \"Identifier\" &&\n               (prop.key.name === \"get\" || prop.key.name === \"set\") &&\n               (this.type !== types$1.comma && this.type !== types$1.braceR && this.type !== types$1.eq)) {\n      if (isGenerator || isAsync) { this.unexpected(); }\n      this.parseGetterSetter(prop);\n    } else if (this.options.ecmaVersion >= 6 && !prop.computed && prop.key.type === \"Identifier\") {\n      if (isGenerator || isAsync) { this.unexpected(); }\n      this.checkUnreserved(prop.key);\n      if (prop.key.name === \"await\" && !this.awaitIdentPos)\n        { this.awaitIdentPos = startPos; }\n      prop.kind = \"init\";\n      if (isPattern) {\n        prop.value = this.parseMaybeDefault(startPos, startLoc, this.copyNode(prop.key));\n      } else if (this.type === types$1.eq && refDestructuringErrors) {\n        if (refDestructuringErrors.shorthandAssign < 0)\n          { refDestructuringErrors.shorthandAssign = this.start; }\n        prop.value = this.parseMaybeDefault(startPos, startLoc, this.copyNode(prop.key));\n      } else {\n        prop.value = this.copyNode(prop.key);\n      }\n      prop.shorthand = true;\n    } else { this.unexpected(); }\n  };\n\n  pp$5.parsePropertyName = function(prop) {\n    if (this.options.ecmaVersion >= 6) {\n      if (this.eat(types$1.bracketL)) {\n        prop.computed = true;\n        prop.key = this.parseMaybeAssign();\n        this.expect(types$1.bracketR);\n        return prop.key\n      } else {\n        prop.computed = false;\n      }\n    }\n    return prop.key = this.type === types$1.num || this.type === types$1.string ? this.parseExprAtom() : this.parseIdent(this.options.allowReserved !== \"never\")\n  };\n\n  // Initialize empty function node.\n\n  pp$5.initFunction = function(node) {\n    node.id = null;\n    if (this.options.ecmaVersion >= 6) { node.generator = node.expression = false; }\n    if (this.options.ecmaVersion >= 8) { node.async = false; }\n  };\n\n  // Parse object or class method.\n\n  pp$5.parseMethod = function(isGenerator, isAsync, allowDirectSuper) {\n    var node = this.startNode(), oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, oldAwaitIdentPos = this.awaitIdentPos;\n\n    this.initFunction(node);\n    if (this.options.ecmaVersion >= 6)\n      { node.generator = isGenerator; }\n    if (this.options.ecmaVersion >= 8)\n      { node.async = !!isAsync; }\n\n    this.yieldPos = 0;\n    this.awaitPos = 0;\n    this.awaitIdentPos = 0;\n    this.enterScope(functionFlags(isAsync, node.generator) | SCOPE_SUPER | (allowDirectSuper ? SCOPE_DIRECT_SUPER : 0));\n\n    this.expect(types$1.parenL);\n    node.params = this.parseBindingList(types$1.parenR, false, this.options.ecmaVersion >= 8);\n    this.checkYieldAwaitInDefaultParams();\n    this.parseFunctionBody(node, false, true, false);\n\n    this.yieldPos = oldYieldPos;\n    this.awaitPos = oldAwaitPos;\n    this.awaitIdentPos = oldAwaitIdentPos;\n    return this.finishNode(node, \"FunctionExpression\")\n  };\n\n  // Parse arrow function expression with given parameters.\n\n  pp$5.parseArrowExpression = function(node, params, isAsync, forInit) {\n    var oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, oldAwaitIdentPos = this.awaitIdentPos;\n\n    this.enterScope(functionFlags(isAsync, false) | SCOPE_ARROW);\n    this.initFunction(node);\n    if (this.options.ecmaVersion >= 8) { node.async = !!isAsync; }\n\n    this.yieldPos = 0;\n    this.awaitPos = 0;\n    this.awaitIdentPos = 0;\n\n    node.params = this.toAssignableList(params, true);\n    this.parseFunctionBody(node, true, false, forInit);\n\n    this.yieldPos = oldYieldPos;\n    this.awaitPos = oldAwaitPos;\n    this.awaitIdentPos = oldAwaitIdentPos;\n    return this.finishNode(node, \"ArrowFunctionExpression\")\n  };\n\n  // Parse function body and check parameters.\n\n  pp$5.parseFunctionBody = function(node, isArrowFunction, isMethod, forInit) {\n    var isExpression = isArrowFunction && this.type !== types$1.braceL;\n    var oldStrict = this.strict, useStrict = false;\n\n    if (isExpression) {\n      node.body = this.parseMaybeAssign(forInit);\n      node.expression = true;\n      this.checkParams(node, false);\n    } else {\n      var nonSimple = this.options.ecmaVersion >= 7 && !this.isSimpleParamList(node.params);\n      if (!oldStrict || nonSimple) {\n        useStrict = this.strictDirective(this.end);\n        // If this is a strict mode function, verify that argument names\n        // are not repeated, and it does not try to bind the words `eval`\n        // or `arguments`.\n        if (useStrict && nonSimple)\n          { this.raiseRecoverable(node.start, \"Illegal 'use strict' directive in function with non-simple parameter list\"); }\n      }\n      // Start a new scope with regard to labels and the `inFunction`\n      // flag (restore them to their old value afterwards).\n      var oldLabels = this.labels;\n      this.labels = [];\n      if (useStrict) { this.strict = true; }\n\n      // Add the params to varDeclaredNames to ensure that an error is thrown\n      // if a let/const declaration in the function clashes with one of the params.\n      this.checkParams(node, !oldStrict && !useStrict && !isArrowFunction && !isMethod && this.isSimpleParamList(node.params));\n      // Ensure the function name isn't a forbidden identifier in strict mode, e.g. 'eval'\n      if (this.strict && node.id) { this.checkLValSimple(node.id, BIND_OUTSIDE); }\n      node.body = this.parseBlock(false, undefined, useStrict && !oldStrict);\n      node.expression = false;\n      this.adaptDirectivePrologue(node.body.body);\n      this.labels = oldLabels;\n    }\n    this.exitScope();\n  };\n\n  pp$5.isSimpleParamList = function(params) {\n    for (var i = 0, list = params; i < list.length; i += 1)\n      {\n      var param = list[i];\n\n      if (param.type !== \"Identifier\") { return false\n    } }\n    return true\n  };\n\n  // Checks function params for various disallowed patterns such as using \"eval\"\n  // or \"arguments\" and duplicate parameters.\n\n  pp$5.checkParams = function(node, allowDuplicates) {\n    var nameHash = Object.create(null);\n    for (var i = 0, list = node.params; i < list.length; i += 1)\n      {\n      var param = list[i];\n\n      this.checkLValInnerPattern(param, BIND_VAR, allowDuplicates ? null : nameHash);\n    }\n  };\n\n  // Parses a comma-separated list of expressions, and returns them as\n  // an array. `close` is the token type that ends the list, and\n  // `allowEmpty` can be turned on to allow subsequent commas with\n  // nothing in between them to be parsed as `null` (which is needed\n  // for array literals).\n\n  pp$5.parseExprList = function(close, allowTrailingComma, allowEmpty, refDestructuringErrors) {\n    var elts = [], first = true;\n    while (!this.eat(close)) {\n      if (!first) {\n        this.expect(types$1.comma);\n        if (allowTrailingComma && this.afterTrailingComma(close)) { break }\n      } else { first = false; }\n\n      var elt = (void 0);\n      if (allowEmpty && this.type === types$1.comma)\n        { elt = null; }\n      else if (this.type === types$1.ellipsis) {\n        elt = this.parseSpread(refDestructuringErrors);\n        if (refDestructuringErrors && this.type === types$1.comma && refDestructuringErrors.trailingComma < 0)\n          { refDestructuringErrors.trailingComma = this.start; }\n      } else {\n        elt = this.parseMaybeAssign(false, refDestructuringErrors);\n      }\n      elts.push(elt);\n    }\n    return elts\n  };\n\n  pp$5.checkUnreserved = function(ref) {\n    var start = ref.start;\n    var end = ref.end;\n    var name = ref.name;\n\n    if (this.inGenerator && name === \"yield\")\n      { this.raiseRecoverable(start, \"Cannot use 'yield' as identifier inside a generator\"); }\n    if (this.inAsync && name === \"await\")\n      { this.raiseRecoverable(start, \"Cannot use 'await' as identifier inside an async function\"); }\n    if (this.currentThisScope().inClassFieldInit && name === \"arguments\")\n      { this.raiseRecoverable(start, \"Cannot use 'arguments' in class field initializer\"); }\n    if (this.inClassStaticBlock && (name === \"arguments\" || name === \"await\"))\n      { this.raise(start, (\"Cannot use \" + name + \" in class static initialization block\")); }\n    if (this.keywords.test(name))\n      { this.raise(start, (\"Unexpected keyword '\" + name + \"'\")); }\n    if (this.options.ecmaVersion < 6 &&\n      this.input.slice(start, end).indexOf(\"\\\\\") !== -1) { return }\n    var re = this.strict ? this.reservedWordsStrict : this.reservedWords;\n    if (re.test(name)) {\n      if (!this.inAsync && name === \"await\")\n        { this.raiseRecoverable(start, \"Cannot use keyword 'await' outside an async function\"); }\n      this.raiseRecoverable(start, (\"The keyword '\" + name + \"' is reserved\"));\n    }\n  };\n\n  // Parse the next token as an identifier. If `liberal` is true (used\n  // when parsing properties), it will also convert keywords into\n  // identifiers.\n\n  pp$5.parseIdent = function(liberal) {\n    var node = this.parseIdentNode();\n    this.next(!!liberal);\n    this.finishNode(node, \"Identifier\");\n    if (!liberal) {\n      this.checkUnreserved(node);\n      if (node.name === \"await\" && !this.awaitIdentPos)\n        { this.awaitIdentPos = node.start; }\n    }\n    return node\n  };\n\n  pp$5.parseIdentNode = function() {\n    var node = this.startNode();\n    if (this.type === types$1.name) {\n      node.name = this.value;\n    } else if (this.type.keyword) {\n      node.name = this.type.keyword;\n\n      // To fix https://github.com/acornjs/acorn/issues/575\n      // `class` and `function` keywords push new context into this.context.\n      // But there is no chance to pop the context if the keyword is consumed as an identifier such as a property name.\n      // If the previous token is a dot, this does not apply because the context-managing code already ignored the keyword\n      if ((node.name === \"class\" || node.name === \"function\") &&\n        (this.lastTokEnd !== this.lastTokStart + 1 || this.input.charCodeAt(this.lastTokStart) !== 46)) {\n        this.context.pop();\n      }\n      this.type = types$1.name;\n    } else {\n      this.unexpected();\n    }\n    return node\n  };\n\n  pp$5.parsePrivateIdent = function() {\n    var node = this.startNode();\n    if (this.type === types$1.privateId) {\n      node.name = this.value;\n    } else {\n      this.unexpected();\n    }\n    this.next();\n    this.finishNode(node, \"PrivateIdentifier\");\n\n    // For validating existence\n    if (this.options.checkPrivateFields) {\n      if (this.privateNameStack.length === 0) {\n        this.raise(node.start, (\"Private field '#\" + (node.name) + \"' must be declared in an enclosing class\"));\n      } else {\n        this.privateNameStack[this.privateNameStack.length - 1].used.push(node);\n      }\n    }\n\n    return node\n  };\n\n  // Parses yield expression inside generator.\n\n  pp$5.parseYield = function(forInit) {\n    if (!this.yieldPos) { this.yieldPos = this.start; }\n\n    var node = this.startNode();\n    this.next();\n    if (this.type === types$1.semi || this.canInsertSemicolon() || (this.type !== types$1.star && !this.type.startsExpr)) {\n      node.delegate = false;\n      node.argument = null;\n    } else {\n      node.delegate = this.eat(types$1.star);\n      node.argument = this.parseMaybeAssign(forInit);\n    }\n    return this.finishNode(node, \"YieldExpression\")\n  };\n\n  pp$5.parseAwait = function(forInit) {\n    if (!this.awaitPos) { this.awaitPos = this.start; }\n\n    var node = this.startNode();\n    this.next();\n    node.argument = this.parseMaybeUnary(null, true, false, forInit);\n    return this.finishNode(node, \"AwaitExpression\")\n  };\n\n  var pp$4 = Parser.prototype;\n\n  // This function is used to raise exceptions on parse errors. It\n  // takes an offset integer (into the current `input`) to indicate\n  // the location of the error, attaches the position to the end\n  // of the error message, and then raises a `SyntaxError` with that\n  // message.\n\n  pp$4.raise = function(pos, message) {\n    var loc = getLineInfo(this.input, pos);\n    message += \" (\" + loc.line + \":\" + loc.column + \")\";\n    var err = new SyntaxError(message);\n    err.pos = pos; err.loc = loc; err.raisedAt = this.pos;\n    throw err\n  };\n\n  pp$4.raiseRecoverable = pp$4.raise;\n\n  pp$4.curPosition = function() {\n    if (this.options.locations) {\n      return new Position(this.curLine, this.pos - this.lineStart)\n    }\n  };\n\n  var pp$3 = Parser.prototype;\n\n  var Scope = function Scope(flags) {\n    this.flags = flags;\n    // A list of var-declared names in the current lexical scope\n    this.var = [];\n    // A list of lexically-declared names in the current lexical scope\n    this.lexical = [];\n    // A list of lexically-declared FunctionDeclaration names in the current lexical scope\n    this.functions = [];\n    // A switch to disallow the identifier reference 'arguments'\n    this.inClassFieldInit = false;\n  };\n\n  // The functions in this module keep track of declared variables in the current scope in order to detect duplicate variable names.\n\n  pp$3.enterScope = function(flags) {\n    this.scopeStack.push(new Scope(flags));\n  };\n\n  pp$3.exitScope = function() {\n    this.scopeStack.pop();\n  };\n\n  // The spec says:\n  // > At the top level of a function, or script, function declarations are\n  // > treated like var declarations rather than like lexical declarations.\n  pp$3.treatFunctionsAsVarInScope = function(scope) {\n    return (scope.flags & SCOPE_FUNCTION) || !this.inModule && (scope.flags & SCOPE_TOP)\n  };\n\n  pp$3.declareName = function(name, bindingType, pos) {\n    var redeclared = false;\n    if (bindingType === BIND_LEXICAL) {\n      var scope = this.currentScope();\n      redeclared = scope.lexical.indexOf(name) > -1 || scope.functions.indexOf(name) > -1 || scope.var.indexOf(name) > -1;\n      scope.lexical.push(name);\n      if (this.inModule && (scope.flags & SCOPE_TOP))\n        { delete this.undefinedExports[name]; }\n    } else if (bindingType === BIND_SIMPLE_CATCH) {\n      var scope$1 = this.currentScope();\n      scope$1.lexical.push(name);\n    } else if (bindingType === BIND_FUNCTION) {\n      var scope$2 = this.currentScope();\n      if (this.treatFunctionsAsVar)\n        { redeclared = scope$2.lexical.indexOf(name) > -1; }\n      else\n        { redeclared = scope$2.lexical.indexOf(name) > -1 || scope$2.var.indexOf(name) > -1; }\n      scope$2.functions.push(name);\n    } else {\n      for (var i = this.scopeStack.length - 1; i >= 0; --i) {\n        var scope$3 = this.scopeStack[i];\n        if (scope$3.lexical.indexOf(name) > -1 && !((scope$3.flags & SCOPE_SIMPLE_CATCH) && scope$3.lexical[0] === name) ||\n            !this.treatFunctionsAsVarInScope(scope$3) && scope$3.functions.indexOf(name) > -1) {\n          redeclared = true;\n          break\n        }\n        scope$3.var.push(name);\n        if (this.inModule && (scope$3.flags & SCOPE_TOP))\n          { delete this.undefinedExports[name]; }\n        if (scope$3.flags & SCOPE_VAR) { break }\n      }\n    }\n    if (redeclared) { this.raiseRecoverable(pos, (\"Identifier '\" + name + \"' has already been declared\")); }\n  };\n\n  pp$3.checkLocalExport = function(id) {\n    // scope.functions must be empty as Module code is always strict.\n    if (this.scopeStack[0].lexical.indexOf(id.name) === -1 &&\n        this.scopeStack[0].var.indexOf(id.name) === -1) {\n      this.undefinedExports[id.name] = id;\n    }\n  };\n\n  pp$3.currentScope = function() {\n    return this.scopeStack[this.scopeStack.length - 1]\n  };\n\n  pp$3.currentVarScope = function() {\n    for (var i = this.scopeStack.length - 1;; i--) {\n      var scope = this.scopeStack[i];\n      if (scope.flags & SCOPE_VAR) { return scope }\n    }\n  };\n\n  // Could be useful for `this`, `new.target`, `super()`, `super.property`, and `super[property]`.\n  pp$3.currentThisScope = function() {\n    for (var i = this.scopeStack.length - 1;; i--) {\n      var scope = this.scopeStack[i];\n      if (scope.flags & SCOPE_VAR && !(scope.flags & SCOPE_ARROW)) { return scope }\n    }\n  };\n\n  var Node = function Node(parser, pos, loc) {\n    this.type = \"\";\n    this.start = pos;\n    this.end = 0;\n    if (parser.options.locations)\n      { this.loc = new SourceLocation(parser, loc); }\n    if (parser.options.directSourceFile)\n      { this.sourceFile = parser.options.directSourceFile; }\n    if (parser.options.ranges)\n      { this.range = [pos, 0]; }\n  };\n\n  // Start an AST node, attaching a start offset.\n\n  var pp$2 = Parser.prototype;\n\n  pp$2.startNode = function() {\n    return new Node(this, this.start, this.startLoc)\n  };\n\n  pp$2.startNodeAt = function(pos, loc) {\n    return new Node(this, pos, loc)\n  };\n\n  // Finish an AST node, adding `type` and `end` properties.\n\n  function finishNodeAt(node, type, pos, loc) {\n    node.type = type;\n    node.end = pos;\n    if (this.options.locations)\n      { node.loc.end = loc; }\n    if (this.options.ranges)\n      { node.range[1] = pos; }\n    return node\n  }\n\n  pp$2.finishNode = function(node, type) {\n    return finishNodeAt.call(this, node, type, this.lastTokEnd, this.lastTokEndLoc)\n  };\n\n  // Finish node at given position\n\n  pp$2.finishNodeAt = function(node, type, pos, loc) {\n    return finishNodeAt.call(this, node, type, pos, loc)\n  };\n\n  pp$2.copyNode = function(node) {\n    var newNode = new Node(this, node.start, this.startLoc);\n    for (var prop in node) { newNode[prop] = node[prop]; }\n    return newNode\n  };\n\n  // This file was generated by \"bin/generate-unicode-script-values.js\". Do not modify manually!\n  var scriptValuesAddedInUnicode = \"Gara Garay Gukh Gurung_Khema Hrkt Katakana_Or_Hiragana Kawi Kirat_Rai Krai Nag_Mundari Nagm Ol_Onal Onao Sunu Sunuwar Todhri Todr Tulu_Tigalari Tutg Unknown Zzzz\";\n\n  // This file contains Unicode properties extracted from the ECMAScript specification.\n  // The lists are extracted like so:\n  // $$('#table-binary-unicode-properties > figure > table > tbody > tr > td:nth-child(1) code').map(el => el.innerText)\n\n  // #table-binary-unicode-properties\n  var ecma9BinaryProperties = \"ASCII ASCII_Hex_Digit AHex Alphabetic Alpha Any Assigned Bidi_Control Bidi_C Bidi_Mirrored Bidi_M Case_Ignorable CI Cased Changes_When_Casefolded CWCF Changes_When_Casemapped CWCM Changes_When_Lowercased CWL Changes_When_NFKC_Casefolded CWKCF Changes_When_Titlecased CWT Changes_When_Uppercased CWU Dash Default_Ignorable_Code_Point DI Deprecated Dep Diacritic Dia Emoji Emoji_Component Emoji_Modifier Emoji_Modifier_Base Emoji_Presentation Extender Ext Grapheme_Base Gr_Base Grapheme_Extend Gr_Ext Hex_Digit Hex IDS_Binary_Operator IDSB IDS_Trinary_Operator IDST ID_Continue IDC ID_Start IDS Ideographic Ideo Join_Control Join_C Logical_Order_Exception LOE Lowercase Lower Math Noncharacter_Code_Point NChar Pattern_Syntax Pat_Syn Pattern_White_Space Pat_WS Quotation_Mark QMark Radical Regional_Indicator RI Sentence_Terminal STerm Soft_Dotted SD Terminal_Punctuation Term Unified_Ideograph UIdeo Uppercase Upper Variation_Selector VS White_Space space XID_Continue XIDC XID_Start XIDS\";\n  var ecma10BinaryProperties = ecma9BinaryProperties + \" Extended_Pictographic\";\n  var ecma11BinaryProperties = ecma10BinaryProperties;\n  var ecma12BinaryProperties = ecma11BinaryProperties + \" EBase EComp EMod EPres ExtPict\";\n  var ecma13BinaryProperties = ecma12BinaryProperties;\n  var ecma14BinaryProperties = ecma13BinaryProperties;\n\n  var unicodeBinaryProperties = {\n    9: ecma9BinaryProperties,\n    10: ecma10BinaryProperties,\n    11: ecma11BinaryProperties,\n    12: ecma12BinaryProperties,\n    13: ecma13BinaryProperties,\n    14: ecma14BinaryProperties\n  };\n\n  // #table-binary-unicode-properties-of-strings\n  var ecma14BinaryPropertiesOfStrings = \"Basic_Emoji Emoji_Keycap_Sequence RGI_Emoji_Modifier_Sequence RGI_Emoji_Flag_Sequence RGI_Emoji_Tag_Sequence RGI_Emoji_ZWJ_Sequence RGI_Emoji\";\n\n  var unicodeBinaryPropertiesOfStrings = {\n    9: \"\",\n    10: \"\",\n    11: \"\",\n    12: \"\",\n    13: \"\",\n    14: ecma14BinaryPropertiesOfStrings\n  };\n\n  // #table-unicode-general-category-values\n  var unicodeGeneralCategoryValues = \"Cased_Letter LC Close_Punctuation Pe Connector_Punctuation Pc Control Cc cntrl Currency_Symbol Sc Dash_Punctuation Pd Decimal_Number Nd digit Enclosing_Mark Me Final_Punctuation Pf Format Cf Initial_Punctuation Pi Letter L Letter_Number Nl Line_Separator Zl Lowercase_Letter Ll Mark M Combining_Mark Math_Symbol Sm Modifier_Letter Lm Modifier_Symbol Sk Nonspacing_Mark Mn Number N Open_Punctuation Ps Other C Other_Letter Lo Other_Number No Other_Punctuation Po Other_Symbol So Paragraph_Separator Zp Private_Use Co Punctuation P punct Separator Z Space_Separator Zs Spacing_Mark Mc Surrogate Cs Symbol S Titlecase_Letter Lt Unassigned Cn Uppercase_Letter Lu\";\n\n  // #table-unicode-script-values\n  var ecma9ScriptValues = \"Adlam Adlm Ahom Anatolian_Hieroglyphs Hluw Arabic Arab Armenian Armn Avestan Avst Balinese Bali Bamum Bamu Bassa_Vah Bass Batak Batk Bengali Beng Bhaiksuki Bhks Bopomofo Bopo Brahmi Brah Braille Brai Buginese Bugi Buhid Buhd Canadian_Aboriginal Cans Carian Cari Caucasian_Albanian Aghb Chakma Cakm Cham Cham Cherokee Cher Common Zyyy Coptic Copt Qaac Cuneiform Xsux Cypriot Cprt Cyrillic Cyrl Deseret Dsrt Devanagari Deva Duployan Dupl Egyptian_Hieroglyphs Egyp Elbasan Elba Ethiopic Ethi Georgian Geor Glagolitic Glag Gothic Goth Grantha Gran Greek Grek Gujarati Gujr Gurmukhi Guru Han Hani Hangul Hang Hanunoo Hano Hatran Hatr Hebrew Hebr Hiragana Hira Imperial_Aramaic Armi Inherited Zinh Qaai Inscriptional_Pahlavi Phli Inscriptional_Parthian Prti Javanese Java Kaithi Kthi Kannada Knda Katakana Kana Kayah_Li Kali Kharoshthi Khar Khmer Khmr Khojki Khoj Khudawadi Sind Lao Laoo Latin Latn Lepcha Lepc Limbu Limb Linear_A Lina Linear_B Linb Lisu Lisu Lycian Lyci Lydian Lydi Mahajani Mahj Malayalam Mlym Mandaic Mand Manichaean Mani Marchen Marc Masaram_Gondi Gonm Meetei_Mayek Mtei Mende_Kikakui Mend Meroitic_Cursive Merc Meroitic_Hieroglyphs Mero Miao Plrd Modi Mongolian Mong Mro Mroo Multani Mult Myanmar Mymr Nabataean Nbat New_Tai_Lue Talu Newa Newa Nko Nkoo Nushu Nshu Ogham Ogam Ol_Chiki Olck Old_Hungarian Hung Old_Italic Ital Old_North_Arabian Narb Old_Permic Perm Old_Persian Xpeo Old_South_Arabian Sarb Old_Turkic Orkh Oriya Orya Osage Osge Osmanya Osma Pahawh_Hmong Hmng Palmyrene Palm Pau_Cin_Hau Pauc Phags_Pa Phag Phoenician Phnx Psalter_Pahlavi Phlp Rejang Rjng Runic Runr Samaritan Samr Saurashtra Saur Sharada Shrd Shavian Shaw Siddham Sidd SignWriting Sgnw Sinhala Sinh Sora_Sompeng Sora Soyombo Soyo Sundanese Sund Syloti_Nagri Sylo Syriac Syrc Tagalog Tglg Tagbanwa Tagb Tai_Le Tale Tai_Tham Lana Tai_Viet Tavt Takri Takr Tamil Taml Tangut Tang Telugu Telu Thaana Thaa Thai Thai Tibetan Tibt Tifinagh Tfng Tirhuta Tirh Ugaritic Ugar Vai Vaii Warang_Citi Wara Yi Yiii Zanabazar_Square Zanb\";\n  var ecma10ScriptValues = ecma9ScriptValues + \" Dogra Dogr Gunjala_Gondi Gong Hanifi_Rohingya Rohg Makasar Maka Medefaidrin Medf Old_Sogdian Sogo Sogdian Sogd\";\n  var ecma11ScriptValues = ecma10ScriptValues + \" Elymaic Elym Nandinagari Nand Nyiakeng_Puachue_Hmong Hmnp Wancho Wcho\";\n  var ecma12ScriptValues = ecma11ScriptValues + \" Chorasmian Chrs Diak Dives_Akuru Khitan_Small_Script Kits Yezi Yezidi\";\n  var ecma13ScriptValues = ecma12ScriptValues + \" Cypro_Minoan Cpmn Old_Uyghur Ougr Tangsa Tnsa Toto Vithkuqi Vith\";\n  var ecma14ScriptValues = ecma13ScriptValues + \" \" + scriptValuesAddedInUnicode;\n\n  var unicodeScriptValues = {\n    9: ecma9ScriptValues,\n    10: ecma10ScriptValues,\n    11: ecma11ScriptValues,\n    12: ecma12ScriptValues,\n    13: ecma13ScriptValues,\n    14: ecma14ScriptValues\n  };\n\n  var data = {};\n  function buildUnicodeData(ecmaVersion) {\n    var d = data[ecmaVersion] = {\n      binary: wordsRegexp(unicodeBinaryProperties[ecmaVersion] + \" \" + unicodeGeneralCategoryValues),\n      binaryOfStrings: wordsRegexp(unicodeBinaryPropertiesOfStrings[ecmaVersion]),\n      nonBinary: {\n        General_Category: wordsRegexp(unicodeGeneralCategoryValues),\n        Script: wordsRegexp(unicodeScriptValues[ecmaVersion])\n      }\n    };\n    d.nonBinary.Script_Extensions = d.nonBinary.Script;\n\n    d.nonBinary.gc = d.nonBinary.General_Category;\n    d.nonBinary.sc = d.nonBinary.Script;\n    d.nonBinary.scx = d.nonBinary.Script_Extensions;\n  }\n\n  for (var i = 0, list = [9, 10, 11, 12, 13, 14]; i < list.length; i += 1) {\n    var ecmaVersion = list[i];\n\n    buildUnicodeData(ecmaVersion);\n  }\n\n  var pp$1 = Parser.prototype;\n\n  // Track disjunction structure to determine whether a duplicate\n  // capture group name is allowed because it is in a separate branch.\n  var BranchID = function BranchID(parent, base) {\n    // Parent disjunction branch\n    this.parent = parent;\n    // Identifies this set of sibling branches\n    this.base = base || this;\n  };\n\n  BranchID.prototype.separatedFrom = function separatedFrom (alt) {\n    // A branch is separate from another branch if they or any of\n    // their parents are siblings in a given disjunction\n    for (var self = this; self; self = self.parent) {\n      for (var other = alt; other; other = other.parent) {\n        if (self.base === other.base && self !== other) { return true }\n      }\n    }\n    return false\n  };\n\n  BranchID.prototype.sibling = function sibling () {\n    return new BranchID(this.parent, this.base)\n  };\n\n  var RegExpValidationState = function RegExpValidationState(parser) {\n    this.parser = parser;\n    this.validFlags = \"gim\" + (parser.options.ecmaVersion >= 6 ? \"uy\" : \"\") + (parser.options.ecmaVersion >= 9 ? \"s\" : \"\") + (parser.options.ecmaVersion >= 13 ? \"d\" : \"\") + (parser.options.ecmaVersion >= 15 ? \"v\" : \"\");\n    this.unicodeProperties = data[parser.options.ecmaVersion >= 14 ? 14 : parser.options.ecmaVersion];\n    this.source = \"\";\n    this.flags = \"\";\n    this.start = 0;\n    this.switchU = false;\n    this.switchV = false;\n    this.switchN = false;\n    this.pos = 0;\n    this.lastIntValue = 0;\n    this.lastStringValue = \"\";\n    this.lastAssertionIsQuantifiable = false;\n    this.numCapturingParens = 0;\n    this.maxBackReference = 0;\n    this.groupNames = Object.create(null);\n    this.backReferenceNames = [];\n    this.branchID = null;\n  };\n\n  RegExpValidationState.prototype.reset = function reset (start, pattern, flags) {\n    var unicodeSets = flags.indexOf(\"v\") !== -1;\n    var unicode = flags.indexOf(\"u\") !== -1;\n    this.start = start | 0;\n    this.source = pattern + \"\";\n    this.flags = flags;\n    if (unicodeSets && this.parser.options.ecmaVersion >= 15) {\n      this.switchU = true;\n      this.switchV = true;\n      this.switchN = true;\n    } else {\n      this.switchU = unicode && this.parser.options.ecmaVersion >= 6;\n      this.switchV = false;\n      this.switchN = unicode && this.parser.options.ecmaVersion >= 9;\n    }\n  };\n\n  RegExpValidationState.prototype.raise = function raise (message) {\n    this.parser.raiseRecoverable(this.start, (\"Invalid regular expression: /\" + (this.source) + \"/: \" + message));\n  };\n\n  // If u flag is given, this returns the code point at the index (it combines a surrogate pair).\n  // Otherwise, this returns the code unit of the index (can be a part of a surrogate pair).\n  RegExpValidationState.prototype.at = function at (i, forceU) {\n      if ( forceU === void 0 ) forceU = false;\n\n    var s = this.source;\n    var l = s.length;\n    if (i >= l) {\n      return -1\n    }\n    var c = s.charCodeAt(i);\n    if (!(forceU || this.switchU) || c <= 0xD7FF || c >= 0xE000 || i + 1 >= l) {\n      return c\n    }\n    var next = s.charCodeAt(i + 1);\n    return next >= 0xDC00 && next <= 0xDFFF ? (c << 10) + next - 0x35FDC00 : c\n  };\n\n  RegExpValidationState.prototype.nextIndex = function nextIndex (i, forceU) {\n      if ( forceU === void 0 ) forceU = false;\n\n    var s = this.source;\n    var l = s.length;\n    if (i >= l) {\n      return l\n    }\n    var c = s.charCodeAt(i), next;\n    if (!(forceU || this.switchU) || c <= 0xD7FF || c >= 0xE000 || i + 1 >= l ||\n        (next = s.charCodeAt(i + 1)) < 0xDC00 || next > 0xDFFF) {\n      return i + 1\n    }\n    return i + 2\n  };\n\n  RegExpValidationState.prototype.current = function current (forceU) {\n      if ( forceU === void 0 ) forceU = false;\n\n    return this.at(this.pos, forceU)\n  };\n\n  RegExpValidationState.prototype.lookahead = function lookahead (forceU) {\n      if ( forceU === void 0 ) forceU = false;\n\n    return this.at(this.nextIndex(this.pos, forceU), forceU)\n  };\n\n  RegExpValidationState.prototype.advance = function advance (forceU) {\n      if ( forceU === void 0 ) forceU = false;\n\n    this.pos = this.nextIndex(this.pos, forceU);\n  };\n\n  RegExpValidationState.prototype.eat = function eat (ch, forceU) {\n      if ( forceU === void 0 ) forceU = false;\n\n    if (this.current(forceU) === ch) {\n      this.advance(forceU);\n      return true\n    }\n    return false\n  };\n\n  RegExpValidationState.prototype.eatChars = function eatChars (chs, forceU) {\n      if ( forceU === void 0 ) forceU = false;\n\n    var pos = this.pos;\n    for (var i = 0, list = chs; i < list.length; i += 1) {\n      var ch = list[i];\n\n        var current = this.at(pos, forceU);\n      if (current === -1 || current !== ch) {\n        return false\n      }\n      pos = this.nextIndex(pos, forceU);\n    }\n    this.pos = pos;\n    return true\n  };\n\n  /**\n   * Validate the flags part of a given RegExpLiteral.\n   *\n   * @param {RegExpValidationState} state The state to validate RegExp.\n   * @returns {void}\n   */\n  pp$1.validateRegExpFlags = function(state) {\n    var validFlags = state.validFlags;\n    var flags = state.flags;\n\n    var u = false;\n    var v = false;\n\n    for (var i = 0; i < flags.length; i++) {\n      var flag = flags.charAt(i);\n      if (validFlags.indexOf(flag) === -1) {\n        this.raise(state.start, \"Invalid regular expression flag\");\n      }\n      if (flags.indexOf(flag, i + 1) > -1) {\n        this.raise(state.start, \"Duplicate regular expression flag\");\n      }\n      if (flag === \"u\") { u = true; }\n      if (flag === \"v\") { v = true; }\n    }\n    if (this.options.ecmaVersion >= 15 && u && v) {\n      this.raise(state.start, \"Invalid regular expression flag\");\n    }\n  };\n\n  function hasProp(obj) {\n    for (var _ in obj) { return true }\n    return false\n  }\n\n  /**\n   * Validate the pattern part of a given RegExpLiteral.\n   *\n   * @param {RegExpValidationState} state The state to validate RegExp.\n   * @returns {void}\n   */\n  pp$1.validateRegExpPattern = function(state) {\n    this.regexp_pattern(state);\n\n    // The goal symbol for the parse is |Pattern[~U, ~N]|. If the result of\n    // parsing contains a |GroupName|, reparse with the goal symbol\n    // |Pattern[~U, +N]| and use this result instead. Throw a *SyntaxError*\n    // exception if _P_ did not conform to the grammar, if any elements of _P_\n    // were not matched by the parse, or if any Early Error conditions exist.\n    if (!state.switchN && this.options.ecmaVersion >= 9 && hasProp(state.groupNames)) {\n      state.switchN = true;\n      this.regexp_pattern(state);\n    }\n  };\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-Pattern\n  pp$1.regexp_pattern = function(state) {\n    state.pos = 0;\n    state.lastIntValue = 0;\n    state.lastStringValue = \"\";\n    state.lastAssertionIsQuantifiable = false;\n    state.numCapturingParens = 0;\n    state.maxBackReference = 0;\n    state.groupNames = Object.create(null);\n    state.backReferenceNames.length = 0;\n    state.branchID = null;\n\n    this.regexp_disjunction(state);\n\n    if (state.pos !== state.source.length) {\n      // Make the same messages as V8.\n      if (state.eat(0x29 /* ) */)) {\n        state.raise(\"Unmatched ')'\");\n      }\n      if (state.eat(0x5D /* ] */) || state.eat(0x7D /* } */)) {\n        state.raise(\"Lone quantifier brackets\");\n      }\n    }\n    if (state.maxBackReference > state.numCapturingParens) {\n      state.raise(\"Invalid escape\");\n    }\n    for (var i = 0, list = state.backReferenceNames; i < list.length; i += 1) {\n      var name = list[i];\n\n      if (!state.groupNames[name]) {\n        state.raise(\"Invalid named capture referenced\");\n      }\n    }\n  };\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-Disjunction\n  pp$1.regexp_disjunction = function(state) {\n    var trackDisjunction = this.options.ecmaVersion >= 16;\n    if (trackDisjunction) { state.branchID = new BranchID(state.branchID, null); }\n    this.regexp_alternative(state);\n    while (state.eat(0x7C /* | */)) {\n      if (trackDisjunction) { state.branchID = state.branchID.sibling(); }\n      this.regexp_alternative(state);\n    }\n    if (trackDisjunction) { state.branchID = state.branchID.parent; }\n\n    // Make the same message as V8.\n    if (this.regexp_eatQuantifier(state, true)) {\n      state.raise(\"Nothing to repeat\");\n    }\n    if (state.eat(0x7B /* { */)) {\n      state.raise(\"Lone quantifier brackets\");\n    }\n  };\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-Alternative\n  pp$1.regexp_alternative = function(state) {\n    while (state.pos < state.source.length && this.regexp_eatTerm(state)) {}\n  };\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-Term\n  pp$1.regexp_eatTerm = function(state) {\n    if (this.regexp_eatAssertion(state)) {\n      // Handle `QuantifiableAssertion Quantifier` alternative.\n      // `state.lastAssertionIsQuantifiable` is true if the last eaten Assertion\n      // is a QuantifiableAssertion.\n      if (state.lastAssertionIsQuantifiable && this.regexp_eatQuantifier(state)) {\n        // Make the same message as V8.\n        if (state.switchU) {\n          state.raise(\"Invalid quantifier\");\n        }\n      }\n      return true\n    }\n\n    if (state.switchU ? this.regexp_eatAtom(state) : this.regexp_eatExtendedAtom(state)) {\n      this.regexp_eatQuantifier(state);\n      return true\n    }\n\n    return false\n  };\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-Assertion\n  pp$1.regexp_eatAssertion = function(state) {\n    var start = state.pos;\n    state.lastAssertionIsQuantifiable = false;\n\n    // ^, $\n    if (state.eat(0x5E /* ^ */) || state.eat(0x24 /* $ */)) {\n      return true\n    }\n\n    // \\b \\B\n    if (state.eat(0x5C /* \\ */)) {\n      if (state.eat(0x42 /* B */) || state.eat(0x62 /* b */)) {\n        return true\n      }\n      state.pos = start;\n    }\n\n    // Lookahead / Lookbehind\n    if (state.eat(0x28 /* ( */) && state.eat(0x3F /* ? */)) {\n      var lookbehind = false;\n      if (this.options.ecmaVersion >= 9) {\n        lookbehind = state.eat(0x3C /* < */);\n      }\n      if (state.eat(0x3D /* = */) || state.eat(0x21 /* ! */)) {\n        this.regexp_disjunction(state);\n        if (!state.eat(0x29 /* ) */)) {\n          state.raise(\"Unterminated group\");\n        }\n        state.lastAssertionIsQuantifiable = !lookbehind;\n        return true\n      }\n    }\n\n    state.pos = start;\n    return false\n  };\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-Quantifier\n  pp$1.regexp_eatQuantifier = function(state, noError) {\n    if ( noError === void 0 ) noError = false;\n\n    if (this.regexp_eatQuantifierPrefix(state, noError)) {\n      state.eat(0x3F /* ? */);\n      return true\n    }\n    return false\n  };\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-QuantifierPrefix\n  pp$1.regexp_eatQuantifierPrefix = function(state, noError) {\n    return (\n      state.eat(0x2A /* * */) ||\n      state.eat(0x2B /* + */) ||\n      state.eat(0x3F /* ? */) ||\n      this.regexp_eatBracedQuantifier(state, noError)\n    )\n  };\n  pp$1.regexp_eatBracedQuantifier = function(state, noError) {\n    var start = state.pos;\n    if (state.eat(0x7B /* { */)) {\n      var min = 0, max = -1;\n      if (this.regexp_eatDecimalDigits(state)) {\n        min = state.lastIntValue;\n        if (state.eat(0x2C /* , */) && this.regexp_eatDecimalDigits(state)) {\n          max = state.lastIntValue;\n        }\n        if (state.eat(0x7D /* } */)) {\n          // SyntaxError in https://www.ecma-international.org/ecma-262/8.0/#sec-term\n          if (max !== -1 && max < min && !noError) {\n            state.raise(\"numbers out of order in {} quantifier\");\n          }\n          return true\n        }\n      }\n      if (state.switchU && !noError) {\n        state.raise(\"Incomplete quantifier\");\n      }\n      state.pos = start;\n    }\n    return false\n  };\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-Atom\n  pp$1.regexp_eatAtom = function(state) {\n    return (\n      this.regexp_eatPatternCharacters(state) ||\n      state.eat(0x2E /* . */) ||\n      this.regexp_eatReverseSolidusAtomEscape(state) ||\n      this.regexp_eatCharacterClass(state) ||\n      this.regexp_eatUncapturingGroup(state) ||\n      this.regexp_eatCapturingGroup(state)\n    )\n  };\n  pp$1.regexp_eatReverseSolidusAtomEscape = function(state) {\n    var start = state.pos;\n    if (state.eat(0x5C /* \\ */)) {\n      if (this.regexp_eatAtomEscape(state)) {\n        return true\n      }\n      state.pos = start;\n    }\n    return false\n  };\n  pp$1.regexp_eatUncapturingGroup = function(state) {\n    var start = state.pos;\n    if (state.eat(0x28 /* ( */)) {\n      if (state.eat(0x3F /* ? */)) {\n        if (this.options.ecmaVersion >= 16) {\n          var addModifiers = this.regexp_eatModifiers(state);\n          var hasHyphen = state.eat(0x2D /* - */);\n          if (addModifiers || hasHyphen) {\n            for (var i = 0; i < addModifiers.length; i++) {\n              var modifier = addModifiers.charAt(i);\n              if (addModifiers.indexOf(modifier, i + 1) > -1) {\n                state.raise(\"Duplicate regular expression modifiers\");\n              }\n            }\n            if (hasHyphen) {\n              var removeModifiers = this.regexp_eatModifiers(state);\n              if (!addModifiers && !removeModifiers && state.current() === 0x3A /* : */) {\n                state.raise(\"Invalid regular expression modifiers\");\n              }\n              for (var i$1 = 0; i$1 < removeModifiers.length; i$1++) {\n                var modifier$1 = removeModifiers.charAt(i$1);\n                if (\n                  removeModifiers.indexOf(modifier$1, i$1 + 1) > -1 ||\n                  addModifiers.indexOf(modifier$1) > -1\n                ) {\n                  state.raise(\"Duplicate regular expression modifiers\");\n                }\n              }\n            }\n          }\n        }\n        if (state.eat(0x3A /* : */)) {\n          this.regexp_disjunction(state);\n          if (state.eat(0x29 /* ) */)) {\n            return true\n          }\n          state.raise(\"Unterminated group\");\n        }\n      }\n      state.pos = start;\n    }\n    return false\n  };\n  pp$1.regexp_eatCapturingGroup = function(state) {\n    if (state.eat(0x28 /* ( */)) {\n      if (this.options.ecmaVersion >= 9) {\n        this.regexp_groupSpecifier(state);\n      } else if (state.current() === 0x3F /* ? */) {\n        state.raise(\"Invalid group\");\n      }\n      this.regexp_disjunction(state);\n      if (state.eat(0x29 /* ) */)) {\n        state.numCapturingParens += 1;\n        return true\n      }\n      state.raise(\"Unterminated group\");\n    }\n    return false\n  };\n  // RegularExpressionModifiers ::\n  //   [empty]\n  //   RegularExpressionModifiers RegularExpressionModifier\n  pp$1.regexp_eatModifiers = function(state) {\n    var modifiers = \"\";\n    var ch = 0;\n    while ((ch = state.current()) !== -1 && isRegularExpressionModifier(ch)) {\n      modifiers += codePointToString(ch);\n      state.advance();\n    }\n    return modifiers\n  };\n  // RegularExpressionModifier :: one of\n  //   `i` `m` `s`\n  function isRegularExpressionModifier(ch) {\n    return ch === 0x69 /* i */ || ch === 0x6d /* m */ || ch === 0x73 /* s */\n  }\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-ExtendedAtom\n  pp$1.regexp_eatExtendedAtom = function(state) {\n    return (\n      state.eat(0x2E /* . */) ||\n      this.regexp_eatReverseSolidusAtomEscape(state) ||\n      this.regexp_eatCharacterClass(state) ||\n      this.regexp_eatUncapturingGroup(state) ||\n      this.regexp_eatCapturingGroup(state) ||\n      this.regexp_eatInvalidBracedQuantifier(state) ||\n      this.regexp_eatExtendedPatternCharacter(state)\n    )\n  };\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-InvalidBracedQuantifier\n  pp$1.regexp_eatInvalidBracedQuantifier = function(state) {\n    if (this.regexp_eatBracedQuantifier(state, true)) {\n      state.raise(\"Nothing to repeat\");\n    }\n    return false\n  };\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-SyntaxCharacter\n  pp$1.regexp_eatSyntaxCharacter = function(state) {\n    var ch = state.current();\n    if (isSyntaxCharacter(ch)) {\n      state.lastIntValue = ch;\n      state.advance();\n      return true\n    }\n    return false\n  };\n  function isSyntaxCharacter(ch) {\n    return (\n      ch === 0x24 /* $ */ ||\n      ch >= 0x28 /* ( */ && ch <= 0x2B /* + */ ||\n      ch === 0x2E /* . */ ||\n      ch === 0x3F /* ? */ ||\n      ch >= 0x5B /* [ */ && ch <= 0x5E /* ^ */ ||\n      ch >= 0x7B /* { */ && ch <= 0x7D /* } */\n    )\n  }\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-PatternCharacter\n  // But eat eager.\n  pp$1.regexp_eatPatternCharacters = function(state) {\n    var start = state.pos;\n    var ch = 0;\n    while ((ch = state.current()) !== -1 && !isSyntaxCharacter(ch)) {\n      state.advance();\n    }\n    return state.pos !== start\n  };\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-ExtendedPatternCharacter\n  pp$1.regexp_eatExtendedPatternCharacter = function(state) {\n    var ch = state.current();\n    if (\n      ch !== -1 &&\n      ch !== 0x24 /* $ */ &&\n      !(ch >= 0x28 /* ( */ && ch <= 0x2B /* + */) &&\n      ch !== 0x2E /* . */ &&\n      ch !== 0x3F /* ? */ &&\n      ch !== 0x5B /* [ */ &&\n      ch !== 0x5E /* ^ */ &&\n      ch !== 0x7C /* | */\n    ) {\n      state.advance();\n      return true\n    }\n    return false\n  };\n\n  // GroupSpecifier ::\n  //   [empty]\n  //   `?` GroupName\n  pp$1.regexp_groupSpecifier = function(state) {\n    if (state.eat(0x3F /* ? */)) {\n      if (!this.regexp_eatGroupName(state)) { state.raise(\"Invalid group\"); }\n      var trackDisjunction = this.options.ecmaVersion >= 16;\n      var known = state.groupNames[state.lastStringValue];\n      if (known) {\n        if (trackDisjunction) {\n          for (var i = 0, list = known; i < list.length; i += 1) {\n            var altID = list[i];\n\n            if (!altID.separatedFrom(state.branchID))\n              { state.raise(\"Duplicate capture group name\"); }\n          }\n        } else {\n          state.raise(\"Duplicate capture group name\");\n        }\n      }\n      if (trackDisjunction) {\n        (known || (state.groupNames[state.lastStringValue] = [])).push(state.branchID);\n      } else {\n        state.groupNames[state.lastStringValue] = true;\n      }\n    }\n  };\n\n  // GroupName ::\n  //   `<` RegExpIdentifierName `>`\n  // Note: this updates `state.lastStringValue` property with the eaten name.\n  pp$1.regexp_eatGroupName = function(state) {\n    state.lastStringValue = \"\";\n    if (state.eat(0x3C /* < */)) {\n      if (this.regexp_eatRegExpIdentifierName(state) && state.eat(0x3E /* > */)) {\n        return true\n      }\n      state.raise(\"Invalid capture group name\");\n    }\n    return false\n  };\n\n  // RegExpIdentifierName ::\n  //   RegExpIdentifierStart\n  //   RegExpIdentifierName RegExpIdentifierPart\n  // Note: this updates `state.lastStringValue` property with the eaten name.\n  pp$1.regexp_eatRegExpIdentifierName = function(state) {\n    state.lastStringValue = \"\";\n    if (this.regexp_eatRegExpIdentifierStart(state)) {\n      state.lastStringValue += codePointToString(state.lastIntValue);\n      while (this.regexp_eatRegExpIdentifierPart(state)) {\n        state.lastStringValue += codePointToString(state.lastIntValue);\n      }\n      return true\n    }\n    return false\n  };\n\n  // RegExpIdentifierStart ::\n  //   UnicodeIDStart\n  //   `$`\n  //   `_`\n  //   `\\` RegExpUnicodeEscapeSequence[+U]\n  pp$1.regexp_eatRegExpIdentifierStart = function(state) {\n    var start = state.pos;\n    var forceU = this.options.ecmaVersion >= 11;\n    var ch = state.current(forceU);\n    state.advance(forceU);\n\n    if (ch === 0x5C /* \\ */ && this.regexp_eatRegExpUnicodeEscapeSequence(state, forceU)) {\n      ch = state.lastIntValue;\n    }\n    if (isRegExpIdentifierStart(ch)) {\n      state.lastIntValue = ch;\n      return true\n    }\n\n    state.pos = start;\n    return false\n  };\n  function isRegExpIdentifierStart(ch) {\n    return isIdentifierStart(ch, true) || ch === 0x24 /* $ */ || ch === 0x5F /* _ */\n  }\n\n  // RegExpIdentifierPart ::\n  //   UnicodeIDContinue\n  //   `$`\n  //   `_`\n  //   `\\` RegExpUnicodeEscapeSequence[+U]\n  //   <ZWNJ>\n  //   <ZWJ>\n  pp$1.regexp_eatRegExpIdentifierPart = function(state) {\n    var start = state.pos;\n    var forceU = this.options.ecmaVersion >= 11;\n    var ch = state.current(forceU);\n    state.advance(forceU);\n\n    if (ch === 0x5C /* \\ */ && this.regexp_eatRegExpUnicodeEscapeSequence(state, forceU)) {\n      ch = state.lastIntValue;\n    }\n    if (isRegExpIdentifierPart(ch)) {\n      state.lastIntValue = ch;\n      return true\n    }\n\n    state.pos = start;\n    return false\n  };\n  function isRegExpIdentifierPart(ch) {\n    return isIdentifierChar(ch, true) || ch === 0x24 /* $ */ || ch === 0x5F /* _ */ || ch === 0x200C /* <ZWNJ> */ || ch === 0x200D /* <ZWJ> */\n  }\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-AtomEscape\n  pp$1.regexp_eatAtomEscape = function(state) {\n    if (\n      this.regexp_eatBackReference(state) ||\n      this.regexp_eatCharacterClassEscape(state) ||\n      this.regexp_eatCharacterEscape(state) ||\n      (state.switchN && this.regexp_eatKGroupName(state))\n    ) {\n      return true\n    }\n    if (state.switchU) {\n      // Make the same message as V8.\n      if (state.current() === 0x63 /* c */) {\n        state.raise(\"Invalid unicode escape\");\n      }\n      state.raise(\"Invalid escape\");\n    }\n    return false\n  };\n  pp$1.regexp_eatBackReference = function(state) {\n    var start = state.pos;\n    if (this.regexp_eatDecimalEscape(state)) {\n      var n = state.lastIntValue;\n      if (state.switchU) {\n        // For SyntaxError in https://www.ecma-international.org/ecma-262/8.0/#sec-atomescape\n        if (n > state.maxBackReference) {\n          state.maxBackReference = n;\n        }\n        return true\n      }\n      if (n <= state.numCapturingParens) {\n        return true\n      }\n      state.pos = start;\n    }\n    return false\n  };\n  pp$1.regexp_eatKGroupName = function(state) {\n    if (state.eat(0x6B /* k */)) {\n      if (this.regexp_eatGroupName(state)) {\n        state.backReferenceNames.push(state.lastStringValue);\n        return true\n      }\n      state.raise(\"Invalid named reference\");\n    }\n    return false\n  };\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-CharacterEscape\n  pp$1.regexp_eatCharacterEscape = function(state) {\n    return (\n      this.regexp_eatControlEscape(state) ||\n      this.regexp_eatCControlLetter(state) ||\n      this.regexp_eatZero(state) ||\n      this.regexp_eatHexEscapeSequence(state) ||\n      this.regexp_eatRegExpUnicodeEscapeSequence(state, false) ||\n      (!state.switchU && this.regexp_eatLegacyOctalEscapeSequence(state)) ||\n      this.regexp_eatIdentityEscape(state)\n    )\n  };\n  pp$1.regexp_eatCControlLetter = function(state) {\n    var start = state.pos;\n    if (state.eat(0x63 /* c */)) {\n      if (this.regexp_eatControlLetter(state)) {\n        return true\n      }\n      state.pos = start;\n    }\n    return false\n  };\n  pp$1.regexp_eatZero = function(state) {\n    if (state.current() === 0x30 /* 0 */ && !isDecimalDigit(state.lookahead())) {\n      state.lastIntValue = 0;\n      state.advance();\n      return true\n    }\n    return false\n  };\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-ControlEscape\n  pp$1.regexp_eatControlEscape = function(state) {\n    var ch = state.current();\n    if (ch === 0x74 /* t */) {\n      state.lastIntValue = 0x09; /* \\t */\n      state.advance();\n      return true\n    }\n    if (ch === 0x6E /* n */) {\n      state.lastIntValue = 0x0A; /* \\n */\n      state.advance();\n      return true\n    }\n    if (ch === 0x76 /* v */) {\n      state.lastIntValue = 0x0B; /* \\v */\n      state.advance();\n      return true\n    }\n    if (ch === 0x66 /* f */) {\n      state.lastIntValue = 0x0C; /* \\f */\n      state.advance();\n      return true\n    }\n    if (ch === 0x72 /* r */) {\n      state.lastIntValue = 0x0D; /* \\r */\n      state.advance();\n      return true\n    }\n    return false\n  };\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-ControlLetter\n  pp$1.regexp_eatControlLetter = function(state) {\n    var ch = state.current();\n    if (isControlLetter(ch)) {\n      state.lastIntValue = ch % 0x20;\n      state.advance();\n      return true\n    }\n    return false\n  };\n  function isControlLetter(ch) {\n    return (\n      (ch >= 0x41 /* A */ && ch <= 0x5A /* Z */) ||\n      (ch >= 0x61 /* a */ && ch <= 0x7A /* z */)\n    )\n  }\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-RegExpUnicodeEscapeSequence\n  pp$1.regexp_eatRegExpUnicodeEscapeSequence = function(state, forceU) {\n    if ( forceU === void 0 ) forceU = false;\n\n    var start = state.pos;\n    var switchU = forceU || state.switchU;\n\n    if (state.eat(0x75 /* u */)) {\n      if (this.regexp_eatFixedHexDigits(state, 4)) {\n        var lead = state.lastIntValue;\n        if (switchU && lead >= 0xD800 && lead <= 0xDBFF) {\n          var leadSurrogateEnd = state.pos;\n          if (state.eat(0x5C /* \\ */) && state.eat(0x75 /* u */) && this.regexp_eatFixedHexDigits(state, 4)) {\n            var trail = state.lastIntValue;\n            if (trail >= 0xDC00 && trail <= 0xDFFF) {\n              state.lastIntValue = (lead - 0xD800) * 0x400 + (trail - 0xDC00) + 0x10000;\n              return true\n            }\n          }\n          state.pos = leadSurrogateEnd;\n          state.lastIntValue = lead;\n        }\n        return true\n      }\n      if (\n        switchU &&\n        state.eat(0x7B /* { */) &&\n        this.regexp_eatHexDigits(state) &&\n        state.eat(0x7D /* } */) &&\n        isValidUnicode(state.lastIntValue)\n      ) {\n        return true\n      }\n      if (switchU) {\n        state.raise(\"Invalid unicode escape\");\n      }\n      state.pos = start;\n    }\n\n    return false\n  };\n  function isValidUnicode(ch) {\n    return ch >= 0 && ch <= 0x10FFFF\n  }\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-IdentityEscape\n  pp$1.regexp_eatIdentityEscape = function(state) {\n    if (state.switchU) {\n      if (this.regexp_eatSyntaxCharacter(state)) {\n        return true\n      }\n      if (state.eat(0x2F /* / */)) {\n        state.lastIntValue = 0x2F; /* / */\n        return true\n      }\n      return false\n    }\n\n    var ch = state.current();\n    if (ch !== 0x63 /* c */ && (!state.switchN || ch !== 0x6B /* k */)) {\n      state.lastIntValue = ch;\n      state.advance();\n      return true\n    }\n\n    return false\n  };\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-DecimalEscape\n  pp$1.regexp_eatDecimalEscape = function(state) {\n    state.lastIntValue = 0;\n    var ch = state.current();\n    if (ch >= 0x31 /* 1 */ && ch <= 0x39 /* 9 */) {\n      do {\n        state.lastIntValue = 10 * state.lastIntValue + (ch - 0x30 /* 0 */);\n        state.advance();\n      } while ((ch = state.current()) >= 0x30 /* 0 */ && ch <= 0x39 /* 9 */)\n      return true\n    }\n    return false\n  };\n\n  // Return values used by character set parsing methods, needed to\n  // forbid negation of sets that can match strings.\n  var CharSetNone = 0; // Nothing parsed\n  var CharSetOk = 1; // Construct parsed, cannot contain strings\n  var CharSetString = 2; // Construct parsed, can contain strings\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-CharacterClassEscape\n  pp$1.regexp_eatCharacterClassEscape = function(state) {\n    var ch = state.current();\n\n    if (isCharacterClassEscape(ch)) {\n      state.lastIntValue = -1;\n      state.advance();\n      return CharSetOk\n    }\n\n    var negate = false;\n    if (\n      state.switchU &&\n      this.options.ecmaVersion >= 9 &&\n      ((negate = ch === 0x50 /* P */) || ch === 0x70 /* p */)\n    ) {\n      state.lastIntValue = -1;\n      state.advance();\n      var result;\n      if (\n        state.eat(0x7B /* { */) &&\n        (result = this.regexp_eatUnicodePropertyValueExpression(state)) &&\n        state.eat(0x7D /* } */)\n      ) {\n        if (negate && result === CharSetString) { state.raise(\"Invalid property name\"); }\n        return result\n      }\n      state.raise(\"Invalid property name\");\n    }\n\n    return CharSetNone\n  };\n\n  function isCharacterClassEscape(ch) {\n    return (\n      ch === 0x64 /* d */ ||\n      ch === 0x44 /* D */ ||\n      ch === 0x73 /* s */ ||\n      ch === 0x53 /* S */ ||\n      ch === 0x77 /* w */ ||\n      ch === 0x57 /* W */\n    )\n  }\n\n  // UnicodePropertyValueExpression ::\n  //   UnicodePropertyName `=` UnicodePropertyValue\n  //   LoneUnicodePropertyNameOrValue\n  pp$1.regexp_eatUnicodePropertyValueExpression = function(state) {\n    var start = state.pos;\n\n    // UnicodePropertyName `=` UnicodePropertyValue\n    if (this.regexp_eatUnicodePropertyName(state) && state.eat(0x3D /* = */)) {\n      var name = state.lastStringValue;\n      if (this.regexp_eatUnicodePropertyValue(state)) {\n        var value = state.lastStringValue;\n        this.regexp_validateUnicodePropertyNameAndValue(state, name, value);\n        return CharSetOk\n      }\n    }\n    state.pos = start;\n\n    // LoneUnicodePropertyNameOrValue\n    if (this.regexp_eatLoneUnicodePropertyNameOrValue(state)) {\n      var nameOrValue = state.lastStringValue;\n      return this.regexp_validateUnicodePropertyNameOrValue(state, nameOrValue)\n    }\n    return CharSetNone\n  };\n\n  pp$1.regexp_validateUnicodePropertyNameAndValue = function(state, name, value) {\n    if (!hasOwn(state.unicodeProperties.nonBinary, name))\n      { state.raise(\"Invalid property name\"); }\n    if (!state.unicodeProperties.nonBinary[name].test(value))\n      { state.raise(\"Invalid property value\"); }\n  };\n\n  pp$1.regexp_validateUnicodePropertyNameOrValue = function(state, nameOrValue) {\n    if (state.unicodeProperties.binary.test(nameOrValue)) { return CharSetOk }\n    if (state.switchV && state.unicodeProperties.binaryOfStrings.test(nameOrValue)) { return CharSetString }\n    state.raise(\"Invalid property name\");\n  };\n\n  // UnicodePropertyName ::\n  //   UnicodePropertyNameCharacters\n  pp$1.regexp_eatUnicodePropertyName = function(state) {\n    var ch = 0;\n    state.lastStringValue = \"\";\n    while (isUnicodePropertyNameCharacter(ch = state.current())) {\n      state.lastStringValue += codePointToString(ch);\n      state.advance();\n    }\n    return state.lastStringValue !== \"\"\n  };\n\n  function isUnicodePropertyNameCharacter(ch) {\n    return isControlLetter(ch) || ch === 0x5F /* _ */\n  }\n\n  // UnicodePropertyValue ::\n  //   UnicodePropertyValueCharacters\n  pp$1.regexp_eatUnicodePropertyValue = function(state) {\n    var ch = 0;\n    state.lastStringValue = \"\";\n    while (isUnicodePropertyValueCharacter(ch = state.current())) {\n      state.lastStringValue += codePointToString(ch);\n      state.advance();\n    }\n    return state.lastStringValue !== \"\"\n  };\n  function isUnicodePropertyValueCharacter(ch) {\n    return isUnicodePropertyNameCharacter(ch) || isDecimalDigit(ch)\n  }\n\n  // LoneUnicodePropertyNameOrValue ::\n  //   UnicodePropertyValueCharacters\n  pp$1.regexp_eatLoneUnicodePropertyNameOrValue = function(state) {\n    return this.regexp_eatUnicodePropertyValue(state)\n  };\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-CharacterClass\n  pp$1.regexp_eatCharacterClass = function(state) {\n    if (state.eat(0x5B /* [ */)) {\n      var negate = state.eat(0x5E /* ^ */);\n      var result = this.regexp_classContents(state);\n      if (!state.eat(0x5D /* ] */))\n        { state.raise(\"Unterminated character class\"); }\n      if (negate && result === CharSetString)\n        { state.raise(\"Negated character class may contain strings\"); }\n      return true\n    }\n    return false\n  };\n\n  // https://tc39.es/ecma262/#prod-ClassContents\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-ClassRanges\n  pp$1.regexp_classContents = function(state) {\n    if (state.current() === 0x5D /* ] */) { return CharSetOk }\n    if (state.switchV) { return this.regexp_classSetExpression(state) }\n    this.regexp_nonEmptyClassRanges(state);\n    return CharSetOk\n  };\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-NonemptyClassRanges\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-NonemptyClassRangesNoDash\n  pp$1.regexp_nonEmptyClassRanges = function(state) {\n    while (this.regexp_eatClassAtom(state)) {\n      var left = state.lastIntValue;\n      if (state.eat(0x2D /* - */) && this.regexp_eatClassAtom(state)) {\n        var right = state.lastIntValue;\n        if (state.switchU && (left === -1 || right === -1)) {\n          state.raise(\"Invalid character class\");\n        }\n        if (left !== -1 && right !== -1 && left > right) {\n          state.raise(\"Range out of order in character class\");\n        }\n      }\n    }\n  };\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-ClassAtom\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-ClassAtomNoDash\n  pp$1.regexp_eatClassAtom = function(state) {\n    var start = state.pos;\n\n    if (state.eat(0x5C /* \\ */)) {\n      if (this.regexp_eatClassEscape(state)) {\n        return true\n      }\n      if (state.switchU) {\n        // Make the same message as V8.\n        var ch$1 = state.current();\n        if (ch$1 === 0x63 /* c */ || isOctalDigit(ch$1)) {\n          state.raise(\"Invalid class escape\");\n        }\n        state.raise(\"Invalid escape\");\n      }\n      state.pos = start;\n    }\n\n    var ch = state.current();\n    if (ch !== 0x5D /* ] */) {\n      state.lastIntValue = ch;\n      state.advance();\n      return true\n    }\n\n    return false\n  };\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-ClassEscape\n  pp$1.regexp_eatClassEscape = function(state) {\n    var start = state.pos;\n\n    if (state.eat(0x62 /* b */)) {\n      state.lastIntValue = 0x08; /* <BS> */\n      return true\n    }\n\n    if (state.switchU && state.eat(0x2D /* - */)) {\n      state.lastIntValue = 0x2D; /* - */\n      return true\n    }\n\n    if (!state.switchU && state.eat(0x63 /* c */)) {\n      if (this.regexp_eatClassControlLetter(state)) {\n        return true\n      }\n      state.pos = start;\n    }\n\n    return (\n      this.regexp_eatCharacterClassEscape(state) ||\n      this.regexp_eatCharacterEscape(state)\n    )\n  };\n\n  // https://tc39.es/ecma262/#prod-ClassSetExpression\n  // https://tc39.es/ecma262/#prod-ClassUnion\n  // https://tc39.es/ecma262/#prod-ClassIntersection\n  // https://tc39.es/ecma262/#prod-ClassSubtraction\n  pp$1.regexp_classSetExpression = function(state) {\n    var result = CharSetOk, subResult;\n    if (this.regexp_eatClassSetRange(state)) ; else if (subResult = this.regexp_eatClassSetOperand(state)) {\n      if (subResult === CharSetString) { result = CharSetString; }\n      // https://tc39.es/ecma262/#prod-ClassIntersection\n      var start = state.pos;\n      while (state.eatChars([0x26, 0x26] /* && */)) {\n        if (\n          state.current() !== 0x26 /* & */ &&\n          (subResult = this.regexp_eatClassSetOperand(state))\n        ) {\n          if (subResult !== CharSetString) { result = CharSetOk; }\n          continue\n        }\n        state.raise(\"Invalid character in character class\");\n      }\n      if (start !== state.pos) { return result }\n      // https://tc39.es/ecma262/#prod-ClassSubtraction\n      while (state.eatChars([0x2D, 0x2D] /* -- */)) {\n        if (this.regexp_eatClassSetOperand(state)) { continue }\n        state.raise(\"Invalid character in character class\");\n      }\n      if (start !== state.pos) { return result }\n    } else {\n      state.raise(\"Invalid character in character class\");\n    }\n    // https://tc39.es/ecma262/#prod-ClassUnion\n    for (;;) {\n      if (this.regexp_eatClassSetRange(state)) { continue }\n      subResult = this.regexp_eatClassSetOperand(state);\n      if (!subResult) { return result }\n      if (subResult === CharSetString) { result = CharSetString; }\n    }\n  };\n\n  // https://tc39.es/ecma262/#prod-ClassSetRange\n  pp$1.regexp_eatClassSetRange = function(state) {\n    var start = state.pos;\n    if (this.regexp_eatClassSetCharacter(state)) {\n      var left = state.lastIntValue;\n      if (state.eat(0x2D /* - */) && this.regexp_eatClassSetCharacter(state)) {\n        var right = state.lastIntValue;\n        if (left !== -1 && right !== -1 && left > right) {\n          state.raise(\"Range out of order in character class\");\n        }\n        return true\n      }\n      state.pos = start;\n    }\n    return false\n  };\n\n  // https://tc39.es/ecma262/#prod-ClassSetOperand\n  pp$1.regexp_eatClassSetOperand = function(state) {\n    if (this.regexp_eatClassSetCharacter(state)) { return CharSetOk }\n    return this.regexp_eatClassStringDisjunction(state) || this.regexp_eatNestedClass(state)\n  };\n\n  // https://tc39.es/ecma262/#prod-NestedClass\n  pp$1.regexp_eatNestedClass = function(state) {\n    var start = state.pos;\n    if (state.eat(0x5B /* [ */)) {\n      var negate = state.eat(0x5E /* ^ */);\n      var result = this.regexp_classContents(state);\n      if (state.eat(0x5D /* ] */)) {\n        if (negate && result === CharSetString) {\n          state.raise(\"Negated character class may contain strings\");\n        }\n        return result\n      }\n      state.pos = start;\n    }\n    if (state.eat(0x5C /* \\ */)) {\n      var result$1 = this.regexp_eatCharacterClassEscape(state);\n      if (result$1) {\n        return result$1\n      }\n      state.pos = start;\n    }\n    return null\n  };\n\n  // https://tc39.es/ecma262/#prod-ClassStringDisjunction\n  pp$1.regexp_eatClassStringDisjunction = function(state) {\n    var start = state.pos;\n    if (state.eatChars([0x5C, 0x71] /* \\q */)) {\n      if (state.eat(0x7B /* { */)) {\n        var result = this.regexp_classStringDisjunctionContents(state);\n        if (state.eat(0x7D /* } */)) {\n          return result\n        }\n      } else {\n        // Make the same message as V8.\n        state.raise(\"Invalid escape\");\n      }\n      state.pos = start;\n    }\n    return null\n  };\n\n  // https://tc39.es/ecma262/#prod-ClassStringDisjunctionContents\n  pp$1.regexp_classStringDisjunctionContents = function(state) {\n    var result = this.regexp_classString(state);\n    while (state.eat(0x7C /* | */)) {\n      if (this.regexp_classString(state) === CharSetString) { result = CharSetString; }\n    }\n    return result\n  };\n\n  // https://tc39.es/ecma262/#prod-ClassString\n  // https://tc39.es/ecma262/#prod-NonEmptyClassString\n  pp$1.regexp_classString = function(state) {\n    var count = 0;\n    while (this.regexp_eatClassSetCharacter(state)) { count++; }\n    return count === 1 ? CharSetOk : CharSetString\n  };\n\n  // https://tc39.es/ecma262/#prod-ClassSetCharacter\n  pp$1.regexp_eatClassSetCharacter = function(state) {\n    var start = state.pos;\n    if (state.eat(0x5C /* \\ */)) {\n      if (\n        this.regexp_eatCharacterEscape(state) ||\n        this.regexp_eatClassSetReservedPunctuator(state)\n      ) {\n        return true\n      }\n      if (state.eat(0x62 /* b */)) {\n        state.lastIntValue = 0x08; /* <BS> */\n        return true\n      }\n      state.pos = start;\n      return false\n    }\n    var ch = state.current();\n    if (ch < 0 || ch === state.lookahead() && isClassSetReservedDoublePunctuatorCharacter(ch)) { return false }\n    if (isClassSetSyntaxCharacter(ch)) { return false }\n    state.advance();\n    state.lastIntValue = ch;\n    return true\n  };\n\n  // https://tc39.es/ecma262/#prod-ClassSetReservedDoublePunctuator\n  function isClassSetReservedDoublePunctuatorCharacter(ch) {\n    return (\n      ch === 0x21 /* ! */ ||\n      ch >= 0x23 /* # */ && ch <= 0x26 /* & */ ||\n      ch >= 0x2A /* * */ && ch <= 0x2C /* , */ ||\n      ch === 0x2E /* . */ ||\n      ch >= 0x3A /* : */ && ch <= 0x40 /* @ */ ||\n      ch === 0x5E /* ^ */ ||\n      ch === 0x60 /* ` */ ||\n      ch === 0x7E /* ~ */\n    )\n  }\n\n  // https://tc39.es/ecma262/#prod-ClassSetSyntaxCharacter\n  function isClassSetSyntaxCharacter(ch) {\n    return (\n      ch === 0x28 /* ( */ ||\n      ch === 0x29 /* ) */ ||\n      ch === 0x2D /* - */ ||\n      ch === 0x2F /* / */ ||\n      ch >= 0x5B /* [ */ && ch <= 0x5D /* ] */ ||\n      ch >= 0x7B /* { */ && ch <= 0x7D /* } */\n    )\n  }\n\n  // https://tc39.es/ecma262/#prod-ClassSetReservedPunctuator\n  pp$1.regexp_eatClassSetReservedPunctuator = function(state) {\n    var ch = state.current();\n    if (isClassSetReservedPunctuator(ch)) {\n      state.lastIntValue = ch;\n      state.advance();\n      return true\n    }\n    return false\n  };\n\n  // https://tc39.es/ecma262/#prod-ClassSetReservedPunctuator\n  function isClassSetReservedPunctuator(ch) {\n    return (\n      ch === 0x21 /* ! */ ||\n      ch === 0x23 /* # */ ||\n      ch === 0x25 /* % */ ||\n      ch === 0x26 /* & */ ||\n      ch === 0x2C /* , */ ||\n      ch === 0x2D /* - */ ||\n      ch >= 0x3A /* : */ && ch <= 0x3E /* > */ ||\n      ch === 0x40 /* @ */ ||\n      ch === 0x60 /* ` */ ||\n      ch === 0x7E /* ~ */\n    )\n  }\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-ClassControlLetter\n  pp$1.regexp_eatClassControlLetter = function(state) {\n    var ch = state.current();\n    if (isDecimalDigit(ch) || ch === 0x5F /* _ */) {\n      state.lastIntValue = ch % 0x20;\n      state.advance();\n      return true\n    }\n    return false\n  };\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-HexEscapeSequence\n  pp$1.regexp_eatHexEscapeSequence = function(state) {\n    var start = state.pos;\n    if (state.eat(0x78 /* x */)) {\n      if (this.regexp_eatFixedHexDigits(state, 2)) {\n        return true\n      }\n      if (state.switchU) {\n        state.raise(\"Invalid escape\");\n      }\n      state.pos = start;\n    }\n    return false\n  };\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-DecimalDigits\n  pp$1.regexp_eatDecimalDigits = function(state) {\n    var start = state.pos;\n    var ch = 0;\n    state.lastIntValue = 0;\n    while (isDecimalDigit(ch = state.current())) {\n      state.lastIntValue = 10 * state.lastIntValue + (ch - 0x30 /* 0 */);\n      state.advance();\n    }\n    return state.pos !== start\n  };\n  function isDecimalDigit(ch) {\n    return ch >= 0x30 /* 0 */ && ch <= 0x39 /* 9 */\n  }\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-HexDigits\n  pp$1.regexp_eatHexDigits = function(state) {\n    var start = state.pos;\n    var ch = 0;\n    state.lastIntValue = 0;\n    while (isHexDigit(ch = state.current())) {\n      state.lastIntValue = 16 * state.lastIntValue + hexToInt(ch);\n      state.advance();\n    }\n    return state.pos !== start\n  };\n  function isHexDigit(ch) {\n    return (\n      (ch >= 0x30 /* 0 */ && ch <= 0x39 /* 9 */) ||\n      (ch >= 0x41 /* A */ && ch <= 0x46 /* F */) ||\n      (ch >= 0x61 /* a */ && ch <= 0x66 /* f */)\n    )\n  }\n  function hexToInt(ch) {\n    if (ch >= 0x41 /* A */ && ch <= 0x46 /* F */) {\n      return 10 + (ch - 0x41 /* A */)\n    }\n    if (ch >= 0x61 /* a */ && ch <= 0x66 /* f */) {\n      return 10 + (ch - 0x61 /* a */)\n    }\n    return ch - 0x30 /* 0 */\n  }\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-LegacyOctalEscapeSequence\n  // Allows only 0-377(octal) i.e. 0-255(decimal).\n  pp$1.regexp_eatLegacyOctalEscapeSequence = function(state) {\n    if (this.regexp_eatOctalDigit(state)) {\n      var n1 = state.lastIntValue;\n      if (this.regexp_eatOctalDigit(state)) {\n        var n2 = state.lastIntValue;\n        if (n1 <= 3 && this.regexp_eatOctalDigit(state)) {\n          state.lastIntValue = n1 * 64 + n2 * 8 + state.lastIntValue;\n        } else {\n          state.lastIntValue = n1 * 8 + n2;\n        }\n      } else {\n        state.lastIntValue = n1;\n      }\n      return true\n    }\n    return false\n  };\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-OctalDigit\n  pp$1.regexp_eatOctalDigit = function(state) {\n    var ch = state.current();\n    if (isOctalDigit(ch)) {\n      state.lastIntValue = ch - 0x30; /* 0 */\n      state.advance();\n      return true\n    }\n    state.lastIntValue = 0;\n    return false\n  };\n  function isOctalDigit(ch) {\n    return ch >= 0x30 /* 0 */ && ch <= 0x37 /* 7 */\n  }\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-Hex4Digits\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-HexDigit\n  // And HexDigit HexDigit in https://www.ecma-international.org/ecma-262/8.0/#prod-HexEscapeSequence\n  pp$1.regexp_eatFixedHexDigits = function(state, length) {\n    var start = state.pos;\n    state.lastIntValue = 0;\n    for (var i = 0; i < length; ++i) {\n      var ch = state.current();\n      if (!isHexDigit(ch)) {\n        state.pos = start;\n        return false\n      }\n      state.lastIntValue = 16 * state.lastIntValue + hexToInt(ch);\n      state.advance();\n    }\n    return true\n  };\n\n  // Object type used to represent tokens. Note that normally, tokens\n  // simply exist as properties on the parser object. This is only\n  // used for the onToken callback and the external tokenizer.\n\n  var Token = function Token(p) {\n    this.type = p.type;\n    this.value = p.value;\n    this.start = p.start;\n    this.end = p.end;\n    if (p.options.locations)\n      { this.loc = new SourceLocation(p, p.startLoc, p.endLoc); }\n    if (p.options.ranges)\n      { this.range = [p.start, p.end]; }\n  };\n\n  // ## Tokenizer\n\n  var pp = Parser.prototype;\n\n  // Move to the next token\n\n  pp.next = function(ignoreEscapeSequenceInKeyword) {\n    if (!ignoreEscapeSequenceInKeyword && this.type.keyword && this.containsEsc)\n      { this.raiseRecoverable(this.start, \"Escape sequence in keyword \" + this.type.keyword); }\n    if (this.options.onToken)\n      { this.options.onToken(new Token(this)); }\n\n    this.lastTokEnd = this.end;\n    this.lastTokStart = this.start;\n    this.lastTokEndLoc = this.endLoc;\n    this.lastTokStartLoc = this.startLoc;\n    this.nextToken();\n  };\n\n  pp.getToken = function() {\n    this.next();\n    return new Token(this)\n  };\n\n  // If we're in an ES6 environment, make parsers iterable\n  if (typeof Symbol !== \"undefined\")\n    { pp[Symbol.iterator] = function() {\n      var this$1$1 = this;\n\n      return {\n        next: function () {\n          var token = this$1$1.getToken();\n          return {\n            done: token.type === types$1.eof,\n            value: token\n          }\n        }\n      }\n    }; }\n\n  // Toggle strict mode. Re-reads the next number or string to please\n  // pedantic tests (`\"use strict\"; 010;` should fail).\n\n  // Read a single token, updating the parser object's token-related\n  // properties.\n\n  pp.nextToken = function() {\n    var curContext = this.curContext();\n    if (!curContext || !curContext.preserveSpace) { this.skipSpace(); }\n\n    this.start = this.pos;\n    if (this.options.locations) { this.startLoc = this.curPosition(); }\n    if (this.pos >= this.input.length) { return this.finishToken(types$1.eof) }\n\n    if (curContext.override) { return curContext.override(this) }\n    else { this.readToken(this.fullCharCodeAtPos()); }\n  };\n\n  pp.readToken = function(code) {\n    // Identifier or keyword. '\\uXXXX' sequences are allowed in\n    // identifiers, so '\\' also dispatches to that.\n    if (isIdentifierStart(code, this.options.ecmaVersion >= 6) || code === 92 /* '\\' */)\n      { return this.readWord() }\n\n    return this.getTokenFromCode(code)\n  };\n\n  pp.fullCharCodeAtPos = function() {\n    var code = this.input.charCodeAt(this.pos);\n    if (code <= 0xd7ff || code >= 0xdc00) { return code }\n    var next = this.input.charCodeAt(this.pos + 1);\n    return next <= 0xdbff || next >= 0xe000 ? code : (code << 10) + next - 0x35fdc00\n  };\n\n  pp.skipBlockComment = function() {\n    var startLoc = this.options.onComment && this.curPosition();\n    var start = this.pos, end = this.input.indexOf(\"*/\", this.pos += 2);\n    if (end === -1) { this.raise(this.pos - 2, \"Unterminated comment\"); }\n    this.pos = end + 2;\n    if (this.options.locations) {\n      for (var nextBreak = (void 0), pos = start; (nextBreak = nextLineBreak(this.input, pos, this.pos)) > -1;) {\n        ++this.curLine;\n        pos = this.lineStart = nextBreak;\n      }\n    }\n    if (this.options.onComment)\n      { this.options.onComment(true, this.input.slice(start + 2, end), start, this.pos,\n                             startLoc, this.curPosition()); }\n  };\n\n  pp.skipLineComment = function(startSkip) {\n    var start = this.pos;\n    var startLoc = this.options.onComment && this.curPosition();\n    var ch = this.input.charCodeAt(this.pos += startSkip);\n    while (this.pos < this.input.length && !isNewLine(ch)) {\n      ch = this.input.charCodeAt(++this.pos);\n    }\n    if (this.options.onComment)\n      { this.options.onComment(false, this.input.slice(start + startSkip, this.pos), start, this.pos,\n                             startLoc, this.curPosition()); }\n  };\n\n  // Called at the start of the parse and after every token. Skips\n  // whitespace and comments, and.\n\n  pp.skipSpace = function() {\n    loop: while (this.pos < this.input.length) {\n      var ch = this.input.charCodeAt(this.pos);\n      switch (ch) {\n      case 32: case 160: // ' '\n        ++this.pos;\n        break\n      case 13:\n        if (this.input.charCodeAt(this.pos + 1) === 10) {\n          ++this.pos;\n        }\n      case 10: case 8232: case 8233:\n        ++this.pos;\n        if (this.options.locations) {\n          ++this.curLine;\n          this.lineStart = this.pos;\n        }\n        break\n      case 47: // '/'\n        switch (this.input.charCodeAt(this.pos + 1)) {\n        case 42: // '*'\n          this.skipBlockComment();\n          break\n        case 47:\n          this.skipLineComment(2);\n          break\n        default:\n          break loop\n        }\n        break\n      default:\n        if (ch > 8 && ch < 14 || ch >= 5760 && nonASCIIwhitespace.test(String.fromCharCode(ch))) {\n          ++this.pos;\n        } else {\n          break loop\n        }\n      }\n    }\n  };\n\n  // Called at the end of every token. Sets `end`, `val`, and\n  // maintains `context` and `exprAllowed`, and skips the space after\n  // the token, so that the next one's `start` will point at the\n  // right position.\n\n  pp.finishToken = function(type, val) {\n    this.end = this.pos;\n    if (this.options.locations) { this.endLoc = this.curPosition(); }\n    var prevType = this.type;\n    this.type = type;\n    this.value = val;\n\n    this.updateContext(prevType);\n  };\n\n  // ### Token reading\n\n  // This is the function that is called to fetch the next token. It\n  // is somewhat obscure, because it works in character codes rather\n  // than characters, and because operator parsing has been inlined\n  // into it.\n  //\n  // All in the name of speed.\n  //\n  pp.readToken_dot = function() {\n    var next = this.input.charCodeAt(this.pos + 1);\n    if (next >= 48 && next <= 57) { return this.readNumber(true) }\n    var next2 = this.input.charCodeAt(this.pos + 2);\n    if (this.options.ecmaVersion >= 6 && next === 46 && next2 === 46) { // 46 = dot '.'\n      this.pos += 3;\n      return this.finishToken(types$1.ellipsis)\n    } else {\n      ++this.pos;\n      return this.finishToken(types$1.dot)\n    }\n  };\n\n  pp.readToken_slash = function() { // '/'\n    var next = this.input.charCodeAt(this.pos + 1);\n    if (this.exprAllowed) { ++this.pos; return this.readRegexp() }\n    if (next === 61) { return this.finishOp(types$1.assign, 2) }\n    return this.finishOp(types$1.slash, 1)\n  };\n\n  pp.readToken_mult_modulo_exp = function(code) { // '%*'\n    var next = this.input.charCodeAt(this.pos + 1);\n    var size = 1;\n    var tokentype = code === 42 ? types$1.star : types$1.modulo;\n\n    // exponentiation operator ** and **=\n    if (this.options.ecmaVersion >= 7 && code === 42 && next === 42) {\n      ++size;\n      tokentype = types$1.starstar;\n      next = this.input.charCodeAt(this.pos + 2);\n    }\n\n    if (next === 61) { return this.finishOp(types$1.assign, size + 1) }\n    return this.finishOp(tokentype, size)\n  };\n\n  pp.readToken_pipe_amp = function(code) { // '|&'\n    var next = this.input.charCodeAt(this.pos + 1);\n    if (next === code) {\n      if (this.options.ecmaVersion >= 12) {\n        var next2 = this.input.charCodeAt(this.pos + 2);\n        if (next2 === 61) { return this.finishOp(types$1.assign, 3) }\n      }\n      return this.finishOp(code === 124 ? types$1.logicalOR : types$1.logicalAND, 2)\n    }\n    if (next === 61) { return this.finishOp(types$1.assign, 2) }\n    return this.finishOp(code === 124 ? types$1.bitwiseOR : types$1.bitwiseAND, 1)\n  };\n\n  pp.readToken_caret = function() { // '^'\n    var next = this.input.charCodeAt(this.pos + 1);\n    if (next === 61) { return this.finishOp(types$1.assign, 2) }\n    return this.finishOp(types$1.bitwiseXOR, 1)\n  };\n\n  pp.readToken_plus_min = function(code) { // '+-'\n    var next = this.input.charCodeAt(this.pos + 1);\n    if (next === code) {\n      if (next === 45 && !this.inModule && this.input.charCodeAt(this.pos + 2) === 62 &&\n          (this.lastTokEnd === 0 || lineBreak.test(this.input.slice(this.lastTokEnd, this.pos)))) {\n        // A `-->` line comment\n        this.skipLineComment(3);\n        this.skipSpace();\n        return this.nextToken()\n      }\n      return this.finishOp(types$1.incDec, 2)\n    }\n    if (next === 61) { return this.finishOp(types$1.assign, 2) }\n    return this.finishOp(types$1.plusMin, 1)\n  };\n\n  pp.readToken_lt_gt = function(code) { // '<>'\n    var next = this.input.charCodeAt(this.pos + 1);\n    var size = 1;\n    if (next === code) {\n      size = code === 62 && this.input.charCodeAt(this.pos + 2) === 62 ? 3 : 2;\n      if (this.input.charCodeAt(this.pos + size) === 61) { return this.finishOp(types$1.assign, size + 1) }\n      return this.finishOp(types$1.bitShift, size)\n    }\n    if (next === 33 && code === 60 && !this.inModule && this.input.charCodeAt(this.pos + 2) === 45 &&\n        this.input.charCodeAt(this.pos + 3) === 45) {\n      // `<!--`, an XML-style comment that should be interpreted as a line comment\n      this.skipLineComment(4);\n      this.skipSpace();\n      return this.nextToken()\n    }\n    if (next === 61) { size = 2; }\n    return this.finishOp(types$1.relational, size)\n  };\n\n  pp.readToken_eq_excl = function(code) { // '=!'\n    var next = this.input.charCodeAt(this.pos + 1);\n    if (next === 61) { return this.finishOp(types$1.equality, this.input.charCodeAt(this.pos + 2) === 61 ? 3 : 2) }\n    if (code === 61 && next === 62 && this.options.ecmaVersion >= 6) { // '=>'\n      this.pos += 2;\n      return this.finishToken(types$1.arrow)\n    }\n    return this.finishOp(code === 61 ? types$1.eq : types$1.prefix, 1)\n  };\n\n  pp.readToken_question = function() { // '?'\n    var ecmaVersion = this.options.ecmaVersion;\n    if (ecmaVersion >= 11) {\n      var next = this.input.charCodeAt(this.pos + 1);\n      if (next === 46) {\n        var next2 = this.input.charCodeAt(this.pos + 2);\n        if (next2 < 48 || next2 > 57) { return this.finishOp(types$1.questionDot, 2) }\n      }\n      if (next === 63) {\n        if (ecmaVersion >= 12) {\n          var next2$1 = this.input.charCodeAt(this.pos + 2);\n          if (next2$1 === 61) { return this.finishOp(types$1.assign, 3) }\n        }\n        return this.finishOp(types$1.coalesce, 2)\n      }\n    }\n    return this.finishOp(types$1.question, 1)\n  };\n\n  pp.readToken_numberSign = function() { // '#'\n    var ecmaVersion = this.options.ecmaVersion;\n    var code = 35; // '#'\n    if (ecmaVersion >= 13) {\n      ++this.pos;\n      code = this.fullCharCodeAtPos();\n      if (isIdentifierStart(code, true) || code === 92 /* '\\' */) {\n        return this.finishToken(types$1.privateId, this.readWord1())\n      }\n    }\n\n    this.raise(this.pos, \"Unexpected character '\" + codePointToString(code) + \"'\");\n  };\n\n  pp.getTokenFromCode = function(code) {\n    switch (code) {\n    // The interpretation of a dot depends on whether it is followed\n    // by a digit or another two dots.\n    case 46: // '.'\n      return this.readToken_dot()\n\n    // Punctuation tokens.\n    case 40: ++this.pos; return this.finishToken(types$1.parenL)\n    case 41: ++this.pos; return this.finishToken(types$1.parenR)\n    case 59: ++this.pos; return this.finishToken(types$1.semi)\n    case 44: ++this.pos; return this.finishToken(types$1.comma)\n    case 91: ++this.pos; return this.finishToken(types$1.bracketL)\n    case 93: ++this.pos; return this.finishToken(types$1.bracketR)\n    case 123: ++this.pos; return this.finishToken(types$1.braceL)\n    case 125: ++this.pos; return this.finishToken(types$1.braceR)\n    case 58: ++this.pos; return this.finishToken(types$1.colon)\n\n    case 96: // '`'\n      if (this.options.ecmaVersion < 6) { break }\n      ++this.pos;\n      return this.finishToken(types$1.backQuote)\n\n    case 48: // '0'\n      var next = this.input.charCodeAt(this.pos + 1);\n      if (next === 120 || next === 88) { return this.readRadixNumber(16) } // '0x', '0X' - hex number\n      if (this.options.ecmaVersion >= 6) {\n        if (next === 111 || next === 79) { return this.readRadixNumber(8) } // '0o', '0O' - octal number\n        if (next === 98 || next === 66) { return this.readRadixNumber(2) } // '0b', '0B' - binary number\n      }\n\n    // Anything else beginning with a digit is an integer, octal\n    // number, or float.\n    case 49: case 50: case 51: case 52: case 53: case 54: case 55: case 56: case 57: // 1-9\n      return this.readNumber(false)\n\n    // Quotes produce strings.\n    case 34: case 39: // '\"', \"'\"\n      return this.readString(code)\n\n    // Operators are parsed inline in tiny state machines. '=' (61) is\n    // often referred to. `finishOp` simply skips the amount of\n    // characters it is given as second argument, and returns a token\n    // of the type given by its first argument.\n    case 47: // '/'\n      return this.readToken_slash()\n\n    case 37: case 42: // '%*'\n      return this.readToken_mult_modulo_exp(code)\n\n    case 124: case 38: // '|&'\n      return this.readToken_pipe_amp(code)\n\n    case 94: // '^'\n      return this.readToken_caret()\n\n    case 43: case 45: // '+-'\n      return this.readToken_plus_min(code)\n\n    case 60: case 62: // '<>'\n      return this.readToken_lt_gt(code)\n\n    case 61: case 33: // '=!'\n      return this.readToken_eq_excl(code)\n\n    case 63: // '?'\n      return this.readToken_question()\n\n    case 126: // '~'\n      return this.finishOp(types$1.prefix, 1)\n\n    case 35: // '#'\n      return this.readToken_numberSign()\n    }\n\n    this.raise(this.pos, \"Unexpected character '\" + codePointToString(code) + \"'\");\n  };\n\n  pp.finishOp = function(type, size) {\n    var str = this.input.slice(this.pos, this.pos + size);\n    this.pos += size;\n    return this.finishToken(type, str)\n  };\n\n  pp.readRegexp = function() {\n    var escaped, inClass, start = this.pos;\n    for (;;) {\n      if (this.pos >= this.input.length) { this.raise(start, \"Unterminated regular expression\"); }\n      var ch = this.input.charAt(this.pos);\n      if (lineBreak.test(ch)) { this.raise(start, \"Unterminated regular expression\"); }\n      if (!escaped) {\n        if (ch === \"[\") { inClass = true; }\n        else if (ch === \"]\" && inClass) { inClass = false; }\n        else if (ch === \"/\" && !inClass) { break }\n        escaped = ch === \"\\\\\";\n      } else { escaped = false; }\n      ++this.pos;\n    }\n    var pattern = this.input.slice(start, this.pos);\n    ++this.pos;\n    var flagsStart = this.pos;\n    var flags = this.readWord1();\n    if (this.containsEsc) { this.unexpected(flagsStart); }\n\n    // Validate pattern\n    var state = this.regexpState || (this.regexpState = new RegExpValidationState(this));\n    state.reset(start, pattern, flags);\n    this.validateRegExpFlags(state);\n    this.validateRegExpPattern(state);\n\n    // Create Literal#value property value.\n    var value = null;\n    try {\n      value = new RegExp(pattern, flags);\n    } catch (e) {\n      // ESTree requires null if it failed to instantiate RegExp object.\n      // https://github.com/estree/estree/blob/a27003adf4fd7bfad44de9cef372a2eacd527b1c/es5.md#regexpliteral\n    }\n\n    return this.finishToken(types$1.regexp, {pattern: pattern, flags: flags, value: value})\n  };\n\n  // Read an integer in the given radix. Return null if zero digits\n  // were read, the integer value otherwise. When `len` is given, this\n  // will return `null` unless the integer has exactly `len` digits.\n\n  pp.readInt = function(radix, len, maybeLegacyOctalNumericLiteral) {\n    // `len` is used for character escape sequences. In that case, disallow separators.\n    var allowSeparators = this.options.ecmaVersion >= 12 && len === undefined;\n\n    // `maybeLegacyOctalNumericLiteral` is true if it doesn't have prefix (0x,0o,0b)\n    // and isn't fraction part nor exponent part. In that case, if the first digit\n    // is zero then disallow separators.\n    var isLegacyOctalNumericLiteral = maybeLegacyOctalNumericLiteral && this.input.charCodeAt(this.pos) === 48;\n\n    var start = this.pos, total = 0, lastCode = 0;\n    for (var i = 0, e = len == null ? Infinity : len; i < e; ++i, ++this.pos) {\n      var code = this.input.charCodeAt(this.pos), val = (void 0);\n\n      if (allowSeparators && code === 95) {\n        if (isLegacyOctalNumericLiteral) { this.raiseRecoverable(this.pos, \"Numeric separator is not allowed in legacy octal numeric literals\"); }\n        if (lastCode === 95) { this.raiseRecoverable(this.pos, \"Numeric separator must be exactly one underscore\"); }\n        if (i === 0) { this.raiseRecoverable(this.pos, \"Numeric separator is not allowed at the first of digits\"); }\n        lastCode = code;\n        continue\n      }\n\n      if (code >= 97) { val = code - 97 + 10; } // a\n      else if (code >= 65) { val = code - 65 + 10; } // A\n      else if (code >= 48 && code <= 57) { val = code - 48; } // 0-9\n      else { val = Infinity; }\n      if (val >= radix) { break }\n      lastCode = code;\n      total = total * radix + val;\n    }\n\n    if (allowSeparators && lastCode === 95) { this.raiseRecoverable(this.pos - 1, \"Numeric separator is not allowed at the last of digits\"); }\n    if (this.pos === start || len != null && this.pos - start !== len) { return null }\n\n    return total\n  };\n\n  function stringToNumber(str, isLegacyOctalNumericLiteral) {\n    if (isLegacyOctalNumericLiteral) {\n      return parseInt(str, 8)\n    }\n\n    // `parseFloat(value)` stops parsing at the first numeric separator then returns a wrong value.\n    return parseFloat(str.replace(/_/g, \"\"))\n  }\n\n  function stringToBigInt(str) {\n    if (typeof BigInt !== \"function\") {\n      return null\n    }\n\n    // `BigInt(value)` throws syntax error if the string contains numeric separators.\n    return BigInt(str.replace(/_/g, \"\"))\n  }\n\n  pp.readRadixNumber = function(radix) {\n    var start = this.pos;\n    this.pos += 2; // 0x\n    var val = this.readInt(radix);\n    if (val == null) { this.raise(this.start + 2, \"Expected number in radix \" + radix); }\n    if (this.options.ecmaVersion >= 11 && this.input.charCodeAt(this.pos) === 110) {\n      val = stringToBigInt(this.input.slice(start, this.pos));\n      ++this.pos;\n    } else if (isIdentifierStart(this.fullCharCodeAtPos())) { this.raise(this.pos, \"Identifier directly after number\"); }\n    return this.finishToken(types$1.num, val)\n  };\n\n  // Read an integer, octal integer, or floating-point number.\n\n  pp.readNumber = function(startsWithDot) {\n    var start = this.pos;\n    if (!startsWithDot && this.readInt(10, undefined, true) === null) { this.raise(start, \"Invalid number\"); }\n    var octal = this.pos - start >= 2 && this.input.charCodeAt(start) === 48;\n    if (octal && this.strict) { this.raise(start, \"Invalid number\"); }\n    var next = this.input.charCodeAt(this.pos);\n    if (!octal && !startsWithDot && this.options.ecmaVersion >= 11 && next === 110) {\n      var val$1 = stringToBigInt(this.input.slice(start, this.pos));\n      ++this.pos;\n      if (isIdentifierStart(this.fullCharCodeAtPos())) { this.raise(this.pos, \"Identifier directly after number\"); }\n      return this.finishToken(types$1.num, val$1)\n    }\n    if (octal && /[89]/.test(this.input.slice(start, this.pos))) { octal = false; }\n    if (next === 46 && !octal) { // '.'\n      ++this.pos;\n      this.readInt(10);\n      next = this.input.charCodeAt(this.pos);\n    }\n    if ((next === 69 || next === 101) && !octal) { // 'eE'\n      next = this.input.charCodeAt(++this.pos);\n      if (next === 43 || next === 45) { ++this.pos; } // '+-'\n      if (this.readInt(10) === null) { this.raise(start, \"Invalid number\"); }\n    }\n    if (isIdentifierStart(this.fullCharCodeAtPos())) { this.raise(this.pos, \"Identifier directly after number\"); }\n\n    var val = stringToNumber(this.input.slice(start, this.pos), octal);\n    return this.finishToken(types$1.num, val)\n  };\n\n  // Read a string value, interpreting backslash-escapes.\n\n  pp.readCodePoint = function() {\n    var ch = this.input.charCodeAt(this.pos), code;\n\n    if (ch === 123) { // '{'\n      if (this.options.ecmaVersion < 6) { this.unexpected(); }\n      var codePos = ++this.pos;\n      code = this.readHexChar(this.input.indexOf(\"}\", this.pos) - this.pos);\n      ++this.pos;\n      if (code > 0x10FFFF) { this.invalidStringToken(codePos, \"Code point out of bounds\"); }\n    } else {\n      code = this.readHexChar(4);\n    }\n    return code\n  };\n\n  pp.readString = function(quote) {\n    var out = \"\", chunkStart = ++this.pos;\n    for (;;) {\n      if (this.pos >= this.input.length) { this.raise(this.start, \"Unterminated string constant\"); }\n      var ch = this.input.charCodeAt(this.pos);\n      if (ch === quote) { break }\n      if (ch === 92) { // '\\'\n        out += this.input.slice(chunkStart, this.pos);\n        out += this.readEscapedChar(false);\n        chunkStart = this.pos;\n      } else if (ch === 0x2028 || ch === 0x2029) {\n        if (this.options.ecmaVersion < 10) { this.raise(this.start, \"Unterminated string constant\"); }\n        ++this.pos;\n        if (this.options.locations) {\n          this.curLine++;\n          this.lineStart = this.pos;\n        }\n      } else {\n        if (isNewLine(ch)) { this.raise(this.start, \"Unterminated string constant\"); }\n        ++this.pos;\n      }\n    }\n    out += this.input.slice(chunkStart, this.pos++);\n    return this.finishToken(types$1.string, out)\n  };\n\n  // Reads template string tokens.\n\n  var INVALID_TEMPLATE_ESCAPE_ERROR = {};\n\n  pp.tryReadTemplateToken = function() {\n    this.inTemplateElement = true;\n    try {\n      this.readTmplToken();\n    } catch (err) {\n      if (err === INVALID_TEMPLATE_ESCAPE_ERROR) {\n        this.readInvalidTemplateToken();\n      } else {\n        throw err\n      }\n    }\n\n    this.inTemplateElement = false;\n  };\n\n  pp.invalidStringToken = function(position, message) {\n    if (this.inTemplateElement && this.options.ecmaVersion >= 9) {\n      throw INVALID_TEMPLATE_ESCAPE_ERROR\n    } else {\n      this.raise(position, message);\n    }\n  };\n\n  pp.readTmplToken = function() {\n    var out = \"\", chunkStart = this.pos;\n    for (;;) {\n      if (this.pos >= this.input.length) { this.raise(this.start, \"Unterminated template\"); }\n      var ch = this.input.charCodeAt(this.pos);\n      if (ch === 96 || ch === 36 && this.input.charCodeAt(this.pos + 1) === 123) { // '`', '${'\n        if (this.pos === this.start && (this.type === types$1.template || this.type === types$1.invalidTemplate)) {\n          if (ch === 36) {\n            this.pos += 2;\n            return this.finishToken(types$1.dollarBraceL)\n          } else {\n            ++this.pos;\n            return this.finishToken(types$1.backQuote)\n          }\n        }\n        out += this.input.slice(chunkStart, this.pos);\n        return this.finishToken(types$1.template, out)\n      }\n      if (ch === 92) { // '\\'\n        out += this.input.slice(chunkStart, this.pos);\n        out += this.readEscapedChar(true);\n        chunkStart = this.pos;\n      } else if (isNewLine(ch)) {\n        out += this.input.slice(chunkStart, this.pos);\n        ++this.pos;\n        switch (ch) {\n        case 13:\n          if (this.input.charCodeAt(this.pos) === 10) { ++this.pos; }\n        case 10:\n          out += \"\\n\";\n          break\n        default:\n          out += String.fromCharCode(ch);\n          break\n        }\n        if (this.options.locations) {\n          ++this.curLine;\n          this.lineStart = this.pos;\n        }\n        chunkStart = this.pos;\n      } else {\n        ++this.pos;\n      }\n    }\n  };\n\n  // Reads a template token to search for the end, without validating any escape sequences\n  pp.readInvalidTemplateToken = function() {\n    for (; this.pos < this.input.length; this.pos++) {\n      switch (this.input[this.pos]) {\n      case \"\\\\\":\n        ++this.pos;\n        break\n\n      case \"$\":\n        if (this.input[this.pos + 1] !== \"{\") { break }\n        // fall through\n      case \"`\":\n        return this.finishToken(types$1.invalidTemplate, this.input.slice(this.start, this.pos))\n\n      case \"\\r\":\n        if (this.input[this.pos + 1] === \"\\n\") { ++this.pos; }\n        // fall through\n      case \"\\n\": case \"\\u2028\": case \"\\u2029\":\n        ++this.curLine;\n        this.lineStart = this.pos + 1;\n        break\n      }\n    }\n    this.raise(this.start, \"Unterminated template\");\n  };\n\n  // Used to read escaped characters\n\n  pp.readEscapedChar = function(inTemplate) {\n    var ch = this.input.charCodeAt(++this.pos);\n    ++this.pos;\n    switch (ch) {\n    case 110: return \"\\n\" // 'n' -> '\\n'\n    case 114: return \"\\r\" // 'r' -> '\\r'\n    case 120: return String.fromCharCode(this.readHexChar(2)) // 'x'\n    case 117: return codePointToString(this.readCodePoint()) // 'u'\n    case 116: return \"\\t\" // 't' -> '\\t'\n    case 98: return \"\\b\" // 'b' -> '\\b'\n    case 118: return \"\\u000b\" // 'v' -> '\\u000b'\n    case 102: return \"\\f\" // 'f' -> '\\f'\n    case 13: if (this.input.charCodeAt(this.pos) === 10) { ++this.pos; } // '\\r\\n'\n    case 10: // ' \\n'\n      if (this.options.locations) { this.lineStart = this.pos; ++this.curLine; }\n      return \"\"\n    case 56:\n    case 57:\n      if (this.strict) {\n        this.invalidStringToken(\n          this.pos - 1,\n          \"Invalid escape sequence\"\n        );\n      }\n      if (inTemplate) {\n        var codePos = this.pos - 1;\n\n        this.invalidStringToken(\n          codePos,\n          \"Invalid escape sequence in template string\"\n        );\n      }\n    default:\n      if (ch >= 48 && ch <= 55) {\n        var octalStr = this.input.substr(this.pos - 1, 3).match(/^[0-7]+/)[0];\n        var octal = parseInt(octalStr, 8);\n        if (octal > 255) {\n          octalStr = octalStr.slice(0, -1);\n          octal = parseInt(octalStr, 8);\n        }\n        this.pos += octalStr.length - 1;\n        ch = this.input.charCodeAt(this.pos);\n        if ((octalStr !== \"0\" || ch === 56 || ch === 57) && (this.strict || inTemplate)) {\n          this.invalidStringToken(\n            this.pos - 1 - octalStr.length,\n            inTemplate\n              ? \"Octal literal in template string\"\n              : \"Octal literal in strict mode\"\n          );\n        }\n        return String.fromCharCode(octal)\n      }\n      if (isNewLine(ch)) {\n        // Unicode new line characters after \\ get removed from output in both\n        // template literals and strings\n        if (this.options.locations) { this.lineStart = this.pos; ++this.curLine; }\n        return \"\"\n      }\n      return String.fromCharCode(ch)\n    }\n  };\n\n  // Used to read character escape sequences ('\\x', '\\u', '\\U').\n\n  pp.readHexChar = function(len) {\n    var codePos = this.pos;\n    var n = this.readInt(16, len);\n    if (n === null) { this.invalidStringToken(codePos, \"Bad character escape sequence\"); }\n    return n\n  };\n\n  // Read an identifier, and return it as a string. Sets `this.containsEsc`\n  // to whether the word contained a '\\u' escape.\n  //\n  // Incrementally adds only escaped chars, adding other chunks as-is\n  // as a micro-optimization.\n\n  pp.readWord1 = function() {\n    this.containsEsc = false;\n    var word = \"\", first = true, chunkStart = this.pos;\n    var astral = this.options.ecmaVersion >= 6;\n    while (this.pos < this.input.length) {\n      var ch = this.fullCharCodeAtPos();\n      if (isIdentifierChar(ch, astral)) {\n        this.pos += ch <= 0xffff ? 1 : 2;\n      } else if (ch === 92) { // \"\\\"\n        this.containsEsc = true;\n        word += this.input.slice(chunkStart, this.pos);\n        var escStart = this.pos;\n        if (this.input.charCodeAt(++this.pos) !== 117) // \"u\"\n          { this.invalidStringToken(this.pos, \"Expecting Unicode escape sequence \\\\uXXXX\"); }\n        ++this.pos;\n        var esc = this.readCodePoint();\n        if (!(first ? isIdentifierStart : isIdentifierChar)(esc, astral))\n          { this.invalidStringToken(escStart, \"Invalid Unicode escape\"); }\n        word += codePointToString(esc);\n        chunkStart = this.pos;\n      } else {\n        break\n      }\n      first = false;\n    }\n    return word + this.input.slice(chunkStart, this.pos)\n  };\n\n  // Read an identifier or keyword token. Will check for reserved\n  // words when necessary.\n\n  pp.readWord = function() {\n    var word = this.readWord1();\n    var type = types$1.name;\n    if (this.keywords.test(word)) {\n      type = keywords[word];\n    }\n    return this.finishToken(type, word)\n  };\n\n  // Acorn is a tiny, fast JavaScript parser written in JavaScript.\n  //\n  // Acorn was written by Marijn Haverbeke, Ingvar Stepanyan, and\n  // various contributors and released under an MIT license.\n  //\n  // Git repositories for Acorn are available at\n  //\n  //     http://marijnhaverbeke.nl/git/acorn\n  //     https://github.com/acornjs/acorn.git\n  //\n  // Please use the [github bug tracker][ghbt] to report issues.\n  //\n  // [ghbt]: https://github.com/acornjs/acorn/issues\n  //\n  // [walk]: util/walk.js\n\n\n  var version = \"8.14.0\";\n\n  Parser.acorn = {\n    Parser: Parser,\n    version: version,\n    defaultOptions: defaultOptions,\n    Position: Position,\n    SourceLocation: SourceLocation,\n    getLineInfo: getLineInfo,\n    Node: Node,\n    TokenType: TokenType,\n    tokTypes: types$1,\n    keywordTypes: keywords,\n    TokContext: TokContext,\n    tokContexts: types,\n    isIdentifierChar: isIdentifierChar,\n    isIdentifierStart: isIdentifierStart,\n    Token: Token,\n    isNewLine: isNewLine,\n    lineBreak: lineBreak,\n    lineBreakG: lineBreakG,\n    nonASCIIwhitespace: nonASCIIwhitespace\n  };\n\n  // The main exported interface (under `self.acorn` when in the\n  // browser) is a `parse` function that takes a code string and returns\n  // an abstract syntax tree as specified by the [ESTree spec][estree].\n  //\n  // [estree]: https://github.com/estree/estree\n\n  function parse(input, options) {\n    return Parser.parse(input, options)\n  }\n\n  // This function tries to parse a single expression at a given\n  // offset in a string. Useful for parsing mixed-language formats\n  // that embed JavaScript expressions.\n\n  function parseExpressionAt(input, pos, options) {\n    return Parser.parseExpressionAt(input, pos, options)\n  }\n\n  // Acorn is organized as a tokenizer and a recursive-descent parser.\n  // The `tokenizer` export provides an interface to the tokenizer.\n\n  function tokenizer(input, options) {\n    return Parser.tokenizer(input, options)\n  }\n\n  exports.Node = Node;\n  exports.Parser = Parser;\n  exports.Position = Position;\n  exports.SourceLocation = SourceLocation;\n  exports.TokContext = TokContext;\n  exports.Token = Token;\n  exports.TokenType = TokenType;\n  exports.defaultOptions = defaultOptions;\n  exports.getLineInfo = getLineInfo;\n  exports.isIdentifierChar = isIdentifierChar;\n  exports.isIdentifierStart = isIdentifierStart;\n  exports.isNewLine = isNewLine;\n  exports.keywordTypes = keywords;\n  exports.lineBreak = lineBreak;\n  exports.lineBreakG = lineBreakG;\n  exports.nonASCIIwhitespace = nonASCIIwhitespace;\n  exports.parse = parse;\n  exports.parseExpressionAt = parseExpressionAt;\n  exports.tokContexts = types;\n  exports.tokTypes = types$1;\n  exports.tokenizer = tokenizer;\n  exports.version = version;\n\n}));\n","(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global.acorn = global.acorn || {}, global.acorn.walk = {})));\n})(this, (function (exports) { 'use strict';\n\n  // AST walker module for ESTree compatible trees\n\n  // A simple walk is one where you simply specify callbacks to be\n  // called on specific nodes. The last two arguments are optional. A\n  // simple use would be\n  //\n  //     walk.simple(myTree, {\n  //         Expression: function(node) { ... }\n  //     });\n  //\n  // to do something with all expressions. All ESTree node types\n  // can be used to identify node types, as well as Expression and\n  // Statement, which denote categories of nodes.\n  //\n  // The base argument can be used to pass a custom (recursive)\n  // walker, and state can be used to give this walked an initial\n  // state.\n\n  function simple(node, visitors, baseVisitor, state, override) {\n    if (!baseVisitor) { baseVisitor = base\n    ; }(function c(node, st, override) {\n      var type = override || node.type;\n      baseVisitor[type](node, st, c);\n      if (visitors[type]) { visitors[type](node, st); }\n    })(node, state, override);\n  }\n\n  // An ancestor walk keeps an array of ancestor nodes (including the\n  // current node) and passes them to the callback as third parameter\n  // (and also as state parameter when no other state is present).\n  function ancestor(node, visitors, baseVisitor, state, override) {\n    var ancestors = [];\n    if (!baseVisitor) { baseVisitor = base\n    ; }(function c(node, st, override) {\n      var type = override || node.type;\n      var isNew = node !== ancestors[ancestors.length - 1];\n      if (isNew) { ancestors.push(node); }\n      baseVisitor[type](node, st, c);\n      if (visitors[type]) { visitors[type](node, st || ancestors, ancestors); }\n      if (isNew) { ancestors.pop(); }\n    })(node, state, override);\n  }\n\n  // A recursive walk is one where your functions override the default\n  // walkers. They can modify and replace the state parameter that's\n  // threaded through the walk, and can opt how and whether to walk\n  // their child nodes (by calling their third argument on these\n  // nodes).\n  function recursive(node, state, funcs, baseVisitor, override) {\n    var visitor = funcs ? make(funcs, baseVisitor || undefined) : baseVisitor\n    ;(function c(node, st, override) {\n      visitor[override || node.type](node, st, c);\n    })(node, state, override);\n  }\n\n  function makeTest(test) {\n    if (typeof test === \"string\")\n      { return function (type) { return type === test; } }\n    else if (!test)\n      { return function () { return true; } }\n    else\n      { return test }\n  }\n\n  var Found = function Found(node, state) { this.node = node; this.state = state; };\n\n  // A full walk triggers the callback on each node\n  function full(node, callback, baseVisitor, state, override) {\n    if (!baseVisitor) { baseVisitor = base; }\n    var last\n    ;(function c(node, st, override) {\n      var type = override || node.type;\n      baseVisitor[type](node, st, c);\n      if (last !== node) {\n        callback(node, st, type);\n        last = node;\n      }\n    })(node, state, override);\n  }\n\n  // An fullAncestor walk is like an ancestor walk, but triggers\n  // the callback on each node\n  function fullAncestor(node, callback, baseVisitor, state) {\n    if (!baseVisitor) { baseVisitor = base; }\n    var ancestors = [], last\n    ;(function c(node, st, override) {\n      var type = override || node.type;\n      var isNew = node !== ancestors[ancestors.length - 1];\n      if (isNew) { ancestors.push(node); }\n      baseVisitor[type](node, st, c);\n      if (last !== node) {\n        callback(node, st || ancestors, ancestors, type);\n        last = node;\n      }\n      if (isNew) { ancestors.pop(); }\n    })(node, state);\n  }\n\n  // Find a node with a given start, end, and type (all are optional,\n  // null can be used as wildcard). Returns a {node, state} object, or\n  // undefined when it doesn't find a matching node.\n  function findNodeAt(node, start, end, test, baseVisitor, state) {\n    if (!baseVisitor) { baseVisitor = base; }\n    test = makeTest(test);\n    try {\n      (function c(node, st, override) {\n        var type = override || node.type;\n        if ((start == null || node.start <= start) &&\n            (end == null || node.end >= end))\n          { baseVisitor[type](node, st, c); }\n        if ((start == null || node.start === start) &&\n            (end == null || node.end === end) &&\n            test(type, node))\n          { throw new Found(node, st) }\n      })(node, state);\n    } catch (e) {\n      if (e instanceof Found) { return e }\n      throw e\n    }\n  }\n\n  // Find the innermost node of a given type that contains the given\n  // position. Interface similar to findNodeAt.\n  function findNodeAround(node, pos, test, baseVisitor, state) {\n    test = makeTest(test);\n    if (!baseVisitor) { baseVisitor = base; }\n    try {\n      (function c(node, st, override) {\n        var type = override || node.type;\n        if (node.start > pos || node.end < pos) { return }\n        baseVisitor[type](node, st, c);\n        if (test(type, node)) { throw new Found(node, st) }\n      })(node, state);\n    } catch (e) {\n      if (e instanceof Found) { return e }\n      throw e\n    }\n  }\n\n  // Find the outermost matching node after a given position.\n  function findNodeAfter(node, pos, test, baseVisitor, state) {\n    test = makeTest(test);\n    if (!baseVisitor) { baseVisitor = base; }\n    try {\n      (function c(node, st, override) {\n        if (node.end < pos) { return }\n        var type = override || node.type;\n        if (node.start >= pos && test(type, node)) { throw new Found(node, st) }\n        baseVisitor[type](node, st, c);\n      })(node, state);\n    } catch (e) {\n      if (e instanceof Found) { return e }\n      throw e\n    }\n  }\n\n  // Find the outermost matching node before a given position.\n  function findNodeBefore(node, pos, test, baseVisitor, state) {\n    test = makeTest(test);\n    if (!baseVisitor) { baseVisitor = base; }\n    var max\n    ;(function c(node, st, override) {\n      if (node.start > pos) { return }\n      var type = override || node.type;\n      if (node.end <= pos && (!max || max.node.end < node.end) && test(type, node))\n        { max = new Found(node, st); }\n      baseVisitor[type](node, st, c);\n    })(node, state);\n    return max\n  }\n\n  // Used to create a custom walker. Will fill in all missing node\n  // type properties with the defaults.\n  function make(funcs, baseVisitor) {\n    var visitor = Object.create(baseVisitor || base);\n    for (var type in funcs) { visitor[type] = funcs[type]; }\n    return visitor\n  }\n\n  function skipThrough(node, st, c) { c(node, st); }\n  function ignore(_node, _st, _c) {}\n\n  // Node walkers.\n\n  var base = {};\n\n  base.Program = base.BlockStatement = base.StaticBlock = function (node, st, c) {\n    for (var i = 0, list = node.body; i < list.length; i += 1)\n      {\n      var stmt = list[i];\n\n      c(stmt, st, \"Statement\");\n    }\n  };\n  base.Statement = skipThrough;\n  base.EmptyStatement = ignore;\n  base.ExpressionStatement = base.ParenthesizedExpression = base.ChainExpression =\n    function (node, st, c) { return c(node.expression, st, \"Expression\"); };\n  base.IfStatement = function (node, st, c) {\n    c(node.test, st, \"Expression\");\n    c(node.consequent, st, \"Statement\");\n    if (node.alternate) { c(node.alternate, st, \"Statement\"); }\n  };\n  base.LabeledStatement = function (node, st, c) { return c(node.body, st, \"Statement\"); };\n  base.BreakStatement = base.ContinueStatement = ignore;\n  base.WithStatement = function (node, st, c) {\n    c(node.object, st, \"Expression\");\n    c(node.body, st, \"Statement\");\n  };\n  base.SwitchStatement = function (node, st, c) {\n    c(node.discriminant, st, \"Expression\");\n    for (var i = 0, list = node.cases; i < list.length; i += 1) {\n      var cs = list[i];\n\n      c(cs, st);\n    }\n  };\n  base.SwitchCase = function (node, st, c) {\n    if (node.test) { c(node.test, st, \"Expression\"); }\n    for (var i = 0, list = node.consequent; i < list.length; i += 1)\n      {\n      var cons = list[i];\n\n      c(cons, st, \"Statement\");\n    }\n  };\n  base.ReturnStatement = base.YieldExpression = base.AwaitExpression = function (node, st, c) {\n    if (node.argument) { c(node.argument, st, \"Expression\"); }\n  };\n  base.ThrowStatement = base.SpreadElement =\n    function (node, st, c) { return c(node.argument, st, \"Expression\"); };\n  base.TryStatement = function (node, st, c) {\n    c(node.block, st, \"Statement\");\n    if (node.handler) { c(node.handler, st); }\n    if (node.finalizer) { c(node.finalizer, st, \"Statement\"); }\n  };\n  base.CatchClause = function (node, st, c) {\n    if (node.param) { c(node.param, st, \"Pattern\"); }\n    c(node.body, st, \"Statement\");\n  };\n  base.WhileStatement = base.DoWhileStatement = function (node, st, c) {\n    c(node.test, st, \"Expression\");\n    c(node.body, st, \"Statement\");\n  };\n  base.ForStatement = function (node, st, c) {\n    if (node.init) { c(node.init, st, \"ForInit\"); }\n    if (node.test) { c(node.test, st, \"Expression\"); }\n    if (node.update) { c(node.update, st, \"Expression\"); }\n    c(node.body, st, \"Statement\");\n  };\n  base.ForInStatement = base.ForOfStatement = function (node, st, c) {\n    c(node.left, st, \"ForInit\");\n    c(node.right, st, \"Expression\");\n    c(node.body, st, \"Statement\");\n  };\n  base.ForInit = function (node, st, c) {\n    if (node.type === \"VariableDeclaration\") { c(node, st); }\n    else { c(node, st, \"Expression\"); }\n  };\n  base.DebuggerStatement = ignore;\n\n  base.FunctionDeclaration = function (node, st, c) { return c(node, st, \"Function\"); };\n  base.VariableDeclaration = function (node, st, c) {\n    for (var i = 0, list = node.declarations; i < list.length; i += 1)\n      {\n      var decl = list[i];\n\n      c(decl, st);\n    }\n  };\n  base.VariableDeclarator = function (node, st, c) {\n    c(node.id, st, \"Pattern\");\n    if (node.init) { c(node.init, st, \"Expression\"); }\n  };\n\n  base.Function = function (node, st, c) {\n    if (node.id) { c(node.id, st, \"Pattern\"); }\n    for (var i = 0, list = node.params; i < list.length; i += 1)\n      {\n      var param = list[i];\n\n      c(param, st, \"Pattern\");\n    }\n    c(node.body, st, node.expression ? \"Expression\" : \"Statement\");\n  };\n\n  base.Pattern = function (node, st, c) {\n    if (node.type === \"Identifier\")\n      { c(node, st, \"VariablePattern\"); }\n    else if (node.type === \"MemberExpression\")\n      { c(node, st, \"MemberPattern\"); }\n    else\n      { c(node, st); }\n  };\n  base.VariablePattern = ignore;\n  base.MemberPattern = skipThrough;\n  base.RestElement = function (node, st, c) { return c(node.argument, st, \"Pattern\"); };\n  base.ArrayPattern = function (node, st, c) {\n    for (var i = 0, list = node.elements; i < list.length; i += 1) {\n      var elt = list[i];\n\n      if (elt) { c(elt, st, \"Pattern\"); }\n    }\n  };\n  base.ObjectPattern = function (node, st, c) {\n    for (var i = 0, list = node.properties; i < list.length; i += 1) {\n      var prop = list[i];\n\n      if (prop.type === \"Property\") {\n        if (prop.computed) { c(prop.key, st, \"Expression\"); }\n        c(prop.value, st, \"Pattern\");\n      } else if (prop.type === \"RestElement\") {\n        c(prop.argument, st, \"Pattern\");\n      }\n    }\n  };\n\n  base.Expression = skipThrough;\n  base.ThisExpression = base.Super = base.MetaProperty = ignore;\n  base.ArrayExpression = function (node, st, c) {\n    for (var i = 0, list = node.elements; i < list.length; i += 1) {\n      var elt = list[i];\n\n      if (elt) { c(elt, st, \"Expression\"); }\n    }\n  };\n  base.ObjectExpression = function (node, st, c) {\n    for (var i = 0, list = node.properties; i < list.length; i += 1)\n      {\n      var prop = list[i];\n\n      c(prop, st);\n    }\n  };\n  base.FunctionExpression = base.ArrowFunctionExpression = base.FunctionDeclaration;\n  base.SequenceExpression = function (node, st, c) {\n    for (var i = 0, list = node.expressions; i < list.length; i += 1)\n      {\n      var expr = list[i];\n\n      c(expr, st, \"Expression\");\n    }\n  };\n  base.TemplateLiteral = function (node, st, c) {\n    for (var i = 0, list = node.quasis; i < list.length; i += 1)\n      {\n      var quasi = list[i];\n\n      c(quasi, st);\n    }\n\n    for (var i$1 = 0, list$1 = node.expressions; i$1 < list$1.length; i$1 += 1)\n      {\n      var expr = list$1[i$1];\n\n      c(expr, st, \"Expression\");\n    }\n  };\n  base.TemplateElement = ignore;\n  base.UnaryExpression = base.UpdateExpression = function (node, st, c) {\n    c(node.argument, st, \"Expression\");\n  };\n  base.BinaryExpression = base.LogicalExpression = function (node, st, c) {\n    c(node.left, st, \"Expression\");\n    c(node.right, st, \"Expression\");\n  };\n  base.AssignmentExpression = base.AssignmentPattern = function (node, st, c) {\n    c(node.left, st, \"Pattern\");\n    c(node.right, st, \"Expression\");\n  };\n  base.ConditionalExpression = function (node, st, c) {\n    c(node.test, st, \"Expression\");\n    c(node.consequent, st, \"Expression\");\n    c(node.alternate, st, \"Expression\");\n  };\n  base.NewExpression = base.CallExpression = function (node, st, c) {\n    c(node.callee, st, \"Expression\");\n    if (node.arguments)\n      { for (var i = 0, list = node.arguments; i < list.length; i += 1)\n        {\n          var arg = list[i];\n\n          c(arg, st, \"Expression\");\n        } }\n  };\n  base.MemberExpression = function (node, st, c) {\n    c(node.object, st, \"Expression\");\n    if (node.computed) { c(node.property, st, \"Expression\"); }\n  };\n  base.ExportNamedDeclaration = base.ExportDefaultDeclaration = function (node, st, c) {\n    if (node.declaration)\n      { c(node.declaration, st, node.type === \"ExportNamedDeclaration\" || node.declaration.id ? \"Statement\" : \"Expression\"); }\n    if (node.source) { c(node.source, st, \"Expression\"); }\n  };\n  base.ExportAllDeclaration = function (node, st, c) {\n    if (node.exported)\n      { c(node.exported, st); }\n    c(node.source, st, \"Expression\");\n  };\n  base.ImportDeclaration = function (node, st, c) {\n    for (var i = 0, list = node.specifiers; i < list.length; i += 1)\n      {\n      var spec = list[i];\n\n      c(spec, st);\n    }\n    c(node.source, st, \"Expression\");\n  };\n  base.ImportExpression = function (node, st, c) {\n    c(node.source, st, \"Expression\");\n  };\n  base.ImportSpecifier = base.ImportDefaultSpecifier = base.ImportNamespaceSpecifier = base.Identifier = base.PrivateIdentifier = base.Literal = ignore;\n\n  base.TaggedTemplateExpression = function (node, st, c) {\n    c(node.tag, st, \"Expression\");\n    c(node.quasi, st, \"Expression\");\n  };\n  base.ClassDeclaration = base.ClassExpression = function (node, st, c) { return c(node, st, \"Class\"); };\n  base.Class = function (node, st, c) {\n    if (node.id) { c(node.id, st, \"Pattern\"); }\n    if (node.superClass) { c(node.superClass, st, \"Expression\"); }\n    c(node.body, st);\n  };\n  base.ClassBody = function (node, st, c) {\n    for (var i = 0, list = node.body; i < list.length; i += 1)\n      {\n      var elt = list[i];\n\n      c(elt, st);\n    }\n  };\n  base.MethodDefinition = base.PropertyDefinition = base.Property = function (node, st, c) {\n    if (node.computed) { c(node.key, st, \"Expression\"); }\n    if (node.value) { c(node.value, st, \"Expression\"); }\n  };\n\n  exports.ancestor = ancestor;\n  exports.base = base;\n  exports.findNodeAfter = findNodeAfter;\n  exports.findNodeAround = findNodeAround;\n  exports.findNodeAt = findNodeAt;\n  exports.findNodeBefore = findNodeBefore;\n  exports.full = full;\n  exports.fullAncestor = fullAncestor;\n  exports.make = make;\n  exports.recursive = recursive;\n  exports.simple = simple;\n\n}));\n","// copied from https://github.com/nodejs/node/blob/88799930794045795e8abac874730f9eba7e2300/lib/internal/repl/await.js\n'use strict';\n\nconst {\n  ArrayFrom,\n  ArrayPrototypeForEach,\n  ArrayPrototypeIncludes,\n  ArrayPrototypeJoin,\n  ArrayPrototypePop,\n  ArrayPrototypePush,\n  FunctionPrototype,\n  ObjectKeys,\n  RegExpPrototypeSymbolReplace,\n  StringPrototypeEndsWith,\n  StringPrototypeIncludes,\n  StringPrototypeIndexOf,\n  StringPrototypeRepeat,\n  StringPrototypeSplit,\n  StringPrototypeStartsWith,\n  SyntaxError,\n} = require('./node-primordials');\n\nconst parser = require('acorn').Parser;\nconst walk = require('acorn-walk');\nconst { Recoverable } = require('repl');\n\nfunction isTopLevelDeclaration(state) {\n  return state.ancestors[state.ancestors.length - 2] === state.body;\n}\n\nconst noop = FunctionPrototype;\nconst visitorsWithoutAncestors = {\n  ClassDeclaration(node, state, c) {\n    if (isTopLevelDeclaration(state)) {\n      state.prepend(node, `${node.id.name}=`);\n      ArrayPrototypePush(\n        state.hoistedDeclarationStatements,\n        `let ${node.id.name}; `\n      );\n    }\n\n    walk.base.ClassDeclaration(node, state, c);\n  },\n  ForOfStatement(node, state, c) {\n    if (node.await === true) {\n      state.containsAwait = true;\n    }\n    walk.base.ForOfStatement(node, state, c);\n  },\n  FunctionDeclaration(node, state, c) {\n    state.prepend(node, `${node.id.name}=`);\n    ArrayPrototypePush(\n      state.hoistedDeclarationStatements,\n      `var ${node.id.name}; `\n    );\n  },\n  FunctionExpression: noop,\n  ArrowFunctionExpression: noop,\n  MethodDefinition: noop,\n  AwaitExpression(node, state, c) {\n    state.containsAwait = true;\n    walk.base.AwaitExpression(node, state, c);\n  },\n  ReturnStatement(node, state, c) {\n    state.containsReturn = true;\n    walk.base.ReturnStatement(node, state, c);\n  },\n  VariableDeclaration(node, state, c) {\n    const variableKind = node.kind;\n    const isIterableForDeclaration = ArrayPrototypeIncludes(\n      ['ForOfStatement', 'ForInStatement'],\n      state.ancestors[state.ancestors.length - 2].type\n    );\n\n    if (variableKind === 'var' || isTopLevelDeclaration(state)) {\n      state.replace(\n        node.start,\n        node.start + variableKind.length + (isIterableForDeclaration ? 1 : 0),\n        variableKind === 'var' && isIterableForDeclaration ?\n          '' :\n          'void' + (node.declarations.length === 1 ? '' : ' (')\n      );\n\n      if (!isIterableForDeclaration) {\n        ArrayPrototypeForEach(node.declarations, (decl) => {\n          state.prepend(decl, '(');\n          state.append(decl, decl.init ? ')' : '=undefined)');\n        });\n\n        if (node.declarations.length !== 1) {\n          state.append(node.declarations[node.declarations.length - 1], ')');\n        }\n      }\n\n      const variableIdentifiersToHoist = [\n        ['var', []],\n        ['let', []],\n      ];\n      function registerVariableDeclarationIdentifiers(node) {\n        switch (node.type) {\n          case 'Identifier':\n            ArrayPrototypePush(\n              variableIdentifiersToHoist[variableKind === 'var' ? 0 : 1][1],\n              node.name\n            );\n            break;\n          case 'ObjectPattern':\n            ArrayPrototypeForEach(node.properties, (property) => {\n              registerVariableDeclarationIdentifiers(property.value);\n            });\n            break;\n          case 'ArrayPattern':\n            ArrayPrototypeForEach(node.elements, (element) => {\n              registerVariableDeclarationIdentifiers(element);\n            });\n            break;\n        }\n      }\n\n      ArrayPrototypeForEach(node.declarations, (decl) => {\n        registerVariableDeclarationIdentifiers(decl.id);\n      });\n\n      ArrayPrototypeForEach(\n        variableIdentifiersToHoist,\n        ({ 0: kind, 1: identifiers }) => {\n          if (identifiers.length > 0) {\n            ArrayPrototypePush(\n              state.hoistedDeclarationStatements,\n              `${kind} ${ArrayPrototypeJoin(identifiers, ', ')}; `\n            );\n          }\n        }\n      );\n    }\n\n    walk.base.VariableDeclaration(node, state, c);\n  }\n};\n\nconst visitors = {};\nfor (const nodeType of ObjectKeys(walk.base)) {\n  const callback = visitorsWithoutAncestors[nodeType] || walk.base[nodeType];\n  visitors[nodeType] = (node, state, c) => {\n    const isNew = node !== state.ancestors[state.ancestors.length - 1];\n    if (isNew) {\n      ArrayPrototypePush(state.ancestors, node);\n    }\n    callback(node, state, c);\n    if (isNew) {\n      ArrayPrototypePop(state.ancestors);\n    }\n  };\n}\n\nfunction processTopLevelAwait(src) {\n  const wrapPrefix = '(async () => { ';\n  const wrapped = `${wrapPrefix}${src} })()`;\n  const wrappedArray = ArrayFrom(wrapped);\n  let root;\n  try {\n    root = parser.parse(wrapped, { ecmaVersion: 'latest' });\n  } catch (e) {\n    if (StringPrototypeStartsWith(e.message, 'Unterminated '))\n      throw new Recoverable(e);\n    // If the parse error is before the first \"await\", then use the execution\n    // error. Otherwise we must emit this parse error, making it look like a\n    // proper syntax error.\n    const awaitPos = StringPrototypeIndexOf(src, 'await');\n    const errPos = e.pos - wrapPrefix.length;\n    if (awaitPos > errPos)\n      return null;\n    // Convert keyword parse errors on await into their original errors when\n    // possible.\n    if (errPos === awaitPos + 6 &&\n        StringPrototypeIncludes(e.message, 'Expecting Unicode escape sequence'))\n      return null;\n    if (errPos === awaitPos + 7 &&\n        StringPrototypeIncludes(e.message, 'Unexpected token'))\n      return null;\n    const line = e.loc.line;\n    const column = line === 1 ? e.loc.column - wrapPrefix.length : e.loc.column;\n    let message = '\\n' + StringPrototypeSplit(src, '\\n')[line - 1] + '\\n' +\n        StringPrototypeRepeat(' ', column) +\n        '^\\n\\n' + RegExpPrototypeSymbolReplace(/ \\([^)]+\\)/, e.message, '');\n    // V8 unexpected token errors include the token string.\n    if (StringPrototypeEndsWith(message, 'Unexpected token'))\n      message += \" '\" +\n        // Wrapper end may cause acorn to report error position after the source\n        ((src.length - 1) >= (e.pos - wrapPrefix.length)\n          ? src[e.pos - wrapPrefix.length]\n          : src[src.length - 1]) +\n        \"'\";\n    // eslint-disable-next-line no-restricted-syntax\n    throw new SyntaxError(message);\n  }\n  const body = root.body[0].expression.callee.body;\n  const state = {\n    body,\n    ancestors: [],\n    hoistedDeclarationStatements: [],\n    replace(from, to, str) {\n      for (let i = from; i < to; i++) {\n        wrappedArray[i] = '';\n      }\n      if (from === to) str += wrappedArray[from];\n      wrappedArray[from] = str;\n    },\n    prepend(node, str) {\n      wrappedArray[node.start] = str + wrappedArray[node.start];\n    },\n    append(node, str) {\n      wrappedArray[node.end - 1] += str;\n    },\n    containsAwait: false,\n    containsReturn: false\n  };\n\n  walk.recursive(body, state, visitors);\n\n  // Do not transform if\n  // 1. False alarm: there isn't actually an await expression.\n  // 2. There is a top-level return, which is not allowed.\n  if (!state.containsAwait || state.containsReturn) {\n    return null;\n  }\n\n  const last = body.body[body.body.length - 1];\n  if (last.type === 'ExpressionStatement') {\n    // For an expression statement of the form\n    // ( expr ) ;\n    // ^^^^^^^^^^   // last\n    //   ^^^^       // last.expression\n    //\n    // We do not want the left parenthesis before the `return` keyword;\n    // therefore we prepend the `return (` to `last`.\n    //\n    // On the other hand, we do not want the right parenthesis after the\n    // semicolon. Since there can only be more right parentheses between\n    // last.expression.end and the semicolon, appending one more to\n    // last.expression should be fine.\n    state.prepend(last, 'return (');\n    state.append(last.expression, ')');\n  }\n\n  return (\n    ArrayPrototypeJoin(state.hoistedDeclarationStatements, '') +\n    ArrayPrototypeJoin(wrappedArray, '')\n  );\n}\n\nmodule.exports = {\n  processTopLevelAwait\n};\n","function Diff() {}\nDiff.prototype = {\n  diff: function diff(oldString, newString) {\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    var callback = options.callback;\n\n    if (typeof options === 'function') {\n      callback = options;\n      options = {};\n    }\n\n    this.options = options;\n    var self = this;\n\n    function done(value) {\n      if (callback) {\n        setTimeout(function () {\n          callback(undefined, value);\n        }, 0);\n        return true;\n      } else {\n        return value;\n      }\n    } // Allow subclasses to massage the input prior to running\n\n\n    oldString = this.castInput(oldString);\n    newString = this.castInput(newString);\n    oldString = this.removeEmpty(this.tokenize(oldString));\n    newString = this.removeEmpty(this.tokenize(newString));\n    var newLen = newString.length,\n        oldLen = oldString.length;\n    var editLength = 1;\n    var maxEditLength = newLen + oldLen;\n    var bestPath = [{\n      newPos: -1,\n      components: []\n    }]; // Seed editLength = 0, i.e. the content starts with the same values\n\n    var oldPos = this.extractCommon(bestPath[0], newString, oldString, 0);\n\n    if (bestPath[0].newPos + 1 >= newLen && oldPos + 1 >= oldLen) {\n      // Identity per the equality and tokenizer\n      return done([{\n        value: this.join(newString),\n        count: newString.length\n      }]);\n    } // Main worker method. checks all permutations of a given edit length for acceptance.\n\n\n    function execEditLength() {\n      for (var diagonalPath = -1 * editLength; diagonalPath <= editLength; diagonalPath += 2) {\n        var basePath = void 0;\n\n        var addPath = bestPath[diagonalPath - 1],\n            removePath = bestPath[diagonalPath + 1],\n            _oldPos = (removePath ? removePath.newPos : 0) - diagonalPath;\n\n        if (addPath) {\n          // No one else is going to attempt to use this value, clear it\n          bestPath[diagonalPath - 1] = undefined;\n        }\n\n        var canAdd = addPath && addPath.newPos + 1 < newLen,\n            canRemove = removePath && 0 <= _oldPos && _oldPos < oldLen;\n\n        if (!canAdd && !canRemove) {\n          // If this path is a terminal then prune\n          bestPath[diagonalPath] = undefined;\n          continue;\n        } // Select the diagonal that we want to branch from. We select the prior\n        // path whose position in the new string is the farthest from the origin\n        // and does not pass the bounds of the diff graph\n\n\n        if (!canAdd || canRemove && addPath.newPos < removePath.newPos) {\n          basePath = clonePath(removePath);\n          self.pushComponent(basePath.components, undefined, true);\n        } else {\n          basePath = addPath; // No need to clone, we've pulled it from the list\n\n          basePath.newPos++;\n          self.pushComponent(basePath.components, true, undefined);\n        }\n\n        _oldPos = self.extractCommon(basePath, newString, oldString, diagonalPath); // If we have hit the end of both strings, then we are done\n\n        if (basePath.newPos + 1 >= newLen && _oldPos + 1 >= oldLen) {\n          return done(buildValues(self, basePath.components, newString, oldString, self.useLongestToken));\n        } else {\n          // Otherwise track this path as a potential candidate and continue.\n          bestPath[diagonalPath] = basePath;\n        }\n      }\n\n      editLength++;\n    } // Performs the length of edit iteration. Is a bit fugly as this has to support the\n    // sync and async mode which is never fun. Loops over execEditLength until a value\n    // is produced.\n\n\n    if (callback) {\n      (function exec() {\n        setTimeout(function () {\n          // This should not happen, but we want to be safe.\n\n          /* istanbul ignore next */\n          if (editLength > maxEditLength) {\n            return callback();\n          }\n\n          if (!execEditLength()) {\n            exec();\n          }\n        }, 0);\n      })();\n    } else {\n      while (editLength <= maxEditLength) {\n        var ret = execEditLength();\n\n        if (ret) {\n          return ret;\n        }\n      }\n    }\n  },\n  pushComponent: function pushComponent(components, added, removed) {\n    var last = components[components.length - 1];\n\n    if (last && last.added === added && last.removed === removed) {\n      // We need to clone here as the component clone operation is just\n      // as shallow array clone\n      components[components.length - 1] = {\n        count: last.count + 1,\n        added: added,\n        removed: removed\n      };\n    } else {\n      components.push({\n        count: 1,\n        added: added,\n        removed: removed\n      });\n    }\n  },\n  extractCommon: function extractCommon(basePath, newString, oldString, diagonalPath) {\n    var newLen = newString.length,\n        oldLen = oldString.length,\n        newPos = basePath.newPos,\n        oldPos = newPos - diagonalPath,\n        commonCount = 0;\n\n    while (newPos + 1 < newLen && oldPos + 1 < oldLen && this.equals(newString[newPos + 1], oldString[oldPos + 1])) {\n      newPos++;\n      oldPos++;\n      commonCount++;\n    }\n\n    if (commonCount) {\n      basePath.components.push({\n        count: commonCount\n      });\n    }\n\n    basePath.newPos = newPos;\n    return oldPos;\n  },\n  equals: function equals(left, right) {\n    if (this.options.comparator) {\n      return this.options.comparator(left, right);\n    } else {\n      return left === right || this.options.ignoreCase && left.toLowerCase() === right.toLowerCase();\n    }\n  },\n  removeEmpty: function removeEmpty(array) {\n    var ret = [];\n\n    for (var i = 0; i < array.length; i++) {\n      if (array[i]) {\n        ret.push(array[i]);\n      }\n    }\n\n    return ret;\n  },\n  castInput: function castInput(value) {\n    return value;\n  },\n  tokenize: function tokenize(value) {\n    return value.split('');\n  },\n  join: function join(chars) {\n    return chars.join('');\n  }\n};\n\nfunction buildValues(diff, components, newString, oldString, useLongestToken) {\n  var componentPos = 0,\n      componentLen = components.length,\n      newPos = 0,\n      oldPos = 0;\n\n  for (; componentPos < componentLen; componentPos++) {\n    var component = components[componentPos];\n\n    if (!component.removed) {\n      if (!component.added && useLongestToken) {\n        var value = newString.slice(newPos, newPos + component.count);\n        value = value.map(function (value, i) {\n          var oldValue = oldString[oldPos + i];\n          return oldValue.length > value.length ? oldValue : value;\n        });\n        component.value = diff.join(value);\n      } else {\n        component.value = diff.join(newString.slice(newPos, newPos + component.count));\n      }\n\n      newPos += component.count; // Common case\n\n      if (!component.added) {\n        oldPos += component.count;\n      }\n    } else {\n      component.value = diff.join(oldString.slice(oldPos, oldPos + component.count));\n      oldPos += component.count; // Reverse add and remove so removes are output first to match common convention\n      // The diffing algorithm is tied to add then remove output and this is the simplest\n      // route to get the desired output with minimal overhead.\n\n      if (componentPos && components[componentPos - 1].added) {\n        var tmp = components[componentPos - 1];\n        components[componentPos - 1] = components[componentPos];\n        components[componentPos] = tmp;\n      }\n    }\n  } // Special case handle for when one terminal is ignored (i.e. whitespace).\n  // For this case we merge the terminal into the prior string and drop the change.\n  // This is only available for string mode.\n\n\n  var lastComponent = components[componentLen - 1];\n\n  if (componentLen > 1 && typeof lastComponent.value === 'string' && (lastComponent.added || lastComponent.removed) && diff.equals('', lastComponent.value)) {\n    components[componentLen - 2].value += lastComponent.value;\n    components.pop();\n  }\n\n  return components;\n}\n\nfunction clonePath(path) {\n  return {\n    newPos: path.newPos,\n    components: path.components.slice(0)\n  };\n}\n\nvar characterDiff = new Diff();\nfunction diffChars(oldStr, newStr, options) {\n  return characterDiff.diff(oldStr, newStr, options);\n}\n\nfunction generateOptions(options, defaults) {\n  if (typeof options === 'function') {\n    defaults.callback = options;\n  } else if (options) {\n    for (var name in options) {\n      /* istanbul ignore else */\n      if (options.hasOwnProperty(name)) {\n        defaults[name] = options[name];\n      }\n    }\n  }\n\n  return defaults;\n}\n\n//\n// Ranges and exceptions:\n// Latin-1 Supplement, 0080–00FF\n//  - U+00D7  × Multiplication sign\n//  - U+00F7  ÷ Division sign\n// Latin Extended-A, 0100–017F\n// Latin Extended-B, 0180–024F\n// IPA Extensions, 0250–02AF\n// Spacing Modifier Letters, 02B0–02FF\n//  - U+02C7  ˇ &#711;  Caron\n//  - U+02D8  ˘ &#728;  Breve\n//  - U+02D9  ˙ &#729;  Dot Above\n//  - U+02DA  ˚ &#730;  Ring Above\n//  - U+02DB  ˛ &#731;  Ogonek\n//  - U+02DC  ˜ &#732;  Small Tilde\n//  - U+02DD  ˝ &#733;  Double Acute Accent\n// Latin Extended Additional, 1E00–1EFF\n\nvar extendedWordChars = /^[A-Za-z\\xC0-\\u02C6\\u02C8-\\u02D7\\u02DE-\\u02FF\\u1E00-\\u1EFF]+$/;\nvar reWhitespace = /\\S/;\nvar wordDiff = new Diff();\n\nwordDiff.equals = function (left, right) {\n  if (this.options.ignoreCase) {\n    left = left.toLowerCase();\n    right = right.toLowerCase();\n  }\n\n  return left === right || this.options.ignoreWhitespace && !reWhitespace.test(left) && !reWhitespace.test(right);\n};\n\nwordDiff.tokenize = function (value) {\n  var tokens = value.split(/(\\s+|[()[\\]{}'\"]|\\b)/); // Join the boundary splits that we do not consider to be boundaries. This is primarily the extended Latin character set.\n\n  for (var i = 0; i < tokens.length - 1; i++) {\n    // If we have an empty string in the next field and we have only word chars before and after, merge\n    if (!tokens[i + 1] && tokens[i + 2] && extendedWordChars.test(tokens[i]) && extendedWordChars.test(tokens[i + 2])) {\n      tokens[i] += tokens[i + 2];\n      tokens.splice(i + 1, 2);\n      i--;\n    }\n  }\n\n  return tokens;\n};\n\nfunction diffWords(oldStr, newStr, options) {\n  options = generateOptions(options, {\n    ignoreWhitespace: true\n  });\n  return wordDiff.diff(oldStr, newStr, options);\n}\nfunction diffWordsWithSpace(oldStr, newStr, options) {\n  return wordDiff.diff(oldStr, newStr, options);\n}\n\nvar lineDiff = new Diff();\n\nlineDiff.tokenize = function (value) {\n  var retLines = [],\n      linesAndNewlines = value.split(/(\\n|\\r\\n)/); // Ignore the final empty token that occurs if the string ends with a new line\n\n  if (!linesAndNewlines[linesAndNewlines.length - 1]) {\n    linesAndNewlines.pop();\n  } // Merge the content and line separators into single tokens\n\n\n  for (var i = 0; i < linesAndNewlines.length; i++) {\n    var line = linesAndNewlines[i];\n\n    if (i % 2 && !this.options.newlineIsToken) {\n      retLines[retLines.length - 1] += line;\n    } else {\n      if (this.options.ignoreWhitespace) {\n        line = line.trim();\n      }\n\n      retLines.push(line);\n    }\n  }\n\n  return retLines;\n};\n\nfunction diffLines(oldStr, newStr, callback) {\n  return lineDiff.diff(oldStr, newStr, callback);\n}\nfunction diffTrimmedLines(oldStr, newStr, callback) {\n  var options = generateOptions(callback, {\n    ignoreWhitespace: true\n  });\n  return lineDiff.diff(oldStr, newStr, options);\n}\n\nvar sentenceDiff = new Diff();\n\nsentenceDiff.tokenize = function (value) {\n  return value.split(/(\\S.+?[.!?])(?=\\s+|$)/);\n};\n\nfunction diffSentences(oldStr, newStr, callback) {\n  return sentenceDiff.diff(oldStr, newStr, callback);\n}\n\nvar cssDiff = new Diff();\n\ncssDiff.tokenize = function (value) {\n  return value.split(/([{}:;,]|\\s+)/);\n};\n\nfunction diffCss(oldStr, newStr, callback) {\n  return cssDiff.diff(oldStr, newStr, callback);\n}\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function (obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function (obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) arr2[i] = arr[i];\n\n    return arr2;\n  }\n}\n\nfunction _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}\n\nvar objectPrototypeToString = Object.prototype.toString;\nvar jsonDiff = new Diff(); // Discriminate between two lines of pretty-printed, serialized JSON where one of them has a\n// dangling comma and the other doesn't. Turns out including the dangling comma yields the nicest output:\n\njsonDiff.useLongestToken = true;\njsonDiff.tokenize = lineDiff.tokenize;\n\njsonDiff.castInput = function (value) {\n  var _this$options = this.options,\n      undefinedReplacement = _this$options.undefinedReplacement,\n      _this$options$stringi = _this$options.stringifyReplacer,\n      stringifyReplacer = _this$options$stringi === void 0 ? function (k, v) {\n    return typeof v === 'undefined' ? undefinedReplacement : v;\n  } : _this$options$stringi;\n  return typeof value === 'string' ? value : JSON.stringify(canonicalize(value, null, null, stringifyReplacer), stringifyReplacer, '  ');\n};\n\njsonDiff.equals = function (left, right) {\n  return Diff.prototype.equals.call(jsonDiff, left.replace(/,([\\r\\n])/g, '$1'), right.replace(/,([\\r\\n])/g, '$1'));\n};\n\nfunction diffJson(oldObj, newObj, options) {\n  return jsonDiff.diff(oldObj, newObj, options);\n} // This function handles the presence of circular references by bailing out when encountering an\n// object that is already on the \"stack\" of items being processed. Accepts an optional replacer\n\nfunction canonicalize(obj, stack, replacementStack, replacer, key) {\n  stack = stack || [];\n  replacementStack = replacementStack || [];\n\n  if (replacer) {\n    obj = replacer(key, obj);\n  }\n\n  var i;\n\n  for (i = 0; i < stack.length; i += 1) {\n    if (stack[i] === obj) {\n      return replacementStack[i];\n    }\n  }\n\n  var canonicalizedObj;\n\n  if ('[object Array]' === objectPrototypeToString.call(obj)) {\n    stack.push(obj);\n    canonicalizedObj = new Array(obj.length);\n    replacementStack.push(canonicalizedObj);\n\n    for (i = 0; i < obj.length; i += 1) {\n      canonicalizedObj[i] = canonicalize(obj[i], stack, replacementStack, replacer, key);\n    }\n\n    stack.pop();\n    replacementStack.pop();\n    return canonicalizedObj;\n  }\n\n  if (obj && obj.toJSON) {\n    obj = obj.toJSON();\n  }\n\n  if (_typeof(obj) === 'object' && obj !== null) {\n    stack.push(obj);\n    canonicalizedObj = {};\n    replacementStack.push(canonicalizedObj);\n\n    var sortedKeys = [],\n        _key;\n\n    for (_key in obj) {\n      /* istanbul ignore else */\n      if (obj.hasOwnProperty(_key)) {\n        sortedKeys.push(_key);\n      }\n    }\n\n    sortedKeys.sort();\n\n    for (i = 0; i < sortedKeys.length; i += 1) {\n      _key = sortedKeys[i];\n      canonicalizedObj[_key] = canonicalize(obj[_key], stack, replacementStack, replacer, _key);\n    }\n\n    stack.pop();\n    replacementStack.pop();\n  } else {\n    canonicalizedObj = obj;\n  }\n\n  return canonicalizedObj;\n}\n\nvar arrayDiff = new Diff();\n\narrayDiff.tokenize = function (value) {\n  return value.slice();\n};\n\narrayDiff.join = arrayDiff.removeEmpty = function (value) {\n  return value;\n};\n\nfunction diffArrays(oldArr, newArr, callback) {\n  return arrayDiff.diff(oldArr, newArr, callback);\n}\n\nfunction parsePatch(uniDiff) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var diffstr = uniDiff.split(/\\r\\n|[\\n\\v\\f\\r\\x85]/),\n      delimiters = uniDiff.match(/\\r\\n|[\\n\\v\\f\\r\\x85]/g) || [],\n      list = [],\n      i = 0;\n\n  function parseIndex() {\n    var index = {};\n    list.push(index); // Parse diff metadata\n\n    while (i < diffstr.length) {\n      var line = diffstr[i]; // File header found, end parsing diff metadata\n\n      if (/^(\\-\\-\\-|\\+\\+\\+|@@)\\s/.test(line)) {\n        break;\n      } // Diff index\n\n\n      var header = /^(?:Index:|diff(?: -r \\w+)+)\\s+(.+?)\\s*$/.exec(line);\n\n      if (header) {\n        index.index = header[1];\n      }\n\n      i++;\n    } // Parse file headers if they are defined. Unified diff requires them, but\n    // there's no technical issues to have an isolated hunk without file header\n\n\n    parseFileHeader(index);\n    parseFileHeader(index); // Parse hunks\n\n    index.hunks = [];\n\n    while (i < diffstr.length) {\n      var _line = diffstr[i];\n\n      if (/^(Index:|diff|\\-\\-\\-|\\+\\+\\+)\\s/.test(_line)) {\n        break;\n      } else if (/^@@/.test(_line)) {\n        index.hunks.push(parseHunk());\n      } else if (_line && options.strict) {\n        // Ignore unexpected content unless in strict mode\n        throw new Error('Unknown line ' + (i + 1) + ' ' + JSON.stringify(_line));\n      } else {\n        i++;\n      }\n    }\n  } // Parses the --- and +++ headers, if none are found, no lines\n  // are consumed.\n\n\n  function parseFileHeader(index) {\n    var fileHeader = /^(---|\\+\\+\\+)\\s+(.*)$/.exec(diffstr[i]);\n\n    if (fileHeader) {\n      var keyPrefix = fileHeader[1] === '---' ? 'old' : 'new';\n      var data = fileHeader[2].split('\\t', 2);\n      var fileName = data[0].replace(/\\\\\\\\/g, '\\\\');\n\n      if (/^\".*\"$/.test(fileName)) {\n        fileName = fileName.substr(1, fileName.length - 2);\n      }\n\n      index[keyPrefix + 'FileName'] = fileName;\n      index[keyPrefix + 'Header'] = (data[1] || '').trim();\n      i++;\n    }\n  } // Parses a hunk\n  // This assumes that we are at the start of a hunk.\n\n\n  function parseHunk() {\n    var chunkHeaderIndex = i,\n        chunkHeaderLine = diffstr[i++],\n        chunkHeader = chunkHeaderLine.split(/@@ -(\\d+)(?:,(\\d+))? \\+(\\d+)(?:,(\\d+))? @@/);\n    var hunk = {\n      oldStart: +chunkHeader[1],\n      oldLines: +chunkHeader[2] || 1,\n      newStart: +chunkHeader[3],\n      newLines: +chunkHeader[4] || 1,\n      lines: [],\n      linedelimiters: []\n    };\n    var addCount = 0,\n        removeCount = 0;\n\n    for (; i < diffstr.length; i++) {\n      // Lines starting with '---' could be mistaken for the \"remove line\" operation\n      // But they could be the header for the next file. Therefore prune such cases out.\n      if (diffstr[i].indexOf('--- ') === 0 && i + 2 < diffstr.length && diffstr[i + 1].indexOf('+++ ') === 0 && diffstr[i + 2].indexOf('@@') === 0) {\n        break;\n      }\n\n      var operation = diffstr[i].length == 0 && i != diffstr.length - 1 ? ' ' : diffstr[i][0];\n\n      if (operation === '+' || operation === '-' || operation === ' ' || operation === '\\\\') {\n        hunk.lines.push(diffstr[i]);\n        hunk.linedelimiters.push(delimiters[i] || '\\n');\n\n        if (operation === '+') {\n          addCount++;\n        } else if (operation === '-') {\n          removeCount++;\n        } else if (operation === ' ') {\n          addCount++;\n          removeCount++;\n        }\n      } else {\n        break;\n      }\n    } // Handle the empty block count case\n\n\n    if (!addCount && hunk.newLines === 1) {\n      hunk.newLines = 0;\n    }\n\n    if (!removeCount && hunk.oldLines === 1) {\n      hunk.oldLines = 0;\n    } // Perform optional sanity checking\n\n\n    if (options.strict) {\n      if (addCount !== hunk.newLines) {\n        throw new Error('Added line count did not match for hunk at line ' + (chunkHeaderIndex + 1));\n      }\n\n      if (removeCount !== hunk.oldLines) {\n        throw new Error('Removed line count did not match for hunk at line ' + (chunkHeaderIndex + 1));\n      }\n    }\n\n    return hunk;\n  }\n\n  while (i < diffstr.length) {\n    parseIndex();\n  }\n\n  return list;\n}\n\n// Iterator that traverses in the range of [min, max], stepping\n// by distance from a given start position. I.e. for [0, 4], with\n// start of 2, this will iterate 2, 3, 1, 4, 0.\nfunction distanceIterator (start, minLine, maxLine) {\n  var wantForward = true,\n      backwardExhausted = false,\n      forwardExhausted = false,\n      localOffset = 1;\n  return function iterator() {\n    if (wantForward && !forwardExhausted) {\n      if (backwardExhausted) {\n        localOffset++;\n      } else {\n        wantForward = false;\n      } // Check if trying to fit beyond text length, and if not, check it fits\n      // after offset location (or desired location on first iteration)\n\n\n      if (start + localOffset <= maxLine) {\n        return localOffset;\n      }\n\n      forwardExhausted = true;\n    }\n\n    if (!backwardExhausted) {\n      if (!forwardExhausted) {\n        wantForward = true;\n      } // Check if trying to fit before text beginning, and if not, check it fits\n      // before offset location\n\n\n      if (minLine <= start - localOffset) {\n        return -localOffset++;\n      }\n\n      backwardExhausted = true;\n      return iterator();\n    } // We tried to fit hunk before text beginning and beyond text length, then\n    // hunk can't fit on the text. Return undefined\n\n  };\n}\n\nfunction applyPatch(source, uniDiff) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n  if (typeof uniDiff === 'string') {\n    uniDiff = parsePatch(uniDiff);\n  }\n\n  if (Array.isArray(uniDiff)) {\n    if (uniDiff.length > 1) {\n      throw new Error('applyPatch only works with a single input.');\n    }\n\n    uniDiff = uniDiff[0];\n  } // Apply the diff to the input\n\n\n  var lines = source.split(/\\r\\n|[\\n\\v\\f\\r\\x85]/),\n      delimiters = source.match(/\\r\\n|[\\n\\v\\f\\r\\x85]/g) || [],\n      hunks = uniDiff.hunks,\n      compareLine = options.compareLine || function (lineNumber, line, operation, patchContent) {\n    return line === patchContent;\n  },\n      errorCount = 0,\n      fuzzFactor = options.fuzzFactor || 0,\n      minLine = 0,\n      offset = 0,\n      removeEOFNL,\n      addEOFNL;\n  /**\n   * Checks if the hunk exactly fits on the provided location\n   */\n\n\n  function hunkFits(hunk, toPos) {\n    for (var j = 0; j < hunk.lines.length; j++) {\n      var line = hunk.lines[j],\n          operation = line.length > 0 ? line[0] : ' ',\n          content = line.length > 0 ? line.substr(1) : line;\n\n      if (operation === ' ' || operation === '-') {\n        // Context sanity check\n        if (!compareLine(toPos + 1, lines[toPos], operation, content)) {\n          errorCount++;\n\n          if (errorCount > fuzzFactor) {\n            return false;\n          }\n        }\n\n        toPos++;\n      }\n    }\n\n    return true;\n  } // Search best fit offsets for each hunk based on the previous ones\n\n\n  for (var i = 0; i < hunks.length; i++) {\n    var hunk = hunks[i],\n        maxLine = lines.length - hunk.oldLines,\n        localOffset = 0,\n        toPos = offset + hunk.oldStart - 1;\n    var iterator = distanceIterator(toPos, minLine, maxLine);\n\n    for (; localOffset !== undefined; localOffset = iterator()) {\n      if (hunkFits(hunk, toPos + localOffset)) {\n        hunk.offset = offset += localOffset;\n        break;\n      }\n    }\n\n    if (localOffset === undefined) {\n      return false;\n    } // Set lower text limit to end of the current hunk, so next ones don't try\n    // to fit over already patched text\n\n\n    minLine = hunk.offset + hunk.oldStart + hunk.oldLines;\n  } // Apply patch hunks\n\n\n  var diffOffset = 0;\n\n  for (var _i = 0; _i < hunks.length; _i++) {\n    var _hunk = hunks[_i],\n        _toPos = _hunk.oldStart + _hunk.offset + diffOffset - 1;\n\n    diffOffset += _hunk.newLines - _hunk.oldLines;\n\n    if (_toPos < 0) {\n      // Creating a new file\n      _toPos = 0;\n    }\n\n    for (var j = 0; j < _hunk.lines.length; j++) {\n      var line = _hunk.lines[j],\n          operation = line.length > 0 ? line[0] : ' ',\n          content = line.length > 0 ? line.substr(1) : line,\n          delimiter = _hunk.linedelimiters[j];\n\n      if (operation === ' ') {\n        _toPos++;\n      } else if (operation === '-') {\n        lines.splice(_toPos, 1);\n        delimiters.splice(_toPos, 1);\n        /* istanbul ignore else */\n      } else if (operation === '+') {\n        lines.splice(_toPos, 0, content);\n        delimiters.splice(_toPos, 0, delimiter);\n        _toPos++;\n      } else if (operation === '\\\\') {\n        var previousOperation = _hunk.lines[j - 1] ? _hunk.lines[j - 1][0] : null;\n\n        if (previousOperation === '+') {\n          removeEOFNL = true;\n        } else if (previousOperation === '-') {\n          addEOFNL = true;\n        }\n      }\n    }\n  } // Handle EOFNL insertion/removal\n\n\n  if (removeEOFNL) {\n    while (!lines[lines.length - 1]) {\n      lines.pop();\n      delimiters.pop();\n    }\n  } else if (addEOFNL) {\n    lines.push('');\n    delimiters.push('\\n');\n  }\n\n  for (var _k = 0; _k < lines.length - 1; _k++) {\n    lines[_k] = lines[_k] + delimiters[_k];\n  }\n\n  return lines.join('');\n} // Wrapper that supports multiple file patches via callbacks.\n\nfunction applyPatches(uniDiff, options) {\n  if (typeof uniDiff === 'string') {\n    uniDiff = parsePatch(uniDiff);\n  }\n\n  var currentIndex = 0;\n\n  function processIndex() {\n    var index = uniDiff[currentIndex++];\n\n    if (!index) {\n      return options.complete();\n    }\n\n    options.loadFile(index, function (err, data) {\n      if (err) {\n        return options.complete(err);\n      }\n\n      var updatedContent = applyPatch(data, index, options);\n      options.patched(index, updatedContent, function (err) {\n        if (err) {\n          return options.complete(err);\n        }\n\n        processIndex();\n      });\n    });\n  }\n\n  processIndex();\n}\n\nfunction structuredPatch(oldFileName, newFileName, oldStr, newStr, oldHeader, newHeader, options) {\n  if (!options) {\n    options = {};\n  }\n\n  if (typeof options.context === 'undefined') {\n    options.context = 4;\n  }\n\n  var diff = diffLines(oldStr, newStr, options);\n  diff.push({\n    value: '',\n    lines: []\n  }); // Append an empty value to make cleanup easier\n\n  function contextLines(lines) {\n    return lines.map(function (entry) {\n      return ' ' + entry;\n    });\n  }\n\n  var hunks = [];\n  var oldRangeStart = 0,\n      newRangeStart = 0,\n      curRange = [],\n      oldLine = 1,\n      newLine = 1;\n\n  var _loop = function _loop(i) {\n    var current = diff[i],\n        lines = current.lines || current.value.replace(/\\n$/, '').split('\\n');\n    current.lines = lines;\n\n    if (current.added || current.removed) {\n      var _curRange;\n\n      // If we have previous context, start with that\n      if (!oldRangeStart) {\n        var prev = diff[i - 1];\n        oldRangeStart = oldLine;\n        newRangeStart = newLine;\n\n        if (prev) {\n          curRange = options.context > 0 ? contextLines(prev.lines.slice(-options.context)) : [];\n          oldRangeStart -= curRange.length;\n          newRangeStart -= curRange.length;\n        }\n      } // Output our changes\n\n\n      (_curRange = curRange).push.apply(_curRange, _toConsumableArray(lines.map(function (entry) {\n        return (current.added ? '+' : '-') + entry;\n      }))); // Track the updated file position\n\n\n      if (current.added) {\n        newLine += lines.length;\n      } else {\n        oldLine += lines.length;\n      }\n    } else {\n      // Identical context lines. Track line changes\n      if (oldRangeStart) {\n        // Close out any changes that have been output (or join overlapping)\n        if (lines.length <= options.context * 2 && i < diff.length - 2) {\n          var _curRange2;\n\n          // Overlapping\n          (_curRange2 = curRange).push.apply(_curRange2, _toConsumableArray(contextLines(lines)));\n        } else {\n          var _curRange3;\n\n          // end the range and output\n          var contextSize = Math.min(lines.length, options.context);\n\n          (_curRange3 = curRange).push.apply(_curRange3, _toConsumableArray(contextLines(lines.slice(0, contextSize))));\n\n          var hunk = {\n            oldStart: oldRangeStart,\n            oldLines: oldLine - oldRangeStart + contextSize,\n            newStart: newRangeStart,\n            newLines: newLine - newRangeStart + contextSize,\n            lines: curRange\n          };\n\n          if (i >= diff.length - 2 && lines.length <= options.context) {\n            // EOF is inside this hunk\n            var oldEOFNewline = /\\n$/.test(oldStr);\n            var newEOFNewline = /\\n$/.test(newStr);\n            var noNlBeforeAdds = lines.length == 0 && curRange.length > hunk.oldLines;\n\n            if (!oldEOFNewline && noNlBeforeAdds) {\n              // special case: old has no eol and no trailing context; no-nl can end up before adds\n              curRange.splice(hunk.oldLines, 0, '\\\\ No newline at end of file');\n            }\n\n            if (!oldEOFNewline && !noNlBeforeAdds || !newEOFNewline) {\n              curRange.push('\\\\ No newline at end of file');\n            }\n          }\n\n          hunks.push(hunk);\n          oldRangeStart = 0;\n          newRangeStart = 0;\n          curRange = [];\n        }\n      }\n\n      oldLine += lines.length;\n      newLine += lines.length;\n    }\n  };\n\n  for (var i = 0; i < diff.length; i++) {\n    _loop(i);\n  }\n\n  return {\n    oldFileName: oldFileName,\n    newFileName: newFileName,\n    oldHeader: oldHeader,\n    newHeader: newHeader,\n    hunks: hunks\n  };\n}\nfunction createTwoFilesPatch(oldFileName, newFileName, oldStr, newStr, oldHeader, newHeader, options) {\n  var diff = structuredPatch(oldFileName, newFileName, oldStr, newStr, oldHeader, newHeader, options);\n  var ret = [];\n\n  if (oldFileName == newFileName) {\n    ret.push('Index: ' + oldFileName);\n  }\n\n  ret.push('===================================================================');\n  ret.push('--- ' + diff.oldFileName + (typeof diff.oldHeader === 'undefined' ? '' : '\\t' + diff.oldHeader));\n  ret.push('+++ ' + diff.newFileName + (typeof diff.newHeader === 'undefined' ? '' : '\\t' + diff.newHeader));\n\n  for (var i = 0; i < diff.hunks.length; i++) {\n    var hunk = diff.hunks[i];\n    ret.push('@@ -' + hunk.oldStart + ',' + hunk.oldLines + ' +' + hunk.newStart + ',' + hunk.newLines + ' @@');\n    ret.push.apply(ret, hunk.lines);\n  }\n\n  return ret.join('\\n') + '\\n';\n}\nfunction createPatch(fileName, oldStr, newStr, oldHeader, newHeader, options) {\n  return createTwoFilesPatch(fileName, fileName, oldStr, newStr, oldHeader, newHeader, options);\n}\n\nfunction arrayEqual(a, b) {\n  if (a.length !== b.length) {\n    return false;\n  }\n\n  return arrayStartsWith(a, b);\n}\nfunction arrayStartsWith(array, start) {\n  if (start.length > array.length) {\n    return false;\n  }\n\n  for (var i = 0; i < start.length; i++) {\n    if (start[i] !== array[i]) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction calcLineCount(hunk) {\n  var _calcOldNewLineCount = calcOldNewLineCount(hunk.lines),\n      oldLines = _calcOldNewLineCount.oldLines,\n      newLines = _calcOldNewLineCount.newLines;\n\n  if (oldLines !== undefined) {\n    hunk.oldLines = oldLines;\n  } else {\n    delete hunk.oldLines;\n  }\n\n  if (newLines !== undefined) {\n    hunk.newLines = newLines;\n  } else {\n    delete hunk.newLines;\n  }\n}\nfunction merge(mine, theirs, base) {\n  mine = loadPatch(mine, base);\n  theirs = loadPatch(theirs, base);\n  var ret = {}; // For index we just let it pass through as it doesn't have any necessary meaning.\n  // Leaving sanity checks on this to the API consumer that may know more about the\n  // meaning in their own context.\n\n  if (mine.index || theirs.index) {\n    ret.index = mine.index || theirs.index;\n  }\n\n  if (mine.newFileName || theirs.newFileName) {\n    if (!fileNameChanged(mine)) {\n      // No header or no change in ours, use theirs (and ours if theirs does not exist)\n      ret.oldFileName = theirs.oldFileName || mine.oldFileName;\n      ret.newFileName = theirs.newFileName || mine.newFileName;\n      ret.oldHeader = theirs.oldHeader || mine.oldHeader;\n      ret.newHeader = theirs.newHeader || mine.newHeader;\n    } else if (!fileNameChanged(theirs)) {\n      // No header or no change in theirs, use ours\n      ret.oldFileName = mine.oldFileName;\n      ret.newFileName = mine.newFileName;\n      ret.oldHeader = mine.oldHeader;\n      ret.newHeader = mine.newHeader;\n    } else {\n      // Both changed... figure it out\n      ret.oldFileName = selectField(ret, mine.oldFileName, theirs.oldFileName);\n      ret.newFileName = selectField(ret, mine.newFileName, theirs.newFileName);\n      ret.oldHeader = selectField(ret, mine.oldHeader, theirs.oldHeader);\n      ret.newHeader = selectField(ret, mine.newHeader, theirs.newHeader);\n    }\n  }\n\n  ret.hunks = [];\n  var mineIndex = 0,\n      theirsIndex = 0,\n      mineOffset = 0,\n      theirsOffset = 0;\n\n  while (mineIndex < mine.hunks.length || theirsIndex < theirs.hunks.length) {\n    var mineCurrent = mine.hunks[mineIndex] || {\n      oldStart: Infinity\n    },\n        theirsCurrent = theirs.hunks[theirsIndex] || {\n      oldStart: Infinity\n    };\n\n    if (hunkBefore(mineCurrent, theirsCurrent)) {\n      // This patch does not overlap with any of the others, yay.\n      ret.hunks.push(cloneHunk(mineCurrent, mineOffset));\n      mineIndex++;\n      theirsOffset += mineCurrent.newLines - mineCurrent.oldLines;\n    } else if (hunkBefore(theirsCurrent, mineCurrent)) {\n      // This patch does not overlap with any of the others, yay.\n      ret.hunks.push(cloneHunk(theirsCurrent, theirsOffset));\n      theirsIndex++;\n      mineOffset += theirsCurrent.newLines - theirsCurrent.oldLines;\n    } else {\n      // Overlap, merge as best we can\n      var mergedHunk = {\n        oldStart: Math.min(mineCurrent.oldStart, theirsCurrent.oldStart),\n        oldLines: 0,\n        newStart: Math.min(mineCurrent.newStart + mineOffset, theirsCurrent.oldStart + theirsOffset),\n        newLines: 0,\n        lines: []\n      };\n      mergeLines(mergedHunk, mineCurrent.oldStart, mineCurrent.lines, theirsCurrent.oldStart, theirsCurrent.lines);\n      theirsIndex++;\n      mineIndex++;\n      ret.hunks.push(mergedHunk);\n    }\n  }\n\n  return ret;\n}\n\nfunction loadPatch(param, base) {\n  if (typeof param === 'string') {\n    if (/^@@/m.test(param) || /^Index:/m.test(param)) {\n      return parsePatch(param)[0];\n    }\n\n    if (!base) {\n      throw new Error('Must provide a base reference or pass in a patch');\n    }\n\n    return structuredPatch(undefined, undefined, base, param);\n  }\n\n  return param;\n}\n\nfunction fileNameChanged(patch) {\n  return patch.newFileName && patch.newFileName !== patch.oldFileName;\n}\n\nfunction selectField(index, mine, theirs) {\n  if (mine === theirs) {\n    return mine;\n  } else {\n    index.conflict = true;\n    return {\n      mine: mine,\n      theirs: theirs\n    };\n  }\n}\n\nfunction hunkBefore(test, check) {\n  return test.oldStart < check.oldStart && test.oldStart + test.oldLines < check.oldStart;\n}\n\nfunction cloneHunk(hunk, offset) {\n  return {\n    oldStart: hunk.oldStart,\n    oldLines: hunk.oldLines,\n    newStart: hunk.newStart + offset,\n    newLines: hunk.newLines,\n    lines: hunk.lines\n  };\n}\n\nfunction mergeLines(hunk, mineOffset, mineLines, theirOffset, theirLines) {\n  // This will generally result in a conflicted hunk, but there are cases where the context\n  // is the only overlap where we can successfully merge the content here.\n  var mine = {\n    offset: mineOffset,\n    lines: mineLines,\n    index: 0\n  },\n      their = {\n    offset: theirOffset,\n    lines: theirLines,\n    index: 0\n  }; // Handle any leading content\n\n  insertLeading(hunk, mine, their);\n  insertLeading(hunk, their, mine); // Now in the overlap content. Scan through and select the best changes from each.\n\n  while (mine.index < mine.lines.length && their.index < their.lines.length) {\n    var mineCurrent = mine.lines[mine.index],\n        theirCurrent = their.lines[their.index];\n\n    if ((mineCurrent[0] === '-' || mineCurrent[0] === '+') && (theirCurrent[0] === '-' || theirCurrent[0] === '+')) {\n      // Both modified ...\n      mutualChange(hunk, mine, their);\n    } else if (mineCurrent[0] === '+' && theirCurrent[0] === ' ') {\n      var _hunk$lines;\n\n      // Mine inserted\n      (_hunk$lines = hunk.lines).push.apply(_hunk$lines, _toConsumableArray(collectChange(mine)));\n    } else if (theirCurrent[0] === '+' && mineCurrent[0] === ' ') {\n      var _hunk$lines2;\n\n      // Theirs inserted\n      (_hunk$lines2 = hunk.lines).push.apply(_hunk$lines2, _toConsumableArray(collectChange(their)));\n    } else if (mineCurrent[0] === '-' && theirCurrent[0] === ' ') {\n      // Mine removed or edited\n      removal(hunk, mine, their);\n    } else if (theirCurrent[0] === '-' && mineCurrent[0] === ' ') {\n      // Their removed or edited\n      removal(hunk, their, mine, true);\n    } else if (mineCurrent === theirCurrent) {\n      // Context identity\n      hunk.lines.push(mineCurrent);\n      mine.index++;\n      their.index++;\n    } else {\n      // Context mismatch\n      conflict(hunk, collectChange(mine), collectChange(their));\n    }\n  } // Now push anything that may be remaining\n\n\n  insertTrailing(hunk, mine);\n  insertTrailing(hunk, their);\n  calcLineCount(hunk);\n}\n\nfunction mutualChange(hunk, mine, their) {\n  var myChanges = collectChange(mine),\n      theirChanges = collectChange(their);\n\n  if (allRemoves(myChanges) && allRemoves(theirChanges)) {\n    // Special case for remove changes that are supersets of one another\n    if (arrayStartsWith(myChanges, theirChanges) && skipRemoveSuperset(their, myChanges, myChanges.length - theirChanges.length)) {\n      var _hunk$lines3;\n\n      (_hunk$lines3 = hunk.lines).push.apply(_hunk$lines3, _toConsumableArray(myChanges));\n\n      return;\n    } else if (arrayStartsWith(theirChanges, myChanges) && skipRemoveSuperset(mine, theirChanges, theirChanges.length - myChanges.length)) {\n      var _hunk$lines4;\n\n      (_hunk$lines4 = hunk.lines).push.apply(_hunk$lines4, _toConsumableArray(theirChanges));\n\n      return;\n    }\n  } else if (arrayEqual(myChanges, theirChanges)) {\n    var _hunk$lines5;\n\n    (_hunk$lines5 = hunk.lines).push.apply(_hunk$lines5, _toConsumableArray(myChanges));\n\n    return;\n  }\n\n  conflict(hunk, myChanges, theirChanges);\n}\n\nfunction removal(hunk, mine, their, swap) {\n  var myChanges = collectChange(mine),\n      theirChanges = collectContext(their, myChanges);\n\n  if (theirChanges.merged) {\n    var _hunk$lines6;\n\n    (_hunk$lines6 = hunk.lines).push.apply(_hunk$lines6, _toConsumableArray(theirChanges.merged));\n  } else {\n    conflict(hunk, swap ? theirChanges : myChanges, swap ? myChanges : theirChanges);\n  }\n}\n\nfunction conflict(hunk, mine, their) {\n  hunk.conflict = true;\n  hunk.lines.push({\n    conflict: true,\n    mine: mine,\n    theirs: their\n  });\n}\n\nfunction insertLeading(hunk, insert, their) {\n  while (insert.offset < their.offset && insert.index < insert.lines.length) {\n    var line = insert.lines[insert.index++];\n    hunk.lines.push(line);\n    insert.offset++;\n  }\n}\n\nfunction insertTrailing(hunk, insert) {\n  while (insert.index < insert.lines.length) {\n    var line = insert.lines[insert.index++];\n    hunk.lines.push(line);\n  }\n}\n\nfunction collectChange(state) {\n  var ret = [],\n      operation = state.lines[state.index][0];\n\n  while (state.index < state.lines.length) {\n    var line = state.lines[state.index]; // Group additions that are immediately after subtractions and treat them as one \"atomic\" modify change.\n\n    if (operation === '-' && line[0] === '+') {\n      operation = '+';\n    }\n\n    if (operation === line[0]) {\n      ret.push(line);\n      state.index++;\n    } else {\n      break;\n    }\n  }\n\n  return ret;\n}\n\nfunction collectContext(state, matchChanges) {\n  var changes = [],\n      merged = [],\n      matchIndex = 0,\n      contextChanges = false,\n      conflicted = false;\n\n  while (matchIndex < matchChanges.length && state.index < state.lines.length) {\n    var change = state.lines[state.index],\n        match = matchChanges[matchIndex]; // Once we've hit our add, then we are done\n\n    if (match[0] === '+') {\n      break;\n    }\n\n    contextChanges = contextChanges || change[0] !== ' ';\n    merged.push(match);\n    matchIndex++; // Consume any additions in the other block as a conflict to attempt\n    // to pull in the remaining context after this\n\n    if (change[0] === '+') {\n      conflicted = true;\n\n      while (change[0] === '+') {\n        changes.push(change);\n        change = state.lines[++state.index];\n      }\n    }\n\n    if (match.substr(1) === change.substr(1)) {\n      changes.push(change);\n      state.index++;\n    } else {\n      conflicted = true;\n    }\n  }\n\n  if ((matchChanges[matchIndex] || '')[0] === '+' && contextChanges) {\n    conflicted = true;\n  }\n\n  if (conflicted) {\n    return changes;\n  }\n\n  while (matchIndex < matchChanges.length) {\n    merged.push(matchChanges[matchIndex++]);\n  }\n\n  return {\n    merged: merged,\n    changes: changes\n  };\n}\n\nfunction allRemoves(changes) {\n  return changes.reduce(function (prev, change) {\n    return prev && change[0] === '-';\n  }, true);\n}\n\nfunction skipRemoveSuperset(state, removeChanges, delta) {\n  for (var i = 0; i < delta; i++) {\n    var changeContent = removeChanges[removeChanges.length - delta + i].substr(1);\n\n    if (state.lines[state.index + i] !== ' ' + changeContent) {\n      return false;\n    }\n  }\n\n  state.index += delta;\n  return true;\n}\n\nfunction calcOldNewLineCount(lines) {\n  var oldLines = 0;\n  var newLines = 0;\n  lines.forEach(function (line) {\n    if (typeof line !== 'string') {\n      var myCount = calcOldNewLineCount(line.mine);\n      var theirCount = calcOldNewLineCount(line.theirs);\n\n      if (oldLines !== undefined) {\n        if (myCount.oldLines === theirCount.oldLines) {\n          oldLines += myCount.oldLines;\n        } else {\n          oldLines = undefined;\n        }\n      }\n\n      if (newLines !== undefined) {\n        if (myCount.newLines === theirCount.newLines) {\n          newLines += myCount.newLines;\n        } else {\n          newLines = undefined;\n        }\n      }\n    } else {\n      if (newLines !== undefined && (line[0] === '+' || line[0] === ' ')) {\n        newLines++;\n      }\n\n      if (oldLines !== undefined && (line[0] === '-' || line[0] === ' ')) {\n        oldLines++;\n      }\n    }\n  });\n  return {\n    oldLines: oldLines,\n    newLines: newLines\n  };\n}\n\n// See: http://code.google.com/p/google-diff-match-patch/wiki/API\nfunction convertChangesToDMP(changes) {\n  var ret = [],\n      change,\n      operation;\n\n  for (var i = 0; i < changes.length; i++) {\n    change = changes[i];\n\n    if (change.added) {\n      operation = 1;\n    } else if (change.removed) {\n      operation = -1;\n    } else {\n      operation = 0;\n    }\n\n    ret.push([operation, change.value]);\n  }\n\n  return ret;\n}\n\nfunction convertChangesToXML(changes) {\n  var ret = [];\n\n  for (var i = 0; i < changes.length; i++) {\n    var change = changes[i];\n\n    if (change.added) {\n      ret.push('<ins>');\n    } else if (change.removed) {\n      ret.push('<del>');\n    }\n\n    ret.push(escapeHTML(change.value));\n\n    if (change.added) {\n      ret.push('</ins>');\n    } else if (change.removed) {\n      ret.push('</del>');\n    }\n  }\n\n  return ret.join('');\n}\n\nfunction escapeHTML(s) {\n  var n = s;\n  n = n.replace(/&/g, '&amp;');\n  n = n.replace(/</g, '&lt;');\n  n = n.replace(/>/g, '&gt;');\n  n = n.replace(/\"/g, '&quot;');\n  return n;\n}\n\n/* See LICENSE file for terms of use */\n\nexport { Diff, diffChars, diffWords, diffWordsWithSpace, diffLines, diffTrimmedLines, diffSentences, diffCss, diffJson, diffArrays, structuredPatch, createTwoFilesPatch, createPatch, applyPatch, applyPatches, parsePatch, merge, convertChangesToDMP, convertChangesToXML, canonicalize };\n","import type * as _diff from 'diff';\nimport { homedir } from 'os';\nimport { join } from 'path';\nimport {\n  Recoverable,\n  ReplOptions,\n  REPLServer,\n  start as nodeReplStart,\n} from 'repl';\nimport { Context, createContext, Script } from 'vm';\nimport { Service, CreateOptions, TSError, env } from './index';\nimport { readFileSync, statSync } from 'fs';\nimport { Console } from 'console';\nimport * as assert from 'assert';\nimport type * as tty from 'tty';\nimport type * as Module from 'module';\nimport { builtinModules } from 'module';\n\n// Lazy-loaded.\nlet _processTopLevelAwait: (src: string) => string | null;\nfunction getProcessTopLevelAwait() {\n  if (_processTopLevelAwait === undefined) {\n    ({\n      processTopLevelAwait: _processTopLevelAwait,\n    } = require('../dist-raw/node-internal-repl-await'));\n  }\n  return _processTopLevelAwait;\n}\nlet diff: typeof _diff;\nfunction getDiffLines() {\n  if (diff === undefined) {\n    diff = require('diff');\n  }\n  return diff.diffLines;\n}\n\n/** @internal */\nexport const EVAL_FILENAME = `[eval].ts`;\n/** @internal */\nexport const EVAL_NAME = `[eval]`;\n/** @internal */\nexport const STDIN_FILENAME = `[stdin].ts`;\n/** @internal */\nexport const STDIN_NAME = `[stdin]`;\n/** @internal */\nexport const REPL_FILENAME = '<repl>.ts';\n/** @internal */\nexport const REPL_NAME = '<repl>';\n\nexport interface ReplService {\n  readonly state: EvalState;\n  /**\n   * Bind this REPL to a ts-node compiler service.  A compiler service must be bound before `eval`-ing code or starting the REPL\n   */\n  setService(service: Service): void;\n  /**\n   * Append code to the virtual <repl> source file, compile it to JavaScript, throw semantic errors if the typechecker is enabled,\n   * and execute it.\n   *\n   * Note: typically, you will want to call `start()` instead of using this method.\n   *\n   * @param code string of TypeScript.\n   */\n  evalCode(code: string): any;\n  /** @internal */\n  evalCodeInternal(opts: {\n    code: string;\n    enableTopLevelAwait?: boolean;\n    context?: Context;\n  }):\n    | {\n        containsTopLevelAwait: true;\n        valuePromise: Promise<any>;\n      }\n    | {\n        containsTopLevelAwait: false;\n        value: any;\n      };\n  /**\n   * `eval` implementation compatible with node's REPL API\n   *\n   * Can be used in advanced scenarios if you want to manually create your own\n   * node REPL instance and delegate eval to this `ReplService`.\n   *\n   * Example:\n   *\n   *     import {start} from 'repl';\n   *     const replService: tsNode.ReplService = ...; // assuming you have already created a ts-node ReplService\n   *     const nodeRepl = start({eval: replService.eval});\n   */\n  nodeEval(\n    code: string,\n    // TODO change to `Context` in a future release?  Technically a breaking change\n    context: any,\n    _filename: string,\n    callback: (err: Error | null, result?: any) => any\n  ): void;\n  evalAwarePartialHost: EvalAwarePartialHost;\n  /** Start a node REPL */\n  start(): void;\n  /**\n   * Start a node REPL, evaling a string of TypeScript before it starts.\n   * @deprecated\n   */\n  start(code: string): void;\n  /** @internal */\n  startInternal(opts?: ReplOptions): REPLServer;\n  /** @internal */\n  readonly stdin: NodeJS.ReadableStream;\n  /** @internal */\n  readonly stdout: NodeJS.WritableStream;\n  /** @internal */\n  readonly stderr: NodeJS.WritableStream;\n  /** @internal */\n  readonly console: Console;\n}\n\n/** @category REPL */\nexport interface CreateReplOptions {\n  service?: Service;\n  state?: EvalState;\n  stdin?: NodeJS.ReadableStream;\n  stdout?: NodeJS.WritableStream;\n  stderr?: NodeJS.WritableStream;\n  /** @internal */\n  composeWithEvalAwarePartialHost?: EvalAwarePartialHost;\n  /**\n   * @internal\n   * Ignore diagnostics that are annoying when interactively entering input line-by-line.\n   */\n  ignoreDiagnosticsThatAreAnnoyingInInteractiveRepl?: boolean;\n}\n\n/**\n * Create a ts-node REPL instance.\n *\n * Pay close attention to the example below.  Today, the API requires a few lines\n * of boilerplate to correctly bind the `ReplService` to the ts-node `Service` and\n * vice-versa.\n *\n * Usage example:\n *\n *     const repl = tsNode.createRepl();\n *     const service = tsNode.create({...repl.evalAwarePartialHost});\n *     repl.setService(service);\n *     repl.start();\n *\n * @category REPL\n */\nexport function createRepl(options: CreateReplOptions = {}) {\n  const { ignoreDiagnosticsThatAreAnnoyingInInteractiveRepl = true } = options;\n  let service = options.service;\n  let nodeReplServer: REPLServer;\n  // If `useGlobal` is not true, then REPL creates a context when started.\n  // This stores a reference to it or to `global`, whichever is used, after REPL has started.\n  let context: Context | undefined;\n  const state =\n    options.state ?? new EvalState(join(process.cwd(), REPL_FILENAME));\n  const evalAwarePartialHost = createEvalAwarePartialHost(\n    state,\n    options.composeWithEvalAwarePartialHost\n  );\n  const stdin = options.stdin ?? process.stdin;\n  const stdout = options.stdout ?? process.stdout;\n  const stderr = options.stderr ?? process.stderr;\n  const _console =\n    stdout === process.stdout && stderr === process.stderr\n      ? console\n      : new Console(stdout, stderr);\n\n  const replService: ReplService = {\n    state: options.state ?? new EvalState(join(process.cwd(), EVAL_FILENAME)),\n    setService,\n    evalCode,\n    evalCodeInternal,\n    nodeEval,\n    evalAwarePartialHost,\n    start,\n    startInternal,\n    stdin,\n    stdout,\n    stderr,\n    console: _console,\n  };\n\n  return replService;\n\n  function setService(_service: Service) {\n    service = _service;\n    if (ignoreDiagnosticsThatAreAnnoyingInInteractiveRepl) {\n      service.addDiagnosticFilter({\n        appliesToAllFiles: false,\n        filenamesAbsolute: [state.path],\n        diagnosticsIgnored: [\n          2393, // Duplicate function implementation: https://github.com/TypeStrong/ts-node/issues/729\n          6133, // <identifier> is declared but its value is never read. https://github.com/TypeStrong/ts-node/issues/850\n          7027, // Unreachable code detected. https://github.com/TypeStrong/ts-node/issues/469\n          ...(service.shouldReplAwait ? topLevelAwaitDiagnosticCodes : []),\n        ],\n      });\n    }\n  }\n\n  function evalCode(code: string) {\n    const result = appendCompileAndEvalInput({\n      service: service!,\n      state,\n      input: code,\n      context,\n      overrideIsCompletion: false,\n    });\n    assert(result.containsTopLevelAwait === false);\n    return result.value;\n  }\n\n  function evalCodeInternal(options: {\n    code: string;\n    enableTopLevelAwait?: boolean;\n    context: Context;\n  }) {\n    const { code, enableTopLevelAwait, context } = options;\n    return appendCompileAndEvalInput({\n      service: service!,\n      state,\n      input: code,\n      enableTopLevelAwait,\n      context,\n    });\n  }\n\n  function nodeEval(\n    code: string,\n    context: any,\n    _filename: string,\n    callback: (err: Error | null, result?: any) => any\n  ) {\n    // TODO: Figure out how to handle completion here.\n    if (code === '.scope') {\n      callback(null);\n      return;\n    }\n\n    try {\n      const evalResult = evalCodeInternal({\n        code,\n        enableTopLevelAwait: true,\n        context,\n      });\n\n      if (evalResult.containsTopLevelAwait) {\n        (async () => {\n          try {\n            callback(null, await evalResult.valuePromise);\n          } catch (promiseError) {\n            handleError(promiseError);\n          }\n        })();\n      } else {\n        callback(null, evalResult.value);\n      }\n    } catch (error) {\n      handleError(error);\n    }\n\n    // Log TSErrors, check if they're recoverable, log helpful hints for certain\n    // well-known errors, and invoke `callback()`\n    // TODO should evalCode API get the same error-handling benefits?\n    function handleError(error: unknown) {\n      // Don't show TLA hint if the user explicitly disabled repl top level await\n      const canLogTopLevelAwaitHint =\n        service!.options.experimentalReplAwait !== false &&\n        !service!.shouldReplAwait;\n      if (error instanceof TSError) {\n        // Support recoverable compilations using >= node 6.\n        if (Recoverable && isRecoverable(error)) {\n          callback(new Recoverable(error));\n          return;\n        } else {\n          _console.error(error);\n\n          if (\n            canLogTopLevelAwaitHint &&\n            error.diagnosticCodes.some((dC) =>\n              topLevelAwaitDiagnosticCodes.includes(dC)\n            )\n          ) {\n            _console.error(getTopLevelAwaitHint());\n          }\n          callback(null);\n        }\n      } else {\n        let _error = error as Error | undefined;\n        if (\n          canLogTopLevelAwaitHint &&\n          _error instanceof SyntaxError &&\n          _error.message?.includes('await is only valid')\n        ) {\n          try {\n            // Only way I know to make our hint appear after the error\n            _error.message += `\\n\\n${getTopLevelAwaitHint()}`;\n            _error.stack = _error.stack?.replace(\n              /(SyntaxError:.*)/,\n              (_, $1) => `${$1}\\n\\n${getTopLevelAwaitHint()}`\n            );\n          } catch {}\n        }\n        callback(_error as Error);\n      }\n    }\n    function getTopLevelAwaitHint() {\n      return `Hint: REPL top-level await requires TypeScript version 3.8 or higher and target ES2018 or higher. You are using TypeScript ${\n        service!.ts.version\n      } and target ${\n        service!.ts.ScriptTarget[service!.config.options.target!]\n      }.`;\n    }\n  }\n\n  // Note: `code` argument is deprecated\n  function start(code?: string) {\n    startInternal({ code });\n  }\n\n  // Note: `code` argument is deprecated\n  function startInternal(\n    options?: ReplOptions & { code?: string; forceToBeModule?: boolean }\n  ) {\n    const { code, forceToBeModule = true, ...optionsOverride } = options ?? {};\n    // TODO assert that `service` is set; remove all `service!` non-null assertions\n\n    // Eval incoming code before the REPL starts.\n    // Note: deprecated\n    if (code) {\n      try {\n        evalCode(`${code}\\n`);\n      } catch (err) {\n        _console.error(err);\n        // Note: should not be killing the process here, but this codepath is deprecated anyway\n        process.exit(1);\n      }\n    }\n\n    // In case the typescript compiler hasn't compiled anything yet,\n    // make it run though compilation at least one time before\n    // the REPL starts for a snappier user experience on startup.\n    service?.compile('', state.path);\n\n    const repl = nodeReplStart({\n      prompt: '> ',\n      input: replService.stdin,\n      output: replService.stdout,\n      // Mimicking node's REPL implementation: https://github.com/nodejs/node/blob/168b22ba073ee1cbf8d0bcb4ded7ff3099335d04/lib/internal/repl.js#L28-L30\n      terminal:\n        (stdout as tty.WriteStream).isTTY &&\n        !parseInt(env.NODE_NO_READLINE!, 10),\n      eval: nodeEval,\n      useGlobal: true,\n      ...optionsOverride,\n    });\n\n    nodeReplServer = repl;\n    context = repl.context;\n\n    // Bookmark the point where we should reset the REPL state.\n    const resetEval = appendToEvalState(state, '');\n\n    function reset() {\n      resetEval();\n\n      // Hard fix for TypeScript forcing `Object.defineProperty(exports, ...)`.\n      runInContext('exports = module.exports', state.path, context);\n      if (forceToBeModule) {\n        state.input += 'export {};void 0;\\n';\n      }\n\n      // Declare node builtins.\n      // Skip the same builtins as `addBuiltinLibsToObject`:\n      //   those starting with _\n      //   those containing /\n      //   those that already exist as globals\n      // Intentionally suppress type errors in case @types/node does not declare any of them, and because\n      // `declare import` is technically invalid syntax.\n      // Avoid this when in transpileOnly, because third-party transpilers may not handle `declare import`.\n      if (!service?.transpileOnly) {\n        state.input += `// @ts-ignore\\n${builtinModules\n          .filter(\n            (name) =>\n              !name.startsWith('_') &&\n              !name.includes('/') &&\n              !['console', 'module', 'process'].includes(name)\n          )\n          .map((name) => `declare import ${name} = require('${name}')`)\n          .join(';')}\\n`;\n      }\n    }\n\n    reset();\n    repl.on('reset', reset);\n\n    repl.defineCommand('type', {\n      help: 'Check the type of a TypeScript identifier',\n      action: function (identifier: string) {\n        if (!identifier) {\n          repl.displayPrompt();\n          return;\n        }\n\n        const undo = appendToEvalState(state, identifier);\n        const { name, comment } = service!.getTypeInfo(\n          state.input,\n          state.path,\n          state.input.length\n        );\n\n        undo();\n\n        if (name) repl.outputStream.write(`${name}\\n`);\n        if (comment) repl.outputStream.write(`${comment}\\n`);\n        repl.displayPrompt();\n      },\n    });\n\n    // Set up REPL history when available natively via node.js >= 11.\n    if (repl.setupHistory) {\n      const historyPath =\n        env.TS_NODE_HISTORY || join(homedir(), '.ts_node_repl_history');\n\n      repl.setupHistory(historyPath, (err) => {\n        if (!err) return;\n\n        _console.error(err);\n        process.exit(1);\n      });\n    }\n\n    return repl;\n  }\n}\n\n/**\n * Eval state management. Stores virtual `[eval].ts` file\n */\nexport class EvalState {\n  /** @internal */\n  input = '';\n  /** @internal */\n  output = '';\n  /** @internal */\n  version = 0;\n  /** @internal */\n  lines = 0;\n\n  __tsNodeEvalStateBrand: unknown;\n\n  constructor(public path: string) {}\n}\n\n/**\n * Filesystem host functions which are aware of the \"virtual\" `[eval].ts`, `<repl>`, or `[stdin].ts` file used to compile REPL inputs.\n * Must be passed to `create()` to create a ts-node compiler service which can compile REPL inputs.\n */\nexport type EvalAwarePartialHost = Pick<\n  CreateOptions,\n  'readFile' | 'fileExists'\n>;\n\nexport function createEvalAwarePartialHost(\n  state: EvalState,\n  composeWith?: EvalAwarePartialHost\n): EvalAwarePartialHost {\n  function readFile(path: string) {\n    if (path === state.path) return state.input;\n\n    if (composeWith?.readFile) return composeWith.readFile(path);\n\n    try {\n      return readFileSync(path, 'utf8');\n    } catch (err) {\n      /* Ignore. */\n    }\n  }\n  function fileExists(path: string) {\n    if (path === state.path) return true;\n\n    if (composeWith?.fileExists) return composeWith.fileExists(path);\n\n    try {\n      const stats = statSync(path);\n      return stats.isFile() || stats.isFIFO();\n    } catch (err) {\n      return false;\n    }\n  }\n  return { readFile, fileExists };\n}\n\nconst sourcemapCommentRe = /\\/\\/# ?sourceMappingURL=\\S+[\\s\\r\\n]*$/;\n\ntype AppendCompileAndEvalInputResult =\n  | { containsTopLevelAwait: true; valuePromise: Promise<any> }\n  | { containsTopLevelAwait: false; value: any };\n/**\n * Evaluate the code snippet.\n *\n * Append it to virtual .ts file, compile, handle compiler errors, compute a diff of the JS, and eval any code that\n * appears as \"added\" in the diff.\n */\nfunction appendCompileAndEvalInput(options: {\n  service: Service;\n  state: EvalState;\n  input: string;\n  wrappedErr?: unknown;\n  /** Enable top-level await but only if the TSNode service allows it. */\n  enableTopLevelAwait?: boolean;\n  context: Context | undefined;\n  /**\n   * Added so that `evalCode` can be guaranteed *not* to trigger the `isCompletion`\n   * codepath.  However, the `isCompletion` logic is ancient and maybe should be removed entirely.\n   * Nobody's looked at it in a long time.\n   */\n  overrideIsCompletion?: boolean;\n}): AppendCompileAndEvalInputResult {\n  const {\n    service,\n    state,\n    wrappedErr,\n    enableTopLevelAwait = false,\n    context,\n    overrideIsCompletion,\n  } = options;\n  let { input } = options;\n\n  // It's confusing for `{ a: 1 }` to be interpreted as a block statement\n  // rather than an object literal. So, we first try to wrap it in\n  // parentheses, so that it will be interpreted as an expression.\n  // Based on https://github.com/nodejs/node/blob/c2e6822153bad023ab7ebd30a6117dcc049e475c/lib/repl.js#L413-L422\n  let wrappedCmd = false;\n  if (!wrappedErr && /^\\s*{/.test(input) && !/;\\s*$/.test(input)) {\n    input = `(${input.trim()})\\n`;\n    wrappedCmd = true;\n  }\n\n  const lines = state.lines;\n  const isCompletion = overrideIsCompletion ?? !/\\n$/.test(input);\n  const undo = appendToEvalState(state, input);\n  let output: string;\n\n  // Based on https://github.com/nodejs/node/blob/92573721c7cff104ccb82b6ed3e8aa69c4b27510/lib/repl.js#L457-L461\n  function adjustUseStrict(code: string) {\n    // \"void 0\" keeps the repl from returning \"use strict\" as the result\n    // value for statements and declarations that don't return a value.\n    return code.replace(/^\"use strict\";/, '\"use strict\"; void 0;');\n  }\n\n  try {\n    output = service.compile(state.input, state.path, -lines);\n  } catch (err) {\n    undo();\n\n    if (wrappedCmd) {\n      if (err instanceof TSError && err.diagnosticCodes[0] === 2339) {\n        // Ensure consistent and more sane behavior between { a: 1 }['b'] and ({ a: 1 }['b'])\n        throw err;\n      }\n      // Unwrap and try again\n      return appendCompileAndEvalInput({\n        ...options,\n        wrappedErr: err,\n      });\n    }\n\n    if (wrappedErr) throw wrappedErr;\n    throw err;\n  }\n\n  output = adjustUseStrict(output);\n\n  // Note: REPL does not respect sourcemaps!\n  // To properly do that, we'd need to prefix the code we eval -- which comes\n  // from `diffLines` -- with newlines so that it's at the proper line numbers.\n  // Then we'd need to ensure each bit of eval-ed code, if there are multiples,\n  // has the sourcemap appended to it.\n  // We might also need to integrate with our sourcemap hooks' cache; I'm not sure.\n  const outputWithoutSourcemapComment = output.replace(sourcemapCommentRe, '');\n  const oldOutputWithoutSourcemapComment = state.output.replace(\n    sourcemapCommentRe,\n    ''\n  );\n\n  // Use `diff` to check for new JavaScript to execute.\n  const changes = getDiffLines()(\n    oldOutputWithoutSourcemapComment,\n    outputWithoutSourcemapComment\n  );\n\n  if (isCompletion) {\n    undo();\n  } else {\n    state.output = output;\n\n    // Insert a semicolon to make sure that the code doesn't interact with the next line,\n    // for example to prevent `2\\n+ 2` from producing 4.\n    // This is safe since the output will not change since we can only get here with successful inputs,\n    // and adding a semicolon to the end of a successful input won't ever change the output.\n    state.input = state.input.replace(\n      /([^\\n\\s])([\\n\\s]*)$/,\n      (all, lastChar, whitespace) => {\n        if (lastChar !== ';') return `${lastChar};${whitespace}`;\n        return all;\n      }\n    );\n  }\n\n  let commands: Array<{ mustAwait?: true; execCommand: () => any }> = [];\n  let containsTopLevelAwait = false;\n\n  // Build a list of \"commands\": bits of JS code in the diff that must be executed.\n  for (const change of changes) {\n    if (change.added) {\n      if (\n        enableTopLevelAwait &&\n        service.shouldReplAwait &&\n        change.value.indexOf('await') > -1\n      ) {\n        const processTopLevelAwait = getProcessTopLevelAwait();\n\n        // Newline prevents comments to mess with wrapper\n        const wrappedResult = processTopLevelAwait(change.value + '\\n');\n        if (wrappedResult !== null) {\n          containsTopLevelAwait = true;\n          commands.push({\n            mustAwait: true,\n            execCommand: () => runInContext(wrappedResult, state.path, context),\n          });\n          continue;\n        }\n      }\n      commands.push({\n        execCommand: () => runInContext(change.value, state.path, context),\n      });\n    }\n  }\n\n  // Execute all commands asynchronously if necessary, returning the result or a\n  // promise of the result.\n  if (containsTopLevelAwait) {\n    return {\n      containsTopLevelAwait,\n      valuePromise: (async () => {\n        let value;\n        for (const command of commands) {\n          const r = command.execCommand();\n          value = command.mustAwait ? await r : r;\n        }\n        return value;\n      })(),\n    };\n  } else {\n    return {\n      containsTopLevelAwait: false,\n      value: commands.reduce<any>((_, c) => c.execCommand(), undefined),\n    };\n  }\n}\n\n/**\n * Low-level execution of JS code in context\n */\nfunction runInContext(code: string, filename: string, context?: Context) {\n  const script = new Script(code, { filename });\n\n  if (context === undefined || context === global) {\n    return script.runInThisContext();\n  } else {\n    return script.runInContext(context);\n  }\n}\n\n/**\n * Append to the eval instance and return an undo function.\n */\nfunction appendToEvalState(state: EvalState, input: string) {\n  const undoInput = state.input;\n  const undoVersion = state.version;\n  const undoOutput = state.output;\n  const undoLines = state.lines;\n\n  state.input += input;\n  state.lines += lineCount(input);\n  state.version++;\n\n  return function () {\n    state.input = undoInput;\n    state.output = undoOutput;\n    state.version = undoVersion;\n    state.lines = undoLines;\n  };\n}\n\n/**\n * Count the number of lines.\n */\nfunction lineCount(value: string) {\n  let count = 0;\n\n  for (const char of value) {\n    if (char === '\\n') {\n      count++;\n    }\n  }\n\n  return count;\n}\n\n/**\n * TS diagnostic codes which are recoverable, meaning that the user likely entered an incomplete line of code\n * and should be prompted for the next.  For example, starting a multi-line for() loop and not finishing it.\n * null value means code is always recoverable.  `Set` means code is only recoverable when occurring alongside at least one\n * of the other codes.\n */\nconst RECOVERY_CODES: Map<number, Set<number> | null> = new Map([\n  [1003, null], // \"Identifier expected.\"\n  [1005, null], // \"')' expected.\", \"'}' expected.\"\n  [1109, null], // \"Expression expected.\"\n  [1126, null], // \"Unexpected end of text.\"\n  [\n    1136, // \"Property assignment expected.\"\n    new Set([1005]), // happens when typing out an object literal or block scope across multiple lines: '{ foo: 123,'\n  ],\n  [1160, null], // \"Unterminated template literal.\"\n  [1161, null], // \"Unterminated regular expression literal.\"\n  [2355, null], // \"A function whose declared type is neither 'void' nor 'any' must return a value.\"\n  [2391, null], // \"Function implementation is missing or not immediately following the declaration.\"\n  [\n    7010, // \"Function, which lacks return-type annotation, implicitly has an 'any' return type.\"\n    new Set([1005]), // happens when fn signature spread across multiple lines: 'function a(\\nb: any\\n) {'\n  ],\n]);\n\n/**\n * Diagnostic codes raised when using top-level await.\n * These are suppressed when top-level await is enabled.\n * When it is *not* enabled, these trigger a helpful hint about enabling top-level await.\n */\nconst topLevelAwaitDiagnosticCodes = [\n  1375, // 'await' expressions are only allowed at the top level of a file when that file is a module, but this file has no imports or exports. Consider adding an empty 'export {}' to make this file a module.\n  1378, // Top-level 'await' expressions are only allowed when the 'module' option is set to 'esnext' or 'system', and the 'target' option is set to 'es2017' or higher.\n  1431, // 'for await' loops are only allowed at the top level of a file when that file is a module, but this file has no imports or exports. Consider adding an empty 'export {}' to make this file a module.\n  1432, // Top-level 'for await' loops are only allowed when the 'module' option is set to 'esnext' or 'system', and the 'target' option is set to 'es2017' or higher.\n];\n\n/**\n * Check if a function can recover gracefully.\n */\nfunction isRecoverable(error: TSError) {\n  return error.diagnosticCodes.every((code) => {\n    const deps = RECOVERY_CODES.get(code);\n    return (\n      deps === null ||\n      (deps && error.diagnosticCodes.some((code) => deps.has(code)))\n    );\n  });\n}\n\n/**\n * @internal\n * Set properties on `context` before eval-ing [stdin] or [eval] input.\n */\nexport function setupContext(\n  context: any,\n  module: Module,\n  filenameAndDirname: 'eval' | 'stdin' | null\n) {\n  if (filenameAndDirname) {\n    context.__dirname = '.';\n    context.__filename = `[${filenameAndDirname}]`;\n  }\n  context.module = module;\n  context.exports = module.exports;\n  context.require = module.require.bind(module);\n}\n","{\n  \"name\": \"ts-node\",\n  \"version\": \"10.9.2\",\n  \"description\": \"TypeScript execution environment and REPL for node.js, with source map support\",\n  \"main\": \"dist/index.js\",\n  \"exports\": {\n    \".\": \"./dist/index.js\",\n    \"./package\": \"./package.json\",\n    \"./package.json\": \"./package.json\",\n    \"./dist/bin\": \"./dist/bin.js\",\n    \"./dist/bin.js\": \"./dist/bin.js\",\n    \"./dist/bin-transpile\": \"./dist/bin-transpile.js\",\n    \"./dist/bin-transpile.js\": \"./dist/bin-transpile.js\",\n    \"./dist/bin-script\": \"./dist/bin-script.js\",\n    \"./dist/bin-script.js\": \"./dist/bin-script.js\",\n    \"./dist/bin-cwd\": \"./dist/bin-cwd.js\",\n    \"./dist/bin-cwd.js\": \"./dist/bin-cwd.js\",\n    \"./dist/bin-esm\": \"./dist/bin-esm.js\",\n    \"./dist/bin-esm.js\": \"./dist/bin-esm.js\",\n    \"./register\": \"./register/index.js\",\n    \"./register/files\": \"./register/files.js\",\n    \"./register/transpile-only\": \"./register/transpile-only.js\",\n    \"./register/type-check\": \"./register/type-check.js\",\n    \"./esm\": \"./esm.mjs\",\n    \"./esm.mjs\": \"./esm.mjs\",\n    \"./esm/transpile-only\": \"./esm/transpile-only.mjs\",\n    \"./esm/transpile-only.mjs\": \"./esm/transpile-only.mjs\",\n    \"./child-loader.mjs\": \"./child-loader.mjs\",\n    \"./transpilers/swc\": \"./transpilers/swc.js\",\n    \"./transpilers/swc-experimental\": \"./transpilers/swc-experimental.js\",\n    \"./node10/tsconfig.json\": \"./node10/tsconfig.json\",\n    \"./node12/tsconfig.json\": \"./node12/tsconfig.json\",\n    \"./node14/tsconfig.json\": \"./node14/tsconfig.json\",\n    \"./node16/tsconfig.json\": \"./node16/tsconfig.json\"\n  },\n  \"types\": \"dist/index.d.ts\",\n  \"bin\": {\n    \"ts-node\": \"dist/bin.js\",\n    \"ts-node-cwd\": \"dist/bin-cwd.js\",\n    \"ts-node-esm\": \"dist/bin-esm.js\",\n    \"ts-node-script\": \"dist/bin-script.js\",\n    \"ts-node-transpile-only\": \"dist/bin-transpile.js\",\n    \"ts-script\": \"dist/bin-script-deprecated.js\"\n  },\n  \"files\": [\n    \"/transpilers/\",\n    \"/dist/\",\n    \"!/dist/test\",\n    \"/dist-raw/NODE-LICENSE.md\",\n    \"/dist-raw/**.js\",\n    \"/register/\",\n    \"/esm/\",\n    \"/esm.mjs\",\n    \"/child-loader.mjs\",\n    \"/LICENSE\",\n    \"/tsconfig.schema.json\",\n    \"/tsconfig.schemastore-schema.json\",\n    \"/node10/\",\n    \"/node12/\",\n    \"/node14/\",\n    \"/node16/\"\n  ],\n  \"scripts\": {\n    \"lint\": \"dprint check\",\n    \"lint-fix\": \"dprint fmt\",\n    \"clean\": \"rimraf temp dist tsconfig.schema.json tsconfig.schemastore-schema.json tsconfig.tsbuildinfo tests/ts-node-packed.tgz tests/node_modules tests/tmp\",\n    \"rebuild\": \"npm run clean && npm run build\",\n    \"build\": \"npm run build-nopack && npm run build-pack\",\n    \"build-nopack\": \"npm run build-tsc && npm run build-configSchema\",\n    \"build-tsc\": \"tsc -b ./tsconfig.build-dist.json\",\n    \"build-configSchema\": \"typescript-json-schema --topRef --refs --validationKeywords allOf --out tsconfig.schema.json tsconfig.build-schema.json TsConfigSchema && node --require ./register ./scripts/create-merged-schema\",\n    \"build-pack\": \"node ./scripts/build-pack.js\",\n    \"test-spec\": \"ava\",\n    \"test-cov\": \"nyc ava\",\n    \"test\": \"npm run build && npm run lint && npm run test-cov --\",\n    \"test-local\": \"npm run lint-fix && npm run build-tsc && npm run build-pack && npm run test-spec --\",\n    \"pre-debug\": \"npm run build-tsc && npm run build-pack\",\n    \"coverage-report\": \"nyc report --reporter=lcov\",\n    \"prepare\": \"npm run clean && npm run build-nopack\",\n    \"api-extractor\": \"api-extractor run --local --verbose\",\n    \"esm-usage-example\": \"npm run build-tsc && cd esm-usage-example && node --experimental-specifier-resolution node --loader ../esm.mjs ./index\",\n    \"esm-usage-example2\": \"npm run build-tsc && cd tests && TS_NODE_PROJECT=./module-types/override-to-cjs/tsconfig.json node --loader ../esm.mjs ./module-types/override-to-cjs/test.cjs\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git://github.com/TypeStrong/ts-node.git\"\n  },\n  \"keywords\": [\n    \"typescript\",\n    \"node\",\n    \"runtime\",\n    \"environment\",\n    \"ts\",\n    \"compiler\"\n  ],\n  \"author\": {\n    \"name\": \"Blake Embrey\",\n    \"email\": \"hello@blakeembrey.com\",\n    \"url\": \"http://blakeembrey.me\"\n  },\n  \"contributors\": [\n    {\n      \"name\": \"Andrew Bradley\",\n      \"email\": \"cspotcode@gmail.com\",\n      \"url\": \"https://github.com/cspotcode\"\n    }\n  ],\n  \"license\": \"MIT\",\n  \"bugs\": {\n    \"url\": \"https://github.com/TypeStrong/ts-node/issues\"\n  },\n  \"homepage\": \"https://typestrong.org/ts-node\",\n  \"devDependencies\": {\n    \"@microsoft/api-extractor\": \"^7.19.4\",\n    \"@swc/core\": \"^1.3.100\",\n    \"@swc/wasm\": \"^1.3.100\",\n    \"@types/diff\": \"^4.0.2\",\n    \"@types/lodash\": \"^4.14.151\",\n    \"@types/node\": \"13.13.5\",\n    \"@types/proper-lockfile\": \"^4.1.2\",\n    \"@types/proxyquire\": \"^1.3.28\",\n    \"@types/react\": \"^16.14.19\",\n    \"@types/rimraf\": \"^3.0.0\",\n    \"@types/semver\": \"^7.1.0\",\n    \"@yarnpkg/fslib\": \"^2.4.0\",\n    \"ava\": \"^3.15.0\",\n    \"axios\": \"^0.21.1\",\n    \"dprint\": \"^0.25.0\",\n    \"expect\": \"^27.0.2\",\n    \"get-stream\": \"^6.0.0\",\n    \"lodash\": \"^4.17.15\",\n    \"ntypescript\": \"^1.201507091536.1\",\n    \"nyc\": \"^15.0.1\",\n    \"outdent\": \"^0.8.0\",\n    \"proper-lockfile\": \"^4.1.2\",\n    \"proxyquire\": \"^2.0.0\",\n    \"react\": \"^16.14.0\",\n    \"rimraf\": \"^3.0.0\",\n    \"semver\": \"^7.1.3\",\n    \"throat\": \"^6.0.1\",\n    \"typedoc\": \"^0.22.10\",\n    \"typescript\": \"4.7.4\",\n    \"typescript-json-schema\": \"^0.53.0\",\n    \"util.promisify\": \"^1.0.1\"\n  },\n  \"peerDependencies\": {\n    \"@swc/core\": \">=1.2.50\",\n    \"@swc/wasm\": \">=1.2.50\",\n    \"@types/node\": \"*\",\n    \"typescript\": \">=2.7\"\n  },\n  \"peerDependenciesMeta\": {\n    \"@swc/core\": {\n      \"optional\": true\n    },\n    \"@swc/wasm\": {\n      \"optional\": true\n    }\n  },\n  \"dependencies\": {\n    \"@cspotcode/source-map-support\": \"^0.8.0\",\n    \"@tsconfig/node10\": \"^1.0.7\",\n    \"@tsconfig/node12\": \"^1.0.7\",\n    \"@tsconfig/node14\": \"^1.0.0\",\n    \"@tsconfig/node16\": \"^1.0.2\",\n    \"acorn\": \"^8.4.1\",\n    \"acorn-walk\": \"^8.1.1\",\n    \"arg\": \"^4.1.0\",\n    \"create-require\": \"^1.1.0\",\n    \"diff\": \"^4.0.1\",\n    \"make-error\": \"^1.1.1\",\n    \"v8-compile-cache-lib\": \"^3.0.1\",\n    \"yn\": \"3.1.1\"\n  },\n  \"prettier\": {\n    \"singleQuote\": true\n  },\n  \"volta\": {\n    \"node\": \"18.1.0\",\n    \"npm\": \"6.14.15\"\n  }\n}\n","import type { StringReader, StringWriter } from './strings';\n\nexport const comma = ','.charCodeAt(0);\nexport const semicolon = ';'.charCodeAt(0);\n\nconst chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\nconst intToChar = new Uint8Array(64); // 64 possible chars.\nconst charToInt = new Uint8Array(128); // z is 122 in ASCII\n\nfor (let i = 0; i < chars.length; i++) {\n  const c = chars.charCodeAt(i);\n  intToChar[i] = c;\n  charToInt[c] = i;\n}\n\nexport function decodeInteger(reader: StringReader, relative: number): number {\n  let value = 0;\n  let shift = 0;\n  let integer = 0;\n\n  do {\n    const c = reader.next();\n    integer = charToInt[c];\n    value |= (integer & 31) << shift;\n    shift += 5;\n  } while (integer & 32);\n\n  const shouldNegate = value & 1;\n  value >>>= 1;\n\n  if (shouldNegate) {\n    value = -0x80000000 | -value;\n  }\n\n  return relative + value;\n}\n\nexport function encodeInteger(builder: StringWriter, num: number, relative: number): number {\n  let delta = num - relative;\n\n  delta = delta < 0 ? (-delta << 1) | 1 : delta << 1;\n  do {\n    let clamped = delta & 0b011111;\n    delta >>>= 5;\n    if (delta > 0) clamped |= 0b100000;\n    builder.write(intToChar[clamped]);\n  } while (delta > 0);\n\n  return num;\n}\n\nexport function hasMoreVlq(reader: StringReader, max: number) {\n  if (reader.pos >= max) return false;\n  return reader.peek() !== comma;\n}\n","const bufLength = 1024 * 16;\n\n// Provide a fallback for older environments.\nconst td =\n  typeof TextDecoder !== 'undefined'\n    ? /* #__PURE__ */ new TextDecoder()\n    : typeof Buffer !== 'undefined'\n    ? {\n        decode(buf: Uint8Array): string {\n          const out = Buffer.from(buf.buffer, buf.byteOffset, buf.byteLength);\n          return out.toString();\n        },\n      }\n    : {\n        decode(buf: Uint8Array): string {\n          let out = '';\n          for (let i = 0; i < buf.length; i++) {\n            out += String.fromCharCode(buf[i]);\n          }\n          return out;\n        },\n      };\n\nexport class StringWriter {\n  pos = 0;\n  private out = '';\n  private buffer = new Uint8Array(bufLength);\n\n  write(v: number): void {\n    const { buffer } = this;\n    buffer[this.pos++] = v;\n    if (this.pos === bufLength) {\n      this.out += td.decode(buffer);\n      this.pos = 0;\n    }\n  }\n\n  flush(): string {\n    const { buffer, out, pos } = this;\n    return pos > 0 ? out + td.decode(buffer.subarray(0, pos)) : out;\n  }\n}\n\nexport class StringReader {\n  pos = 0;\n  private declare buffer: string;\n\n  constructor(buffer: string) {\n    this.buffer = buffer;\n  }\n\n  next(): number {\n    return this.buffer.charCodeAt(this.pos++);\n  }\n\n  peek(): number {\n    return this.buffer.charCodeAt(this.pos);\n  }\n\n  indexOf(char: string): number {\n    const { buffer, pos } = this;\n    const idx = buffer.indexOf(char, pos);\n    return idx === -1 ? buffer.length : idx;\n  }\n}\n","import { StringReader, StringWriter } from './strings';\nimport { comma, decodeInteger, encodeInteger, hasMoreVlq, semicolon } from './vlq';\n\nconst EMPTY: any[] = [];\n\ntype Line = number;\ntype Column = number;\ntype Kind = number;\ntype Name = number;\ntype Var = number;\ntype SourcesIndex = number;\ntype ScopesIndex = number;\n\ntype Mix<A, B, O> = (A & O) | (B & O);\n\nexport type OriginalScope = Mix<\n  [Line, Column, Line, Column, Kind],\n  [Line, Column, Line, Column, Kind, Name],\n  { vars: Var[] }\n>;\n\nexport type GeneratedRange = Mix<\n  [Line, Column, Line, Column],\n  [Line, Column, Line, Column, SourcesIndex, ScopesIndex],\n  {\n    callsite: CallSite | null;\n    bindings: Binding[];\n    isScope: boolean;\n  }\n>;\nexport type CallSite = [SourcesIndex, Line, Column];\ntype Binding = BindingExpressionRange[];\nexport type BindingExpressionRange = [Name] | [Name, Line, Column];\n\nexport function decodeOriginalScopes(input: string): OriginalScope[] {\n  const { length } = input;\n  const reader = new StringReader(input);\n  const scopes: OriginalScope[] = [];\n  const stack: OriginalScope[] = [];\n  let line = 0;\n\n  for (; reader.pos < length; reader.pos++) {\n    line = decodeInteger(reader, line);\n    const column = decodeInteger(reader, 0);\n\n    if (!hasMoreVlq(reader, length)) {\n      const last = stack.pop()!;\n      last[2] = line;\n      last[3] = column;\n      continue;\n    }\n\n    const kind = decodeInteger(reader, 0);\n    const fields = decodeInteger(reader, 0);\n    const hasName = fields & 0b0001;\n\n    const scope: OriginalScope = (\n      hasName ? [line, column, 0, 0, kind, decodeInteger(reader, 0)] : [line, column, 0, 0, kind]\n    ) as OriginalScope;\n\n    let vars: Var[] = EMPTY;\n    if (hasMoreVlq(reader, length)) {\n      vars = [];\n      do {\n        const varsIndex = decodeInteger(reader, 0);\n        vars.push(varsIndex);\n      } while (hasMoreVlq(reader, length));\n    }\n    scope.vars = vars;\n\n    scopes.push(scope);\n    stack.push(scope);\n  }\n\n  return scopes;\n}\n\nexport function encodeOriginalScopes(scopes: OriginalScope[]): string {\n  const writer = new StringWriter();\n\n  for (let i = 0; i < scopes.length; ) {\n    i = _encodeOriginalScopes(scopes, i, writer, [0]);\n  }\n\n  return writer.flush();\n}\n\nfunction _encodeOriginalScopes(\n  scopes: OriginalScope[],\n  index: number,\n  writer: StringWriter,\n  state: [\n    number, // GenColumn\n  ],\n): number {\n  const scope = scopes[index];\n  const { 0: startLine, 1: startColumn, 2: endLine, 3: endColumn, 4: kind, vars } = scope;\n\n  if (index > 0) writer.write(comma);\n\n  state[0] = encodeInteger(writer, startLine, state[0]);\n  encodeInteger(writer, startColumn, 0);\n  encodeInteger(writer, kind, 0);\n\n  const fields = scope.length === 6 ? 0b0001 : 0;\n  encodeInteger(writer, fields, 0);\n  if (scope.length === 6) encodeInteger(writer, scope[5], 0);\n\n  for (const v of vars) {\n    encodeInteger(writer, v, 0);\n  }\n\n  for (index++; index < scopes.length; ) {\n    const next = scopes[index];\n    const { 0: l, 1: c } = next;\n    if (l > endLine || (l === endLine && c >= endColumn)) {\n      break;\n    }\n    index = _encodeOriginalScopes(scopes, index, writer, state);\n  }\n\n  writer.write(comma);\n  state[0] = encodeInteger(writer, endLine, state[0]);\n  encodeInteger(writer, endColumn, 0);\n\n  return index;\n}\n\nexport function decodeGeneratedRanges(input: string): GeneratedRange[] {\n  const { length } = input;\n  const reader = new StringReader(input);\n  const ranges: GeneratedRange[] = [];\n  const stack: GeneratedRange[] = [];\n\n  let genLine = 0;\n  let definitionSourcesIndex = 0;\n  let definitionScopeIndex = 0;\n  let callsiteSourcesIndex = 0;\n  let callsiteLine = 0;\n  let callsiteColumn = 0;\n  let bindingLine = 0;\n  let bindingColumn = 0;\n\n  do {\n    const semi = reader.indexOf(';');\n    let genColumn = 0;\n\n    for (; reader.pos < semi; reader.pos++) {\n      genColumn = decodeInteger(reader, genColumn);\n\n      if (!hasMoreVlq(reader, semi)) {\n        const last = stack.pop()!;\n        last[2] = genLine;\n        last[3] = genColumn;\n        continue;\n      }\n\n      const fields = decodeInteger(reader, 0);\n      const hasDefinition = fields & 0b0001;\n      const hasCallsite = fields & 0b0010;\n      const hasScope = fields & 0b0100;\n\n      let callsite: CallSite | null = null;\n      let bindings: Binding[] = EMPTY;\n      let range: GeneratedRange;\n      if (hasDefinition) {\n        const defSourcesIndex = decodeInteger(reader, definitionSourcesIndex);\n        definitionScopeIndex = decodeInteger(\n          reader,\n          definitionSourcesIndex === defSourcesIndex ? definitionScopeIndex : 0,\n        );\n\n        definitionSourcesIndex = defSourcesIndex;\n        range = [genLine, genColumn, 0, 0, defSourcesIndex, definitionScopeIndex] as GeneratedRange;\n      } else {\n        range = [genLine, genColumn, 0, 0] as GeneratedRange;\n      }\n\n      range.isScope = !!hasScope;\n\n      if (hasCallsite) {\n        const prevCsi = callsiteSourcesIndex;\n        const prevLine = callsiteLine;\n        callsiteSourcesIndex = decodeInteger(reader, callsiteSourcesIndex);\n        const sameSource = prevCsi === callsiteSourcesIndex;\n        callsiteLine = decodeInteger(reader, sameSource ? callsiteLine : 0);\n        callsiteColumn = decodeInteger(\n          reader,\n          sameSource && prevLine === callsiteLine ? callsiteColumn : 0,\n        );\n\n        callsite = [callsiteSourcesIndex, callsiteLine, callsiteColumn];\n      }\n      range.callsite = callsite;\n\n      if (hasMoreVlq(reader, semi)) {\n        bindings = [];\n        do {\n          bindingLine = genLine;\n          bindingColumn = genColumn;\n          const expressionsCount = decodeInteger(reader, 0);\n          let expressionRanges: BindingExpressionRange[];\n          if (expressionsCount < -1) {\n            expressionRanges = [[decodeInteger(reader, 0)]];\n            for (let i = -1; i > expressionsCount; i--) {\n              const prevBl = bindingLine;\n              bindingLine = decodeInteger(reader, bindingLine);\n              bindingColumn = decodeInteger(reader, bindingLine === prevBl ? bindingColumn : 0);\n              const expression = decodeInteger(reader, 0);\n              expressionRanges.push([expression, bindingLine, bindingColumn]);\n            }\n          } else {\n            expressionRanges = [[expressionsCount]];\n          }\n          bindings.push(expressionRanges);\n        } while (hasMoreVlq(reader, semi));\n      }\n      range.bindings = bindings;\n\n      ranges.push(range);\n      stack.push(range);\n    }\n\n    genLine++;\n    reader.pos = semi + 1;\n  } while (reader.pos < length);\n\n  return ranges;\n}\n\nexport function encodeGeneratedRanges(ranges: GeneratedRange[]): string {\n  if (ranges.length === 0) return '';\n\n  const writer = new StringWriter();\n\n  for (let i = 0; i < ranges.length; ) {\n    i = _encodeGeneratedRanges(ranges, i, writer, [0, 0, 0, 0, 0, 0, 0]);\n  }\n\n  return writer.flush();\n}\n\nfunction _encodeGeneratedRanges(\n  ranges: GeneratedRange[],\n  index: number,\n  writer: StringWriter,\n  state: [\n    number, // GenLine\n    number, // GenColumn\n    number, // DefSourcesIndex\n    number, // DefScopesIndex\n    number, // CallSourcesIndex\n    number, // CallLine\n    number, // CallColumn\n  ],\n): number {\n  const range = ranges[index];\n  const {\n    0: startLine,\n    1: startColumn,\n    2: endLine,\n    3: endColumn,\n    isScope,\n    callsite,\n    bindings,\n  } = range;\n\n  if (state[0] < startLine) {\n    catchupLine(writer, state[0], startLine);\n    state[0] = startLine;\n    state[1] = 0;\n  } else if (index > 0) {\n    writer.write(comma);\n  }\n\n  state[1] = encodeInteger(writer, range[1], state[1]);\n\n  const fields =\n    (range.length === 6 ? 0b0001 : 0) | (callsite ? 0b0010 : 0) | (isScope ? 0b0100 : 0);\n  encodeInteger(writer, fields, 0);\n\n  if (range.length === 6) {\n    const { 4: sourcesIndex, 5: scopesIndex } = range;\n    if (sourcesIndex !== state[2]) {\n      state[3] = 0;\n    }\n    state[2] = encodeInteger(writer, sourcesIndex, state[2]);\n    state[3] = encodeInteger(writer, scopesIndex, state[3]);\n  }\n\n  if (callsite) {\n    const { 0: sourcesIndex, 1: callLine, 2: callColumn } = range.callsite!;\n    if (sourcesIndex !== state[4]) {\n      state[5] = 0;\n      state[6] = 0;\n    } else if (callLine !== state[5]) {\n      state[6] = 0;\n    }\n    state[4] = encodeInteger(writer, sourcesIndex, state[4]);\n    state[5] = encodeInteger(writer, callLine, state[5]);\n    state[6] = encodeInteger(writer, callColumn, state[6]);\n  }\n\n  if (bindings) {\n    for (const binding of bindings) {\n      if (binding.length > 1) encodeInteger(writer, -binding.length, 0);\n      const expression = binding[0][0];\n      encodeInteger(writer, expression, 0);\n      let bindingStartLine = startLine;\n      let bindingStartColumn = startColumn;\n      for (let i = 1; i < binding.length; i++) {\n        const expRange = binding[i];\n        bindingStartLine = encodeInteger(writer, expRange[1]!, bindingStartLine);\n        bindingStartColumn = encodeInteger(writer, expRange[2]!, bindingStartColumn);\n        encodeInteger(writer, expRange[0]!, 0);\n      }\n    }\n  }\n\n  for (index++; index < ranges.length; ) {\n    const next = ranges[index];\n    const { 0: l, 1: c } = next;\n    if (l > endLine || (l === endLine && c >= endColumn)) {\n      break;\n    }\n    index = _encodeGeneratedRanges(ranges, index, writer, state);\n  }\n\n  if (state[0] < endLine) {\n    catchupLine(writer, state[0], endLine);\n    state[0] = endLine;\n    state[1] = 0;\n  } else {\n    writer.write(comma);\n  }\n  state[1] = encodeInteger(writer, endColumn, state[1]);\n\n  return index;\n}\n\nfunction catchupLine(writer: StringWriter, lastLine: number, line: number) {\n  do {\n    writer.write(semicolon);\n  } while (++lastLine < line);\n}\n","import { comma, decodeInteger, encodeInteger, hasMoreVlq, semicolon } from './vlq';\nimport { StringWriter, StringReader } from './strings';\n\nexport {\n  decodeOriginalScopes,\n  encodeOriginalScopes,\n  decodeGeneratedRanges,\n  encodeGeneratedRanges,\n} from './scopes';\nexport type { OriginalScope, GeneratedRange, CallSite, BindingExpressionRange } from './scopes';\n\nexport type SourceMapSegment =\n  | [number]\n  | [number, number, number, number]\n  | [number, number, number, number, number];\nexport type SourceMapLine = SourceMapSegment[];\nexport type SourceMapMappings = SourceMapLine[];\n\nexport function decode(mappings: string): SourceMapMappings {\n  const { length } = mappings;\n  const reader = new StringReader(mappings);\n  const decoded: SourceMapMappings = [];\n  let genColumn = 0;\n  let sourcesIndex = 0;\n  let sourceLine = 0;\n  let sourceColumn = 0;\n  let namesIndex = 0;\n\n  do {\n    const semi = reader.indexOf(';');\n    const line: SourceMapLine = [];\n    let sorted = true;\n    let lastCol = 0;\n    genColumn = 0;\n\n    while (reader.pos < semi) {\n      let seg: SourceMapSegment;\n\n      genColumn = decodeInteger(reader, genColumn);\n      if (genColumn < lastCol) sorted = false;\n      lastCol = genColumn;\n\n      if (hasMoreVlq(reader, semi)) {\n        sourcesIndex = decodeInteger(reader, sourcesIndex);\n        sourceLine = decodeInteger(reader, sourceLine);\n        sourceColumn = decodeInteger(reader, sourceColumn);\n\n        if (hasMoreVlq(reader, semi)) {\n          namesIndex = decodeInteger(reader, namesIndex);\n          seg = [genColumn, sourcesIndex, sourceLine, sourceColumn, namesIndex];\n        } else {\n          seg = [genColumn, sourcesIndex, sourceLine, sourceColumn];\n        }\n      } else {\n        seg = [genColumn];\n      }\n\n      line.push(seg);\n      reader.pos++;\n    }\n\n    if (!sorted) sort(line);\n    decoded.push(line);\n    reader.pos = semi + 1;\n  } while (reader.pos <= length);\n\n  return decoded;\n}\n\nfunction sort(line: SourceMapSegment[]) {\n  line.sort(sortComparator);\n}\n\nfunction sortComparator(a: SourceMapSegment, b: SourceMapSegment): number {\n  return a[0] - b[0];\n}\n\nexport function encode(decoded: SourceMapMappings): string;\nexport function encode(decoded: Readonly<SourceMapMappings>): string;\nexport function encode(decoded: Readonly<SourceMapMappings>): string {\n  const writer = new StringWriter();\n  let sourcesIndex = 0;\n  let sourceLine = 0;\n  let sourceColumn = 0;\n  let namesIndex = 0;\n\n  for (let i = 0; i < decoded.length; i++) {\n    const line = decoded[i];\n    if (i > 0) writer.write(semicolon);\n    if (line.length === 0) continue;\n\n    let genColumn = 0;\n\n    for (let j = 0; j < line.length; j++) {\n      const segment = line[j];\n      if (j > 0) writer.write(comma);\n\n      genColumn = encodeInteger(writer, segment[0], genColumn);\n\n      if (segment.length === 1) continue;\n      sourcesIndex = encodeInteger(writer, segment[1], sourcesIndex);\n      sourceLine = encodeInteger(writer, segment[2], sourceLine);\n      sourceColumn = encodeInteger(writer, segment[3], sourceColumn);\n\n      if (segment.length === 4) continue;\n      namesIndex = encodeInteger(writer, segment[4], namesIndex);\n    }\n  }\n\n  return writer.flush();\n}\n","// Matches the scheme of a URL, eg \"http://\"\nconst schemeRegex = /^[\\w+.-]+:\\/\\//;\n\n/**\n * Matches the parts of a URL:\n * 1. Scheme, including \":\", guaranteed.\n * 2. User/password, including \"@\", optional.\n * 3. Host, guaranteed.\n * 4. Port, including \":\", optional.\n * 5. Path, including \"/\", optional.\n * 6. Query, including \"?\", optional.\n * 7. Hash, including \"#\", optional.\n */\nconst urlRegex = /^([\\w+.-]+:)\\/\\/([^@/#?]*@)?([^:/#?]*)(:\\d+)?(\\/[^#?]*)?(\\?[^#]*)?(#.*)?/;\n\n/**\n * File URLs are weird. They dont' need the regular `//` in the scheme, they may or may not start\n * with a leading `/`, they can have a domain (but only if they don't start with a Windows drive).\n *\n * 1. Host, optional.\n * 2. Path, which may include \"/\", guaranteed.\n * 3. Query, including \"?\", optional.\n * 4. Hash, including \"#\", optional.\n */\nconst fileRegex = /^file:(?:\\/\\/((?![a-z]:)[^/#?]*)?)?(\\/?[^#?]*)(\\?[^#]*)?(#.*)?/i;\n\ntype Url = {\n  scheme: string;\n  user: string;\n  host: string;\n  port: string;\n  path: string;\n  query: string;\n  hash: string;\n  type: UrlType;\n};\n\nconst enum UrlType {\n  Empty = 1,\n  Hash = 2,\n  Query = 3,\n  RelativePath = 4,\n  AbsolutePath = 5,\n  SchemeRelative = 6,\n  Absolute = 7,\n}\n\nfunction isAbsoluteUrl(input: string): boolean {\n  return schemeRegex.test(input);\n}\n\nfunction isSchemeRelativeUrl(input: string): boolean {\n  return input.startsWith('//');\n}\n\nfunction isAbsolutePath(input: string): boolean {\n  return input.startsWith('/');\n}\n\nfunction isFileUrl(input: string): boolean {\n  return input.startsWith('file:');\n}\n\nfunction isRelative(input: string): boolean {\n  return /^[.?#]/.test(input);\n}\n\nfunction parseAbsoluteUrl(input: string): Url {\n  const match = urlRegex.exec(input)!;\n  return makeUrl(\n    match[1],\n    match[2] || '',\n    match[3],\n    match[4] || '',\n    match[5] || '/',\n    match[6] || '',\n    match[7] || '',\n  );\n}\n\nfunction parseFileUrl(input: string): Url {\n  const match = fileRegex.exec(input)!;\n  const path = match[2];\n  return makeUrl(\n    'file:',\n    '',\n    match[1] || '',\n    '',\n    isAbsolutePath(path) ? path : '/' + path,\n    match[3] || '',\n    match[4] || '',\n  );\n}\n\nfunction makeUrl(\n  scheme: string,\n  user: string,\n  host: string,\n  port: string,\n  path: string,\n  query: string,\n  hash: string,\n): Url {\n  return {\n    scheme,\n    user,\n    host,\n    port,\n    path,\n    query,\n    hash,\n    type: UrlType.Absolute,\n  };\n}\n\nfunction parseUrl(input: string): Url {\n  if (isSchemeRelativeUrl(input)) {\n    const url = parseAbsoluteUrl('http:' + input);\n    url.scheme = '';\n    url.type = UrlType.SchemeRelative;\n    return url;\n  }\n\n  if (isAbsolutePath(input)) {\n    const url = parseAbsoluteUrl('http://foo.com' + input);\n    url.scheme = '';\n    url.host = '';\n    url.type = UrlType.AbsolutePath;\n    return url;\n  }\n\n  if (isFileUrl(input)) return parseFileUrl(input);\n\n  if (isAbsoluteUrl(input)) return parseAbsoluteUrl(input);\n\n  const url = parseAbsoluteUrl('http://foo.com/' + input);\n  url.scheme = '';\n  url.host = '';\n  url.type = input\n    ? input.startsWith('?')\n      ? UrlType.Query\n      : input.startsWith('#')\n      ? UrlType.Hash\n      : UrlType.RelativePath\n    : UrlType.Empty;\n  return url;\n}\n\nfunction stripPathFilename(path: string): string {\n  // If a path ends with a parent directory \"..\", then it's a relative path with excess parent\n  // paths. It's not a file, so we can't strip it.\n  if (path.endsWith('/..')) return path;\n  const index = path.lastIndexOf('/');\n  return path.slice(0, index + 1);\n}\n\nfunction mergePaths(url: Url, base: Url) {\n  normalizePath(base, base.type);\n\n  // If the path is just a \"/\", then it was an empty path to begin with (remember, we're a relative\n  // path).\n  if (url.path === '/') {\n    url.path = base.path;\n  } else {\n    // Resolution happens relative to the base path's directory, not the file.\n    url.path = stripPathFilename(base.path) + url.path;\n  }\n}\n\n/**\n * The path can have empty directories \"//\", unneeded parents \"foo/..\", or current directory\n * \"foo/.\". We need to normalize to a standard representation.\n */\nfunction normalizePath(url: Url, type: UrlType) {\n  const rel = type <= UrlType.RelativePath;\n  const pieces = url.path.split('/');\n\n  // We need to preserve the first piece always, so that we output a leading slash. The item at\n  // pieces[0] is an empty string.\n  let pointer = 1;\n\n  // Positive is the number of real directories we've output, used for popping a parent directory.\n  // Eg, \"foo/bar/..\" will have a positive 2, and we can decrement to be left with just \"foo\".\n  let positive = 0;\n\n  // We need to keep a trailing slash if we encounter an empty directory (eg, splitting \"foo/\" will\n  // generate `[\"foo\", \"\"]` pieces). And, if we pop a parent directory. But once we encounter a\n  // real directory, we won't need to append, unless the other conditions happen again.\n  let addTrailingSlash = false;\n\n  for (let i = 1; i < pieces.length; i++) {\n    const piece = pieces[i];\n\n    // An empty directory, could be a trailing slash, or just a double \"//\" in the path.\n    if (!piece) {\n      addTrailingSlash = true;\n      continue;\n    }\n\n    // If we encounter a real directory, then we don't need to append anymore.\n    addTrailingSlash = false;\n\n    // A current directory, which we can always drop.\n    if (piece === '.') continue;\n\n    // A parent directory, we need to see if there are any real directories we can pop. Else, we\n    // have an excess of parents, and we'll need to keep the \"..\".\n    if (piece === '..') {\n      if (positive) {\n        addTrailingSlash = true;\n        positive--;\n        pointer--;\n      } else if (rel) {\n        // If we're in a relativePath, then we need to keep the excess parents. Else, in an absolute\n        // URL, protocol relative URL, or an absolute path, we don't need to keep excess.\n        pieces[pointer++] = piece;\n      }\n      continue;\n    }\n\n    // We've encountered a real directory. Move it to the next insertion pointer, which accounts for\n    // any popped or dropped directories.\n    pieces[pointer++] = piece;\n    positive++;\n  }\n\n  let path = '';\n  for (let i = 1; i < pointer; i++) {\n    path += '/' + pieces[i];\n  }\n  if (!path || (addTrailingSlash && !path.endsWith('/..'))) {\n    path += '/';\n  }\n  url.path = path;\n}\n\n/**\n * Attempts to resolve `input` URL/path relative to `base`.\n */\nexport default function resolve(input: string, base: string | undefined): string {\n  if (!input && !base) return '';\n\n  const url = parseUrl(input);\n  let inputType = url.type;\n\n  if (base && inputType !== UrlType.Absolute) {\n    const baseUrl = parseUrl(base);\n    const baseType = baseUrl.type;\n\n    switch (inputType) {\n      case UrlType.Empty:\n        url.hash = baseUrl.hash;\n      // fall through\n\n      case UrlType.Hash:\n        url.query = baseUrl.query;\n      // fall through\n\n      case UrlType.Query:\n      case UrlType.RelativePath:\n        mergePaths(url, baseUrl);\n      // fall through\n\n      case UrlType.AbsolutePath:\n        // The host, user, and port are joined, you can't copy one without the others.\n        url.user = baseUrl.user;\n        url.host = baseUrl.host;\n        url.port = baseUrl.port;\n      // fall through\n\n      case UrlType.SchemeRelative:\n        // The input doesn't have a schema at least, so we need to copy at least that over.\n        url.scheme = baseUrl.scheme;\n    }\n    if (baseType > inputType) inputType = baseType;\n  }\n\n  normalizePath(url, inputType);\n\n  const queryHash = url.query + url.hash;\n  switch (inputType) {\n    // This is impossible, because of the empty checks at the start of the function.\n    // case UrlType.Empty:\n\n    case UrlType.Hash:\n    case UrlType.Query:\n      return queryHash;\n\n    case UrlType.RelativePath: {\n      // The first char is always a \"/\", and we need it to be relative.\n      const path = url.path.slice(1);\n\n      if (!path) return queryHash || '.';\n\n      if (isRelative(base || input) && !isRelative(path)) {\n        // If base started with a leading \".\", or there is no base and input started with a \".\",\n        // then we need to ensure that the relative path starts with a \".\". We don't know if\n        // relative starts with a \"..\", though, so check before prepending.\n        return './' + path + queryHash;\n      }\n\n      return path + queryHash;\n    }\n\n    case UrlType.AbsolutePath:\n      return url.path + queryHash;\n\n    default:\n      return url.scheme + '//' + url.user + url.host + url.port + url.path + queryHash;\n  }\n}\n",null,null,null,null,null,null,null,null,"const { TraceMap, originalPositionFor, AnyMap } = require('@jridgewell/trace-mapping');\nvar path = require('path');\nconst { fileURLToPath, pathToFileURL } = require('url');\nvar util = require('util');\n\nvar fs;\ntry {\n  fs = require('fs');\n  if (!fs.existsSync || !fs.readFileSync) {\n    // fs doesn't have all methods we need\n    fs = null;\n  }\n} catch (err) {\n  /* nop */\n}\n\n/**\n * Requires a module which is protected against bundler minification.\n *\n * @param {NodeModule} mod\n * @param {string} request\n */\nfunction dynamicRequire(mod, request) {\n  return mod.require(request);\n}\n\n/**\n * @typedef {{\n *   enabled: boolean;\n *   originalValue: any;\n *   installedValue: any;\n * }} HookState\n * Used for installing and uninstalling hooks\n */\n\n// Increment this if the format of sharedData changes in a breaking way.\nvar sharedDataVersion = 1;\n\n/**\n * @template T\n * @param {T} defaults\n * @returns {T}\n */\nfunction initializeSharedData(defaults) {\n  var sharedDataKey = 'source-map-support/sharedData';\n  if (typeof Symbol !== 'undefined') {\n    sharedDataKey = Symbol.for(sharedDataKey);\n  }\n  var sharedData = this[sharedDataKey];\n  if (!sharedData) {\n    sharedData = { version: sharedDataVersion };\n    if (Object.defineProperty) {\n      Object.defineProperty(this, sharedDataKey, { value: sharedData });\n    } else {\n      this[sharedDataKey] = sharedData;\n    }\n  }\n  if (sharedDataVersion !== sharedData.version) {\n    throw new Error(\"Multiple incompatible instances of source-map-support were loaded\");\n  }\n  for (var key in defaults) {\n    if (!(key in sharedData)) {\n      sharedData[key] = defaults[key];\n    }\n  }\n  return sharedData;\n}\n\n// If multiple instances of source-map-support are loaded into the same\n// context, they shouldn't overwrite each other.  By storing handlers, caches,\n// and other state on a shared object, different instances of\n// source-map-support can work together in a limited way. This does require\n// that future versions of source-map-support continue to support the fields on\n// this object. If this internal contract ever needs to be broken, increment\n// sharedDataVersion. (This version number is not the same as any of the\n// package's version numbers, which should reflect the *external* API of\n// source-map-support.)\nvar sharedData = initializeSharedData({\n\n  // Only install once if called multiple times\n  // Remember how the environment looked before installation so we can restore if able\n  /** @type {HookState} */\n  errorPrepareStackTraceHook: undefined,\n  /** @type {HookState} */\n  processEmitHook: undefined,\n  /** @type {HookState} */\n  moduleResolveFilenameHook: undefined,\n\n  /** @type {Array<(request: string, parent: any, isMain: boolean, options: any, redirectedRequest: string) => void>} */\n  onConflictingLibraryRedirectArr: [],\n\n  // If true, the caches are reset before a stack trace formatting operation\n  emptyCacheBetweenOperations: false,\n\n  // Maps a file path to a string containing the file contents\n  fileContentsCache: Object.create(null),\n\n  // Maps a file path to a source map for that file\n  /** @type {Record<string, {url: string, map: TraceMap}} */\n  sourceMapCache: Object.create(null),\n\n  // Priority list of retrieve handlers\n  retrieveFileHandlers: [],\n  retrieveMapHandlers: [],\n\n  // Priority list of internally-implemented handlers.\n  // When resetting state, we must keep these.\n  internalRetrieveFileHandlers: [],\n  internalRetrieveMapHandlers: [],\n\n});\n\n// Supports {browser, node, auto}\nvar environment = \"auto\";\n\n// Regex for detecting source maps\nvar reSourceMap = /^data:application\\/json[^,]+base64,/;\n\nfunction isInBrowser() {\n  if (environment === \"browser\")\n    return true;\n  if (environment === \"node\")\n    return false;\n  return ((typeof window !== 'undefined') && (typeof XMLHttpRequest === 'function') && !(window.require && window.module && window.process && window.process.type === \"renderer\"));\n}\n\nfunction hasGlobalProcessEventEmitter() {\n  return ((typeof process === 'object') && (process !== null) && (typeof process.on === 'function'));\n}\n\nfunction tryFileURLToPath(v) {\n  if(isFileUrl(v)) {\n    return fileURLToPath(v);\n  }\n  return v;\n}\n\n// TODO un-copy these from resolve-uri; see if they can be exported from that lib\nfunction isFileUrl(input) {\n  return input.startsWith('file:');\n}\nfunction isAbsoluteUrl(input) {\n  return schemeRegex.test(input);\n}\n// Matches the scheme of a URL, eg \"http://\"\nconst schemeRegex = /^[\\w+.-]+:\\/\\//;\nfunction isSchemeRelativeUrl(input) {\n  return input.startsWith('//');\n}\n\n// #region Caches\n/** @param {string} pathOrFileUrl */\nfunction getCacheKey(pathOrFileUrl) {\n  if(pathOrFileUrl.startsWith('node:')) return pathOrFileUrl;\n  if(isFileUrl(pathOrFileUrl)) {\n    // Must normalize spaces to %20, stuff like that\n    return new URL(pathOrFileUrl).toString();\n  } else {\n    try {\n      return pathToFileURL(pathOrFileUrl).toString();\n    } catch {\n      return pathOrFileUrl;\n    }\n  }\n}\nfunction getFileContentsCache(key) {\n  return sharedData.fileContentsCache[getCacheKey(key)];\n}\nfunction hasFileContentsCacheFromKey(key) {\n  return Object.prototype.hasOwnProperty.call(sharedData.fileContentsCache, key);\n}\nfunction getFileContentsCacheFromKey(key) {\n  return sharedData.fileContentsCache[key];\n}\nfunction setFileContentsCache(key, value) {\n  return sharedData.fileContentsCache[getCacheKey(key)] = value;\n}\nfunction getSourceMapCache(key) {\n  return sharedData.sourceMapCache[getCacheKey(key)];\n}\nfunction setSourceMapCache(key, value) {\n  return sharedData.sourceMapCache[getCacheKey(key)] = value;\n}\nfunction clearCaches() {\n  sharedData.fileContentsCache = Object.create(null);\n  sharedData.sourceMapCache = Object.create(null);\n}\n// #endregion Caches\n\nfunction handlerExec(list, internalList) {\n  return function(arg) {\n    for (var i = 0; i < list.length; i++) {\n      var ret = list[i](arg);\n      if (ret) {\n        return ret;\n      }\n    }\n    for (var i = 0; i < internalList.length; i++) {\n      var ret = internalList[i](arg);\n      if (ret) {\n        return ret;\n      }\n    }\n    return null;\n  };\n}\n\nvar retrieveFile = handlerExec(sharedData.retrieveFileHandlers, sharedData.internalRetrieveFileHandlers);\n\nsharedData.internalRetrieveFileHandlers.push(function(path) {\n  // Trim the path to make sure there is no extra whitespace.\n  path = path.trim();\n  if (/^file:/.test(path)) {\n    // existsSync/readFileSync can't handle file protocol, but once stripped, it works\n    path = path.replace(/file:\\/\\/\\/(\\w:)?/, function(protocol, drive) {\n      return drive ?\n        '' : // file:///C:/dir/file -> C:/dir/file\n        '/'; // file:///root-dir/file -> /root-dir/file\n    });\n  }\n  const key = getCacheKey(path);\n  if(hasFileContentsCacheFromKey(key)) {\n    return getFileContentsCacheFromKey(key);\n  }\n\n  var contents = '';\n  try {\n    if (!fs) {\n      // Use SJAX if we are in the browser\n      var xhr = new XMLHttpRequest();\n      xhr.open('GET', path, /** async */ false);\n      xhr.send(null);\n      if (xhr.readyState === 4 && xhr.status === 200) {\n        contents = xhr.responseText;\n      }\n    } else if (fs.existsSync(path)) {\n      // Otherwise, use the filesystem\n      contents = fs.readFileSync(path, 'utf8');\n    }\n  } catch (er) {\n    /* ignore any errors */\n  }\n\n  return setFileContentsCache(path, contents);\n});\n\n// Support URLs relative to a directory, but be careful about a protocol prefix\n// in case we are in the browser (i.e. directories may start with \"http://\" or \"file:///\")\nfunction supportRelativeURL(file, url) {\n  if(!file) return url;\n  // given that this happens within error formatting codepath, probably best to\n  // fallback instead of throwing if anything goes wrong\n  try {\n    // if should output a URL\n    if(isAbsoluteUrl(file) || isSchemeRelativeUrl(file)) {\n        if(isAbsoluteUrl(url) || isSchemeRelativeUrl(url)) {\n            return new URL(url, file).toString();\n        }\n        if(path.isAbsolute(url)) {\n            return new URL(pathToFileURL(url), file).toString();\n        }\n        // url is relative path or URL\n        return new URL(url.replace(/\\\\/g, '/'), file).toString();\n    }\n    // if should output a path (unless URL is something like https://)\n    if(path.isAbsolute(file)) {\n        if(isFileUrl(url)) {\n            return fileURLToPath(url);\n        }\n        if(isSchemeRelativeUrl(url)) {\n            return fileURLToPath(new URL(url, 'file://'));\n        }\n        if(isAbsoluteUrl(url)) {\n            // url is a non-file URL\n            // Go with the URL\n            return url;\n        }\n        if(path.isAbsolute(url)) {\n            // Normalize at all?  decodeURI or normalize slashes?\n            return path.normalize(url);\n        }\n        // url is relative path or URL\n        return path.join(file, '..', decodeURI(url));\n    }\n    // If we get here, file is relative.\n    // Shouldn't happen since node identifies modules with absolute paths or URLs.\n    // But we can take a stab at returning something meaningful anyway.\n    if(isAbsoluteUrl(url) || isSchemeRelativeUrl(url)) {\n        return url;\n    }\n    return path.join(file, '..', url);\n  } catch(e) {\n      return url;\n  }\n}\n\n// Return pathOrUrl in the same style as matchStyleOf: either a file URL or a native path\nfunction matchStyleOfPathOrUrl(matchStyleOf, pathOrUrl) {\n  try {\n    if(isAbsoluteUrl(matchStyleOf) || isSchemeRelativeUrl(matchStyleOf)) {\n      if(isAbsoluteUrl(pathOrUrl) || isSchemeRelativeUrl(pathOrUrl)) return pathOrUrl;\n      if(path.isAbsolute(pathOrUrl)) return pathToFileURL(pathOrUrl).toString();\n    } else if(path.isAbsolute(matchStyleOf)) {\n      if(isAbsoluteUrl(pathOrUrl) || isSchemeRelativeUrl(pathOrUrl)) {\n        return fileURLToPath(new URL(pathOrUrl, 'file://'));\n      }\n    }\n    return pathOrUrl;\n  } catch(e) {\n    return pathOrUrl;\n  }\n}\n\nfunction retrieveSourceMapURL(source) {\n  var fileData;\n\n  if (isInBrowser()) {\n     try {\n       var xhr = new XMLHttpRequest();\n       xhr.open('GET', source, false);\n       xhr.send(null);\n       fileData = xhr.readyState === 4 ? xhr.responseText : null;\n\n       // Support providing a sourceMappingURL via the SourceMap header\n       var sourceMapHeader = xhr.getResponseHeader(\"SourceMap\") ||\n                             xhr.getResponseHeader(\"X-SourceMap\");\n       if (sourceMapHeader) {\n         return sourceMapHeader;\n       }\n     } catch (e) {\n     }\n  }\n\n  // Get the URL of the source map\n  fileData = retrieveFile(tryFileURLToPath(source));\n  var re = /(?:\\/\\/[@#][\\s]*sourceMappingURL=([^\\s'\"]+)[\\s]*$)|(?:\\/\\*[@#][\\s]*sourceMappingURL=([^\\s*'\"]+)[\\s]*(?:\\*\\/)[\\s]*$)/mg;\n  // Keep executing the search to find the *last* sourceMappingURL to avoid\n  // picking up sourceMappingURLs from comments, strings, etc.\n  var lastMatch, match;\n  while (match = re.exec(fileData)) lastMatch = match;\n  if (!lastMatch) return null;\n  return lastMatch[1];\n};\n\n// Can be overridden by the retrieveSourceMap option to install. Takes a\n// generated source filename; returns a {map, optional url} object, or null if\n// there is no source map.  The map field may be either a string or the parsed\n// JSON object (ie, it must be a valid argument to the SourceMapConsumer\n// constructor).\n/** @type {(source: string) => import('./source-map-support').UrlAndMap | null} */\nvar retrieveSourceMap = handlerExec(sharedData.retrieveMapHandlers, sharedData.internalRetrieveMapHandlers);\nsharedData.internalRetrieveMapHandlers.push(function(source) {\n  var sourceMappingURL = retrieveSourceMapURL(source);\n  if (!sourceMappingURL) return null;\n\n  // Read the contents of the source map\n  var sourceMapData;\n  if (reSourceMap.test(sourceMappingURL)) {\n    // Support source map URL as a data url\n    var rawData = sourceMappingURL.slice(sourceMappingURL.indexOf(',') + 1);\n    sourceMapData = Buffer.from(rawData, \"base64\").toString();\n    sourceMappingURL = source;\n  } else {\n    // Support source map URLs relative to the source URL\n    sourceMappingURL = supportRelativeURL(source, sourceMappingURL);\n    sourceMapData = retrieveFile(tryFileURLToPath(sourceMappingURL));\n  }\n\n  if (!sourceMapData) {\n    return null;\n  }\n\n  return {\n    url: sourceMappingURL,\n    map: sourceMapData\n  };\n});\n\nfunction mapSourcePosition(position) {\n  var sourceMap = getSourceMapCache(position.source);\n  if (!sourceMap) {\n    // Call the (overrideable) retrieveSourceMap function to get the source map.\n    var urlAndMap = retrieveSourceMap(position.source);\n    if (urlAndMap) {\n      sourceMap = setSourceMapCache(position.source, {\n        url: urlAndMap.url,\n        map: new AnyMap(urlAndMap.map, urlAndMap.url)\n      });\n\n      // Overwrite trace-mapping's resolutions, because they do not handle\n      // Windows paths the way we want.\n      // TODO Remove now that windows path support was added to resolve-uri and thus trace-mapping?\n      sourceMap.map.resolvedSources = sourceMap.map.sources.map(s => supportRelativeURL(sourceMap.url, s));\n\n      // Load all sources stored inline with the source map into the file cache\n      // to pretend like they are already loaded. They may not exist on disk.\n      if (sourceMap.map.sourcesContent) {\n        sourceMap.map.resolvedSources.forEach(function(resolvedSource, i) {\n          var contents = sourceMap.map.sourcesContent[i];\n          if (contents) {\n            setFileContentsCache(resolvedSource, contents);\n          }\n        });\n      }\n    } else {\n      sourceMap = setSourceMapCache(position.source, {\n        url: null,\n        map: null\n      });\n    }\n  }\n\n  // Resolve the source URL relative to the URL of the source map\n  if (sourceMap && sourceMap.map) {\n    var originalPosition = originalPositionFor(sourceMap.map, position);\n\n    // Only return the original position if a matching line was found. If no\n    // matching line is found then we return position instead, which will cause\n    // the stack trace to print the path and line for the compiled file. It is\n    // better to give a precise location in the compiled file than a vague\n    // location in the original file.\n    if (originalPosition.source !== null) {\n      // originalPosition.source has *already* been resolved against sourceMap.url\n      // so is *already* as absolute as possible.\n      // However, we want to ensure we output in same format as input: URL or native path\n      originalPosition.source = matchStyleOfPathOrUrl(\n        position.source, originalPosition.source);\n      return originalPosition;\n    }\n  }\n\n  return position;\n}\n\n// Parses code generated by FormatEvalOrigin(), a function inside V8:\n// https://code.google.com/p/v8/source/browse/trunk/src/messages.js\nfunction mapEvalOrigin(origin) {\n  // Most eval() calls are in this format\n  var match = /^eval at ([^(]+) \\((.+):(\\d+):(\\d+)\\)$/.exec(origin);\n  if (match) {\n    var position = mapSourcePosition({\n      source: match[2],\n      line: +match[3],\n      column: match[4] - 1\n    });\n    return 'eval at ' + match[1] + ' (' + position.source + ':' +\n      position.line + ':' + (position.column + 1) + ')';\n  }\n\n  // Parse nested eval() calls using recursion\n  match = /^eval at ([^(]+) \\((.+)\\)$/.exec(origin);\n  if (match) {\n    return 'eval at ' + match[1] + ' (' + mapEvalOrigin(match[2]) + ')';\n  }\n\n  // Make sure we still return useful information if we didn't find anything\n  return origin;\n}\n\n// This is copied almost verbatim from the V8 source code at\n// https://code.google.com/p/v8/source/browse/trunk/src/messages.js\n// Update 2022-04-29:\n//    https://github.com/v8/v8/blob/98f6f100c5ab8e390e51422747c4ef644d5ac6f2/src/builtins/builtins-callsite.cc#L175-L179\n//    https://github.com/v8/v8/blob/98f6f100c5ab8e390e51422747c4ef644d5ac6f2/src/objects/call-site-info.cc#L795-L804\n//    https://github.com/v8/v8/blob/98f6f100c5ab8e390e51422747c4ef644d5ac6f2/src/objects/call-site-info.cc#L717-L750\n// The implementation of wrapCallSite() used to just forward to the actual source\n// code of CallSite.prototype.toString but unfortunately a new release of V8\n// did something to the prototype chain and broke the shim. The only fix I\n// could find was copy/paste.\nfunction CallSiteToString() {\n  var fileName;\n  var fileLocation = \"\";\n  if (this.isNative()) {\n    fileLocation = \"native\";\n  } else {\n    fileName = this.getScriptNameOrSourceURL();\n    if (!fileName && this.isEval()) {\n      fileLocation = this.getEvalOrigin();\n      fileLocation += \", \";  // Expecting source position to follow.\n    }\n\n    if (fileName) {\n      fileLocation += fileName;\n    } else {\n      // Source code does not originate from a file and is not native, but we\n      // can still get the source position inside the source string, e.g. in\n      // an eval string.\n      fileLocation += \"<anonymous>\";\n    }\n    var lineNumber = this.getLineNumber();\n    if (lineNumber != null) {\n      fileLocation += \":\" + lineNumber;\n      var columnNumber = this.getColumnNumber();\n      if (columnNumber) {\n        fileLocation += \":\" + columnNumber;\n      }\n    }\n  }\n\n  var line = \"\";\n  var isAsync = this.isAsync ? this.isAsync() : false;\n  if(isAsync) {\n    line += 'async ';\n    var isPromiseAll = this.isPromiseAll ? this.isPromiseAll() : false;\n    var isPromiseAny = this.isPromiseAny ? this.isPromiseAny() : false;\n    if(isPromiseAny || isPromiseAll) {\n      line += isPromiseAll ? 'Promise.all (index ' : 'Promise.any (index ';\n      var promiseIndex = this.getPromiseIndex();\n      line += promiseIndex + ')';\n    }\n  }\n  var functionName = this.getFunctionName();\n  var addSuffix = true;\n  var isConstructor = this.isConstructor();\n  var isMethodCall = !(this.isToplevel() || isConstructor);\n  if (isMethodCall) {\n    var typeName = this.getTypeName();\n    // Fixes shim to be backward compatable with Node v0 to v4\n    if (typeName === \"[object Object]\") {\n      typeName = \"null\";\n    }\n    var methodName = this.getMethodName();\n    if (functionName) {\n      if (typeName && functionName.indexOf(typeName) != 0) {\n        line += typeName + \".\";\n      }\n      line += functionName;\n      if (methodName && functionName.indexOf(\".\" + methodName) != functionName.length - methodName.length - 1) {\n        line += \" [as \" + methodName + \"]\";\n      }\n    } else {\n      line += typeName + \".\" + (methodName || \"<anonymous>\");\n    }\n  } else if (isConstructor) {\n    line += \"new \" + (functionName || \"<anonymous>\");\n  } else if (functionName) {\n    line += functionName;\n  } else {\n    line += fileLocation;\n    addSuffix = false;\n  }\n  if (addSuffix) {\n    line += \" (\" + fileLocation + \")\";\n  }\n  return line;\n}\n\nfunction cloneCallSite(frame) {\n  var object = {};\n  Object.getOwnPropertyNames(Object.getPrototypeOf(frame)).forEach(function(name) {\n    object[name] = /^(?:is|get)/.test(name) ? function() { return frame[name].call(frame); } : frame[name];\n  });\n  object.toString = CallSiteToString;\n  return object;\n}\n\nfunction wrapCallSite(frame, state) {\n  // provides interface backward compatibility\n  if (state === undefined) {\n    state = { nextPosition: null, curPosition: null }\n  }\n  if(frame.isNative()) {\n    state.curPosition = null;\n    return frame;\n  }\n\n  // Most call sites will return the source file from getFileName(), but code\n  // passed to eval() ending in \"//# sourceURL=...\" will return the source file\n  // from getScriptNameOrSourceURL() instead\n  var source = frame.getFileName() || frame.getScriptNameOrSourceURL();\n  if (source) {\n    // v8 does not expose its internal isWasm, etc methods, so we do this instead.\n    if(source.startsWith('wasm://')) {\n      state.curPosition = null;\n      return frame;\n    }\n\n    var line = frame.getLineNumber();\n    var column = frame.getColumnNumber() - 1;\n\n    // Fix position in Node where some (internal) code is prepended.\n    // See https://github.com/evanw/node-source-map-support/issues/36\n    // Header removed in node at ^10.16 || >=11.11.0\n    // v11 is not an LTS candidate, we can just test the one version with it.\n    // Test node versions for: 10.16-19, 10.20+, 12-19, 20-99, 100+, or 11.11\n    var noHeader = /^v(10\\.1[6-9]|10\\.[2-9][0-9]|10\\.[0-9]{3,}|1[2-9]\\d*|[2-9]\\d|\\d{3,}|11\\.11)/;\n    var headerLength = noHeader.test(process.version) ? 0 : 62;\n    if (line === 1 && column > headerLength && !isInBrowser() && !frame.isEval()) {\n      column -= headerLength;\n    }\n\n    var position = mapSourcePosition({\n      source: source,\n      line: line,\n      column: column\n    });\n    state.curPosition = position;\n    frame = cloneCallSite(frame);\n    var originalFunctionName = frame.getFunctionName;\n    frame.getFunctionName = function() {\n      if (state.nextPosition == null) {\n        return originalFunctionName();\n      }\n      return state.nextPosition.name || originalFunctionName();\n    };\n    frame.getFileName = function() { return position.source; };\n    frame.getLineNumber = function() { return position.line; };\n    frame.getColumnNumber = function() { return position.column + 1; };\n    frame.getScriptNameOrSourceURL = function() { return position.source; };\n    return frame;\n  }\n\n  // Code called using eval() needs special handling\n  var origin = frame.isEval() && frame.getEvalOrigin();\n  if (origin) {\n    origin = mapEvalOrigin(origin);\n    frame = cloneCallSite(frame);\n    frame.getEvalOrigin = function() { return origin; };\n    return frame;\n  }\n\n  // If we get here then we were unable to change the source position\n  return frame;\n}\n\nvar kIsNodeError = undefined;\ntry {\n  // Get a deliberate ERR_INVALID_ARG_TYPE\n  // TODO is there a better way to reliably get an instance of NodeError?\n  path.resolve(123);\n} catch(e) {\n  const symbols = Object.getOwnPropertySymbols(e);\n  const symbol = symbols.find(function (s) {return s.toString().indexOf('kIsNodeError') >= 0});\n  if(symbol) kIsNodeError = symbol;\n}\n\nconst ErrorPrototypeToString = (err) =>Error.prototype.toString.call(err);\n\n/** @param {HookState} hookState */\nfunction createPrepareStackTrace(hookState) {\n  return prepareStackTrace;\n\n  // This function is part of the V8 stack trace API, for more info see:\n  // https://v8.dev/docs/stack-trace-api\n  function prepareStackTrace(error, stack) {\n    if(!hookState.enabled) return hookState.originalValue.apply(this, arguments);\n\n    if (sharedData.emptyCacheBetweenOperations) {\n      clearCaches();\n    }\n\n    // node gives its own errors special treatment.  Mimic that behavior\n    // https://github.com/nodejs/node/blob/3cbaabc4622df1b4009b9d026a1a970bdbae6e89/lib/internal/errors.js#L118-L128\n    // https://github.com/nodejs/node/pull/39182\n    var errorString;\n    if (kIsNodeError) {\n      if(kIsNodeError in error) {\n        errorString = `${error.name} [${error.code}]: ${error.message}`;\n      } else {\n        errorString = ErrorPrototypeToString(error);\n      }\n    } else {\n      var name = error.name || 'Error';\n      var message = error.message || '';\n      errorString = message ? name + \": \" + message : name;\n    }\n\n    var state = { nextPosition: null, curPosition: null };\n    var processedStack = [];\n    for (var i = stack.length - 1; i >= 0; i--) {\n      processedStack.push('\\n    at ' + wrapCallSite(stack[i], state));\n      state.nextPosition = state.curPosition;\n    }\n    state.curPosition = state.nextPosition = null;\n    return errorString + processedStack.reverse().join('');\n  }\n}\n\n// Generate position and snippet of original source with pointer\nfunction getErrorSource(error) {\n  var match = /\\n    at [^(]+ \\((.*):(\\d+):(\\d+)\\)/.exec(error.stack);\n  if (match) {\n    var source = match[1];\n    var line = +match[2];\n    var column = +match[3];\n\n    // Support the inline sourceContents inside the source map\n    var contents = getFileContentsCache(source);\n\n    const sourceAsPath = tryFileURLToPath(source);\n\n    // Support files on disk\n    if (!contents && fs && fs.existsSync(sourceAsPath)) {\n      try {\n        contents = fs.readFileSync(sourceAsPath, 'utf8');\n      } catch (er) {\n        contents = '';\n      }\n    }\n\n    // Format the line from the original source code like node does\n    if (contents) {\n      var code = contents.split(/(?:\\r\\n|\\r|\\n)/)[line - 1];\n      if (code) {\n        return source + ':' + line + '\\n' + code + '\\n' +\n          new Array(column).join(' ') + '^';\n      }\n    }\n  }\n  return null;\n}\n\nfunction printFatalErrorUponExit (error) {\n  var source = getErrorSource(error);\n\n  // Ensure error is printed synchronously and not truncated\n  if (process.stderr._handle && process.stderr._handle.setBlocking) {\n    process.stderr._handle.setBlocking(true);\n  }\n\n  if (source) {\n    console.error(source);\n  }\n\n  // Matches node's behavior for colorized output\n  console.error(\n    util.inspect(error, {\n      customInspect: false,\n      colors: process.stderr.isTTY\n    })\n  );\n}\n\nfunction shimEmitUncaughtException () {\n  const originalValue = process.emit;\n  var hook = sharedData.processEmitHook = {\n    enabled: true,\n    originalValue,\n    installedValue: undefined\n  };\n  var isTerminatingDueToFatalException = false;\n  var fatalException;\n\n  process.emit = sharedData.processEmitHook.installedValue = function (type) {\n    const hadListeners = originalValue.apply(this, arguments);\n    if(hook.enabled) {\n      if (type === 'uncaughtException' && !hadListeners) {\n        isTerminatingDueToFatalException = true;\n        fatalException = arguments[1];\n        process.exit(1);\n      }\n      if (type === 'exit' && isTerminatingDueToFatalException) {\n        printFatalErrorUponExit(fatalException);\n      }\n    }\n    return hadListeners;\n  };\n}\n\nvar originalRetrieveFileHandlers = sharedData.retrieveFileHandlers.slice(0);\nvar originalRetrieveMapHandlers = sharedData.retrieveMapHandlers.slice(0);\n\nexports.wrapCallSite = wrapCallSite;\nexports.getErrorSource = getErrorSource;\nexports.mapSourcePosition = mapSourcePosition;\nexports.retrieveSourceMap = retrieveSourceMap;\n\nexports.install = function(options) {\n  options = options || {};\n\n  if (options.environment) {\n    environment = options.environment;\n    if ([\"node\", \"browser\", \"auto\"].indexOf(environment) === -1) {\n      throw new Error(\"environment \" + environment + \" was unknown. Available options are {auto, browser, node}\")\n    }\n  }\n\n  // Use dynamicRequire to avoid including in browser bundles\n  var Module = dynamicRequire(module, 'module');\n\n  // Redirect subsequent imports of \"source-map-support\"\n  // to this package\n  const {redirectConflictingLibrary = true, onConflictingLibraryRedirect} = options;\n  if(redirectConflictingLibrary) {\n    if (!sharedData.moduleResolveFilenameHook) {\n      const originalValue = Module._resolveFilename;\n      const moduleResolveFilenameHook = sharedData.moduleResolveFilenameHook = {\n        enabled: true,\n        originalValue,\n        installedValue: undefined,\n      }\n      Module._resolveFilename = sharedData.moduleResolveFilenameHook.installedValue = function (request, parent, isMain, options) {\n        if (moduleResolveFilenameHook.enabled) {\n          // Match all source-map-support entrypoints: source-map-support, source-map-support/register\n          let requestRedirect;\n          if (request === 'source-map-support') {\n            requestRedirect = './';\n          } else if (request === 'source-map-support/register') {\n            requestRedirect = './register';\n          }\n\n          if (requestRedirect !== undefined) {\n              const newRequest = require.resolve(requestRedirect);\n              for (const cb of sharedData.onConflictingLibraryRedirectArr) {\n                cb(request, parent, isMain, options, newRequest);\n              }\n              request = newRequest;\n          }\n        }\n        \n        return originalValue.call(this, request, parent, isMain, options);\n      }\n    } \n    if (onConflictingLibraryRedirect) {\n      sharedData.onConflictingLibraryRedirectArr.push(onConflictingLibraryRedirect);\n    }\n  }\n\n  // Allow sources to be found by methods other than reading the files\n  // directly from disk.\n  if (options.retrieveFile) {\n    if (options.overrideRetrieveFile) {\n      sharedData.retrieveFileHandlers.length = 0;\n    }\n\n    sharedData.retrieveFileHandlers.unshift(options.retrieveFile);\n  }\n\n  // Allow source maps to be found by methods other than reading the files\n  // directly from disk.\n  if (options.retrieveSourceMap) {\n    if (options.overrideRetrieveSourceMap) {\n      sharedData.retrieveMapHandlers.length = 0;\n    }\n\n    sharedData.retrieveMapHandlers.unshift(options.retrieveSourceMap);\n  }\n\n  // Support runtime transpilers that include inline source maps\n  if (options.hookRequire && !isInBrowser()) {\n    var $compile = Module.prototype._compile;\n\n    if (!$compile.__sourceMapSupport) {\n      Module.prototype._compile = function(content, filename) {\n        setFileContentsCache(filename, content);\n        setSourceMapCache(filename, undefined);\n        return $compile.call(this, content, filename);\n      };\n\n      Module.prototype._compile.__sourceMapSupport = true;\n    }\n  }\n\n  // Configure options\n  if (!sharedData.emptyCacheBetweenOperations) {\n    sharedData.emptyCacheBetweenOperations = 'emptyCacheBetweenOperations' in options ?\n      options.emptyCacheBetweenOperations : false;\n  }\n\n\n  // Install the error reformatter\n  if (!sharedData.errorPrepareStackTraceHook) {\n    const originalValue = Error.prepareStackTrace;\n    sharedData.errorPrepareStackTraceHook = {\n      enabled: true,\n      originalValue,\n      installedValue: undefined\n    };\n    Error.prepareStackTrace = sharedData.errorPrepareStackTraceHook.installedValue = createPrepareStackTrace(sharedData.errorPrepareStackTraceHook);\n  }\n\n  if (!sharedData.processEmitHook) {\n    var installHandler = 'handleUncaughtExceptions' in options ?\n      options.handleUncaughtExceptions : true;\n\n    // Do not override 'uncaughtException' with our own handler in Node.js\n    // Worker threads. Workers pass the error to the main thread as an event,\n    // rather than printing something to stderr and exiting.\n    try {\n      // We need to use `dynamicRequire` because `require` on it's own will be optimized by WebPack/Browserify.\n      var worker_threads = dynamicRequire(module, 'worker_threads');\n      if (worker_threads.isMainThread === false) {\n        installHandler = false;\n      }\n    } catch(e) {}\n\n    // Provide the option to not install the uncaught exception handler. This is\n    // to support other uncaught exception handlers (in test frameworks, for\n    // example). If this handler is not installed and there are no other uncaught\n    // exception handlers, uncaught exceptions will be caught by node's built-in\n    // exception handler and the process will still be terminated. However, the\n    // generated JavaScript code will be shown above the stack trace instead of\n    // the original source code.\n    if (installHandler && hasGlobalProcessEventEmitter()) {\n      shimEmitUncaughtException();\n    }\n  }\n};\n\nexports.uninstall = function() {\n  if(sharedData.processEmitHook) {\n    // Disable behavior\n    sharedData.processEmitHook.enabled = false;\n    // If possible, remove our hook function.  May not be possible if subsequent third-party hooks have wrapped around us.\n    if(process.emit === sharedData.processEmitHook.installedValue) {\n      process.emit = sharedData.processEmitHook.originalValue;\n    }\n    sharedData.processEmitHook = undefined;\n  }\n  if(sharedData.errorPrepareStackTraceHook) {\n    // Disable behavior\n    sharedData.errorPrepareStackTraceHook.enabled = false;\n    // If possible or necessary, remove our hook function.\n    // In vanilla environments, prepareStackTrace is `undefined`.\n    // We cannot delegate to `undefined` the way we can to a function w/`.apply()`; our only option is to remove the function.\n    // If we are the *first* hook installed, and another was installed on top of us, we have no choice but to remove both.\n    if(Error.prepareStackTrace === sharedData.errorPrepareStackTraceHook.installedValue || typeof sharedData.errorPrepareStackTraceHook.originalValue !== 'function') {\n      Error.prepareStackTrace = sharedData.errorPrepareStackTraceHook.originalValue;\n    }\n    sharedData.errorPrepareStackTraceHook = undefined;\n  }\n  if (sharedData.moduleResolveFilenameHook) {\n    // Disable behavior\n    sharedData.moduleResolveFilenameHook.enabled = false;\n    // If possible, remove our hook function.  May not be possible if subsequent third-party hooks have wrapped around us.\n    var Module = dynamicRequire(module, 'module');\n    if(Module._resolveFilename === sharedData.moduleResolveFilenameHook.installedValue) {\n      Module._resolveFilename = sharedData.moduleResolveFilenameHook.originalValue;\n    }\n    sharedData.moduleResolveFilenameHook = undefined;\n  }\n  sharedData.onConflictingLibraryRedirectArr.length = 0;\n}\n\nexports.resetRetrieveHandlers = function() {\n  sharedData.retrieveFileHandlers.length = 0;\n  sharedData.retrieveMapHandlers.length = 0;\n}\n","// Copied from https://raw.githubusercontent.com/nodejs/node/v15.3.0/lib/internal/modules/esm/resolve.js\n\n'use strict';\n\nconst {versionGteLt} = require('../dist/util');\n\n// Test for node >14.13.1 || (>=12.20.0 && <13)\nconst builtinModuleProtocol =\n  versionGteLt(process.versions.node, '14.13.1') ||\n  versionGteLt(process.versions.node, '12.20.0', '13.0.0')\n    ? 'node:'\n    : 'nodejs:';\n\nconst {\n  ArrayIsArray,\n  ArrayPrototypeJoin,\n  ArrayPrototypeShift,\n  JSONParse,\n  JSONStringify,\n  ObjectFreeze,\n  ObjectGetOwnPropertyNames,\n  ObjectPrototypeHasOwnProperty,\n  RegExpPrototypeTest,\n  SafeMap,\n  SafeSet,\n  StringPrototypeEndsWith,\n  StringPrototypeIndexOf,\n  StringPrototypeLastIndexOf,\n  StringPrototypeReplace,\n  StringPrototypeSlice,\n  StringPrototypeSplit,\n  StringPrototypeStartsWith,\n  StringPrototypeSubstr,\n} = require('./node-primordials');\n\n// const internalFS = require('internal/fs/utils');\nconst Module = require('module');\nconst { NativeModule } = require('./node-nativemodule');\nconst {\n  realpathSync,\n  statSync,\n  Stats,\n} = require('fs');\n// const { getOptionValue } = require('internal/options');\nconst { getOptionValue } = require('./node-options');\n// // Do not eagerly grab .manifest, it may be in TDZ\n// const policy = getOptionValue('--experimental-policy') ?\n//   require('internal/process/policy') :\n//   null;\n// disabled for now.  I am not sure if/how we should support this\nconst policy = null;\nconst { sep, relative } = require('path');\nconst preserveSymlinks = getOptionValue('--preserve-symlinks');\nconst preserveSymlinksMain = getOptionValue('--preserve-symlinks-main');\nconst typeFlag = getOptionValue('--input-type');\n// const { URL, pathToFileURL, fileURLToPath } = require('internal/url');\nconst { URL, pathToFileURL, fileURLToPath } = require('url');\nconst {\n  ERR_INPUT_TYPE_NOT_ALLOWED,\n  ERR_INVALID_ARG_VALUE,\n  ERR_INVALID_MODULE_SPECIFIER,\n  ERR_INVALID_PACKAGE_CONFIG,\n  ERR_INVALID_PACKAGE_TARGET,\n  ERR_MANIFEST_DEPENDENCY_MISSING,\n  ERR_MODULE_NOT_FOUND,\n  ERR_PACKAGE_IMPORT_NOT_DEFINED,\n  ERR_PACKAGE_PATH_NOT_EXPORTED,\n  ERR_UNSUPPORTED_DIR_IMPORT,\n  ERR_UNSUPPORTED_ESM_URL_SCHEME,\n// } = require('internal/errors').codes;\n} = require('./node-internal-errors').codes;\n\n// const { Module: CJSModule } = require('internal/modules/cjs/loader');\nconst CJSModule = Module;\n\n// const packageJsonReader = require('internal/modules/package_json_reader');\nconst packageJsonReader = require('./node-internal-modules-package_json_reader');\nconst userConditions = getOptionValue('--conditions');\nconst DEFAULT_CONDITIONS = ObjectFreeze(['node', 'import', ...userConditions]);\nconst DEFAULT_CONDITIONS_SET = new SafeSet(DEFAULT_CONDITIONS);\n\nconst pendingDeprecation = getOptionValue('--pending-deprecation');\n\n/**\n * @param {{\n *  extensions: import('../src/file-extensions').Extensions,\n *  preferTsExts: boolean | undefined;\n *  tsNodeExperimentalSpecifierResolution: import('../src/index').ExperimentalSpecifierResolution | undefined;\n * }} opts\n */\nfunction createResolve(opts) {\n// TODO receive cached fs implementations here\nconst {preferTsExts, tsNodeExperimentalSpecifierResolution, extensions} = opts;\nconst esrnExtensions = extensions.experimentalSpecifierResolutionAddsIfOmitted;\nconst {legacyMainResolveAddsIfOmitted, replacementsForCjs, replacementsForJs, replacementsForMjs, replacementsForJsx} = extensions;\n// const experimentalSpecifierResolution = tsNodeExperimentalSpecifierResolution ?? getOptionValue('--experimental-specifier-resolution');\nconst experimentalSpecifierResolution = tsNodeExperimentalSpecifierResolution != null ? tsNodeExperimentalSpecifierResolution : getOptionValue('--experimental-specifier-resolution');\n\nconst emittedPackageWarnings = new SafeSet();\nfunction emitFolderMapDeprecation(match, pjsonUrl, isExports, base) {\n  const pjsonPath = fileURLToPath(pjsonUrl);\n  if (!pendingDeprecation) {\n    const nodeModulesIndex = StringPrototypeLastIndexOf(pjsonPath,\n                                                        '/node_modules/');\n    if (nodeModulesIndex !== -1) {\n      const afterNodeModulesPath = StringPrototypeSlice(pjsonPath,\n                                                        nodeModulesIndex + 14,\n                                                        -13);\n      try {\n        const { packageSubpath } = parsePackageName(afterNodeModulesPath);\n        if (packageSubpath === '.')\n          return;\n      } catch {}\n    }\n  }\n  if (emittedPackageWarnings.has(pjsonPath + '|' + match))\n    return;\n  emittedPackageWarnings.add(pjsonPath + '|' + match);\n  process.emitWarning(\n    `Use of deprecated folder mapping \"${match}\" in the ${isExports ?\n      '\"exports\"' : '\"imports\"'} field module resolution of the package at ${\n      pjsonPath}${base ? ` imported from ${fileURLToPath(base)}` : ''}.\\n` +\n      `Update this package.json to use a subpath pattern like \"${match}*\".`,\n    'DeprecationWarning',\n    'DEP0148'\n  );\n}\n\nfunction getConditionsSet(conditions) {\n  if (conditions !== undefined && conditions !== DEFAULT_CONDITIONS) {\n    if (!ArrayIsArray(conditions)) {\n      throw new ERR_INVALID_ARG_VALUE('conditions', conditions,\n                                      'expected an array');\n    }\n    return new SafeSet(conditions);\n  }\n  return DEFAULT_CONDITIONS_SET;\n}\n\nconst realpathCache = new SafeMap();\nconst packageJSONCache = new SafeMap();  /* string -> PackageConfig */\n\nconst statSupportsThrowIfNoEntry = versionGteLt(process.versions.node, '15.3.0') ||\n  versionGteLt(process.versions.node, '14.17.0', '15.0.0');\nconst tryStatSync = statSupportsThrowIfNoEntry ? tryStatSyncWithoutErrors : tryStatSyncWithErrors;\nconst statsIfNotFound = new Stats();\nfunction tryStatSyncWithoutErrors(path) {\n  const stats = statSync(path, { throwIfNoEntry: false });\n  if(stats != null) return stats;\n  return statsIfNotFound;\n}\nfunction tryStatSyncWithErrors(path) {\n  try {\n    return statSync(path);\n  } catch {\n    return statsIfNotFound;\n  }\n}\n\nfunction getPackageConfig(path, specifier, base) {\n  const existing = packageJSONCache.get(path);\n  if (existing !== undefined) {\n    return existing;\n  }\n  const source = packageJsonReader.read(path).string;\n  if (source === undefined) {\n    const packageConfig = {\n      pjsonPath: path,\n      exists: false,\n      main: undefined,\n      name: undefined,\n      type: 'none',\n      exports: undefined,\n      imports: undefined,\n    };\n    packageJSONCache.set(path, packageConfig);\n    return packageConfig;\n  }\n\n  let packageJSON;\n  try {\n    packageJSON = JSONParse(source);\n  } catch (error) {\n    throw new ERR_INVALID_PACKAGE_CONFIG(\n      path,\n      (base ? `\"${specifier}\" from ` : '') + fileURLToPath(base || specifier),\n      error.message\n    );\n  }\n\n  let { imports, main, name, type } = packageJSON;\n  const { exports } = packageJSON;\n  if (typeof imports !== 'object' || imports === null) imports = undefined;\n  if (typeof main !== 'string') main = undefined;\n  if (typeof name !== 'string') name = undefined;\n  // Ignore unknown types for forwards compatibility\n  if (type !== 'module' && type !== 'commonjs') type = 'none';\n\n  const packageConfig = {\n    pjsonPath: path,\n    exists: true,\n    main,\n    name,\n    type,\n    exports,\n    imports,\n  };\n  packageJSONCache.set(path, packageConfig);\n  return packageConfig;\n}\n\nfunction getPackageScopeConfig(resolved) {\n  let packageJSONUrl = new URL('./package.json', resolved);\n  while (true) {\n    const packageJSONPath = packageJSONUrl.pathname;\n    if (StringPrototypeEndsWith(packageJSONPath, 'node_modules/package.json'))\n      break;\n    const packageConfig = getPackageConfig(fileURLToPath(packageJSONUrl),\n                                           resolved);\n    if (packageConfig.exists) return packageConfig;\n\n    const lastPackageJSONUrl = packageJSONUrl;\n    packageJSONUrl = new URL('../package.json', packageJSONUrl);\n\n    // Terminates at root where ../package.json equals ../../package.json\n    // (can't just check \"/package.json\" for Windows support).\n    if (packageJSONUrl.pathname === lastPackageJSONUrl.pathname) break;\n  }\n  const packageJSONPath = fileURLToPath(packageJSONUrl);\n  const packageConfig = {\n    pjsonPath: packageJSONPath,\n    exists: false,\n    main: undefined,\n    name: undefined,\n    type: 'none',\n    exports: undefined,\n    imports: undefined,\n  };\n  packageJSONCache.set(packageJSONPath, packageConfig);\n  return packageConfig;\n}\n\n/*\n * Legacy CommonJS main resolution:\n * 1. let M = pkg_url + (json main field)\n * 2. TRY(M, M.js, M.json, M.node)\n * 3. TRY(M/index.js, M/index.json, M/index.node)\n * 4. TRY(pkg_url/index.js, pkg_url/index.json, pkg_url/index.node)\n * 5. NOT_FOUND\n */\nfunction fileExists(url) {\n  return tryStatSync(fileURLToPath(url)).isFile();\n}\n\nfunction legacyMainResolve(packageJSONUrl, packageConfig, base) {\n  let guess;\n  if (packageConfig.main !== undefined) {\n    // Note: fs check redundances will be handled by Descriptor cache here.\n    if(guess = resolveReplacementExtensions(new URL(`./${packageConfig.main}`, packageJSONUrl))) {\n      return guess;\n    }\n    if (fileExists(guess = new URL(`./${packageConfig.main}`,\n                                   packageJSONUrl))) {\n      return guess;\n    }\n    for(const extension of legacyMainResolveAddsIfOmitted) {\n      if (fileExists(guess = new URL(`./${packageConfig.main}${extension}`,\n                                    packageJSONUrl))) {\n        return guess;\n      }\n    }\n    for(const extension of legacyMainResolveAddsIfOmitted) {\n      if (fileExists(guess = new URL(`./${packageConfig.main}/index${extension}`,\n                                    packageJSONUrl))) {\n        return guess;\n      }\n    }\n    // Fallthrough.\n  }\n  for(const extension of legacyMainResolveAddsIfOmitted) {\n    if (fileExists(guess = new URL(`./index${extension}`, packageJSONUrl))) {\n      return guess;\n    }\n  }\n  // Not found.\n  throw new ERR_MODULE_NOT_FOUND(\n    fileURLToPath(new URL('.', packageJSONUrl)), fileURLToPath(base));\n}\n\n/** attempts replacement extensions, then tries exact name, then attempts appending extensions */\nfunction resolveExtensionsWithTryExactName(search) {\n  const resolvedReplacementExtension = resolveReplacementExtensions(search);\n  if(resolvedReplacementExtension) return resolvedReplacementExtension;\n  if (fileExists(search)) return search;\n  return resolveExtensions(search);\n}\n\n// This appends missing extensions\nfunction resolveExtensions(search) {\n  for (let i = 0; i < esrnExtensions.length; i++) {\n    const extension = esrnExtensions[i];\n    const guess = new URL(`${search.pathname}${extension}`, search);\n    if (fileExists(guess)) return guess;\n  }\n  return undefined;\n}\n\n/** This replaces JS with TS extensions */\nfunction resolveReplacementExtensions(search) {\n  const lastDotIndex = search.pathname.lastIndexOf('.');\n  if(lastDotIndex >= 0) {\n    const ext = search.pathname.slice(lastDotIndex);\n    if (ext === '.js' || ext === '.jsx' || ext === '.mjs' || ext === '.cjs') {\n      const pathnameWithoutExtension = search.pathname.slice(0, lastDotIndex);\n      const replacementExts =\n        ext === '.js' ? replacementsForJs\n        : ext === '.jsx' ? replacementsForJsx\n        : ext === '.mjs' ? replacementsForMjs\n        : replacementsForCjs;\n      const guess = new URL(search.toString());\n      for (let i = 0; i < replacementExts.length; i++) {\n        const extension = replacementExts[i];\n        guess.pathname = `${pathnameWithoutExtension}${extension}`;\n        if (fileExists(guess)) return guess;\n      }\n    }\n  }\n  return undefined;\n}\n\nfunction resolveIndex(search) {\n  return resolveExtensions(new URL('index', search));\n}\n\nconst encodedSepRegEx = /%2F|%2C/i;\nfunction finalizeResolution(resolved, base) {\n  if (RegExpPrototypeTest(encodedSepRegEx, resolved.pathname))\n    throw new ERR_INVALID_MODULE_SPECIFIER(\n      resolved.pathname, 'must not include encoded \"/\" or \"\\\\\" characters',\n      fileURLToPath(base));\n\n  if (experimentalSpecifierResolution === 'node') {\n    const path = fileURLToPath(resolved);\n    let file = resolveExtensionsWithTryExactName(resolved);\n    if (file !== undefined) return file;\n    if (!StringPrototypeEndsWith(path, '/')) {\n      file = resolveIndex(new URL(`${resolved}/`));\n      if (file !== undefined) return file;\n    } else {\n      return resolveIndex(resolved) || resolved;\n    }\n    throw new ERR_MODULE_NOT_FOUND(\n      resolved.pathname, fileURLToPath(base), 'module');\n  }\n\n  const file = resolveReplacementExtensions(resolved) || resolved;\n  const path = fileURLToPath(file);\n\n  const stats = tryStatSync(StringPrototypeEndsWith(path, '/') ?\n    StringPrototypeSlice(path, -1) : path);\n  if (stats.isDirectory()) {\n    const err = new ERR_UNSUPPORTED_DIR_IMPORT(path, fileURLToPath(base));\n    err.url = String(resolved);\n    throw err;\n  } else if (!stats.isFile()) {\n    throw new ERR_MODULE_NOT_FOUND(\n      path || resolved.pathname, fileURLToPath(base), 'module');\n  }\n\n  return file;\n}\n\nfunction throwImportNotDefined(specifier, packageJSONUrl, base) {\n  throw new ERR_PACKAGE_IMPORT_NOT_DEFINED(\n    specifier, packageJSONUrl && fileURLToPath(new URL('.', packageJSONUrl)),\n    fileURLToPath(base));\n}\n\nfunction throwExportsNotFound(subpath, packageJSONUrl, base) {\n  throw new ERR_PACKAGE_PATH_NOT_EXPORTED(\n    fileURLToPath(new URL('.', packageJSONUrl)), subpath,\n    base && fileURLToPath(base));\n}\n\nfunction throwInvalidSubpath(subpath, packageJSONUrl, internal, base) {\n  const reason = `request is not a valid subpath for the \"${internal ?\n    'imports' : 'exports'}\" resolution of ${fileURLToPath(packageJSONUrl)}`;\n  throw new ERR_INVALID_MODULE_SPECIFIER(subpath, reason,\n                                         base && fileURLToPath(base));\n}\n\nfunction throwInvalidPackageTarget(\n  subpath, target, packageJSONUrl, internal, base) {\n  if (typeof target === 'object' && target !== null) {\n    target = JSONStringify(target, null, '');\n  } else {\n    target = `${target}`;\n  }\n  throw new ERR_INVALID_PACKAGE_TARGET(\n    fileURLToPath(new URL('.', packageJSONUrl)), subpath, target,\n    internal, base && fileURLToPath(base));\n}\n\nconst invalidSegmentRegEx = /(^|\\\\|\\/)(\\.\\.?|node_modules)(\\\\|\\/|$)/;\nconst patternRegEx = /\\*/g;\n\nfunction resolvePackageTargetString(\n  target, subpath, match, packageJSONUrl, base, pattern, internal, conditions) {\n  if (subpath !== '' && !pattern && target[target.length - 1] !== '/')\n    throwInvalidPackageTarget(match, target, packageJSONUrl, internal, base);\n\n  if (!StringPrototypeStartsWith(target, './')) {\n    if (internal && !StringPrototypeStartsWith(target, '../') &&\n        !StringPrototypeStartsWith(target, '/')) {\n      let isURL = false;\n      try {\n        new URL(target);\n        isURL = true;\n      } catch {}\n      if (!isURL) {\n        const exportTarget = pattern ?\n          StringPrototypeReplace(target, patternRegEx, subpath) :\n          target + subpath;\n        return packageResolve(exportTarget, packageJSONUrl, conditions);\n      }\n    }\n    throwInvalidPackageTarget(match, target, packageJSONUrl, internal, base);\n  }\n\n  if (RegExpPrototypeTest(invalidSegmentRegEx, StringPrototypeSlice(target, 2)))\n    throwInvalidPackageTarget(match, target, packageJSONUrl, internal, base);\n\n  const resolved = new URL(target, packageJSONUrl);\n  const resolvedPath = resolved.pathname;\n  const packagePath = new URL('.', packageJSONUrl).pathname;\n\n  if (!StringPrototypeStartsWith(resolvedPath, packagePath))\n    throwInvalidPackageTarget(match, target, packageJSONUrl, internal, base);\n\n  if (subpath === '') return resolved;\n\n  if (RegExpPrototypeTest(invalidSegmentRegEx, subpath))\n    throwInvalidSubpath(match + subpath, packageJSONUrl, internal, base);\n\n  if (pattern)\n    return new URL(StringPrototypeReplace(resolved.href, patternRegEx,\n                                          subpath));\n  return new URL(subpath, resolved);\n}\n\n/**\n * @param {string} key\n * @returns {boolean}\n */\nfunction isArrayIndex(key) {\n  const keyNum = +key;\n  if (`${keyNum}` !== key) return false;\n  return keyNum >= 0 && keyNum < 0xFFFF_FFFF;\n}\n\nfunction resolvePackageTarget(packageJSONUrl, target, subpath, packageSubpath,\n                              base, pattern, internal, conditions) {\n  if (typeof target === 'string') {\n    return resolvePackageTargetString(\n      target, subpath, packageSubpath, packageJSONUrl, base, pattern, internal,\n      conditions);\n  } else if (ArrayIsArray(target)) {\n    if (target.length === 0)\n      return null;\n\n    let lastException;\n    for (let i = 0; i < target.length; i++) {\n      const targetItem = target[i];\n      let resolved;\n      try {\n        resolved = resolvePackageTarget(\n          packageJSONUrl, targetItem, subpath, packageSubpath, base, pattern,\n          internal, conditions);\n      } catch (e) {\n        lastException = e;\n        if (e.code === 'ERR_INVALID_PACKAGE_TARGET')\n          continue;\n        throw e;\n      }\n      if (resolved === undefined)\n        continue;\n      if (resolved === null) {\n        lastException = null;\n        continue;\n      }\n      return resolved;\n    }\n    if (lastException === undefined || lastException === null)\n      return lastException;\n    throw lastException;\n  } else if (typeof target === 'object' && target !== null) {\n    const keys = ObjectGetOwnPropertyNames(target);\n    for (let i = 0; i < keys.length; i++) {\n      const key = keys[i];\n      if (isArrayIndex(key)) {\n        throw new ERR_INVALID_PACKAGE_CONFIG(\n          fileURLToPath(packageJSONUrl), base,\n          '\"exports\" cannot contain numeric property keys.');\n      }\n    }\n    for (let i = 0; i < keys.length; i++) {\n      const key = keys[i];\n      if (key === 'default' || conditions.has(key)) {\n        const conditionalTarget = target[key];\n        const resolved = resolvePackageTarget(\n          packageJSONUrl, conditionalTarget, subpath, packageSubpath, base,\n          pattern, internal, conditions);\n        if (resolved === undefined)\n          continue;\n        return resolved;\n      }\n    }\n    return undefined;\n  } else if (target === null) {\n    return null;\n  }\n  throwInvalidPackageTarget(packageSubpath, target, packageJSONUrl, internal,\n                            base);\n}\n\nfunction isConditionalExportsMainSugar(exports, packageJSONUrl, base) {\n  if (typeof exports === 'string' || ArrayIsArray(exports)) return true;\n  if (typeof exports !== 'object' || exports === null) return false;\n\n  const keys = ObjectGetOwnPropertyNames(exports);\n  let isConditionalSugar = false;\n  let i = 0;\n  for (let j = 0; j < keys.length; j++) {\n    const key = keys[j];\n    const curIsConditionalSugar = key === '' || key[0] !== '.';\n    if (i++ === 0) {\n      isConditionalSugar = curIsConditionalSugar;\n    } else if (isConditionalSugar !== curIsConditionalSugar) {\n      throw new ERR_INVALID_PACKAGE_CONFIG(\n        fileURLToPath(packageJSONUrl), base,\n        '\"exports\" cannot contain some keys starting with \\'.\\' and some not.' +\n        ' The exports object must either be an object of package subpath keys' +\n        ' or an object of main entry condition name keys only.');\n    }\n  }\n  return isConditionalSugar;\n}\n\n/**\n * @param {URL} packageJSONUrl\n * @param {string} packageSubpath\n * @param {object} packageConfig\n * @param {string} base\n * @param {Set<string>} conditions\n * @returns {{resolved: URL, exact: boolean}}\n */\nfunction packageExportsResolve(\n  packageJSONUrl, packageSubpath, packageConfig, base, conditions) {\n  let exports = packageConfig.exports;\n  if (isConditionalExportsMainSugar(exports, packageJSONUrl, base))\n    exports = { '.': exports };\n\n  if (ObjectPrototypeHasOwnProperty(exports, packageSubpath)) {\n    const target = exports[packageSubpath];\n    const resolved = resolvePackageTarget(\n      packageJSONUrl, target, '', packageSubpath, base, false, false, conditions\n    );\n    if (resolved === null || resolved === undefined)\n      throwExportsNotFound(packageSubpath, packageJSONUrl, base);\n    return { resolved, exact: true };\n  }\n\n  let bestMatch = '';\n  const keys = ObjectGetOwnPropertyNames(exports);\n  for (let i = 0; i < keys.length; i++) {\n    const key = keys[i];\n    if (key[key.length - 1] === '*' &&\n        StringPrototypeStartsWith(packageSubpath,\n                                  StringPrototypeSlice(key, 0, -1)) &&\n        packageSubpath.length >= key.length &&\n        key.length > bestMatch.length) {\n      bestMatch = key;\n    } else if (key[key.length - 1] === '/' &&\n      StringPrototypeStartsWith(packageSubpath, key) &&\n      key.length > bestMatch.length) {\n      bestMatch = key;\n    }\n  }\n\n  if (bestMatch) {\n    const target = exports[bestMatch];\n    const pattern = bestMatch[bestMatch.length - 1] === '*';\n    const subpath = StringPrototypeSubstr(packageSubpath, bestMatch.length -\n      (pattern ? 1 : 0));\n    const resolved = resolvePackageTarget(packageJSONUrl, target, subpath,\n                                          bestMatch, base, pattern, false,\n                                          conditions);\n    if (resolved === null || resolved === undefined)\n      throwExportsNotFound(packageSubpath, packageJSONUrl, base);\n    if (!pattern)\n      emitFolderMapDeprecation(bestMatch, packageJSONUrl, true, base);\n    return { resolved, exact: pattern };\n  }\n\n  throwExportsNotFound(packageSubpath, packageJSONUrl, base);\n}\n\nfunction packageImportsResolve(name, base, conditions) {\n  if (name === '#' || StringPrototypeStartsWith(name, '#/')) {\n    const reason = 'is not a valid internal imports specifier name';\n    throw new ERR_INVALID_MODULE_SPECIFIER(name, reason, fileURLToPath(base));\n  }\n  let packageJSONUrl;\n  const packageConfig = getPackageScopeConfig(base);\n  if (packageConfig.exists) {\n    packageJSONUrl = pathToFileURL(packageConfig.pjsonPath);\n    const imports = packageConfig.imports;\n    if (imports) {\n      if (ObjectPrototypeHasOwnProperty(imports, name)) {\n        const resolved = resolvePackageTarget(\n          packageJSONUrl, imports[name], '', name, base, false, true, conditions\n        );\n        if (resolved !== null)\n          return { resolved, exact: true };\n      } else {\n        let bestMatch = '';\n        const keys = ObjectGetOwnPropertyNames(imports);\n        for (let i = 0; i < keys.length; i++) {\n          const key = keys[i];\n          if (key[key.length - 1] === '*' &&\n              StringPrototypeStartsWith(name,\n                                        StringPrototypeSlice(key, 0, -1)) &&\n              name.length >= key.length &&\n              key.length > bestMatch.length) {\n            bestMatch = key;\n          } else if (key[key.length - 1] === '/' &&\n            StringPrototypeStartsWith(name, key) &&\n            key.length > bestMatch.length) {\n            bestMatch = key;\n          }\n        }\n\n        if (bestMatch) {\n          const target = imports[bestMatch];\n          const pattern = bestMatch[bestMatch.length - 1] === '*';\n          const subpath = StringPrototypeSubstr(name, bestMatch.length -\n            (pattern ? 1 : 0));\n          const resolved = resolvePackageTarget(\n            packageJSONUrl, target, subpath, bestMatch, base, pattern, true,\n            conditions);\n          if (resolved !== null) {\n            if (!pattern)\n              emitFolderMapDeprecation(bestMatch, packageJSONUrl, false, base);\n            return { resolved, exact: pattern };\n          }\n        }\n      }\n    }\n  }\n  throwImportNotDefined(name, packageJSONUrl, base);\n}\n\nfunction getPackageType(url) {\n  const packageConfig = getPackageScopeConfig(url);\n  return packageConfig.type;\n}\n\nfunction parsePackageName(specifier, base) {\n  let separatorIndex = StringPrototypeIndexOf(specifier, '/');\n  let validPackageName = true;\n  let isScoped = false;\n  if (specifier[0] === '@') {\n    isScoped = true;\n    if (separatorIndex === -1 || specifier.length === 0) {\n      validPackageName = false;\n    } else {\n      separatorIndex = StringPrototypeIndexOf(\n        specifier, '/', separatorIndex + 1);\n    }\n  }\n\n  const packageName = separatorIndex === -1 ?\n    specifier : StringPrototypeSlice(specifier, 0, separatorIndex);\n\n  // Package name cannot have leading . and cannot have percent-encoding or\n  // separators.\n  for (let i = 0; i < packageName.length; i++) {\n    if (packageName[i] === '%' || packageName[i] === '\\\\') {\n      validPackageName = false;\n      break;\n    }\n  }\n\n  if (!validPackageName) {\n    throw new ERR_INVALID_MODULE_SPECIFIER(\n      specifier, 'is not a valid package name', fileURLToPath(base));\n  }\n\n  const packageSubpath = '.' + (separatorIndex === -1 ? '' :\n    StringPrototypeSlice(specifier, separatorIndex));\n\n  return { packageName, packageSubpath, isScoped };\n}\n\n/**\n * @param {string} specifier\n * @param {URL} base\n * @param {Set<string>} conditions\n * @returns {URL}\n */\nfunction packageResolve(specifier, base, conditions) {\n  const { packageName, packageSubpath, isScoped } =\n    parsePackageName(specifier, base);\n\n  // ResolveSelf\n  const packageConfig = getPackageScopeConfig(base);\n  if (packageConfig.exists) {\n    const packageJSONUrl = pathToFileURL(packageConfig.pjsonPath);\n    if (packageConfig.name === packageName &&\n        packageConfig.exports !== undefined && packageConfig.exports !== null) {\n      return packageExportsResolve(\n        packageJSONUrl, packageSubpath, packageConfig, base, conditions\n      ).resolved;\n    }\n  }\n\n  let packageJSONUrl =\n    new URL('./node_modules/' + packageName + '/package.json', base);\n  let packageJSONPath = fileURLToPath(packageJSONUrl);\n  let lastPath;\n  do {\n    const stat = tryStatSync(StringPrototypeSlice(packageJSONPath, 0,\n                                                  packageJSONPath.length - 13));\n    if (!stat.isDirectory()) {\n      lastPath = packageJSONPath;\n      packageJSONUrl = new URL((isScoped ?\n        '../../../../node_modules/' : '../../../node_modules/') +\n        packageName + '/package.json', packageJSONUrl);\n      packageJSONPath = fileURLToPath(packageJSONUrl);\n      continue;\n    }\n\n    // Package match.\n    const packageConfig = getPackageConfig(packageJSONPath, specifier, base);\n    if (packageConfig.exports !== undefined && packageConfig.exports !== null)\n      return packageExportsResolve(\n        packageJSONUrl, packageSubpath, packageConfig, base, conditions\n      ).resolved;\n    if (packageSubpath === '.')\n      return legacyMainResolve(packageJSONUrl, packageConfig, base);\n    return new URL(packageSubpath, packageJSONUrl);\n    // Cross-platform root check.\n  } while (packageJSONPath.length !== lastPath.length);\n\n  // eslint can't handle the above code.\n  // eslint-disable-next-line no-unreachable\n  throw new ERR_MODULE_NOT_FOUND(packageName, fileURLToPath(base));\n}\n\nfunction isBareSpecifier(specifier) {\n  return specifier[0] && specifier[0] !== '/' && specifier[0] !== '.';\n}\n\nfunction isRelativeSpecifier(specifier) {\n  if (specifier[0] === '.') {\n    if (specifier.length === 1 || specifier[1] === '/') return true;\n    if (specifier[1] === '.') {\n      if (specifier.length === 2 || specifier[2] === '/') return true;\n    }\n  }\n  return false;\n}\n\nfunction shouldBeTreatedAsRelativeOrAbsolutePath(specifier) {\n  if (specifier === '') return false;\n  if (specifier[0] === '/') return true;\n  return isRelativeSpecifier(specifier);\n}\n\n/**\n * @param {string} specifier\n * @param {URL} base\n * @param {Set<string>} conditions\n * @returns {URL}\n */\nfunction moduleResolve(specifier, base, conditions) {\n  // Order swapped from spec for minor perf gain.\n  // Ok since relative URLs cannot parse as URLs.\n  let resolved;\n  if (shouldBeTreatedAsRelativeOrAbsolutePath(specifier)) {\n    resolved = new URL(specifier, base);\n  } else if (specifier[0] === '#') {\n    ({ resolved } = packageImportsResolve(specifier, base, conditions));\n  } else {\n    try {\n      resolved = new URL(specifier);\n    } catch {\n      resolved = packageResolve(specifier, base, conditions);\n    }\n  }\n  return finalizeResolution(resolved, base);\n}\n\n/**\n * Try to resolve an import as a CommonJS module\n * @param {string} specifier\n * @param {string} parentURL\n * @returns {boolean|string}\n */\nfunction resolveAsCommonJS(specifier, parentURL) {\n  try {\n    const parent = fileURLToPath(parentURL);\n    const tmpModule = new CJSModule(parent, null);\n    tmpModule.paths = CJSModule._nodeModulePaths(parent);\n\n    let found = CJSModule._resolveFilename(specifier, tmpModule, false);\n\n    // If it is a relative specifier return the relative path\n    // to the parent\n    if (isRelativeSpecifier(specifier)) {\n      found = relative(parent, found);\n      // Add '.separator if the path does not start with '..separator'\n      // This should be a safe assumption because when loading\n      // esm modules there should be always a file specified so\n      // there should not be a specifier like '..' or '.'\n      if (!StringPrototypeStartsWith(found, `..${sep}`)) {\n        found = `.${sep}${found}`;\n      }\n    } else if (isBareSpecifier(specifier)) {\n      // If it is a bare specifier return the relative path within the\n      // module\n      const pkg = StringPrototypeSplit(specifier, '/')[0];\n      const index = StringPrototypeIndexOf(found, pkg);\n      if (index !== -1) {\n        found = StringPrototypeSlice(found, index);\n      }\n    }\n    // Normalize the path separator to give a valid suggestion\n    // on Windows\n    if (process.platform === 'win32') {\n      found = StringPrototypeReplace(found, new RegExp(`\\\\${sep}`, 'g'), '/');\n    }\n    return found;\n  } catch {\n    return false;\n  }\n}\n\nfunction defaultResolve(specifier, context = {}, defaultResolveUnused) {\n  let { parentURL, conditions } = context;\n  if (parentURL && policy != null && policy.manifest) {\n    const redirects = policy.manifest.getDependencyMapper(parentURL);\n    if (redirects) {\n      const { resolve, reaction } = redirects;\n      const destination = resolve(specifier, new SafeSet(conditions));\n      let missing = true;\n      if (destination === true) {\n        missing = false;\n      } else if (destination) {\n        const href = destination.href;\n        return { url: href };\n      }\n      if (missing) {\n        reaction(new ERR_MANIFEST_DEPENDENCY_MISSING(\n          parentURL,\n          specifier,\n          ArrayPrototypeJoin([...conditions], ', '))\n        );\n      }\n    }\n  }\n  let parsed;\n  try {\n    parsed = new URL(specifier);\n    if (parsed.protocol === 'data:') {\n      return {\n        url: specifier\n      };\n    }\n  } catch {}\n  if (parsed && parsed.protocol === builtinModuleProtocol)\n    return { url: specifier };\n  if (parsed && parsed.protocol !== 'file:' && parsed.protocol !== 'data:')\n    throw new ERR_UNSUPPORTED_ESM_URL_SCHEME(parsed);\n  if (NativeModule.canBeRequiredByUsers(specifier)) {\n    return {\n      url: builtinModuleProtocol + specifier\n    };\n  }\n  if (parentURL && StringPrototypeStartsWith(parentURL, 'data:')) {\n    // This is gonna blow up, we want the error\n    new URL(specifier, parentURL);\n  }\n\n  const isMain = parentURL === undefined;\n  if (isMain) {\n    parentURL = pathToFileURL(`${process.cwd()}/`).href;\n\n    // This is the initial entry point to the program, and --input-type has\n    // been passed as an option; but --input-type can only be used with\n    // --eval, --print or STDIN string input. It is not allowed with file\n    // input, to avoid user confusion over how expansive the effect of the\n    // flag should be (i.e. entry point only, package scope surrounding the\n    // entry point, etc.).\n    if (typeFlag)\n      throw new ERR_INPUT_TYPE_NOT_ALLOWED();\n  }\n\n  conditions = getConditionsSet(conditions);\n  let url;\n  try {\n    url = moduleResolve(specifier, parentURL, conditions);\n  } catch (error) {\n    // Try to give the user a hint of what would have been the\n    // resolved CommonJS module\n    if (error.code === 'ERR_MODULE_NOT_FOUND' ||\n        error.code === 'ERR_UNSUPPORTED_DIR_IMPORT') {\n      if (StringPrototypeStartsWith(specifier, 'file://')) {\n        specifier = fileURLToPath(specifier);\n      }\n      const found = resolveAsCommonJS(specifier, parentURL);\n      if (found) {\n        // Modify the stack and message string to include the hint\n        const lines = StringPrototypeSplit(error.stack, '\\n');\n        const hint = `Did you mean to import ${found}?`;\n        error.stack =\n          ArrayPrototypeShift(lines) + '\\n' +\n          hint + '\\n' +\n          ArrayPrototypeJoin(lines, '\\n');\n        error.message += `\\n${hint}`;\n      }\n    }\n    throw error;\n  }\n\n  if (isMain ? !preserveSymlinksMain : !preserveSymlinks) {\n    const urlPath = fileURLToPath(url);\n    const real = realpathSync(urlPath, {\n      // [internalFS.realpathCacheKey]: realpathCache\n    });\n    const old = url;\n    url = pathToFileURL(\n      real + (StringPrototypeEndsWith(urlPath, sep) ? '/' : ''));\n    url.search = old.search;\n    url.hash = old.hash;\n  }\n\n  return { url: `${url}` };\n}\n\nreturn {\n  DEFAULT_CONDITIONS,\n  defaultResolve,\n  encodedSepRegEx,\n  getPackageType,\n  packageExportsResolve,\n  packageImportsResolve\n};\n}\nmodule.exports = {\n  createResolve\n};\n","// Copied from https://raw.githubusercontent.com/nodejs/node/v15.3.0/lib/internal/modules/esm/get_format.js\n\n'use strict';\nconst {\n  RegExpPrototypeExec,\n  StringPrototypeStartsWith,\n} = require('./node-primordials');\nconst { extname } = require('path');\nconst { getOptionValue } = require('./node-options');\n\nconst [nodeMajor, nodeMinor] = process.versions.node.split('.').map(s => parseInt(s, 10));\nconst experimentalJsonModules =\n  nodeMajor > 17\n  || (nodeMajor === 17 && nodeMinor >= 5)\n  || (nodeMajor === 16 && nodeMinor >= 15)\n  || getOptionValue('--experimental-json-modules');\nconst experimentalWasmModules = getOptionValue('--experimental-wasm-modules');\nconst { URL, fileURLToPath } = require('url');\nconst { ERR_UNKNOWN_FILE_EXTENSION } = require('./node-internal-errors').codes;\n\nconst extensionFormatMap = {\n  '__proto__': null,\n  '.cjs': 'commonjs',\n  '.js': 'module',\n  '.mjs': 'module'\n};\n\nconst legacyExtensionFormatMap = {\n  '__proto__': null,\n  '.cjs': 'commonjs',\n  '.js': 'commonjs',\n  '.json': 'commonjs',\n  '.mjs': 'module',\n  '.node': 'commonjs'\n};\n\nif (experimentalWasmModules)\n  extensionFormatMap['.wasm'] = legacyExtensionFormatMap['.wasm'] = 'wasm';\n\nif (experimentalJsonModules)\n  extensionFormatMap['.json'] = legacyExtensionFormatMap['.json'] = 'json';\n\n/**\n *\n * @param {'node' | 'explicit'} [tsNodeExperimentalSpecifierResolution]\n * @param {ReturnType<\n *  typeof import('../dist-raw/node-internal-modules-esm-resolve').createResolve\n * >} nodeEsmResolver\n */\nfunction createGetFormat(tsNodeExperimentalSpecifierResolution, nodeEsmResolver) {\n// const experimentalSpeciferResolution = tsNodeExperimentalSpecifierResolution ?? getOptionValue('--experimental-specifier-resolution');\nlet experimentalSpeciferResolution = tsNodeExperimentalSpecifierResolution != null ? tsNodeExperimentalSpecifierResolution : getOptionValue('--experimental-specifier-resolution');\nconst { getPackageType } = nodeEsmResolver;\n\n/**\n * @param {string} url\n * @param {{}} context\n * @param {any} defaultGetFormatUnused\n * @returns {ReturnType<import('../src/esm').NodeLoaderHooksAPI1.GetFormatHook>}\n */\nfunction defaultGetFormat(url, context, defaultGetFormatUnused) {\n  if (StringPrototypeStartsWith(url, 'node:')) {\n    return { format: 'builtin' };\n  }\n  const parsed = new URL(url);\n  if (parsed.protocol === 'data:') {\n    const [ , mime ] = RegExpPrototypeExec(\n      /^([^/]+\\/[^;,]+)(?:[^,]*?)(;base64)?,/,\n      parsed.pathname,\n    ) || [ null, null, null ];\n    const format = ({\n      '__proto__': null,\n      'text/javascript': 'module',\n      'application/json': experimentalJsonModules ? 'json' : null,\n      'application/wasm': experimentalWasmModules ? 'wasm' : null\n    })[mime] || null;\n    return { format };\n  } else if (parsed.protocol === 'file:') {\n    const ext = extname(parsed.pathname);\n    let format;\n    if (ext === '.js') {\n      format = getPackageType(parsed.href) === 'module' ? 'module' : 'commonjs';\n    } else {\n      format = extensionFormatMap[ext];\n    }\n    if (!format) {\n      if (experimentalSpeciferResolution === 'node') {\n        process.emitWarning(\n          'The Node.js specifier resolution in ESM is experimental.',\n          'ExperimentalWarning');\n        format = legacyExtensionFormatMap[ext];\n      } else {\n        throw new ERR_UNKNOWN_FILE_EXTENSION(ext, fileURLToPath(url));\n      }\n    }\n    return { format: format || null };\n  }\n  return { format: null };\n}\n\nreturn {defaultGetFormat};\n}\n\nmodule.exports = {\n  createGetFormat\n};\n","import { register, RegisterOptions, Service } from './index';\nimport {\n  parse as parseUrl,\n  format as formatUrl,\n  UrlWithStringQuery,\n  fileURLToPath,\n  pathToFileURL,\n} from 'url';\nimport { extname } from 'path';\nimport * as assert from 'assert';\nimport { normalizeSlashes, versionGteLt } from './util';\nimport { createRequire } from 'module';\n\n// Note: On Windows, URLs look like this: file:///D:/dev/@TypeStrong/ts-node-examples/foo.ts\n\n// NOTE ABOUT MULTIPLE EXPERIMENTAL LOADER APIS\n//\n// At the time of writing, this file implements 2x different loader APIs.\n// Node made a breaking change to the loader API in https://github.com/nodejs/node/pull/37468\n//\n// We check the node version number and export either the *old* or the *new* API.\n//\n// Today, we are implementing the *new* API on top of our implementation of the *old* API,\n// which relies on copy-pasted code from the *old* hooks implementation in node.\n//\n// In the future, we will likely invert this: we will copy-paste the *new* API implementation\n// from node, build our implementation of the *new* API on top of it, and implement the *old*\n// hooks API as a shim to the *new* API.\n\nexport interface NodeLoaderHooksAPI1 {\n  resolve: NodeLoaderHooksAPI1.ResolveHook;\n  getFormat: NodeLoaderHooksAPI1.GetFormatHook;\n  transformSource: NodeLoaderHooksAPI1.TransformSourceHook;\n}\nexport namespace NodeLoaderHooksAPI1 {\n  export type ResolveHook = NodeLoaderHooksAPI2.ResolveHook;\n  export type GetFormatHook = (\n    url: string,\n    context: {},\n    defaultGetFormat: GetFormatHook\n  ) => Promise<{ format: NodeLoaderHooksFormat }>;\n  export type TransformSourceHook = (\n    source: string | Buffer,\n    context: { url: string; format: NodeLoaderHooksFormat },\n    defaultTransformSource: NodeLoaderHooksAPI1.TransformSourceHook\n  ) => Promise<{ source: string | Buffer }>;\n}\n\nexport interface NodeLoaderHooksAPI2 {\n  resolve: NodeLoaderHooksAPI2.ResolveHook;\n  load: NodeLoaderHooksAPI2.LoadHook;\n}\nexport namespace NodeLoaderHooksAPI2 {\n  export type ResolveHook = (\n    specifier: string,\n    context: {\n      conditions?: NodeImportConditions;\n      importAssertions?: NodeImportAssertions;\n      parentURL: string;\n    },\n    defaultResolve: ResolveHook\n  ) => Promise<{\n    url: string;\n    format?: NodeLoaderHooksFormat;\n    shortCircuit?: boolean;\n  }>;\n  export type LoadHook = (\n    url: string,\n    context: {\n      format: NodeLoaderHooksFormat | null | undefined;\n      importAssertions?: NodeImportAssertions;\n    },\n    defaultLoad: NodeLoaderHooksAPI2['load']\n  ) => Promise<{\n    format: NodeLoaderHooksFormat;\n    source: string | Buffer | undefined;\n    shortCircuit?: boolean;\n  }>;\n  export type NodeImportConditions = unknown;\n  export interface NodeImportAssertions {\n    type?: 'json';\n  }\n}\n\nexport type NodeLoaderHooksFormat =\n  | 'builtin'\n  | 'commonjs'\n  | 'dynamic'\n  | 'json'\n  | 'module'\n  | 'wasm';\n\nexport type NodeImportConditions = unknown;\nexport interface NodeImportAssertions {\n  type?: 'json';\n}\n\n// The hooks API changed in node version X so we need to check for backwards compatibility.\nconst newHooksAPI = versionGteLt(process.versions.node, '16.12.0');\n\n/** @internal */\nexport function filterHooksByAPIVersion(\n  hooks: NodeLoaderHooksAPI1 & NodeLoaderHooksAPI2\n): NodeLoaderHooksAPI1 | NodeLoaderHooksAPI2 {\n  const { getFormat, load, resolve, transformSource } = hooks;\n  // Explicit return type to avoid TS's non-ideal inferred type\n  const hooksAPI: NodeLoaderHooksAPI1 | NodeLoaderHooksAPI2 = newHooksAPI\n    ? { resolve, load, getFormat: undefined, transformSource: undefined }\n    : { resolve, getFormat, transformSource, load: undefined };\n  return hooksAPI;\n}\n\n/** @internal */\nexport function registerAndCreateEsmHooks(opts?: RegisterOptions) {\n  // Automatically performs registration just like `-r ts-node/register`\n  const tsNodeInstance = register(opts);\n\n  return createEsmHooks(tsNodeInstance);\n}\n\nexport function createEsmHooks(tsNodeService: Service) {\n  tsNodeService.enableExperimentalEsmLoaderInterop();\n\n  // Custom implementation that considers additional file extensions and automatically adds file extensions\n  const nodeResolveImplementation = tsNodeService.getNodeEsmResolver();\n  const nodeGetFormatImplementation = tsNodeService.getNodeEsmGetFormat();\n  const extensions = tsNodeService.extensions;\n\n  const hooksAPI = filterHooksByAPIVersion({\n    resolve,\n    load,\n    getFormat,\n    transformSource,\n  });\n\n  function isFileUrlOrNodeStyleSpecifier(parsed: UrlWithStringQuery) {\n    // We only understand file:// URLs, but in node, the specifier can be a node-style `./foo` or `foo`\n    const { protocol } = parsed;\n    return protocol === null || protocol === 'file:';\n  }\n\n  /**\n   * Named \"probably\" as a reminder that this is a guess.\n   * node does not explicitly tell us if we're resolving the entrypoint or not.\n   */\n  function isProbablyEntrypoint(specifier: string, parentURL: string) {\n    return parentURL === undefined && specifier.startsWith('file://');\n  }\n  // Side-channel between `resolve()` and `load()` hooks\n  const rememberIsProbablyEntrypoint = new Set();\n  const rememberResolvedViaCommonjsFallback = new Set();\n\n  async function resolve(\n    specifier: string,\n    context: { parentURL: string },\n    defaultResolve: typeof resolve\n  ): Promise<{ url: string; format?: NodeLoaderHooksFormat }> {\n    const defer = async () => {\n      const r = await defaultResolve(specifier, context, defaultResolve);\n      return r;\n    };\n    // See: https://github.com/nodejs/node/discussions/41711\n    // nodejs will likely implement a similar fallback.  Till then, we can do our users a favor and fallback today.\n    async function entrypointFallback(\n      cb: () => ReturnType<typeof resolve> | Awaited<ReturnType<typeof resolve>>\n    ): ReturnType<typeof resolve> {\n      try {\n        const resolution = await cb();\n        if (\n          resolution?.url &&\n          isProbablyEntrypoint(specifier, context.parentURL)\n        )\n          rememberIsProbablyEntrypoint.add(resolution.url);\n        return resolution;\n      } catch (esmResolverError) {\n        if (!isProbablyEntrypoint(specifier, context.parentURL))\n          throw esmResolverError;\n        try {\n          let cjsSpecifier = specifier;\n          // Attempt to convert from ESM file:// to CommonJS path\n          try {\n            if (specifier.startsWith('file://'))\n              cjsSpecifier = fileURLToPath(specifier);\n          } catch {}\n          const resolution = pathToFileURL(\n            createRequire(process.cwd()).resolve(cjsSpecifier)\n          ).toString();\n          rememberIsProbablyEntrypoint.add(resolution);\n          rememberResolvedViaCommonjsFallback.add(resolution);\n          return { url: resolution, format: 'commonjs' };\n        } catch (commonjsResolverError) {\n          throw esmResolverError;\n        }\n      }\n    }\n\n    return addShortCircuitFlag(async () => {\n      const parsed = parseUrl(specifier);\n      const { pathname, protocol, hostname } = parsed;\n\n      if (!isFileUrlOrNodeStyleSpecifier(parsed)) {\n        return entrypointFallback(defer);\n      }\n\n      if (protocol !== null && protocol !== 'file:') {\n        return entrypointFallback(defer);\n      }\n\n      // Malformed file:// URL?  We should always see `null` or `''`\n      if (hostname) {\n        // TODO file://./foo sets `hostname` to `'.'`.  Perhaps we should special-case this.\n        return entrypointFallback(defer);\n      }\n\n      // pathname is the path to be resolved\n\n      return entrypointFallback(() =>\n        nodeResolveImplementation.defaultResolve(\n          specifier,\n          context,\n          defaultResolve\n        )\n      );\n    });\n  }\n\n  // `load` from new loader hook API (See description at the top of this file)\n  async function load(\n    url: string,\n    context: {\n      format: NodeLoaderHooksFormat | null | undefined;\n      importAssertions?: NodeLoaderHooksAPI2.NodeImportAssertions;\n    },\n    defaultLoad: typeof load\n  ): Promise<{\n    format: NodeLoaderHooksFormat;\n    source: string | Buffer | undefined;\n  }> {\n    return addShortCircuitFlag(async () => {\n      // If we get a format hint from resolve() on the context then use it\n      // otherwise call the old getFormat() hook using node's old built-in defaultGetFormat() that ships with ts-node\n      const format =\n        context.format ??\n        (\n          await getFormat(\n            url,\n            context,\n            nodeGetFormatImplementation.defaultGetFormat\n          )\n        ).format;\n\n      let source = undefined;\n      if (format !== 'builtin' && format !== 'commonjs') {\n        // Call the new defaultLoad() to get the source\n        const { source: rawSource } = await defaultLoad(\n          url,\n          {\n            ...context,\n            format,\n          },\n          defaultLoad\n        );\n\n        if (rawSource === undefined || rawSource === null) {\n          throw new Error(\n            `Failed to load raw source: Format was '${format}' and url was '${url}''.`\n          );\n        }\n\n        // Emulate node's built-in old defaultTransformSource() so we can re-use the old transformSource() hook\n        const defaultTransformSource: typeof transformSource = async (\n          source,\n          _context,\n          _defaultTransformSource\n        ) => ({ source });\n\n        // Call the old hook\n        const { source: transformedSource } = await transformSource(\n          rawSource,\n          { url, format },\n          defaultTransformSource\n        );\n        source = transformedSource;\n      }\n\n      return { format, source };\n    });\n  }\n\n  async function getFormat(\n    url: string,\n    context: {},\n    defaultGetFormat: typeof getFormat\n  ): Promise<{ format: NodeLoaderHooksFormat }> {\n    const defer = (overrideUrl: string = url) =>\n      defaultGetFormat(overrideUrl, context, defaultGetFormat);\n\n    // See: https://github.com/nodejs/node/discussions/41711\n    // nodejs will likely implement a similar fallback.  Till then, we can do our users a favor and fallback today.\n    async function entrypointFallback(\n      cb: () => ReturnType<typeof getFormat>\n    ): ReturnType<typeof getFormat> {\n      try {\n        return await cb();\n      } catch (getFormatError) {\n        if (!rememberIsProbablyEntrypoint.has(url)) throw getFormatError;\n        return { format: 'commonjs' };\n      }\n    }\n\n    const parsed = parseUrl(url);\n\n    if (!isFileUrlOrNodeStyleSpecifier(parsed)) {\n      return entrypointFallback(defer);\n    }\n\n    const { pathname } = parsed;\n    assert(\n      pathname !== null,\n      'ESM getFormat() hook: URL should never have null pathname'\n    );\n\n    const nativePath = fileURLToPath(url);\n\n    let nodeSays: { format: NodeLoaderHooksFormat };\n\n    // If file has extension not understood by node, then ask node how it would treat the emitted extension.\n    // E.g. .mts compiles to .mjs, so ask node how to classify an .mjs file.\n    const ext = extname(nativePath);\n    const tsNodeIgnored = tsNodeService.ignored(nativePath);\n    const nodeEquivalentExt = extensions.nodeEquivalents.get(ext);\n    if (nodeEquivalentExt && !tsNodeIgnored) {\n      nodeSays = await entrypointFallback(() =>\n        defer(formatUrl(pathToFileURL(nativePath + nodeEquivalentExt)))\n      );\n    } else {\n      try {\n        nodeSays = await entrypointFallback(defer);\n      } catch (e) {\n        if (\n          e instanceof Error &&\n          tsNodeIgnored &&\n          extensions.nodeDoesNotUnderstand.includes(ext)\n        ) {\n          e.message +=\n            `\\n\\n` +\n            `Hint:\\n` +\n            `ts-node is configured to ignore this file.\\n` +\n            `If you want ts-node to handle this file, consider enabling the \"skipIgnore\" option or adjusting your \"ignore\" patterns.\\n` +\n            `https://typestrong.org/ts-node/docs/scope\\n`;\n        }\n        throw e;\n      }\n    }\n    // For files compiled by ts-node that node believes are either CJS or ESM, check if we should override that classification\n    if (\n      !tsNodeService.ignored(nativePath) &&\n      (nodeSays.format === 'commonjs' || nodeSays.format === 'module')\n    ) {\n      const { moduleType } =\n        tsNodeService.moduleTypeClassifier.classifyModuleByModuleTypeOverrides(\n          normalizeSlashes(nativePath)\n        );\n      if (moduleType === 'cjs') {\n        return { format: 'commonjs' };\n      } else if (moduleType === 'esm') {\n        return { format: 'module' };\n      }\n    }\n    return nodeSays;\n  }\n\n  async function transformSource(\n    source: string | Buffer,\n    context: { url: string; format: NodeLoaderHooksFormat },\n    defaultTransformSource: typeof transformSource\n  ): Promise<{ source: string | Buffer }> {\n    if (source === null || source === undefined) {\n      throw new Error('No source');\n    }\n\n    const defer = () =>\n      defaultTransformSource(source, context, defaultTransformSource);\n\n    const sourceAsString =\n      typeof source === 'string' ? source : source.toString('utf8');\n\n    const { url } = context;\n    const parsed = parseUrl(url);\n\n    if (!isFileUrlOrNodeStyleSpecifier(parsed)) {\n      return defer();\n    }\n    const nativePath = fileURLToPath(url);\n\n    if (tsNodeService.ignored(nativePath)) {\n      return defer();\n    }\n\n    const emittedJs = tsNodeService.compile(sourceAsString, nativePath);\n\n    return { source: emittedJs };\n  }\n\n  return hooksAPI;\n}\n\nasync function addShortCircuitFlag<T>(fn: () => Promise<T>) {\n  const ret = await fn();\n  // Not sure if this is necessary; being lazy.  Can revisit in the future.\n  if (ret == null) return ret;\n  return {\n    ...ret,\n    shortCircuit: true,\n  };\n}\n","import { relative, basename, extname, dirname, join } from 'path';\nimport { Module } from 'module';\nimport * as util from 'util';\nimport { fileURLToPath } from 'url';\n\nimport type * as _sourceMapSupport from '@cspotcode/source-map-support';\nimport { BaseError } from 'make-error';\nimport type * as _ts from 'typescript';\n\nimport type { Transpiler, TranspilerFactory } from './transpilers/types';\nimport {\n  cachedLookup,\n  createProjectLocalResolveHelper,\n  hasOwnProperty,\n  normalizeSlashes,\n  once,\n  parse,\n  ProjectLocalResolveHelper,\n  split,\n  versionGteLt,\n  yn,\n} from './util';\nimport { findAndReadConfig, loadCompiler } from './configuration';\nimport type { TSCommon, TSInternal } from './ts-compiler-types';\nimport {\n  createModuleTypeClassifier,\n  ModuleTypeClassifier,\n} from './module-type-classifier';\nimport { createResolverFunctions } from './resolver-functions';\nimport type { createEsmHooks as createEsmHooksFn } from './esm';\nimport {\n  installCommonjsResolveHooksIfNecessary,\n  ModuleConstructorWithInternals,\n} from './cjs-resolve-hooks';\nimport { classifyModule } from './node-module-type-classifier';\nimport type * as _nodeInternalModulesEsmResolve from '../dist-raw/node-internal-modules-esm-resolve';\nimport type * as _nodeInternalModulesEsmGetFormat from '../dist-raw/node-internal-modules-esm-get_format';\nimport type * as _nodeInternalModulesCjsLoader from '../dist-raw/node-internal-modules-cjs-loader';\nimport { Extensions, getExtensions } from './file-extensions';\nimport { createTsTranspileModule } from './ts-transpile-module';\n\nexport { TSCommon };\nexport {\n  createRepl,\n  CreateReplOptions,\n  ReplService,\n  EvalAwarePartialHost,\n} from './repl';\nexport type {\n  TranspilerModule,\n  TranspilerFactory,\n  CreateTranspilerOptions,\n  TranspileOutput,\n  TranspileOptions,\n  Transpiler,\n} from './transpilers/types';\nexport type {\n  NodeLoaderHooksAPI1,\n  NodeLoaderHooksAPI2,\n  NodeLoaderHooksFormat,\n} from './esm';\n\n/**\n * Does this version of node obey the package.json \"type\" field\n * and throw ERR_REQUIRE_ESM when attempting to require() an ESM modules.\n */\nconst engineSupportsPackageTypeField =\n  parseInt(process.versions.node.split('.')[0], 10) >= 12;\n\n/**\n * Assert that script can be loaded as CommonJS when we attempt to require it.\n * If it should be loaded as ESM, throw ERR_REQUIRE_ESM like node does.\n *\n * Loaded conditionally so we don't need to support older node versions\n */\nlet assertScriptCanLoadAsCJS: (\n  service: Service,\n  module: NodeJS.Module,\n  filename: string\n) => void = engineSupportsPackageTypeField\n  ? (\n      require('../dist-raw/node-internal-modules-cjs-loader') as typeof _nodeInternalModulesCjsLoader\n    ).assertScriptCanLoadAsCJSImpl\n  : () => {\n      /* noop */\n    };\n\n/**\n * Registered `ts-node` instance information.\n */\nexport const REGISTER_INSTANCE = Symbol.for('ts-node.register.instance');\n\n/**\n * Expose `REGISTER_INSTANCE` information on node.js `process`.\n */\ndeclare global {\n  namespace NodeJS {\n    interface Process {\n      [REGISTER_INSTANCE]?: Service;\n    }\n  }\n}\n\n/** @internal */\nexport const env = process.env as ProcessEnv;\n/**\n * Declare all env vars, to aid discoverability.\n * If an env var affects ts-node's behavior, it should not be buried somewhere in our codebase.\n * @internal\n */\nexport interface ProcessEnv {\n  TS_NODE_DEBUG?: string;\n  TS_NODE_CWD?: string;\n  /** @deprecated */\n  TS_NODE_DIR?: string;\n  TS_NODE_EMIT?: string;\n  TS_NODE_SCOPE?: string;\n  TS_NODE_SCOPE_DIR?: string;\n  TS_NODE_FILES?: string;\n  TS_NODE_PRETTY?: string;\n  TS_NODE_COMPILER?: string;\n  TS_NODE_COMPILER_OPTIONS?: string;\n  TS_NODE_IGNORE?: string;\n  TS_NODE_PROJECT?: string;\n  TS_NODE_SKIP_PROJECT?: string;\n  TS_NODE_SKIP_IGNORE?: string;\n  TS_NODE_PREFER_TS_EXTS?: string;\n  TS_NODE_IGNORE_DIAGNOSTICS?: string;\n  TS_NODE_TRANSPILE_ONLY?: string;\n  TS_NODE_TYPE_CHECK?: string;\n  TS_NODE_COMPILER_HOST?: string;\n  TS_NODE_LOG_ERROR?: string;\n  TS_NODE_HISTORY?: string;\n  TS_NODE_EXPERIMENTAL_REPL_AWAIT?: string;\n\n  NODE_NO_READLINE?: string;\n}\n\n/**\n * @internal\n */\nexport const INSPECT_CUSTOM = util.inspect.custom || 'inspect';\n\n/**\n * Debugging `ts-node`.\n */\nconst shouldDebug = yn(env.TS_NODE_DEBUG);\n/** @internal */\nexport const debug = shouldDebug\n  ? (...args: any) =>\n      console.log(`[ts-node ${new Date().toISOString()}]`, ...args)\n  : () => undefined;\nconst debugFn = shouldDebug\n  ? <T, U>(key: string, fn: (arg: T) => U) => {\n      let i = 0;\n      return (x: T) => {\n        debug(key, x, ++i);\n        return fn(x);\n      };\n    }\n  : <T, U>(_: string, fn: (arg: T) => U) => fn;\n\n/**\n * Export the current version.\n */\nexport const VERSION = require('../package.json').version;\n\n/**\n * Options for creating a new TypeScript compiler instance.\n\n * @category Basic\n */\nexport interface CreateOptions {\n  /**\n   * Behave as if invoked within this working directory.  Roughly equivalent to `cd $dir && ts-node ...`\n   *\n   * @default process.cwd()\n   */\n  cwd?: string;\n  /**\n   * Legacy alias for `cwd`\n   *\n   * @deprecated use `projectSearchDir` or `cwd`\n   */\n  dir?: string;\n  /**\n   * Emit output files into `.ts-node` directory.\n   *\n   * @default false\n   */\n  emit?: boolean;\n  /**\n   * Scope compiler to files within `scopeDir`.\n   *\n   * @default false\n   */\n  scope?: boolean;\n  /**\n   * @default First of: `tsconfig.json` \"rootDir\" if specified, directory containing `tsconfig.json`, or cwd if no `tsconfig.json` is loaded.\n   */\n  scopeDir?: string;\n  /**\n   * Use pretty diagnostic formatter.\n   *\n   * @default false\n   */\n  pretty?: boolean;\n  /**\n   * Use TypeScript's faster `transpileModule`.\n   *\n   * @default false\n   */\n  transpileOnly?: boolean;\n  /**\n   * **DEPRECATED** Specify type-check is enabled (e.g. `transpileOnly == false`).\n   *\n   * @default true\n   */\n  typeCheck?: boolean;\n  /**\n   * Use TypeScript's compiler host API instead of the language service API.\n   *\n   * @default false\n   */\n  compilerHost?: boolean;\n  /**\n   * Logs TypeScript errors to stderr instead of throwing exceptions.\n   *\n   * @default false\n   */\n  logError?: boolean;\n  /**\n   * Load \"files\" and \"include\" from `tsconfig.json` on startup.\n   *\n   * Default is to override `tsconfig.json` \"files\" and \"include\" to only include the entrypoint script.\n   *\n   * @default false\n   */\n  files?: boolean;\n  /**\n   * Specify a custom TypeScript compiler.\n   *\n   * @default \"typescript\"\n   */\n  compiler?: string;\n  /**\n   * Specify a custom transpiler for use with transpileOnly\n   */\n  transpiler?: string | [string, object];\n  /**\n   * Transpile with swc instead of the TypeScript compiler, and skip typechecking.\n   *\n   * Equivalent to setting both `transpileOnly: true` and `transpiler: 'ts-node/transpilers/swc'`\n   *\n   * For complete instructions: https://typestrong.org/ts-node/docs/transpilers\n   */\n  swc?: boolean;\n  /**\n   * Paths which should not be compiled.\n   *\n   * Each string in the array is converted to a regular expression via `new RegExp()` and tested against source paths prior to compilation.\n   *\n   * Source paths are normalized to posix-style separators, relative to the directory containing `tsconfig.json` or to cwd if no `tsconfig.json` is loaded.\n   *\n   * Default is to ignore all node_modules subdirectories.\n   *\n   * @default [\"(?:^|/)node_modules/\"]\n   */\n  ignore?: string[];\n  /**\n   * Path to TypeScript config file or directory containing a `tsconfig.json`.\n   * Similar to the `tsc --project` flag: https://www.typescriptlang.org/docs/handbook/compiler-options.html\n   */\n  project?: string;\n  /**\n   * Search for TypeScript config file (`tsconfig.json`) in this or parent directories.\n   */\n  projectSearchDir?: string;\n  /**\n   * Skip project config resolution and loading.\n   *\n   * @default false\n   */\n  skipProject?: boolean;\n  /**\n   * Skip ignore check, so that compilation will be attempted for all files with matching extensions.\n   *\n   * @default false\n   */\n  skipIgnore?: boolean;\n  /**\n   * JSON object to merge with TypeScript `compilerOptions`.\n   *\n   * @allOf [{\"$ref\": \"https://schemastore.azurewebsites.net/schemas/json/tsconfig.json#definitions/compilerOptionsDefinition/properties/compilerOptions\"}]\n   */\n  compilerOptions?: object;\n  /**\n   * Ignore TypeScript warnings by diagnostic code.\n   */\n  ignoreDiagnostics?: Array<number | string>;\n  /**\n   * Modules to require, like node's `--require` flag.\n   *\n   * If specified in `tsconfig.json`, the modules will be resolved relative to the `tsconfig.json` file.\n   *\n   * If specified programmatically, each input string should be pre-resolved to an absolute path for\n   * best results.\n   */\n  require?: Array<string>;\n  readFile?: (path: string) => string | undefined;\n  fileExists?: (path: string) => boolean;\n  transformers?:\n    | _ts.CustomTransformers\n    | ((p: _ts.Program) => _ts.CustomTransformers);\n  /**\n   * Allows the usage of top level await in REPL.\n   *\n   * Uses node's implementation which accomplishes this with an AST syntax transformation.\n   *\n   * Enabled by default when tsconfig target is es2018 or above. Set to false to disable.\n   *\n   * **Note**: setting to `true` when tsconfig target is too low will throw an Error.  Leave as `undefined`\n   * to get default, automatic behavior.\n   */\n  experimentalReplAwait?: boolean;\n  /**\n   * Override certain paths to be compiled and executed as CommonJS or ECMAScript modules.\n   * When overridden, the tsconfig \"module\" and package.json \"type\" fields are overridden, and\n   * the file extension is ignored.\n   * This is useful if you cannot use .mts, .cts, .mjs, or .cjs file extensions;\n   * it achieves the same effect.\n   *\n   * Each key is a glob pattern following the same rules as tsconfig's \"include\" array.\n   * When multiple patterns match the same file, the last pattern takes precedence.\n   *\n   * `cjs` overrides matches files to compile and execute as CommonJS.\n   * `esm` overrides matches files to compile and execute as native ECMAScript modules.\n   * `package` overrides either of the above to default behavior, which obeys package.json \"type\" and\n   * tsconfig.json \"module\" options.\n   */\n  moduleTypes?: ModuleTypes;\n  /**\n   * @internal\n   * Set by our configuration loader whenever a config file contains options that\n   * are relative to the config file they came from, *and* when other logic needs\n   * to know this.  Some options can be eagerly resolved to absolute paths by\n   * the configuration loader, so it is *not* necessary for their source to be set here.\n   */\n  optionBasePaths?: OptionBasePaths;\n  /**\n   * A function to collect trace messages from the TypeScript compiler, for example when `traceResolution` is enabled.\n   *\n   * @default console.log\n   */\n  tsTrace?: (str: string) => void;\n  /**\n   * Enable native ESM support.\n   *\n   * For details, see https://typestrong.org/ts-node/docs/imports#native-ecmascript-modules\n   */\n  esm?: boolean;\n  /**\n   * Re-order file extensions so that TypeScript imports are preferred.\n   *\n   * For example, when both `index.js` and `index.ts` exist, enabling this option causes `require('./index')` to resolve to `index.ts` instead of `index.js`\n   *\n   * @default false\n   */\n  preferTsExts?: boolean;\n  /**\n   * Like node's `--experimental-specifier-resolution`, , but can also be set in your `tsconfig.json` for convenience.\n   *\n   * For details, see https://nodejs.org/dist/latest-v18.x/docs/api/esm.html#customizing-esm-specifier-resolution-algorithm\n   */\n  experimentalSpecifierResolution?: 'node' | 'explicit';\n  /**\n   * Allow using voluntary `.ts` file extension in import specifiers.\n   *\n   * Typically, in ESM projects, import specifiers must have an emit extension, `.js`, `.cjs`, or `.mjs`,\n   * and we automatically map to the corresponding `.ts`, `.cts`, or `.mts` source file.  This is the\n   * recommended approach.\n   *\n   * However, if you really want to use `.ts` in import specifiers, and are aware that this may\n   * break tooling, you can enable this flag.\n   */\n  experimentalTsImportSpecifiers?: boolean;\n}\n\nexport type ModuleTypes = Record<string, ModuleTypeOverride>;\nexport type ModuleTypeOverride = 'cjs' | 'esm' | 'package';\n\n/** @internal */\nexport interface OptionBasePaths {\n  moduleTypes?: string;\n  transpiler?: string;\n  compiler?: string;\n  swc?: string;\n}\n\n/**\n * Options for registering a TypeScript compiler instance globally.\n\n * @category Basic\n */\nexport interface RegisterOptions extends CreateOptions {\n  /**\n   * Enable experimental features that re-map imports and require calls to support:\n   * `baseUrl`, `paths`, `rootDirs`, `.js` to `.ts` file extension mappings,\n   * `outDir` to `rootDir` mappings for composite projects and monorepos.\n   *\n   * For details, see https://github.com/TypeStrong/ts-node/issues/1514\n   */\n  experimentalResolver?: boolean;\n}\n\nexport type ExperimentalSpecifierResolution = 'node' | 'explicit';\n\n/**\n * Must be an interface to support `typescript-json-schema`.\n */\nexport interface TsConfigOptions\n  extends Omit<\n    RegisterOptions,\n    | 'transformers'\n    | 'readFile'\n    | 'fileExists'\n    | 'skipProject'\n    | 'project'\n    | 'dir'\n    | 'cwd'\n    | 'projectSearchDir'\n    | 'optionBasePaths'\n    | 'tsTrace'\n  > {}\n\n/**\n * Information retrieved from type info check.\n */\nexport interface TypeInfo {\n  name: string;\n  comment: string;\n}\n\n/**\n * Default register options, including values specified via environment\n * variables.\n * @internal\n */\nexport const DEFAULTS: RegisterOptions = {\n  cwd: env.TS_NODE_CWD ?? env.TS_NODE_DIR,\n  emit: yn(env.TS_NODE_EMIT),\n  scope: yn(env.TS_NODE_SCOPE),\n  scopeDir: env.TS_NODE_SCOPE_DIR,\n  files: yn(env.TS_NODE_FILES),\n  pretty: yn(env.TS_NODE_PRETTY),\n  compiler: env.TS_NODE_COMPILER,\n  compilerOptions: parse(env.TS_NODE_COMPILER_OPTIONS),\n  ignore: split(env.TS_NODE_IGNORE),\n  project: env.TS_NODE_PROJECT,\n  skipProject: yn(env.TS_NODE_SKIP_PROJECT),\n  skipIgnore: yn(env.TS_NODE_SKIP_IGNORE),\n  preferTsExts: yn(env.TS_NODE_PREFER_TS_EXTS),\n  ignoreDiagnostics: split(env.TS_NODE_IGNORE_DIAGNOSTICS),\n  transpileOnly: yn(env.TS_NODE_TRANSPILE_ONLY),\n  typeCheck: yn(env.TS_NODE_TYPE_CHECK),\n  compilerHost: yn(env.TS_NODE_COMPILER_HOST),\n  logError: yn(env.TS_NODE_LOG_ERROR),\n  experimentalReplAwait: yn(env.TS_NODE_EXPERIMENTAL_REPL_AWAIT) ?? undefined,\n  tsTrace: console.log.bind(console),\n};\n\n/**\n * TypeScript diagnostics error.\n */\nexport class TSError extends BaseError {\n  name = 'TSError';\n  diagnosticText!: string;\n  diagnostics!: ReadonlyArray<_ts.Diagnostic>;\n\n  constructor(\n    diagnosticText: string,\n    public diagnosticCodes: number[],\n    diagnostics: ReadonlyArray<_ts.Diagnostic> = []\n  ) {\n    super(`⨯ Unable to compile TypeScript:\\n${diagnosticText}`);\n    Object.defineProperty(this, 'diagnosticText', {\n      configurable: true,\n      writable: true,\n      value: diagnosticText,\n    });\n    Object.defineProperty(this, 'diagnostics', {\n      configurable: true,\n      writable: true,\n      value: diagnostics,\n    });\n  }\n\n  /**\n   * @internal\n   */\n  [INSPECT_CUSTOM]() {\n    return this.diagnosticText;\n  }\n}\n\nconst TS_NODE_SERVICE_BRAND = Symbol('TS_NODE_SERVICE_BRAND');\n\n/**\n * Primary ts-node service, which wraps the TypeScript API and can compile TypeScript to JavaScript\n */\nexport interface Service {\n  /** @internal */\n  [TS_NODE_SERVICE_BRAND]: true;\n  ts: TSCommon;\n  /** @internal */\n  compilerPath: string;\n  config: _ts.ParsedCommandLine;\n  options: RegisterOptions;\n  enabled(enabled?: boolean): boolean;\n  ignored(fileName: string): boolean;\n  compile(code: string, fileName: string, lineOffset?: number): string;\n  getTypeInfo(code: string, fileName: string, position: number): TypeInfo;\n  /** @internal */\n  configFilePath: string | undefined;\n  /** @internal */\n  moduleTypeClassifier: ModuleTypeClassifier;\n  /** @internal */\n  readonly shouldReplAwait: boolean;\n  /** @internal */\n  addDiagnosticFilter(filter: DiagnosticFilter): void;\n  /** @internal */\n  installSourceMapSupport(): void;\n  /** @internal */\n  enableExperimentalEsmLoaderInterop(): void;\n  /** @internal */\n  transpileOnly: boolean;\n  /** @internal */\n  projectLocalResolveHelper: ProjectLocalResolveHelper;\n  /** @internal */\n  getNodeEsmResolver: () => ReturnType<\n    typeof import('../dist-raw/node-internal-modules-esm-resolve').createResolve\n  >;\n  /** @internal */\n  getNodeEsmGetFormat: () => ReturnType<\n    typeof import('../dist-raw/node-internal-modules-esm-get_format').createGetFormat\n  >;\n  /** @internal */\n  getNodeCjsLoader: () => ReturnType<\n    typeof import('../dist-raw/node-internal-modules-cjs-loader').createCjsLoader\n  >;\n  /** @internal */\n  extensions: Extensions;\n}\n\n/**\n * Re-export of `Service` interface for backwards-compatibility\n * @deprecated use `Service` instead\n * @see {Service}\n */\nexport type Register = Service;\n\n/** @internal */\nexport interface DiagnosticFilter {\n  /** if true, filter applies to all files */\n  appliesToAllFiles: boolean;\n  /** Filter applies onto to these filenames.  Only used if appliesToAllFiles is false */\n  filenamesAbsolute: string[];\n  /** these diagnostic codes are ignored */\n  diagnosticsIgnored: number[];\n}\n\n/**\n * Create a new TypeScript compiler instance and register it onto node.js\n *\n * @category Basic\n */\nexport function register(opts?: RegisterOptions): Service;\n/**\n * Register TypeScript compiler instance onto node.js\n\n * @category Basic\n */\nexport function register(service: Service): Service;\nexport function register(\n  serviceOrOpts: Service | RegisterOptions | undefined\n): Service {\n  // Is this a Service or a RegisterOptions?\n  let service = serviceOrOpts as Service;\n  if (!(serviceOrOpts as Service)?.[TS_NODE_SERVICE_BRAND]) {\n    // Not a service; is options\n    service = create((serviceOrOpts ?? {}) as RegisterOptions);\n  }\n\n  const originalJsHandler = require.extensions['.js'];\n\n  // Expose registered instance globally.\n  process[REGISTER_INSTANCE] = service;\n\n  // Register the extensions.\n  registerExtensions(\n    service.options.preferTsExts,\n    service.extensions.compiled,\n    service,\n    originalJsHandler\n  );\n\n  installCommonjsResolveHooksIfNecessary(service);\n\n  // Require specified modules before start-up.\n  (Module as ModuleConstructorWithInternals)._preloadModules(\n    service.options.require\n  );\n\n  return service;\n}\n\n/**\n * Create TypeScript compiler instance.\n *\n * @category Basic\n */\nexport function create(rawOptions: CreateOptions = {}): Service {\n  const foundConfigResult = findAndReadConfig(rawOptions);\n  return createFromPreloadedConfig(foundConfigResult);\n}\n\n/** @internal */\nexport function createFromPreloadedConfig(\n  foundConfigResult: ReturnType<typeof findAndReadConfig>\n): Service {\n  const {\n    configFilePath,\n    cwd,\n    options,\n    config,\n    compiler,\n    projectLocalResolveDir,\n    optionBasePaths,\n  } = foundConfigResult;\n\n  const projectLocalResolveHelper = createProjectLocalResolveHelper(\n    projectLocalResolveDir\n  );\n\n  const ts = loadCompiler(compiler);\n\n  // Experimental REPL await is not compatible targets lower than ES2018\n  const targetSupportsTla = config.options.target! >= ts.ScriptTarget.ES2018;\n  if (options.experimentalReplAwait === true && !targetSupportsTla) {\n    throw new Error(\n      'Experimental REPL await is not compatible with targets lower than ES2018'\n    );\n  }\n  // Top-level await was added in TS 3.8\n  const tsVersionSupportsTla = versionGteLt(ts.version, '3.8.0');\n  if (options.experimentalReplAwait === true && !tsVersionSupportsTla) {\n    throw new Error(\n      'Experimental REPL await is not compatible with TypeScript versions older than 3.8'\n    );\n  }\n\n  const shouldReplAwait =\n    options.experimentalReplAwait !== false &&\n    tsVersionSupportsTla &&\n    targetSupportsTla;\n\n  // swc implies two other options\n  // typeCheck option was implemented specifically to allow overriding tsconfig transpileOnly from the command-line\n  // So we should allow using typeCheck to override swc\n  if (options.swc && !options.typeCheck) {\n    if (options.transpileOnly === false) {\n      throw new Error(\n        \"Cannot enable 'swc' option with 'transpileOnly: false'.  'swc' implies 'transpileOnly'.\"\n      );\n    }\n    if (options.transpiler) {\n      throw new Error(\n        \"Cannot specify both 'swc' and 'transpiler' options.  'swc' uses the built-in swc transpiler.\"\n      );\n    }\n  }\n\n  const readFile = options.readFile || ts.sys.readFile;\n  const fileExists = options.fileExists || ts.sys.fileExists;\n  // typeCheck can override transpileOnly, useful for CLI flag to override config file\n  const transpileOnly =\n    (options.transpileOnly === true || options.swc === true) &&\n    options.typeCheck !== true;\n  let transpiler: RegisterOptions['transpiler'] | undefined = undefined;\n  let transpilerBasePath: string | undefined = undefined;\n  if (options.transpiler) {\n    transpiler = options.transpiler;\n    transpilerBasePath = optionBasePaths.transpiler;\n  } else if (options.swc) {\n    transpiler = require.resolve('./transpilers/swc.js');\n    transpilerBasePath = optionBasePaths.swc;\n  }\n  const transformers = options.transformers || undefined;\n  const diagnosticFilters: Array<DiagnosticFilter> = [\n    {\n      appliesToAllFiles: true,\n      filenamesAbsolute: [],\n      diagnosticsIgnored: [\n        6059, // \"'rootDir' is expected to contain all source files.\"\n        18002, // \"The 'files' list in config file is empty.\"\n        18003, // \"No inputs were found in config file.\"\n        ...(options.experimentalTsImportSpecifiers\n          ? [\n              2691, // \"An import path cannot end with a '.ts' extension. Consider importing '<specifier without ext>' instead.\"\n            ]\n          : []),\n        ...(options.ignoreDiagnostics || []),\n      ].map(Number),\n    },\n  ];\n\n  const configDiagnosticList = filterDiagnostics(\n    config.errors,\n    diagnosticFilters\n  );\n  const outputCache = new Map<\n    string,\n    {\n      content: string;\n    }\n  >();\n\n  const configFileDirname = configFilePath ? dirname(configFilePath) : null;\n  const scopeDir =\n    options.scopeDir ?? config.options.rootDir ?? configFileDirname ?? cwd;\n  const ignoreBaseDir = configFileDirname ?? cwd;\n  const isScoped = options.scope\n    ? (fileName: string) => relative(scopeDir, fileName).charAt(0) !== '.'\n    : () => true;\n  const shouldIgnore = createIgnore(\n    ignoreBaseDir,\n    options.skipIgnore\n      ? []\n      : (options.ignore || ['(?:^|/)node_modules/']).map(\n          (str) => new RegExp(str)\n        )\n  );\n\n  const diagnosticHost: _ts.FormatDiagnosticsHost = {\n    getNewLine: () => ts.sys.newLine,\n    getCurrentDirectory: () => cwd,\n    // TODO switch to getCanonicalFileName we already create later in scope\n    getCanonicalFileName: ts.sys.useCaseSensitiveFileNames\n      ? (x) => x\n      : (x) => x.toLowerCase(),\n  };\n\n  if (options.transpileOnly && typeof transformers === 'function') {\n    throw new TypeError(\n      'Transformers function is unavailable in \"--transpile-only\"'\n    );\n  }\n  let createTranspiler = initializeTranspilerFactory();\n  function initializeTranspilerFactory() {\n    if (transpiler) {\n      if (!transpileOnly)\n        throw new Error(\n          'Custom transpiler can only be used when transpileOnly is enabled.'\n        );\n      const transpilerName =\n        typeof transpiler === 'string' ? transpiler : transpiler[0];\n      const transpilerOptions =\n        typeof transpiler === 'string' ? {} : transpiler[1] ?? {};\n      const transpilerConfigLocalResolveHelper = transpilerBasePath\n        ? createProjectLocalResolveHelper(transpilerBasePath)\n        : projectLocalResolveHelper;\n      const transpilerPath = transpilerConfigLocalResolveHelper(\n        transpilerName,\n        true\n      );\n      const transpilerFactory = require(transpilerPath)\n        .create as TranspilerFactory;\n      return createTranspiler;\n\n      function createTranspiler(\n        compilerOptions: TSCommon.CompilerOptions,\n        nodeModuleEmitKind?: NodeModuleEmitKind\n      ) {\n        return transpilerFactory?.({\n          service: {\n            options,\n            config: {\n              ...config,\n              options: compilerOptions,\n            },\n            projectLocalResolveHelper,\n          },\n          transpilerConfigLocalResolveHelper,\n          nodeModuleEmitKind,\n          ...transpilerOptions,\n        });\n      }\n    }\n  }\n\n  /**\n   * True if require() hooks should interop with experimental ESM loader.\n   * Enabled explicitly via a flag since it is a breaking change.\n   */\n  let experimentalEsmLoader = false;\n  function enableExperimentalEsmLoaderInterop() {\n    experimentalEsmLoader = true;\n  }\n\n  // Install source map support and read from memory cache.\n  installSourceMapSupport();\n  function installSourceMapSupport() {\n    const sourceMapSupport =\n      require('@cspotcode/source-map-support') as typeof _sourceMapSupport;\n    sourceMapSupport.install({\n      environment: 'node',\n      retrieveFile(pathOrUrl: string) {\n        let path = pathOrUrl;\n        // If it's a file URL, convert to local path\n        // Note: fileURLToPath does not exist on early node v10\n        // I could not find a way to handle non-URLs except to swallow an error\n        if (experimentalEsmLoader && path.startsWith('file://')) {\n          try {\n            path = fileURLToPath(path);\n          } catch (e) {\n            /* swallow error */\n          }\n        }\n        path = normalizeSlashes(path);\n        return outputCache.get(path)?.content || '';\n      },\n      redirectConflictingLibrary: true,\n      onConflictingLibraryRedirect(\n        request,\n        parent,\n        isMain,\n        options,\n        redirectedRequest\n      ) {\n        debug(\n          `Redirected an attempt to require source-map-support to instead receive @cspotcode/source-map-support.  \"${\n            (parent as NodeJS.Module).filename\n          }\" attempted to require or resolve \"${request}\" and was redirected to \"${redirectedRequest}\".`\n        );\n      },\n    });\n  }\n\n  const shouldHavePrettyErrors =\n    options.pretty === undefined ? process.stdout.isTTY : options.pretty;\n\n  const formatDiagnostics = shouldHavePrettyErrors\n    ? ts.formatDiagnosticsWithColorAndContext || ts.formatDiagnostics\n    : ts.formatDiagnostics;\n\n  function createTSError(diagnostics: ReadonlyArray<_ts.Diagnostic>) {\n    const diagnosticText = formatDiagnostics(diagnostics, diagnosticHost);\n    const diagnosticCodes = diagnostics.map((x) => x.code);\n    return new TSError(diagnosticText, diagnosticCodes, diagnostics);\n  }\n\n  function reportTSError(configDiagnosticList: _ts.Diagnostic[]) {\n    const error = createTSError(configDiagnosticList);\n    if (options.logError) {\n      // Print error in red color and continue execution.\n      console.error('\\x1b[31m%s\\x1b[0m', error);\n    } else {\n      // Throw error and exit the script.\n      throw error;\n    }\n  }\n\n  // Render the configuration errors.\n  if (configDiagnosticList.length) reportTSError(configDiagnosticList);\n\n  const jsxEmitPreserve = config.options.jsx === ts.JsxEmit.Preserve;\n  /**\n   * Get the extension for a transpiled file.\n   * [MUST_UPDATE_FOR_NEW_FILE_EXTENSIONS]\n   */\n  function getEmitExtension(path: string) {\n    const lastDotIndex = path.lastIndexOf('.');\n    if (lastDotIndex >= 0) {\n      const ext = path.slice(lastDotIndex);\n      switch (ext) {\n        case '.js':\n        case '.ts':\n          return '.js';\n        case '.jsx':\n        case '.tsx':\n          return jsxEmitPreserve ? '.jsx' : '.js';\n        case '.mjs':\n        case '.mts':\n          return '.mjs';\n        case '.cjs':\n        case '.cts':\n          return '.cjs';\n      }\n    }\n    return '.js';\n  }\n\n  type GetOutputFunction = (code: string, fileName: string) => SourceOutput;\n  /**\n   * Get output from TS compiler w/typechecking.  `undefined` in `transpileOnly`\n   * mode.\n   */\n  let getOutput: GetOutputFunction | undefined;\n  let getTypeInfo: (\n    _code: string,\n    _fileName: string,\n    _position: number\n  ) => TypeInfo;\n\n  const getCanonicalFileName = (\n    ts as unknown as TSInternal\n  ).createGetCanonicalFileName(ts.sys.useCaseSensitiveFileNames);\n\n  const moduleTypeClassifier = createModuleTypeClassifier({\n    basePath: options.optionBasePaths?.moduleTypes,\n    patterns: options.moduleTypes,\n  });\n\n  const extensions = getExtensions(config, options, ts.version);\n\n  // Use full language services when the fast option is disabled.\n  if (!transpileOnly) {\n    const fileContents = new Map<string, string>();\n    const rootFileNames = new Set(config.fileNames);\n    const cachedReadFile = cachedLookup(debugFn('readFile', readFile));\n\n    // Use language services by default\n    if (!options.compilerHost) {\n      let projectVersion = 1;\n      const fileVersions = new Map(\n        Array.from(rootFileNames).map((fileName) => [fileName, 0])\n      );\n\n      const getCustomTransformers = () => {\n        if (typeof transformers === 'function') {\n          const program = service.getProgram();\n          return program ? transformers(program) : undefined;\n        }\n\n        return transformers;\n      };\n\n      // Create the compiler host for type checking.\n      const serviceHost: _ts.LanguageServiceHost &\n        Required<Pick<_ts.LanguageServiceHost, 'fileExists' | 'readFile'>> = {\n        getProjectVersion: () => String(projectVersion),\n        getScriptFileNames: () => Array.from(rootFileNames),\n        getScriptVersion: (fileName: string) => {\n          const version = fileVersions.get(fileName);\n          return version ? version.toString() : '';\n        },\n        getScriptSnapshot(fileName: string) {\n          // TODO ordering of this with getScriptVersion?  Should they sync up?\n          let contents = fileContents.get(fileName);\n\n          // Read contents into TypeScript memory cache.\n          if (contents === undefined) {\n            contents = cachedReadFile(fileName);\n            if (contents === undefined) return;\n\n            fileVersions.set(fileName, 1);\n            fileContents.set(fileName, contents);\n            projectVersion++;\n          }\n\n          return ts.ScriptSnapshot.fromString(contents);\n        },\n        readFile: cachedReadFile,\n        readDirectory: ts.sys.readDirectory,\n        getDirectories: cachedLookup(\n          debugFn('getDirectories', ts.sys.getDirectories)\n        ),\n        fileExists: cachedLookup(debugFn('fileExists', fileExists)),\n        directoryExists: cachedLookup(\n          debugFn('directoryExists', ts.sys.directoryExists)\n        ),\n        realpath: ts.sys.realpath\n          ? cachedLookup(debugFn('realpath', ts.sys.realpath))\n          : undefined,\n        getNewLine: () => ts.sys.newLine,\n        useCaseSensitiveFileNames: () => ts.sys.useCaseSensitiveFileNames,\n        getCurrentDirectory: () => cwd,\n        getCompilationSettings: () => config.options,\n        getDefaultLibFileName: () => ts.getDefaultLibFilePath(config.options),\n        getCustomTransformers: getCustomTransformers,\n        trace: options.tsTrace,\n      };\n      const {\n        resolveModuleNames,\n        getResolvedModuleWithFailedLookupLocationsFromCache,\n        resolveTypeReferenceDirectives,\n        isFileKnownToBeInternal,\n        markBucketOfFilenameInternal,\n      } = createResolverFunctions({\n        host: serviceHost,\n        getCanonicalFileName,\n        ts,\n        cwd,\n        config,\n        projectLocalResolveHelper,\n        options,\n        extensions,\n      });\n      serviceHost.resolveModuleNames = resolveModuleNames;\n      serviceHost.getResolvedModuleWithFailedLookupLocationsFromCache =\n        getResolvedModuleWithFailedLookupLocationsFromCache;\n      serviceHost.resolveTypeReferenceDirectives =\n        resolveTypeReferenceDirectives;\n\n      const registry = ts.createDocumentRegistry(\n        ts.sys.useCaseSensitiveFileNames,\n        cwd\n      );\n      const service = ts.createLanguageService(serviceHost, registry);\n\n      const updateMemoryCache = (contents: string, fileName: string) => {\n        // Add to `rootFiles` as necessary, either to make TS include a file it has not seen,\n        // or to trigger a re-classification of files from external to internal.\n        if (\n          !rootFileNames.has(fileName) &&\n          !isFileKnownToBeInternal(fileName)\n        ) {\n          markBucketOfFilenameInternal(fileName);\n          rootFileNames.add(fileName);\n          // Increment project version for every change to rootFileNames.\n          projectVersion++;\n        }\n\n        const previousVersion = fileVersions.get(fileName) || 0;\n        const previousContents = fileContents.get(fileName);\n        // Avoid incrementing cache when nothing has changed.\n        if (contents !== previousContents) {\n          fileVersions.set(fileName, previousVersion + 1);\n          fileContents.set(fileName, contents);\n          // Increment project version for every file change.\n          projectVersion++;\n        }\n      };\n\n      let previousProgram: _ts.Program | undefined = undefined;\n\n      getOutput = (code: string, fileName: string) => {\n        updateMemoryCache(code, fileName);\n\n        const programBefore = service.getProgram();\n        if (programBefore !== previousProgram) {\n          debug(\n            `compiler rebuilt Program instance when getting output for ${fileName}`\n          );\n        }\n\n        const output = service.getEmitOutput(fileName);\n\n        // Get the relevant diagnostics - this is 3x faster than `getPreEmitDiagnostics`.\n        const diagnostics = service\n          .getSemanticDiagnostics(fileName)\n          .concat(service.getSyntacticDiagnostics(fileName));\n\n        const programAfter = service.getProgram();\n\n        debug(\n          'invariant: Is service.getProject() identical before and after getting emit output and diagnostics? (should always be true) ',\n          programBefore === programAfter\n        );\n\n        previousProgram = programAfter;\n\n        const diagnosticList = filterDiagnostics(\n          diagnostics,\n          diagnosticFilters\n        );\n        if (diagnosticList.length) reportTSError(diagnosticList);\n\n        if (output.emitSkipped) {\n          return [undefined, undefined, true];\n        }\n\n        // Throw an error when requiring `.d.ts` files.\n        if (output.outputFiles.length === 0) {\n          throw new TypeError(\n            `Unable to require file: ${relative(cwd, fileName)}\\n` +\n              'This is usually the result of a faulty configuration or import. ' +\n              'Make sure there is a `.js`, `.json` or other executable extension with ' +\n              'loader attached before `ts-node` available.'\n          );\n        }\n\n        return [output.outputFiles[1].text, output.outputFiles[0].text, false];\n      };\n\n      getTypeInfo = (code: string, fileName: string, position: number) => {\n        const normalizedFileName = normalizeSlashes(fileName);\n        updateMemoryCache(code, normalizedFileName);\n\n        const info = service.getQuickInfoAtPosition(\n          normalizedFileName,\n          position\n        );\n        const name = ts.displayPartsToString(info ? info.displayParts : []);\n        const comment = ts.displayPartsToString(info ? info.documentation : []);\n\n        return { name, comment };\n      };\n    } else {\n      const sys: _ts.System & _ts.FormatDiagnosticsHost = {\n        ...ts.sys,\n        ...diagnosticHost,\n        readFile: (fileName: string) => {\n          const cacheContents = fileContents.get(fileName);\n          if (cacheContents !== undefined) return cacheContents;\n          const contents = cachedReadFile(fileName);\n          if (contents) fileContents.set(fileName, contents);\n          return contents;\n        },\n        readDirectory: ts.sys.readDirectory,\n        getDirectories: cachedLookup(\n          debugFn('getDirectories', ts.sys.getDirectories)\n        ),\n        fileExists: cachedLookup(debugFn('fileExists', fileExists)),\n        directoryExists: cachedLookup(\n          debugFn('directoryExists', ts.sys.directoryExists)\n        ),\n        resolvePath: cachedLookup(debugFn('resolvePath', ts.sys.resolvePath)),\n        realpath: ts.sys.realpath\n          ? cachedLookup(debugFn('realpath', ts.sys.realpath))\n          : undefined,\n      };\n\n      const host: _ts.CompilerHost = ts.createIncrementalCompilerHost\n        ? ts.createIncrementalCompilerHost(config.options, sys)\n        : {\n            ...sys,\n            getSourceFile: (fileName, languageVersion) => {\n              const contents = sys.readFile(fileName);\n              if (contents === undefined) return;\n              return ts.createSourceFile(fileName, contents, languageVersion);\n            },\n            getDefaultLibLocation: () => normalizeSlashes(dirname(compiler)),\n            getDefaultLibFileName: () =>\n              normalizeSlashes(\n                join(\n                  dirname(compiler),\n                  ts.getDefaultLibFileName(config.options)\n                )\n              ),\n            useCaseSensitiveFileNames: () => sys.useCaseSensitiveFileNames,\n          };\n      host.trace = options.tsTrace;\n      const {\n        resolveModuleNames,\n        resolveTypeReferenceDirectives,\n        isFileKnownToBeInternal,\n        markBucketOfFilenameInternal,\n      } = createResolverFunctions({\n        host,\n        cwd,\n        config,\n        ts,\n        getCanonicalFileName,\n        projectLocalResolveHelper,\n        options,\n        extensions,\n      });\n      host.resolveModuleNames = resolveModuleNames;\n      host.resolveTypeReferenceDirectives = resolveTypeReferenceDirectives;\n\n      // Fallback for older TypeScript releases without incremental API.\n      let builderProgram = ts.createIncrementalProgram\n        ? ts.createIncrementalProgram({\n            rootNames: Array.from(rootFileNames),\n            options: config.options,\n            host,\n            configFileParsingDiagnostics: config.errors,\n            projectReferences: config.projectReferences,\n          })\n        : ts.createEmitAndSemanticDiagnosticsBuilderProgram(\n            Array.from(rootFileNames),\n            config.options,\n            host,\n            undefined,\n            config.errors,\n            config.projectReferences\n          );\n\n      // Read and cache custom transformers.\n      const customTransformers =\n        typeof transformers === 'function'\n          ? transformers(builderProgram.getProgram())\n          : transformers;\n\n      // Set the file contents into cache manually.\n      const updateMemoryCache = (contents: string, fileName: string) => {\n        const previousContents = fileContents.get(fileName);\n        const contentsChanged = previousContents !== contents;\n        if (contentsChanged) {\n          fileContents.set(fileName, contents);\n        }\n\n        // Add to `rootFiles` when discovered by compiler for the first time.\n        let addedToRootFileNames = false;\n        if (\n          !rootFileNames.has(fileName) &&\n          !isFileKnownToBeInternal(fileName)\n        ) {\n          markBucketOfFilenameInternal(fileName);\n          rootFileNames.add(fileName);\n          addedToRootFileNames = true;\n        }\n\n        // Update program when file changes.\n        if (addedToRootFileNames || contentsChanged) {\n          builderProgram = ts.createEmitAndSemanticDiagnosticsBuilderProgram(\n            Array.from(rootFileNames),\n            config.options,\n            host,\n            builderProgram,\n            config.errors,\n            config.projectReferences\n          );\n        }\n      };\n\n      getOutput = (code: string, fileName: string) => {\n        let outText = '';\n        let outMap = '';\n\n        updateMemoryCache(code, fileName);\n\n        const sourceFile = builderProgram.getSourceFile(fileName);\n        if (!sourceFile)\n          throw new TypeError(`Unable to read file: ${fileName}`);\n\n        const program = builderProgram.getProgram();\n        const diagnostics = ts.getPreEmitDiagnostics(program, sourceFile);\n        const diagnosticList = filterDiagnostics(\n          diagnostics,\n          diagnosticFilters\n        );\n        if (diagnosticList.length) reportTSError(diagnosticList);\n\n        const result = builderProgram.emit(\n          sourceFile,\n          (path, file, writeByteOrderMark) => {\n            if (path.endsWith('.map')) {\n              outMap = file;\n            } else {\n              outText = file;\n            }\n\n            if (options.emit) sys.writeFile(path, file, writeByteOrderMark);\n          },\n          undefined,\n          undefined,\n          customTransformers\n        );\n\n        if (result.emitSkipped) {\n          return [undefined, undefined, true];\n        }\n\n        // Throw an error when requiring files that cannot be compiled.\n        if (outText === '') {\n          if (program.isSourceFileFromExternalLibrary(sourceFile)) {\n            throw new TypeError(\n              `Unable to compile file from external library: ${relative(\n                cwd,\n                fileName\n              )}`\n            );\n          }\n\n          throw new TypeError(\n            `Unable to require file: ${relative(cwd, fileName)}\\n` +\n              'This is usually the result of a faulty configuration or import. ' +\n              'Make sure there is a `.js`, `.json` or other executable extension with ' +\n              'loader attached before `ts-node` available.'\n          );\n        }\n\n        return [outText, outMap, false];\n      };\n\n      getTypeInfo = (code: string, fileName: string, position: number) => {\n        const normalizedFileName = normalizeSlashes(fileName);\n        updateMemoryCache(code, normalizedFileName);\n\n        const sourceFile = builderProgram.getSourceFile(normalizedFileName);\n        if (!sourceFile)\n          throw new TypeError(`Unable to read file: ${fileName}`);\n\n        const node = getTokenAtPosition(ts, sourceFile, position);\n        const checker = builderProgram.getProgram().getTypeChecker();\n        const symbol = checker.getSymbolAtLocation(node);\n\n        if (!symbol) return { name: '', comment: '' };\n\n        const type = checker.getTypeOfSymbolAtLocation(symbol, node);\n        const signatures = [\n          ...type.getConstructSignatures(),\n          ...type.getCallSignatures(),\n        ];\n\n        return {\n          name: signatures.length\n            ? signatures.map((x) => checker.signatureToString(x)).join('\\n')\n            : checker.typeToString(type),\n          comment: ts.displayPartsToString(\n            symbol ? symbol.getDocumentationComment(checker) : []\n          ),\n        };\n      };\n\n      // Write `.tsbuildinfo` when `--build` is enabled.\n      if (options.emit && config.options.incremental) {\n        process.on('exit', () => {\n          // Emits `.tsbuildinfo` to filesystem.\n          (builderProgram.getProgram() as any).emitBuildInfo();\n        });\n      }\n    }\n  } else {\n    getTypeInfo = () => {\n      throw new TypeError(\n        'Type information is unavailable in \"--transpile-only\"'\n      );\n    };\n  }\n\n  function createTranspileOnlyGetOutputFunction(\n    overrideModuleType?: _ts.ModuleKind,\n    nodeModuleEmitKind?: NodeModuleEmitKind\n  ): GetOutputFunction {\n    const compilerOptions = { ...config.options };\n    if (overrideModuleType !== undefined)\n      compilerOptions.module = overrideModuleType;\n    let customTranspiler = createTranspiler?.(\n      compilerOptions,\n      nodeModuleEmitKind\n    );\n    let tsTranspileModule = versionGteLt(ts.version, '4.7.0')\n      ? createTsTranspileModule(ts, {\n          compilerOptions,\n          reportDiagnostics: true,\n          transformers: transformers as _ts.CustomTransformers | undefined,\n        })\n      : undefined;\n    return (code: string, fileName: string): SourceOutput => {\n      let result: _ts.TranspileOutput;\n      if (customTranspiler) {\n        result = customTranspiler.transpile(code, {\n          fileName,\n        });\n      } else if (tsTranspileModule) {\n        result = tsTranspileModule(\n          code,\n          {\n            fileName,\n          },\n          nodeModuleEmitKind === 'nodeesm' ? 'module' : 'commonjs'\n        );\n      } else {\n        result = ts.transpileModule(code, {\n          fileName,\n          compilerOptions,\n          reportDiagnostics: true,\n          transformers: transformers as _ts.CustomTransformers | undefined,\n        });\n      }\n\n      const diagnosticList = filterDiagnostics(\n        result.diagnostics || [],\n        diagnosticFilters\n      );\n      if (diagnosticList.length) reportTSError(diagnosticList);\n\n      return [result.outputText, result.sourceMapText as string, false];\n    };\n  }\n\n  // When true, these mean that a `moduleType` override will cause a different emit\n  // than the TypeScript compiler, so we *must* overwrite the emit.\n  const shouldOverwriteEmitWhenForcingCommonJS =\n    config.options.module !== ts.ModuleKind.CommonJS;\n  // [MUST_UPDATE_FOR_NEW_MODULEKIND]\n  const shouldOverwriteEmitWhenForcingEsm = !(\n    config.options.module === ts.ModuleKind.ES2015 ||\n    (ts.ModuleKind.ES2020 && config.options.module === ts.ModuleKind.ES2020) ||\n    (ts.ModuleKind.ES2022 && config.options.module === ts.ModuleKind.ES2022) ||\n    config.options.module === ts.ModuleKind.ESNext\n  );\n  /**\n   * node16 or nodenext\n   * [MUST_UPDATE_FOR_NEW_MODULEKIND]\n   */\n  const isNodeModuleType =\n    (ts.ModuleKind.Node16 && config.options.module === ts.ModuleKind.Node16) ||\n    (ts.ModuleKind.NodeNext &&\n      config.options.module === ts.ModuleKind.NodeNext);\n  const getOutputForceCommonJS = createTranspileOnlyGetOutputFunction(\n    ts.ModuleKind.CommonJS\n  );\n  const getOutputForceNodeCommonJS = createTranspileOnlyGetOutputFunction(\n    ts.ModuleKind.NodeNext,\n    'nodecjs'\n  );\n  const getOutputForceNodeESM = createTranspileOnlyGetOutputFunction(\n    ts.ModuleKind.NodeNext,\n    'nodeesm'\n  );\n  // [MUST_UPDATE_FOR_NEW_MODULEKIND]\n  const getOutputForceESM = createTranspileOnlyGetOutputFunction(\n    ts.ModuleKind.ES2022 || ts.ModuleKind.ES2020 || ts.ModuleKind.ES2015\n  );\n  const getOutputTranspileOnly = createTranspileOnlyGetOutputFunction();\n\n  // Create a simple TypeScript compiler proxy.\n  function compile(code: string, fileName: string, lineOffset = 0) {\n    const normalizedFileName = normalizeSlashes(fileName);\n    const classification =\n      moduleTypeClassifier.classifyModuleByModuleTypeOverrides(\n        normalizedFileName\n      );\n    let value: string | undefined = '';\n    let sourceMap: string | undefined = '';\n    let emitSkipped = true;\n    if (getOutput) {\n      // Must always call normal getOutput to throw typechecking errors\n      [value, sourceMap, emitSkipped] = getOutput(code, normalizedFileName);\n    }\n    // If module classification contradicts the above, call the relevant transpiler\n    if (\n      classification.moduleType === 'cjs' &&\n      (shouldOverwriteEmitWhenForcingCommonJS || emitSkipped)\n    ) {\n      [value, sourceMap] = getOutputForceCommonJS(code, normalizedFileName);\n    } else if (\n      classification.moduleType === 'esm' &&\n      (shouldOverwriteEmitWhenForcingEsm || emitSkipped)\n    ) {\n      [value, sourceMap] = getOutputForceESM(code, normalizedFileName);\n    } else if (emitSkipped) {\n      // Happens when ts compiler skips emit or in transpileOnly mode\n      const classification = classifyModule(fileName, isNodeModuleType);\n      [value, sourceMap] =\n        classification === 'nodecjs'\n          ? getOutputForceNodeCommonJS(code, normalizedFileName)\n          : classification === 'nodeesm'\n          ? getOutputForceNodeESM(code, normalizedFileName)\n          : classification === 'cjs'\n          ? getOutputForceCommonJS(code, normalizedFileName)\n          : classification === 'esm'\n          ? getOutputForceESM(code, normalizedFileName)\n          : getOutputTranspileOnly(code, normalizedFileName);\n    }\n    const output = updateOutput(\n      value!,\n      normalizedFileName,\n      sourceMap!,\n      getEmitExtension\n    );\n    outputCache.set(normalizedFileName, { content: output });\n    return output;\n  }\n\n  let active = true;\n  const enabled = (enabled?: boolean) =>\n    enabled === undefined ? active : (active = !!enabled);\n  const ignored = (fileName: string) => {\n    if (!active) return true;\n    const ext = extname(fileName);\n    if (extensions.compiled.includes(ext)) {\n      return !isScoped(fileName) || shouldIgnore(fileName);\n    }\n    return true;\n  };\n\n  function addDiagnosticFilter(filter: DiagnosticFilter) {\n    diagnosticFilters.push({\n      ...filter,\n      filenamesAbsolute: filter.filenamesAbsolute.map((f) =>\n        normalizeSlashes(f)\n      ),\n    });\n  }\n\n  const getNodeEsmResolver = once(() =>\n    (\n      require('../dist-raw/node-internal-modules-esm-resolve') as typeof _nodeInternalModulesEsmResolve\n    ).createResolve({\n      extensions,\n      preferTsExts: options.preferTsExts,\n      tsNodeExperimentalSpecifierResolution:\n        options.experimentalSpecifierResolution,\n    })\n  );\n  const getNodeEsmGetFormat = once(() =>\n    (\n      require('../dist-raw/node-internal-modules-esm-get_format') as typeof _nodeInternalModulesEsmGetFormat\n    ).createGetFormat(\n      options.experimentalSpecifierResolution,\n      getNodeEsmResolver()\n    )\n  );\n  const getNodeCjsLoader = once(() =>\n    (\n      require('../dist-raw/node-internal-modules-cjs-loader') as typeof _nodeInternalModulesCjsLoader\n    ).createCjsLoader({\n      extensions,\n      preferTsExts: options.preferTsExts,\n      nodeEsmResolver: getNodeEsmResolver(),\n    })\n  );\n\n  return {\n    [TS_NODE_SERVICE_BRAND]: true,\n    ts,\n    compilerPath: compiler,\n    config,\n    compile,\n    getTypeInfo,\n    ignored,\n    enabled,\n    options,\n    configFilePath,\n    moduleTypeClassifier,\n    shouldReplAwait,\n    addDiagnosticFilter,\n    installSourceMapSupport,\n    enableExperimentalEsmLoaderInterop,\n    transpileOnly,\n    projectLocalResolveHelper,\n    getNodeEsmResolver,\n    getNodeEsmGetFormat,\n    getNodeCjsLoader,\n    extensions,\n  };\n}\n\n/**\n * Check if the filename should be ignored.\n */\nfunction createIgnore(ignoreBaseDir: string, ignore: RegExp[]) {\n  return (fileName: string) => {\n    const relname = relative(ignoreBaseDir, fileName);\n    const path = normalizeSlashes(relname);\n\n    return ignore.some((x) => x.test(path));\n  };\n}\n\n/**\n * Register the extensions to support when importing files.\n */\nfunction registerExtensions(\n  preferTsExts: boolean | null | undefined,\n  extensions: string[],\n  service: Service,\n  originalJsHandler: (m: NodeModule, filename: string) => any\n) {\n  const exts = new Set(extensions);\n  // Can't add these extensions cuz would allow omitting file extension; node requires ext for .cjs and .mjs\n  // Unless they're already registered by something else (nyc does this):\n  // then we *must* hook them or else our transformer will not be called.\n  for (const cannotAdd of ['.mts', '.cts', '.mjs', '.cjs']) {\n    if (exts.has(cannotAdd) && !hasOwnProperty(require.extensions, cannotAdd)) {\n      // Unrecognized file exts can be transformed via the `.js` handler.\n      exts.add('.js');\n      exts.delete(cannotAdd);\n    }\n  }\n\n  // Register new extensions.\n  for (const ext of exts) {\n    registerExtension(ext, service, originalJsHandler);\n  }\n\n  if (preferTsExts) {\n    const preferredExtensions = new Set([\n      ...exts,\n      ...Object.keys(require.extensions),\n    ]);\n\n    // Re-sort iteration order of Object.keys()\n    for (const ext of preferredExtensions) {\n      const old = Object.getOwnPropertyDescriptor(require.extensions, ext);\n      delete require.extensions[ext];\n      Object.defineProperty(require.extensions, ext, old!);\n    }\n  }\n}\n\n/**\n * Register the extension for node.\n */\nfunction registerExtension(\n  ext: string,\n  service: Service,\n  originalHandler: (m: NodeModule, filename: string) => any\n) {\n  const old = require.extensions[ext] || originalHandler;\n\n  require.extensions[ext] = function (m: any, filename) {\n    if (service.ignored(filename)) return old(m, filename);\n\n    assertScriptCanLoadAsCJS(service, m, filename);\n\n    const _compile = m._compile;\n\n    m._compile = function (code: string, fileName: string) {\n      debug('module._compile', fileName);\n\n      const result = service.compile(code, fileName);\n      return _compile.call(this, result, fileName);\n    };\n\n    return old(m, filename);\n  };\n}\n\n/**\n * Internal source output.\n */\ntype SourceOutput = [string, string, false] | [undefined, undefined, true];\n\n/**\n * Update the output remapping the source map.\n */\nfunction updateOutput(\n  outputText: string,\n  fileName: string,\n  sourceMap: string,\n  getEmitExtension: (fileName: string) => string\n) {\n  const base64Map = Buffer.from(\n    updateSourceMap(sourceMap, fileName),\n    'utf8'\n  ).toString('base64');\n  const sourceMapContent = `//# sourceMappingURL=data:application/json;charset=utf-8;base64,${base64Map}`;\n  // Expected form: `//# sourceMappingURL=foo bar.js.map` or `//# sourceMappingURL=foo%20bar.js.map` for input file \"foo bar.tsx\"\n  // Percent-encoding behavior added in TS 4.1.1: https://github.com/microsoft/TypeScript/issues/40951\n  const prefix = '//# sourceMappingURL=';\n  const prefixLength = prefix.length;\n  const baseName = /*foo.tsx*/ basename(fileName);\n  const extName = /*.tsx*/ extname(fileName);\n  const extension = /*.js*/ getEmitExtension(fileName);\n  const sourcemapFilename =\n    baseName.slice(0, -extName.length) + extension + '.map';\n  const sourceMapLengthWithoutPercentEncoding =\n    prefixLength + sourcemapFilename.length;\n  /*\n   * Only rewrite if existing directive exists at the location we expect, to support:\n   *   a) compilers that do not append a sourcemap directive\n   *   b) situations where we did the math wrong\n   *     Not ideal, but appending our sourcemap *after* a pre-existing sourcemap still overrides, so the end-user is happy.\n   */\n  if (\n    outputText.substr(-sourceMapLengthWithoutPercentEncoding, prefixLength) ===\n    prefix\n  ) {\n    return (\n      outputText.slice(0, -sourceMapLengthWithoutPercentEncoding) +\n      sourceMapContent\n    );\n  }\n  // If anyone asks why we're not using URL, the URL equivalent is: `u = new URL('http://d'); u.pathname = \"/\" + sourcemapFilename; return u.pathname.slice(1);\n  const sourceMapLengthWithPercentEncoding =\n    prefixLength + encodeURI(sourcemapFilename).length;\n  if (\n    outputText.substr(-sourceMapLengthWithPercentEncoding, prefixLength) ===\n    prefix\n  ) {\n    return (\n      outputText.slice(0, -sourceMapLengthWithPercentEncoding) +\n      sourceMapContent\n    );\n  }\n\n  return `${outputText}\\n${sourceMapContent}`;\n}\n\n/**\n * Update the source map contents for improved output.\n */\nfunction updateSourceMap(sourceMapText: string, fileName: string) {\n  const sourceMap = JSON.parse(sourceMapText);\n  sourceMap.file = fileName;\n  sourceMap.sources = [fileName];\n  delete sourceMap.sourceRoot;\n  return JSON.stringify(sourceMap);\n}\n\n/**\n * Filter diagnostics.\n */\nfunction filterDiagnostics(\n  diagnostics: readonly _ts.Diagnostic[],\n  filters: DiagnosticFilter[]\n) {\n  return diagnostics.filter((d) =>\n    filters.every(\n      (f) =>\n        (!f.appliesToAllFiles &&\n          f.filenamesAbsolute.indexOf(d.file?.fileName!) === -1) ||\n        f.diagnosticsIgnored.indexOf(d.code) === -1\n    )\n  );\n}\n\n/**\n * Get token at file position.\n *\n * Reference: https://github.com/microsoft/TypeScript/blob/fcd9334f57d85b73dd66ad2d21c02e84822f4841/src/services/utilities.ts#L705-L731\n */\nfunction getTokenAtPosition(\n  ts: TSCommon,\n  sourceFile: _ts.SourceFile,\n  position: number\n): _ts.Node {\n  let current: _ts.Node = sourceFile;\n\n  outer: while (true) {\n    for (const child of current.getChildren(sourceFile)) {\n      const start = child.getFullStart();\n      if (start > position) break;\n\n      const end = child.getEnd();\n      if (position <= end) {\n        current = child;\n        continue outer;\n      }\n    }\n\n    return current;\n  }\n}\n\n/**\n * Create an implementation of node's ESM loader hooks.\n *\n * This may be useful if you\n * want to wrap or compose the loader hooks to add additional functionality or\n * combine with another loader.\n *\n * Node changed the hooks API, so there are two possible APIs.  This function\n * detects your node version and returns the appropriate API.\n *\n * @category ESM Loader\n */\nexport const createEsmHooks: typeof createEsmHooksFn = (\n  tsNodeService: Service\n) => (require('./esm') as typeof import('./esm')).createEsmHooks(tsNodeService);\n\n/**\n * When using `module: nodenext` or `module: node12`, there are two possible styles of emit depending in file extension or package.json \"type\":\n *\n * - CommonJS with dynamic imports preserved (not transformed into `require()` calls)\n * - ECMAScript modules with `import foo = require()` transformed into `require = createRequire(); const foo = require()`\n */\nexport type NodeModuleEmitKind = 'nodeesm' | 'nodecjs';\n","import { Command } from \"commander\";\nimport migrationCreateConnector from \"./hysteria_cli/migration_create_connector\";\nimport runMigrationsConnector from \"./hysteria_cli/migration_run_connector\";\nimport rollbackMigrationsConnector from \"./hysteria_cli/migration_rollback_connector\";\n\nconst program = new Command();\n\nprogram\n  .command(\"create:migration <name>\")\n  .description(\n    \"Create a new migration file, standard folder is database/migrations from the current directory you are now, you can change it in the env MIGRATION_PATH\",\n  )\n  .option(\n    \"-j, --javascript\",\n    \"Generate a javascript file instead of a default typescript one\",\n    false,\n  )\n  .action((name: string, option: { javascript: boolean }) => {\n    if (!name) {\n      console.error(\"Error: migrations name is required.\");\n      process.exit(1);\n    }\n\n    migrationCreateConnector(name, option.javascript);\n  });\n\nprogram\n  .command(\"run:migrations [runUntil]\")\n  .description(\n    \"Run pending migrations, if runUntil is provided, it will run all migrations until the provided migration name\",\n  )\n  .action(async (runUntil: string) => {\n    await runMigrationsConnector(runUntil);\n  });\n\nprogram\n  .command(\"rollback:migrations [rollbackUntil]\")\n  .description(\n    \"Rollbacks every migration that has been run, if rollbackUntil is provided, it will rollback all migrations until the provided migration name\",\n  )\n  .action(async (rollbackUntil: string) => {\n    await rollbackMigrationsConnector(rollbackUntil);\n  });\n\nprogram\n  .command(\"refresh:migrations\")\n  .description(\n    \"Rollbacks every migration that has been run and then run the migrations\",\n  )\n  .action(async () => {\n    await rollbackMigrationsConnector();\n    await runMigrationsConnector();\n  });\n\nprogram.parse(process.argv);\n","import dotenv from \"dotenv\";\nimport path from \"path\";\nimport MigrationTemplates from \"./resources/migration_templates\";\nimport fs from \"fs\";\nimport logger from \"../utils/logger\";\n\ndotenv.config();\n\nfunction getOrCreateMigrationPath(): string {\n  let migrationPath = process.env.MIGRATION_PATH || \"database/migrations\";\n  let currentPath = path.resolve(process.cwd(), migrationPath);\n\n  if (!fs.existsSync(currentPath)) {\n    fs.mkdirSync(currentPath, { recursive: true });\n  }\n\n  return currentPath;\n}\n\nexport default function migrationCreateConnector(\n  name: string,\n  js: boolean = false,\n) {\n  const migrationFolderPath = getOrCreateMigrationPath();\n  const timestamp = new Date().getTime();\n  const migrationFileName = !js\n    ? `${timestamp}_${name}.ts`\n    : `${timestamp}_${name}.js`;\n  const migrationFilePath = path.join(migrationFolderPath, migrationFileName);\n\n  const migrationTemplate = MigrationTemplates.basicMigrationTemplate(js);\n  fs.writeFileSync(migrationFilePath, migrationTemplate);\n  logger.info(`Migration created successfully at '${migrationFilePath}'.`);\n}\n","class Migration_templates {\n  basicMigrationTemplate(js: boolean = false): string {\n    if (js) {\n      return `import { Migration } from 'hysteria-orm';\n\nexport default class extends Migration {\n  async up() {\n    // Your migration logic here\n  }\n\n  async down() {\n    // Your rollback logic here\n  }\n}\n`;\n    }\n    return `import { Migration } from 'hysteria-orm';\n\nexport default class extends Migration {\n  async up(): Promise<void> {\n    // Your migration logic here\n  }\n\n  async down(): Promise<void> {\n    // Your rollback logic here\n  }\n}\n`;\n  }\n\n  selectAllFromMigrationsTemplate(): string {\n    return `SELECT * FROM migrations;`;\n  }\n\n  migrationTableTemplateMysql(): string {\n    return `CREATE TABLE IF NOT EXISTS \\`migrations\\`(\n    \\`id\\` INT NOT NULL AUTO_INCREMENT,\n    \\`name\\` VARCHAR(255) NOT NULL,\n    \\`timestamp\\` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    PRIMARY KEY (\\`id\\`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\n`;\n  }\n\n  migrationTableTemplatePg(): string {\n    return `CREATE TABLE IF NOT EXISTS migrations (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    timestamp TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP\n);\n`;\n  }\n\n  migrationTableTemplateSQLite(): string {\n    const now = new Date().toISOString();\n    return `CREATE TABLE IF NOT EXISTS migrations (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    name TEXT NOT NULL,\n    timestamp TEXT NOT NULL DEFAULT '${now}'\n);`;\n  }\n}\n\nexport default new Migration_templates();\n","import winston from \"winston\";\n\ninterface LogColors {\n  info: string;\n  warn: string;\n  error: string;\n  [key: string]: string;\n}\n\nconst colors: LogColors = {\n  info: \"\\x1b[32m\",\n  warn: \"\\x1b[33m\",\n  error: \"\\x1b[31m\",\n};\n\nconst logFormat = winston.format.combine(\n  winston.format.timestamp({ format: \"YYYY-MM-DD HH:mm:ss\" }),\n  winston.format.printf(({ level, message, timestamp }) => {\n    const color = colors[level] || \"\\x1b[0m\";\n    return `${timestamp} ${color}${level}\\x1b[0m: ${color}${message}\\x1b[0m`;\n  }),\n);\n\nconst consoleTransport = new winston.transports.Console();\nconst fileTransport = new winston.transports.File({ filename: \"logfile.log\" });\n\nconst logger = winston.createLogger({\n  format: logFormat,\n  transports: [consoleTransport, fileTransport],\n});\n\nexport function log(query: string, logs: boolean, params?: any[]) {\n  if (!logs) {\n    return;\n  }\n\n  if (params && params.length) {\n    params.forEach((param, index) => {\n      let formattedParam: any = null;\n\n      if (typeof param === \"string\") {\n        // Format string parameters\n        formattedParam = `'${param}'`;\n      } else if (\n        typeof param === \"object\" &&\n        param !== null &&\n        Object.keys(param).length > 0\n      ) {\n        // Format object parameters\n        formattedParam = `'${JSON.stringify(param)}'`;\n      } else {\n        // Use the parameter as is for other types (e.g., numbers)\n        formattedParam = param;\n      }\n\n      // Replace MySQL-style placeholders\n      query = query.replace(/\\?/, formattedParam);\n\n      // Replace PostgreSQL-style placeholders\n      const pgPlaceholder = new RegExp(`\\\\$${index + 1}`, \"g\");\n      query = query.replace(pgPlaceholder, formattedParam);\n    });\n  }\n\n  logger.info(\"\\n\" + query);\n}\n\nexport function queryError(error: any) {\n  logger.error(\"query Failed \", error);\n}\n\nexport default logger;\n","import dotenv from \"dotenv\";\nimport { runMigrationsPg } from \"./postgres/run_migration\";\nimport { runMigrationsSql } from \"./mysql/run_migration\";\nimport { runMigrationsSQLite } from \"./sqlite/run_migration\";\nimport logger from \"../utils/logger\";\n\ndotenv.config();\n\nexport default async function runMigrationsConnector(runUntil?: string) {\n  const databaseType = process.env.DB_TYPE;\n  if (!databaseType) {\n    throw new Error(\"Run migrations error: DB_TYPE env not set\");\n  }\n\n  logger.info(`Running migrations for ${databaseType}`);\n  switch (databaseType) {\n    case \"mariadb\":\n    case \"mysql\":\n      await runMigrationsSql(runUntil);\n      break;\n    case \"postgres\":\n      await runMigrationsPg(runUntil);\n      break;\n    case \"sqlite\":\n      await runMigrationsSQLite(runUntil);\n      break;\n    default:\n      throw new Error(\n        \"Invalid database type, must be mysql, postgres or sqlite, got: \" +\n          databaseType,\n      );\n  }\n\n  logger.info(\"Migrations ran successfully\");\n}\n","#!/usr/bin/env node\n\nimport dotenv from \"dotenv\";\nimport { MigrationTableType } from \"../resources/migration_table_type\";\nimport { Migration } from \"../../sql/migrations/migration\";\nimport { MigrationController } from \"../../sql/migrations/migration_controller\";\nimport {\n  BEGIN_TRANSACTION,\n  COMMIT_TRANSACTION,\n  ROLLBACK_TRANSACTION,\n} from \"../../sql/resources/query/TRANSACTION\";\nimport logger, { log } from \"../../utils/logger\";\nimport { SqlDataSource } from \"../../sql/sql_data_source\";\nimport { getMigrationTable, getMigrations } from \"../migration_utils\";\nimport { PgClientInstance } from \"../../sql/sql_data_source_types\";\n\ndotenv.config();\n\nexport async function runMigrationsPg(runUntil?: string): Promise<void> {\n  const sql = await SqlDataSource.connect();\n  const sqlConnection = sql.getCurrentConnection() as PgClientInstance;\n  try {\n    log(BEGIN_TRANSACTION, true);\n    await sqlConnection.query(BEGIN_TRANSACTION);\n\n    const migrationTable: MigrationTableType[] =\n      await getMigrationTable(sqlConnection);\n    const migrations: Migration[] = await getMigrations();\n    const pendingMigrations = migrations.filter(\n      (migration) =>\n        !migrationTable\n          .map((table) => table.name)\n          .includes(migration.migrationName),\n    );\n\n    if (pendingMigrations.length === 0) {\n      logger.info(\"No pending migrations.\");\n      await sql.closeConnection();\n      process.exit(0);\n    }\n\n    if (runUntil) {\n      const runUntilIndex = pendingMigrations.findIndex(\n        (migration) => migration.migrationName === runUntil,\n      );\n\n      if (runUntilIndex === -1) {\n        throw new Error(`Migration ${runUntil} not found.`);\n      }\n\n      const filteredMigrations = pendingMigrations.slice(0, runUntilIndex + 1);\n      const migrationController = new MigrationController(\n        sql,\n        sqlConnection,\n        \"postgres\",\n      );\n\n      await migrationController.upMigrations(filteredMigrations);\n      log(COMMIT_TRANSACTION, true);\n      await sqlConnection.query(COMMIT_TRANSACTION);\n      return;\n    }\n\n    const migrationController = new MigrationController(\n      sql,\n      sqlConnection,\n      \"postgres\",\n    );\n\n    await migrationController.upMigrations(pendingMigrations);\n\n    log(COMMIT_TRANSACTION, true);\n    await sqlConnection.query(COMMIT_TRANSACTION);\n  } catch (error: any) {\n    log(ROLLBACK_TRANSACTION, true);\n    await sqlConnection.query(ROLLBACK_TRANSACTION);\n    throw error;\n  } finally {\n    await sql.closeConnection();\n  }\n}\n","import { SqlDataSource } from \"../sql_data_source\";\nimport { Migration } from \"./migration\";\nimport { log } from \"../../utils/logger\";\nimport {\n  MysqlConnectionInstance,\n  PgClientInstance,\n  SqlConnectionType,\n  SqlDataSourceType,\n  SqliteConnectionInstance,\n} from \"../sql_data_source_types\";\n\nexport class MigrationController {\n  protected sqlDataSource: SqlDataSource;\n  protected sqlConnection: SqlConnectionType;\n  private sqlType: SqlDataSourceType;\n\n  constructor(\n    sqlDataSource: SqlDataSource,\n    sqlConnection: SqlConnectionType,\n    sqlType: SqlDataSourceType,\n  ) {\n    this.sqlConnection = sqlConnection;\n    this.sqlType = sqlType;\n    this.sqlDataSource = sqlDataSource;\n  }\n\n  async upMigrations(migrations: Migration[]): Promise<void> {\n    try {\n      for (const migration of migrations) {\n        await migration.up();\n        const statements = migration.schema.queryStatements;\n        for (const statement of statements) {\n          if (\n            !statement ||\n            statement === \"\" ||\n            statement === \";\" ||\n            statement === \",\"\n          ) {\n            continue;\n          }\n          await this.localQuery(statement);\n        }\n\n        await this.addMigrationToMigrationTable(migration);\n        if (migration.afterUp) {\n          await migration.afterUp(this.sqlDataSource);\n        }\n      }\n    } catch (error: any) {\n      throw error;\n    }\n  }\n\n  async downMigrations(migrations: Migration[]): Promise<void> {\n    migrations = migrations.reverse();\n    try {\n      for (const migration of migrations) {\n        await migration.down();\n        const statements = migration.schema.queryStatements;\n        for (const statement of statements) {\n          if (\n            !statement ||\n            statement === \"\" ||\n            statement === \";\" ||\n            statement === \",\"\n          ) {\n            continue;\n          }\n          await this.localQuery(statement);\n        }\n        await this.deleteMigrationFromMigrationTable(migration);\n        if (migration.afterDown) {\n          await migration.afterDown(this.sqlDataSource);\n        }\n      }\n    } catch (error: any) {\n      throw new Error(error);\n    }\n  }\n\n  private async localQuery(text: string, params: any[] = []): Promise<void> {\n    if (this.sqlType === \"mysql\" || this.sqlType === \"mariadb\") {\n      text = text.replace(/PLACEHOLDER/g, \"?\");\n      log(text, true, params);\n      await (this.sqlConnection as MysqlConnectionInstance).query(text, params);\n      return;\n    } else if (this.sqlType === \"postgres\") {\n      let index = 1;\n      text = text.replace(/PLACEHOLDER/g, () => `$${index++}`);\n      log(text, true, params);\n      await (this.sqlConnection as PgClientInstance).query(text, params);\n      return;\n    } else if (this.sqlType === \"sqlite\") {\n      text = text.replace(/PLACEHOLDER/g, \"?\");\n      log(text, true, params);\n      await new Promise<void>((resolve, reject) => {\n        (this.sqlConnection as SqliteConnectionInstance).run(\n          text,\n          params,\n          (error) => {\n            if (error) {\n              reject(error);\n            } else {\n              resolve();\n            }\n          },\n        );\n      });\n      return;\n    }\n\n    throw new Error(\"No database connection found while running migration\");\n  }\n\n  async addMigrationToMigrationTable(migration: Migration) {\n    const completeUtcTimestamp = new Date();\n    const timestamp = completeUtcTimestamp\n      .toISOString()\n      .replace(\"T\", \" \")\n      .replace(/\\.\\d{3}Z$/, \"\");\n\n    const insertMigrationSql = `INSERT INTO migrations (name, timestamp) VALUES (PLACEHOLDER, PLACEHOLDER)`;\n\n    await this.localQuery(insertMigrationSql, [\n      migration.migrationName,\n      timestamp,\n    ]);\n  }\n\n  async deleteMigrationFromMigrationTable(migration: Migration) {\n    const deleteMigrationSql = `DELETE FROM migrations WHERE name = PLACEHOLDER`;\n\n    await this.localQuery(deleteMigrationSql, [migration.migrationName]);\n  }\n\n  async removeMigrationTable() {\n    const dropMigrationTableSql = `\n      DROP TABLE IF EXISTS migrations\n    `;\n\n    log(dropMigrationTableSql, true);\n    await this.localQuery(dropMigrationTableSql);\n  }\n}\n","export const BEGIN_TRANSACTION = \"BEGIN; \\n\";\nexport const COMMIT_TRANSACTION = \"COMMIT; \\n\";\nexport const ROLLBACK_TRANSACTION = \"ROLLBACK; \\n\";\n","import { DataSource } from \"../data_source\";\nimport {\n  Mysql2Import,\n  PgImport,\n  Sqlite3Import,\n} from \"../drivers/driver_constants\";\nimport { DriverFactory } from \"../drivers/drivers_factory\";\nimport logger, { log } from \"../utils/logger\";\nimport { Model } from \"./models/model\";\nimport { MysqlModelManager } from \"./mysql/mysql_model_manager\";\nimport { PostgresModelManager } from \"./postgres/postgres_model_manager\";\nimport {\n  SqlConnectionType,\n  SqlDataSourceInput,\n  SqlDataSourceType,\n  SqlDriverSpecificOptions,\n  ModelManager,\n  MysqlConnectionInstance,\n  PgClientInstance,\n  SqliteConnectionInstance,\n} from \"./sql_data_source_types\";\nimport { SqliteModelManager } from \"./sqlite/sql_lite_model_manager\";\nimport { Transaction } from \"./transactions/transaction\";\n\nexport class SqlDataSource extends DataSource {\n  isConnected: boolean;\n  protected sqlConnection!: SqlConnectionType;\n  private static instance: SqlDataSource | null = null;\n\n  private constructor(input?: SqlDataSourceInput) {\n    super(input);\n    this.isConnected = false;\n  }\n\n  getDbType(): SqlDataSourceType {\n    return this.type as SqlDataSourceType;\n  }\n\n  /**\n   * @description Connects to the database establishing a connection. If no connection details are provided, the default values from the env will be taken instead\n   * @description The User input connection details will always come first\n   */\n  static async connect(\n    input?: SqlDataSourceInput,\n    cb?: () => Promise<void> | void,\n  ): Promise<SqlDataSource> {\n    const sqlDataSource = new this(input);\n    const driver = await DriverFactory.getDriver(sqlDataSource.type);\n    switch (sqlDataSource.type) {\n      case \"mysql\":\n      case \"mariadb\":\n        const mysqlDriver = driver.client as Mysql2Import;\n        sqlDataSource.sqlConnection = await mysqlDriver.createConnection({\n          host: sqlDataSource.host,\n          port: sqlDataSource.port,\n          user: sqlDataSource.username,\n          password: sqlDataSource.password,\n          database: sqlDataSource.database,\n          ...input?.mysqlOptions,\n        });\n        break;\n\n      case \"postgres\":\n        const pgDriver = driver.client as PgImport;\n        sqlDataSource.sqlConnection = new pgDriver.Client({\n          host: sqlDataSource.host,\n          port: sqlDataSource.port,\n          user: sqlDataSource.username,\n          password: sqlDataSource.password,\n          database: sqlDataSource.database,\n          ...input?.pgOptions,\n        });\n        await (sqlDataSource.sqlConnection as PgClientInstance).connect();\n        break;\n\n      case \"sqlite\":\n        const sqlite3 = driver.client as Sqlite3Import;\n        sqlDataSource.sqlConnection = new sqlite3.Database(\n          sqlDataSource.database,\n          sqlite3.OPEN_READWRITE | sqlite3.OPEN_CREATE,\n          (err) => {\n            if (err) {\n              throw new Error(`Error while connecting to sqlite: ${err}`);\n            }\n          },\n        );\n        break;\n\n      default:\n        throw new Error(`Unsupported data source type: ${sqlDataSource.type}`);\n    }\n\n    sqlDataSource.isConnected = true;\n    SqlDataSource.instance = sqlDataSource;\n    cb?.();\n    return sqlDataSource;\n  }\n\n  static getInstance(): SqlDataSource {\n    if (!SqlDataSource.instance) {\n      throw new Error(\"sql database connection not established\");\n    }\n\n    return SqlDataSource.instance;\n  }\n\n  /**\n   * @description Executes a callback function with the provided connection details using the main connection established with SqlDataSource.connect() method\n   * @description The callback automatically commits or rollbacks the transaction based on the result of the callback\n   * @description NOTE: trx must always be passed to single methods that are part of the transaction\n   */\n  static async useTransaction(\n    cb: (trx: Transaction) => Promise<void>,\n    driverSpecificOptions?: SqlDriverSpecificOptions,\n  ): Promise<void> {\n    const trx = await this.getInstance().startTransaction(\n      driverSpecificOptions,\n    );\n    try {\n      await cb(trx).then(async () => {\n        if (!trx.isActive) {\n          return;\n        }\n\n        await trx.commit();\n      });\n    } catch (error) {\n      if (!trx.isActive) {\n        return;\n      }\n\n      await trx.rollback();\n      throw error;\n    }\n  }\n\n  /**\n   * @description Executes a callback function with the provided connection details\n   * @description The callback automatically commits or rollbacks the transaction based on the result of the callback\n   * @description NOTE: trx must always be passed to single methods that are part of the transaction\n   */\n  async useTransaction(\n    cb: (trx: Transaction) => Promise<void>,\n    driverSpecificOptions?: SqlDriverSpecificOptions,\n  ): Promise<void> {\n    const trx = await this.startTransaction(driverSpecificOptions);\n    try {\n      await cb(trx).then(async () => {\n        if (!trx.isActive) {\n          return;\n        }\n\n        await trx.commit();\n      });\n    } catch (error) {\n      if (!trx.isActive) {\n        return;\n      }\n\n      await trx.rollback();\n      throw error;\n    }\n  }\n\n  /**\n   * @description Starts a transaction on the database and returns the transaction object\n   * @description This creates a new connection to the database, you can customize the connection details using the driverSpecificOptions\n   */\n  async startTransaction(\n    driverSpecificOptions?: SqlDriverSpecificOptions,\n  ): Promise<Transaction> {\n    const sqlDataSource = new SqlDataSource({\n      type: this.type as SqlDataSourceType,\n      host: this.host,\n      port: this.port,\n      username: this.username,\n      password: this.password,\n      database: this.database,\n      logs: this.logs,\n      ...driverSpecificOptions,\n    });\n\n    await sqlDataSource.connectDriver();\n    sqlDataSource.isConnected = true;\n    const mysqlTrx = new Transaction(sqlDataSource, this.logs);\n    await mysqlTrx.startTransaction();\n    return mysqlTrx;\n  }\n\n  /**\n   * @description Alias for startTransaction {Promise<Transaction>} trx\n   */\n  async beginTransaction(\n    driverSpecificOptions?: SqlDriverSpecificOptions,\n  ): Promise<Transaction> {\n    return this.startTransaction(driverSpecificOptions);\n  }\n\n  /**\n   * @description Alias for startTransaction {Promise<Transaction>} trx\n   */\n  async transaction(\n    driverSpecificOptions?: SqlDriverSpecificOptions,\n  ): Promise<Transaction> {\n    return this.startTransaction(driverSpecificOptions);\n  }\n\n  /**\n   * @description Returns model manager for the provided model\n   */\n  getModelManager<T extends Model>(\n    model: { new (): T } | typeof Model,\n  ): ModelManager<T> {\n    if (!this.isConnected) {\n      throw new Error(\"sql database connection not established\");\n    }\n\n    switch (this.type) {\n      case \"mysql\":\n      case \"mariadb\":\n        return new MysqlModelManager<T>(\n          this.type,\n          model as typeof Model,\n          this.sqlConnection as MysqlConnectionInstance,\n          this.logs,\n          this,\n        );\n      case \"postgres\":\n        return new PostgresModelManager<T>(\n          model as typeof Model,\n          this.sqlConnection as PgClientInstance,\n          this.logs,\n          this,\n        );\n      case \"sqlite\":\n        return new SqliteModelManager<T>(\n          model as typeof Model,\n          this.sqlConnection as SqliteConnectionInstance,\n          this.logs,\n          this,\n        );\n      default:\n        throw new Error(`Unsupported data source type: ${this.type}`);\n    }\n  }\n\n  /**\n   * @description Executes a callback function with the provided connection details\n   */\n  static async useConnection(\n    connectionDetails: SqlDataSourceInput,\n    cb: (sqlDataSource: SqlDataSource) => Promise<void>,\n  ) {\n    const customSqlInstance = new SqlDataSource(connectionDetails);\n    await customSqlInstance.connectDriver({\n      mysqlOptions: connectionDetails.mysqlOptions,\n      pgOptions: connectionDetails.pgOptions,\n    });\n    customSqlInstance.isConnected = true;\n    try {\n      await cb(customSqlInstance).then(async () => {\n        if (!customSqlInstance.isConnected) {\n          return;\n        }\n\n        await customSqlInstance.closeConnection();\n      });\n    } catch (error) {\n      if (customSqlInstance.isConnected) {\n        await customSqlInstance.closeConnection();\n      }\n      throw error;\n    }\n  }\n\n  /**\n   * @description Returns the current connection {Promise<SqlConnectionType>} sqlConnection\n   */\n  getCurrentConnection(): SqlConnectionType {\n    return this.sqlConnection;\n  }\n\n  /**\n   * @description Returns separate raw sql connection\n   */\n  async getRawConnection(\n    driverSpecificOptions?: SqlDriverSpecificOptions,\n  ): Promise<SqlConnectionType> {\n    switch (this.type) {\n      case \"mysql\":\n      case \"mariadb\":\n        const mysqlDriver = (await DriverFactory.getDriver(\"mysql\"))\n          .client as Mysql2Import;\n        return await mysqlDriver.createConnection({\n          host: this.host,\n          port: this.port,\n          user: this.username,\n          password: this.password,\n          database: this.database,\n          ...driverSpecificOptions?.mysqlOptions,\n        });\n      case \"postgres\":\n        const pg = (await DriverFactory.getDriver(\"postgres\"))\n          .client as PgImport;\n        const client = new pg.Client({\n          host: this.host,\n          port: this.port,\n          user: this.username,\n          password: this.password,\n          database: this.database,\n          ...driverSpecificOptions?.pgOptions,\n        });\n        await client.connect();\n        return client;\n\n      case \"sqlite\":\n        const sqlite3 = (await DriverFactory.getDriver(\"sqlite\"))\n          .client as Sqlite3Import;\n        return new sqlite3.Database(\n          this.database,\n          sqlite3.OPEN_READWRITE | sqlite3.OPEN_CREATE,\n          (err) => {\n            if (err) {\n              throw new Error(`Error while connecting to sqlite: ${err}`);\n            }\n          },\n        );\n      default:\n        throw new Error(`Unsupported data source type: ${this.type}`);\n    }\n  }\n\n  /**\n   * @description Closes the connection to the database\n   */\n  async closeConnection(): Promise<void> {\n    if (!this.isConnected) {\n      logger.warn(\"Connection already closed\", this);\n      return;\n    }\n\n    logger.warn(\"Closing connection\", this);\n    switch (this.type) {\n      case \"mysql\":\n      case \"mariadb\":\n        await (this.sqlConnection as MysqlConnectionInstance).end();\n        this.isConnected = false;\n        SqlDataSource.instance = null;\n        break;\n      case \"postgres\":\n        await (this.sqlConnection as PgClientInstance).end();\n        this.isConnected = false;\n        SqlDataSource.instance = null;\n        break;\n      case \"sqlite\":\n        await new Promise<void>((resolve, reject) => {\n          (this.sqlConnection as SqliteConnectionInstance).close((err) => {\n            if (err) {\n              reject(err);\n            }\n            resolve();\n          });\n        });\n        this.isConnected = false;\n        SqlDataSource.instance = null;\n        break;\n      default:\n        throw new Error(`Unsupported data source type: ${this.type}`);\n    }\n  }\n\n  /**\n   * @description Closes the main connection to the database established with SqlDataSource.connect() method\n   */\n  static async closeConnection(): Promise<void> {\n    const sqlDataSource = SqlDataSource.getInstance();\n    if (!sqlDataSource.isConnected) {\n      logger.warn(\"Connection already closed\", sqlDataSource);\n      return;\n    }\n\n    logger.warn(\"Closing connection\", sqlDataSource);\n    switch (sqlDataSource.type) {\n      case \"mysql\":\n      case \"mariadb\":\n        await (sqlDataSource.sqlConnection as MysqlConnectionInstance).end();\n        sqlDataSource.isConnected = false;\n        SqlDataSource.instance = null;\n        break;\n      case \"postgres\":\n        await (sqlDataSource.sqlConnection as PgClientInstance).end();\n        sqlDataSource.isConnected = false;\n        SqlDataSource.instance = null;\n        break;\n      case \"sqlite\":\n        await new Promise<void>((resolve, reject) => {\n          (sqlDataSource.sqlConnection as SqliteConnectionInstance).close(\n            (err) => {\n              if (err) {\n                reject(err);\n              }\n              resolve();\n            },\n          );\n        });\n        sqlDataSource.isConnected = false;\n        SqlDataSource.instance = null;\n        break;\n      default:\n        throw new Error(`Unsupported data source type: ${sqlDataSource.type}`);\n    }\n  }\n\n  /**\n   * @description Disconnects the connection to the database\n   * @alias closeConnection\n   */\n  async disconnect(): Promise<void> {\n    return this.closeConnection();\n  }\n\n  /**\n   * @description Disconnects the main connection to the database established with SqlDataSource.connect() method\n   * @alias closeMainConnection\n   */\n  static async disconnect(): Promise<void> {\n    return SqlDataSource.closeConnection();\n  }\n\n  /**\n   * @description Executes a raw query on the database\n   */\n  async rawQuery<T = any>(query: string, params: any[] = []): Promise<T> {\n    if (!this.isConnected) {\n      throw new Error(\"sql database connection not established\");\n    }\n\n    log(query, this.logs, params);\n    switch (this.type) {\n      case \"mysql\":\n      case \"mariadb\":\n        const [mysqlRows] = await (\n          this.sqlConnection as MysqlConnectionInstance\n        ).execute(query, params);\n\n        return mysqlRows as T;\n      case \"postgres\":\n        const { rows } = await (this.sqlConnection as PgClientInstance).query(\n          query,\n          params as any[],\n        );\n\n        return rows as T;\n      case \"sqlite\":\n        return new Promise((resolve, reject) => {\n          (this.sqlConnection as SqliteConnectionInstance).all(\n            query,\n            params,\n            (err, rows) => {\n              if (err) {\n                reject(err);\n              }\n\n              resolve(rows as T);\n            },\n          );\n        });\n      default:\n        throw new Error(`Unsupported data source type: ${this.type}`);\n    }\n  }\n\n  /**\n   * @description Executes a raw query on the database with the base connection created with SqlDataSource.connect() method\n   */\n  static async rawQuery<T = any>(\n    query: string,\n    params: any[] = [],\n  ): Promise<T> {\n    const sqlDataSource = SqlDataSource.getInstance();\n    if (!sqlDataSource || !sqlDataSource.isConnected) {\n      throw new Error(\"sql database connection not established\");\n    }\n\n    log(query, SqlDataSource.getInstance()?.logs ?? false, params);\n    switch (sqlDataSource.type) {\n      case \"mysql\":\n      case \"mariadb\":\n        const [mysqlRows] = await (\n          sqlDataSource.sqlConnection as MysqlConnectionInstance\n        ).execute(query, params);\n\n        return mysqlRows as T;\n      case \"postgres\":\n        const { rows } = await (\n          sqlDataSource.sqlConnection as PgClientInstance\n        ).query(query, params);\n\n        return rows as T;\n      case \"sqlite\":\n        return new Promise((resolve, reject) => {\n          (sqlDataSource.sqlConnection as SqliteConnectionInstance).all(\n            query,\n            params,\n            (err, rows) => {\n              if (err) {\n                reject(err);\n              }\n\n              resolve(rows as T);\n            },\n          );\n        });\n      default:\n        throw new Error(`Unsupported data source type: ${sqlDataSource.type}`);\n    }\n  }\n\n  private async connectDriver(\n    driverSpecificOptions?: SqlDriverSpecificOptions,\n  ): Promise<void> {\n    switch (this.type) {\n      case \"mysql\":\n      case \"mariadb\":\n        const mysql = (await DriverFactory.getDriver(\"mysql\"))\n          .client as Mysql2Import;\n        this.sqlConnection = await mysql.createConnection({\n          host: this.host,\n          port: this.port,\n          user: this.username,\n          password: this.password,\n          database: this.database,\n          ...driverSpecificOptions?.mysqlOptions,\n        });\n        break;\n      case \"postgres\":\n        const pg = (await DriverFactory.getDriver(\"postgres\"))\n          .client as PgImport;\n        this.sqlConnection = new pg.Client({\n          host: this.host,\n          port: this.port,\n          user: this.username,\n          password: this.password,\n          database: this.database,\n          ...driverSpecificOptions?.pgOptions,\n        });\n        await (this.sqlConnection as PgClientInstance).connect();\n        break;\n      case \"sqlite\":\n        const sqlite3 = (await DriverFactory.getDriver(\"sqlite\"))\n          .client as Sqlite3Import;\n        this.sqlConnection = new sqlite3.Database(\n          this.database,\n          sqlite3.OPEN_READWRITE | sqlite3.OPEN_CREATE,\n          (err) => {\n            if (err) {\n              throw new Error(`Error while connecting to sqlite: ${err}`);\n            }\n          },\n        );\n        break;\n      default:\n        throw new Error(`Unsupported data source type: ${this.type}`);\n    }\n  }\n}\n","import dotenv from \"dotenv\";\nimport {\n  MongoClientImport,\n  Mysql2Import,\n  MysqlCreateConnectionOptions,\n  PgClientOptions,\n  PgImport,\n} from \"./drivers/driver_constants\";\nimport { MongoOptions } from \"mongodb\";\n\ndotenv.config();\n\n/*\n * Creates a datasource for the selected database type with the provided credentials\n */\nexport type DataSourceType =\n  | \"mysql\"\n  | \"postgres\"\n  | \"mariadb\"\n  | \"sqlite\"\n  | \"mongo\";\n\n/**\n * @description By default the connection details can be provided in the .env file, you can still override each prop with your actual connection details in the input\n */\nexport interface DataSourceInput {\n  type?: DataSourceType;\n  readonly host?: string;\n  readonly port?: number;\n  readonly username?: string;\n  readonly password?: string;\n  readonly database?: string;\n  readonly logs?: boolean;\n  readonly mysqlOptions?: MysqlCreateConnectionOptions;\n  readonly pgOptions?: PgClientOptions;\n  readonly mongoOptions?: MongoOptions;\n\n  /**\n   * @description Mongo specific option, sql databases won't use this property\n   */\n  readonly url?: string;\n}\nexport abstract class DataSource {\n  protected type!: DataSourceType;\n  protected host!: string;\n  protected port!: number;\n  protected username!: string;\n  protected password!: string;\n  protected database!: string;\n  protected url!: string;\n  logs!: boolean;\n\n  protected constructor(input?: DataSourceInput) {\n    if (this.type === \"mongo\") {\n      this.handleMongoSource(input?.url);\n      return;\n    }\n\n    this.handleSqlSource(input);\n  }\n\n  protected handleMongoSource(url?: string) {\n    this.type = \"mongo\";\n  }\n\n  protected handleSqlSource(input?: DataSourceInput) {\n    this.type = (input?.type || process.env.DB_TYPE) as DataSourceType;\n    this.host = (input?.host || process.env.DB_HOST) as string;\n    this.port = +(input?.port as number) || +(process.env.DB_PORT as string);\n    this.username = (input?.username || process.env.DB_USER) as string;\n    this.password = (input?.password || process.env.DB_PASSWORD) as string;\n    this.database = (input?.database || process.env.DB_DATABASE) as string;\n    this.logs = Boolean(input?.logs) || Boolean(process.env.DB_LOGS) || false;\n\n    if (!this.port) {\n      switch (this.type) {\n        case \"mysql\":\n        case \"mariadb\":\n          this.port = 3306;\n          break;\n        case \"postgres\":\n          this.port = 5432;\n          break;\n        case \"mongo\":\n          this.port = 27017;\n          break;\n        case \"sqlite\":\n          break;\n        default:\n          throw new Error(\n            \"Database type not provided in the envs nor in the connection details\",\n          );\n      }\n    }\n  }\n}\n","import { DataSourceType } from \"../data_source\";\nimport { Driver } from \"./driver\";\nimport { DriverSpecificOptions } from \"./driver_constants\";\nimport { PgDriver } from \"./pg_driver\";\nimport { MongoDriver } from \"./mongo_driver\";\nimport { MysqlDriver } from \"./mysql_driver\";\nimport { RedisDriver } from \"./redis_driver\";\nimport { Sqlite3Driver } from \"./sqlite3_driver\";\n\nexport class DriverFactory {\n  static async getDriver(\n    client: DataSourceType | \"redis\",\n    driverSpecificOptions?: DriverSpecificOptions,\n  ): Promise<Driver> {\n    switch (client) {\n      case \"mysql\":\n      case \"mariadb\":\n        return MysqlDriver.createDriver(driverSpecificOptions);\n      case \"postgres\":\n        return PgDriver.createDriver(driverSpecificOptions);\n      case \"sqlite\":\n        return Sqlite3Driver.createDriver(driverSpecificOptions);\n      case \"mongo\":\n        return MongoDriver.createDriver(driverSpecificOptions);\n      case \"redis\":\n        return RedisDriver.createDriver(driverSpecificOptions);\n      default:\n        throw new Error(\n          `Driver ${client} not found, il likely not installed, try running npm install ${client}`,\n        );\n    }\n  }\n}\n","import { DataSourceType } from \"../data_source\";\nimport { Driver } from \"./driver\";\nimport {\n  DriverSpecificOptions,\n  DriverNotFoundError,\n  PgImport,\n} from \"./driver_constants\";\n\nexport class PgDriver extends Driver {\n  override type: DataSourceType | \"redis\" = \"postgres\";\n  override client: PgImport;\n\n  constructor(client: PgImport, driverSpecificOptions?: DriverSpecificOptions) {\n    super(driverSpecificOptions);\n    this.client = client;\n  }\n\n  static async createDriver(\n    driverSpecificOptions?: DriverSpecificOptions,\n  ): Promise<Driver> {\n    const pg = await import(\"pg\").catch(() => {\n      throw new DriverNotFoundError(\"pg\");\n    });\n    if (!pg) {\n      throw new DriverNotFoundError(\"pg\");\n    }\n\n    return new PgDriver(pg.default, driverSpecificOptions);\n  }\n}\n","import { DataSourceType } from \"../data_source\";\nimport { DriverImport, DriverSpecificOptions } from \"./driver_constants\";\n\nexport abstract class Driver {\n  abstract type: DataSourceType | \"redis\";\n  abstract client: DriverImport;\n  options?: DriverSpecificOptions;\n\n  constructor(driverSpecificOptions?: DriverSpecificOptions) {\n    this.options = driverSpecificOptions;\n  }\n\n  static async createDriver(\n    _driverSpecificOptions: DriverSpecificOptions,\n  ): Promise<Driver> {\n    throw new Error(\"Cannot be used by abstract class\");\n  }\n}\n","export type Mysql2Import = typeof import(\"mysql2/promise\");\nexport type PgImport = typeof import(\"pg\");\nexport type Sqlite3Import = typeof import(\"sqlite3\");\nexport type MongoClientImport = typeof import(\"mongodb\");\nexport type RedisImport = typeof import(\"ioredis\");\n\ntype ExcludeStringFromOptions<T> = T extends string ? never : T;\n\nexport type MysqlCreateConnectionOptions = Parameters<\n  Mysql2Import[\"createConnection\"]\n>[0];\nexport type PgClientOptions = ExcludeStringFromOptions<\n  ConstructorParameters<PgImport[\"Client\"]>[0]\n>;\nexport type MongoConnectionOptions =\n  | ConstructorParameters<MongoClientImport[\"MongoClient\"]>[0]\n  | ConstructorParameters<MongoClientImport[\"MongoClient\"]>[1];\nexport type RedisOptions = ConstructorParameters<RedisImport[\"default\"]>; // TODO: This is not correct, but it's a start\n\nexport type DriverSpecificOptions = {\n  mysqlOptions?: MysqlCreateConnectionOptions;\n  pgOptions?: PgClientOptions;\n  mongoOptions?: MongoConnectionOptions;\n  redisOptions?: RedisOptions;\n};\n\nexport type DriverImport =\n  | Mysql2Import\n  | PgImport\n  | Sqlite3Import\n  | MongoClientImport\n  | RedisImport;\n\nexport class DriverNotFoundError extends Error {\n  constructor(driverName: string) {\n    super(driverName);\n    this.name = `Driver ${driverName} not found, it's likely not installed, try running npm install ${driverName}`;\n  }\n}\n","import { DataSourceType } from \"../data_source\";\nimport { Driver } from \"./driver\";\nimport {\n  DriverSpecificOptions,\n  DriverNotFoundError,\n  MongoClientImport,\n} from \"./driver_constants\";\n\nexport class MongoDriver extends Driver {\n  override type: DataSourceType | \"redis\" = \"postgres\";\n  override client: MongoClientImport;\n\n  constructor(\n    client: MongoClientImport,\n    driverSpecificOptions?: DriverSpecificOptions,\n  ) {\n    super(driverSpecificOptions);\n    this.client = client;\n  }\n\n  static async createDriver(\n    driverSpecificOptions?: DriverSpecificOptions,\n  ): Promise<Driver> {\n    const mongo = await import(\"mongodb\").catch(() => {\n      throw new DriverNotFoundError(\"mongodb\");\n    });\n    if (!mongo) {\n      throw new DriverNotFoundError(\"mongodb\");\n    }\n\n    return new MongoDriver(mongo, driverSpecificOptions);\n  }\n}\n","import { DataSourceType } from \"../data_source\";\nimport { Driver } from \"./driver\";\nimport {\n  Mysql2Import,\n  DriverSpecificOptions,\n  DriverNotFoundError,\n} from \"./driver_constants\";\n\nexport class MysqlDriver extends Driver {\n  override type: DataSourceType | \"redis\" = \"mysql\";\n  override client: Mysql2Import;\n\n  constructor(\n    client: Mysql2Import,\n    driverSpecificOptions?: DriverSpecificOptions,\n  ) {\n    super(driverSpecificOptions);\n    this.client = client;\n  }\n\n  static async createDriver(\n    driverSpecificOptions?: DriverSpecificOptions,\n  ): Promise<Driver> {\n    const mysql2 = await import(\"mysql2/promise\").catch(() => {\n      throw new DriverNotFoundError(\"mysql2\");\n    });\n    if (!mysql2) {\n      throw new DriverNotFoundError(\"mysql\");\n    }\n\n    return new MysqlDriver(mysql2.default, driverSpecificOptions);\n  }\n}\n","import { DataSourceType } from \"../data_source\";\nimport { Driver } from \"./driver\";\nimport {\n  DriverSpecificOptions,\n  DriverNotFoundError,\n  RedisImport,\n} from \"./driver_constants\";\n\nexport class RedisDriver extends Driver {\n  override type: DataSourceType | \"redis\" = \"postgres\";\n  override client: RedisImport;\n\n  constructor(\n    client: RedisImport,\n    driverSpecificOptions?: DriverSpecificOptions,\n  ) {\n    super(driverSpecificOptions);\n    this.client = client;\n  }\n\n  static async createDriver(\n    driverSpecificOptions?: DriverSpecificOptions,\n  ): Promise<Driver> {\n    const redis = await import(\"ioredis\").catch(() => {\n      throw new DriverNotFoundError(\"ioredis\");\n    });\n    if (!redis) {\n      throw new DriverNotFoundError(\"ioredis\");\n    }\n\n    return new RedisDriver(redis, driverSpecificOptions);\n  }\n}\n","import { DataSourceType } from \"../data_source\";\nimport { Driver } from \"./driver\";\nimport {\n  DriverSpecificOptions,\n  DriverNotFoundError,\n  Sqlite3Import,\n} from \"./driver_constants\";\n\nexport class Sqlite3Driver extends Driver {\n  override type: DataSourceType | \"redis\" = \"postgres\";\n  override client: Sqlite3Import;\n\n  constructor(\n    client: Sqlite3Import,\n    driverSpecificOptions?: DriverSpecificOptions,\n  ) {\n    super(driverSpecificOptions);\n    this.client = client;\n  }\n\n  static async createDriver(\n    driverSpecificOptions?: DriverSpecificOptions,\n  ): Promise<Driver> {\n    const sqlite3 = await import(\"sqlite3\").catch(() => {\n      throw new DriverNotFoundError(\"sqlite3\");\n    });\n    if (!sqlite3) {\n      throw new DriverNotFoundError(\"sqlite3\");\n    }\n\n    return new Sqlite3Driver(sqlite3.default, driverSpecificOptions);\n  }\n}\n","import { log } from \"../../utils/logger\";\nimport { Model } from \"../models/model\";\nimport { ModelManager } from \"../models/model_manager/model_manager\";\nimport {\n  FindType,\n  UnrestrictedFindType,\n  FindOneType,\n  UnrestrictedFindOneType,\n} from \"../models/model_manager/model_manager_types\";\nimport SqlModelManagerUtils from \"../models/model_manager/model_manager_utils\";\nimport { parseDatabaseDataIntoModelResponse } from \"../serializer\";\nimport { SqlDataSource } from \"../sql_data_source\";\nimport { MysqlConnectionInstance } from \"../sql_data_source_types\";\nimport { MysqlQueryBuilder } from \"./mysql_query_builder\";\n\nexport class MysqlModelManager<T extends Model> extends ModelManager<T> {\n  protected type: \"mysql\" | \"mariadb\";\n  protected mysqlConnection: MysqlConnectionInstance;\n  protected sqlModelManagerUtils: SqlModelManagerUtils<T>;\n\n  /**\n   * Constructor for MysqlModelManager class.\n   *\n   * @param {typeof Model} model - Model constructor.\n   * @param {Connection} mysqlConnection - MySQL connection pool.\n   * @param {boolean} logs - Flag to enable or disable logging.\n   */\n  constructor(\n    type: \"mysql\" | \"mariadb\",\n    model: typeof Model,\n    mysqlConnection: MysqlConnectionInstance,\n    logs: boolean,\n    sqlDataSource: SqlDataSource,\n  ) {\n    super(model, logs, sqlDataSource);\n    this.type = type;\n    this.mysqlConnection = mysqlConnection;\n    this.sqlModelManagerUtils = new SqlModelManagerUtils<T>(\n      this.type,\n      mysqlConnection,\n    );\n  }\n\n  /**\n   * Find method to retrieve multiple records from the database based on the input conditions.\n   *\n   * @param {FindType} input - Optional query parameters for filtering, ordering, and pagination.\n   * @returns Promise resolving to an array of models.\n   */\n  async find(input?: FindType<T> | UnrestrictedFindType<T>): Promise<T[]> {\n    if (!input) {\n      return await this.query().many();\n    }\n\n    const query = this.query();\n    if (input.select) {\n      query.select(...(input.select as string[]));\n    }\n\n    if (input.relations) {\n      input.relations.forEach((relation) => {\n        query.with(relation);\n      });\n    }\n\n    if (input.where) {\n      Object.entries(input.where).forEach(([key, value]) => {\n        query.where(key, value);\n      });\n    }\n\n    if (input.orderBy) {\n      Object.entries(input.orderBy).forEach(([key, value]) => {\n        query.orderBy(key, value);\n      });\n    }\n\n    if (input.limit) {\n      query.limit(input.limit);\n    }\n\n    if (input.offset) {\n      query.offset(input.offset);\n    }\n\n    if (input.groupBy) {\n      query.groupBy(...(input.groupBy as string[]));\n    }\n\n    return await query.many({ ignoreHooks: input.ignoreHooks || [] });\n  }\n\n  /**\n   * Find a single record from the database based on the input conditions.\n   *\n   * @param {FindOneType} input - query parameters for filtering and selecting a single record.\n   * @returns Promise resolving to a single model or null if not found.\n   */\n  async findOne(\n    input: FindOneType<T> | UnrestrictedFindOneType<T>,\n  ): Promise<T | null> {\n    const results = await this.find({\n      ...input,\n      limit: 1,\n    });\n\n    if (!results.length) {\n      return null;\n    }\n\n    return results[0];\n  }\n\n  /**\n   * Find a single record by its PK from the database.\n   *\n   * @param {string | number | boolean} value - PK of the record to retrieve, hooks will not have any effect, since it's a direct query for the PK.\n   * @returns Promise resolving to a single model or null if not found.\n   */\n  async findOneByPrimaryKey(\n    value: string | number | boolean,\n  ): Promise<T | null> {\n    if (!this.model.primaryKey) {\n      throw new Error(\n        \"Model \" + this.model.table + \" has no primary key to be retrieved by\",\n      );\n    }\n\n    return await this.query()\n      .where(this.model.primaryKey as string, value)\n      .one();\n  }\n\n  /**\n   * Save a new model instance to the database.\n   *\n   * @param {Model} model - Model instance to be saved.\n   * @param {TransactionType} trx - TransactionType to be used on the save operation.\n   * @returns Promise resolving to the saved model or null if saving fails.\n   */\n  async insert(model: Partial<T>): Promise<T | null> {\n    this.model.beforeInsert(model as T);\n    const { query, params } = this.sqlModelManagerUtils.parseInsert(\n      model as T,\n      this.model,\n      this.sqlDataSource.getDbType(),\n    );\n\n    log(query, this.logs, params);\n    const [result]: any = await this.mysqlConnection.query<any>(query, params);\n\n    // If pk it's not autogenerated but it's passed in creation process, the model it's retrieved by it's primary key\n    if (this.model.primaryKey && model[this.model.primaryKey as keyof T]) {\n      const pkValue = model[this.model.primaryKey as keyof T] as\n        | string\n        | number;\n      return await this.findOneByPrimaryKey(pkValue);\n    }\n\n    return await this.findOneByPrimaryKey(result[\"insertId\"]);\n  }\n\n  /**\n   * Create multiple model instances in the database.\n   *\n   * @param {Model} model - Model instance to be saved.\n   * @param {TransactionType} trx - TransactionType to be used on the save operation.\n   * @returns Promise resolving to an array of saved models or null if saving fails.\n   */\n  async insertMany(models: Partial<T>[]): Promise<T[]> {\n    models.forEach((model) => {\n      this.model.beforeInsert(model as T);\n    });\n\n    const { query, params } = this.sqlModelManagerUtils.parseMassiveInsert(\n      models as T[],\n      this.model,\n      this.sqlDataSource.getDbType(),\n    );\n\n    log(query, this.logs, params);\n    const [rows]: any = await this.mysqlConnection.query(query, params);\n\n    if (!rows.affectedRows) {\n      return [];\n    }\n\n    // If pk it's not autogenerated but it's passed in creation process, the model it's retrieved by it's primary key\n    if (this.model.primaryKey && models[0][this.model.primaryKey as keyof T]) {\n      const idsToFetchList = models.map(\n        (model) => model[this.model.primaryKey as keyof T],\n      ) as string[];\n\n      const primaryKeyList = idsToFetchList.map((key) => `'${key}'`).join(\",\");\n\n      return await this.query()\n        .whereIn(this.model.primaryKey as string, idsToFetchList)\n        .orderByRaw(`FIELD(${this.model.primaryKey}, ${primaryKeyList})`)\n        .many();\n    }\n\n    const idsToFetchList = Array.from(\n      { length: rows.affectedRows },\n      (_, i) => i + rows.insertId,\n    );\n\n    return await this.query()\n      .whereIn(this.model.primaryKey as string, idsToFetchList)\n      .many();\n  }\n\n  /**\n   * Update an existing model instance in the database.\n   * @param {Model} model - Model instance to be updated.\n   * @param {TransactionType} trx - TransactionType to be used on the update operation.\n   * @returns Promise resolving to the updated model or null if updating fails.\n   */\n  async updateRecord(model: T): Promise<T | null> {\n    if (!this.model.primaryKey) {\n      throw new Error(\n        \"Model \" +\n          this.model.table +\n          \" has no primary key to be updated, try save\",\n      );\n    }\n\n    const updateQuery = this.sqlModelManagerUtils.parseUpdate(\n      model,\n      this.model,\n      this.sqlDataSource.getDbType(),\n    );\n    log(updateQuery.query, this.logs, updateQuery.params);\n    await this.mysqlConnection.query(updateQuery.query, updateQuery.params);\n    if (!this.model.primaryKey) {\n      log(\"Model has no primary key so no record can be retrieved\", this.logs);\n      return null;\n    }\n\n    return await this.findOneByPrimaryKey(\n      model[this.model.primaryKey as keyof T] as string | number,\n    );\n  }\n\n  /**\n   * @description Delete a record from the database from the given model.\n   *\n   * @param {Model} model - Model to delete.\n   * @param {TransactionType} trx - TransactionType to be used on the delete operation.\n   * @returns Promise resolving to the deleted model or null if deleting fails.\n   */\n  async deleteRecord(model: T): Promise<T | null> {\n    if (!this.model.primaryKey) {\n      throw new Error(\n        \"Model \" + this.model.table + \" has no primary key to be deleted from\",\n      );\n    }\n    const { query, params } = this.sqlModelManagerUtils.parseDelete(\n      this.model.table,\n      this.model.primaryKey,\n      model[this.model.primaryKey as keyof T] as string,\n    );\n\n    log(query, this.logs, params);\n    const [rows]: any = await this.mysqlConnection.query<any>(query, params);\n    if (this.sqlDataSource.getDbType() === \"mariadb\") {\n      return (await parseDatabaseDataIntoModelResponse(\n        [rows[0] as T],\n        this.model,\n      )) as T;\n    }\n\n    return model;\n  }\n\n  /**\n   * Create and return a new instance of the Mysql_query_builder for building more complex SQL queries.\n   *\n   * @returns {Mysql_query_builder<Model>} - Instance of Mysql_query_builder.\n   */\n  query(): MysqlQueryBuilder<T> {\n    return new MysqlQueryBuilder<T>(\n      this.type,\n      this.model,\n      this.model.table,\n      this.mysqlConnection,\n      this.logs,\n      false,\n      this.sqlDataSource,\n    );\n  }\n}\n","import { QueryBuilder } from \"../../query_builder/query_builder\";\nimport { SqlDataSource } from \"../../sql_data_source\";\nimport { Model, getBaseModelInstance } from \"../model\";\nimport {\n  FindType,\n  UnrestrictedFindType,\n  UnrestrictedFindOneType,\n  FindOneType,\n} from \"./model_manager_types\";\n\nexport abstract class ModelManager<T extends Model> {\n  protected logs: boolean;\n  protected sqlDataSource: SqlDataSource;\n  protected model: typeof Model;\n  protected modelInstance: T;\n  protected throwError: boolean;\n\n  /**\n   * @param model\n   * @param logs\n   * @param sqlDataSource Passed if a custom connection is provided\n   */\n  protected constructor(\n    model: typeof Model,\n    logs: boolean,\n    sqlDataSource: SqlDataSource,\n  ) {\n    this.logs = logs;\n    this.model = model;\n    this.throwError = false;\n    this.modelInstance = getBaseModelInstance<T>();\n    this.sqlDataSource = sqlDataSource;\n  }\n\n  /**\n   * @description Finds all records that match the input\n   * @param input\n   */\n  abstract find(input?: FindType<T>): Promise<T[]>;\n  abstract find(input?: UnrestrictedFindType<T>): Promise<T[]>;\n  abstract find(input?: FindType<T> | UnrestrictedFindType<T>): Promise<T[]>;\n\n  /**\n   * @description Finds the first record that matches the input\n   * @param input\n   */\n  abstract findOne(input: UnrestrictedFindOneType<T>): Promise<T | null>;\n  abstract findOne(input: FindOneType<T>): Promise<T | null>;\n  abstract findOne(\n    input: FindOneType<T> | UnrestrictedFindOneType<T>,\n  ): Promise<T | null>;\n\n  /**\n   * @description Finds the first record that matches the input or throws an error\n   */\n  async findOneOrFail(\n    input: (FindOneType<T> | UnrestrictedFindOneType<T>) & {\n      customError?: Error;\n    },\n  ): Promise<T> {\n    const result = await this.findOne(input);\n    if (result === null) {\n      if (input.customError) {\n        throw input.customError;\n      }\n\n      throw new Error(\"ROW_NOT_FOUND\");\n    }\n\n    return result;\n  }\n\n  /**\n   * @description Finds a record by its primary key\n   * @param value\n   * @param throwErrorOnNull\n   */\n  abstract findOneByPrimaryKey(\n    value: string | number | boolean,\n    throwErrorOnNull: boolean,\n  ): Promise<T | null>;\n\n  /**\n   * @description Creates a new record\n   * @param model\n   * @param trx\n   */\n  abstract insert(model: Partial<T>): Promise<T | null>;\n\n  /**\n   * @description Creates multiple records\n   * @param model\n   * @param trx\n   */\n  abstract insertMany(model: Partial<T>[]): Promise<T[]>;\n\n  /**\n   * @description Updates a record\n   * @param model\n   * @param trx\n   */\n  abstract updateRecord(model: T): Promise<T | null>;\n\n  /**\n   * @description Deletes a record\n   * @param model\n   * @param trx\n   */\n  abstract deleteRecord(model: T): Promise<T | null>;\n\n  /**\n   * @description Returns a query builder\n   */\n  abstract query(): QueryBuilder<T>;\n}\n","import \"reflect-metadata\";\nimport { convertCase } from \"../../utils/case_utils\";\nimport { PaginatedData } from \"../pagination\";\nimport { ModelQueryBuilder, OneOptions } from \"../query_builder/query_builder\";\nimport {\n  parseDatabaseDataIntoModelResponse,\n  addDynamicColumnsToModel,\n} from \"../serializer\";\nimport { SqlDataSource } from \"../sql_data_source\";\nimport {\n  belongsTo,\n  column,\n  ColumnOptions,\n  dynamicColumn,\n  getPrimaryKey,\n  hasMany,\n  hasOne,\n  manyToMany,\n} from \"./model_decorators\";\nimport {\n  FindType,\n  UnrestrictedFindType,\n  FindOneType,\n  UnrestrictedFindOneType,\n  SelectableType,\n  DynamicColumnType,\n} from \"./model_manager/model_manager_types\";\nimport { Transaction } from \"../transactions/transaction\";\nimport { Entity } from \"../../entity\";\nimport { baseSoftDeleteDate } from \"../../utils/date_utils\";\nimport { ModelManager } from \"../sql_data_source_types\";\n\nexport type ModelWithoutExtraColumns<T extends Model> = Omit<\n  Partial<T>,\n  \"$additionalColumns\"\n>;\n\nexport type BaseModelMethodOptions = {\n  useConnection?: SqlDataSource;\n  trx?: Transaction;\n};\n\nexport function getBaseTableName(target: typeof Model): string {\n  const className = target.name;\n  return className.endsWith(\"s\")\n    ? convertCase(className, \"snake\")\n    : convertCase(className, \"snake\") + \"s\";\n}\n\nexport function getBaseModelInstance<T extends Model>(): T {\n  return { $additionalColumns: {} } as T;\n}\n\nconst tableMap = new Map<typeof Model, string>();\nconst primaryKeyMap = new Map<typeof Model, string>();\n\n/**\n * @description Represents a Table in the Database\n */\nexport abstract class Model extends Entity {\n  /**\n   * @description The sql sqlInstance generated by SqlDataSource.connect\n   */\n  static sqlInstance: SqlDataSource;\n\n  /**\n   * @description Table name for the model, if not set it will be the plural snake case of the model name given that is in PascalCase (es. User -> users)\n   */\n  static tableName: string;\n\n  /**\n   * @description Static getter for table;\n   * @internal\n   */\n  static get table(): string {\n    if (!tableMap.has(this)) {\n      tableMap.set(this, this.tableName || getBaseTableName(this));\n    }\n\n    return tableMap.get(this)!;\n  }\n\n  /**\n   * @description Getter for the primary key of the model\n   */\n  static get primaryKey(): string | undefined {\n    if (!primaryKeyMap.has(this)) {\n      primaryKeyMap.set(this, getPrimaryKey(this));\n    }\n\n    return primaryKeyMap.get(this)!;\n  }\n\n  /**\n   * @description Constructor for the model, it's not meant to be used directly, it just initializes the $additionalColumns, it's advised to only use the static methods to interact with the database to save the model\n   * @description Using the constructor could lead to unexpected behavior, if you want to create a new record use the insert method\n   * @deprecated\n   */\n  constructor() {\n    super();\n  }\n\n  /**\n   * @description Returns all the records for the given model\n   */\n  static async all<T extends Model>(\n    this: new () => T | typeof Model,\n    options: BaseModelMethodOptions = {},\n  ): Promise<T[]> {\n    const typeofModel = this as unknown as typeof Model;\n    const modelManager = typeofModel.dispatchModelManager<T>(options);\n    return await modelManager.find();\n  }\n\n  /**\n   * @description Gives a query sqlInstance for the given model\n   */\n  static query<T extends Model>(\n    this: new () => T | typeof Model,\n    options: BaseModelMethodOptions = {},\n  ): ModelQueryBuilder<T> {\n    const typeofModel = this as unknown as typeof Model;\n    const modelManager = typeofModel.dispatchModelManager<T>(options);\n    return modelManager.query();\n  }\n\n  /**\n   * @description Finds the first record in the database\n   * @deprecated Used only for debugging purposes, use findOne or query instead\n   */\n  static async first<T extends Model>(\n    this: new () => T | typeof Model,\n    options: OneOptions & BaseModelMethodOptions = {},\n  ): Promise<T | null> {\n    const typeofModel = this as unknown as typeof Model;\n    const modelManager = typeofModel.dispatchModelManager<T>(options);\n    return modelManager.query().one(options);\n  }\n\n  /**\n   * @description Finds records for the given model\n   */\n  static async find<T extends Model>(\n    this: new () => T | typeof Model,\n    findOptions?: FindType<T> | UnrestrictedFindType<T>,\n    options: BaseModelMethodOptions = {},\n  ): Promise<T[]> {\n    const typeofModel = this as unknown as typeof Model;\n    const modelManager = typeofModel.dispatchModelManager<T>(options);\n    return modelManager.find(findOptions);\n  }\n\n  /**\n   * @description Finds a record for the given model or throws an error if it doesn't exist\n   */\n  static async findOneOrFail<T extends Model>(\n    this: new () => T | typeof Model,\n    findOneOptions: (FindOneType<T> | UnrestrictedFindOneType<T>) & {\n      customError?: Error;\n    },\n    options: BaseModelMethodOptions = {},\n  ): Promise<T | null> {\n    const typeofModel = this as unknown as typeof Model;\n    const modelManager = typeofModel.dispatchModelManager<T>(options);\n    return modelManager.findOneOrFail(findOneOptions);\n  }\n\n  /**\n   * @description Finds a record for the given model\n   */\n  static async findOne<T extends Model>(\n    this: new () => T | typeof Model,\n    findOneOptions: (FindOneType<T> | UnrestrictedFindOneType<T>) &\n      BaseModelMethodOptions,\n    options: BaseModelMethodOptions = {},\n  ): Promise<T | null> {\n    const typeofModel = this as unknown as typeof Model;\n    const modelManager = typeofModel.dispatchModelManager<T>(options);\n    return modelManager.findOne(findOneOptions);\n  }\n\n  /**\n   * @description Finds a record for the given model for the given id, \"id\" must be set in the model in order for it to work\n   */\n  static async findOneByPrimaryKey<T extends Model>(\n    this: new () => T | typeof Model,\n    value: string | number | boolean,\n    options: BaseModelMethodOptions = {},\n  ): Promise<T | null> {\n    const typeofModel = this as unknown as typeof Model;\n    const modelManager = typeofModel.dispatchModelManager<T>(options);\n    return modelManager.findOneByPrimaryKey(value);\n  }\n\n  /**\n   * @description Refreshes a model from the database, the model must have a primary key defined\n   */\n  static async refresh<T extends Model>(\n    this: new () => T | typeof Model,\n    model: T,\n    options: BaseModelMethodOptions = {},\n  ): Promise<T | null> {\n    const typeofModel = this as unknown as typeof Model;\n    const modelManager = typeofModel.dispatchModelManager<T>(options);\n    const primaryKey = typeofModel.primaryKey as keyof T;\n    const primaryKeyValue = model[primaryKey];\n    const refreshedModel = await modelManager.findOneByPrimaryKey(\n      primaryKeyValue as string,\n    );\n    if (!refreshedModel) {\n      return null;\n    }\n\n    refreshedModel.$additionalColumns = model.$additionalColumns;\n    return refreshedModel;\n  }\n\n  /**\n   * @description Saves a new record to the database\n   * @description $additionalColumns will be ignored if set in the modelData and won't be returned in the response\n   */\n  static async insert<T extends Model>(\n    this: new () => T | typeof Model,\n    modelData: ModelWithoutExtraColumns<T>,\n    options: BaseModelMethodOptions = {},\n  ): Promise<T | null> {\n    const typeofModel = this as unknown as typeof Model;\n    const modelManager = typeofModel.dispatchModelManager<T>(options);\n    return modelManager.insert(modelData as T);\n  }\n\n  /**\n   * @description Saves multiple records to the database\n   */\n  static async insertMany<T extends Model>(\n    this: new () => T | typeof Model,\n    modelsData: ModelWithoutExtraColumns<T>[],\n    options: BaseModelMethodOptions = {},\n  ): Promise<T[]> {\n    const typeofModel = this as unknown as typeof Model;\n    const modelManager = typeofModel.dispatchModelManager<T>(options);\n    return modelManager.insertMany(modelsData as T[]);\n  }\n\n  /**\n   * @description Updates a record to the database\n   */\n  static async updateRecord<T extends Model>(\n    this: new () => T | typeof Model,\n    modelSqlInstance: T,\n    options: BaseModelMethodOptions = {},\n  ): Promise<T | null> {\n    const typeofModel = this as unknown as typeof Model;\n    const modelManager = typeofModel.dispatchModelManager<T>(options);\n    const updatedModel = await modelManager.updateRecord(modelSqlInstance);\n    if (!updatedModel) {\n      return null;\n    }\n\n    updatedModel.$additionalColumns = modelSqlInstance.$additionalColumns;\n    return updatedModel;\n  }\n\n  /**\n   * @description Finds the first record or creates a new one if it doesn't exist\n   */\n  static async firstOrCreate<T extends Model>(\n    this: new () => T | typeof Model,\n    searchCriteria: ModelWithoutExtraColumns<T>,\n    createData: ModelWithoutExtraColumns<T>,\n    options: BaseModelMethodOptions = {},\n  ): Promise<T> {\n    const typeofModel = this as unknown as typeof Model;\n    const modelManager = typeofModel.dispatchModelManager<T>(options);\n    const doesExist = await modelManager.findOne({\n      where: searchCriteria,\n    });\n\n    if (doesExist) {\n      return doesExist;\n    }\n\n    return (await modelManager.insert(createData as T)) as T;\n  }\n\n  /**\n   * @description Updates or creates a new record\n   */\n  static async upsert<T extends Model>(\n    this: new () => T | typeof Model,\n    searchCriteria: ModelWithoutExtraColumns<T>,\n    data: ModelWithoutExtraColumns<T>,\n    options: { updateOnConflict?: boolean } & BaseModelMethodOptions = {\n      updateOnConflict: true,\n    },\n  ): Promise<T> {\n    const typeofModel = this as unknown as typeof Model;\n    const modelManager = typeofModel.dispatchModelManager<T>(options);\n    const doesExist = await modelManager.findOne({\n      where: searchCriteria,\n    });\n\n    if (doesExist) {\n      (data as T)[typeofModel.primaryKey as keyof T] =\n        doesExist[typeofModel.primaryKey as keyof T];\n\n      if (options.updateOnConflict) {\n        return (await modelManager.updateRecord(data as T)) as T;\n      }\n\n      return doesExist;\n    }\n\n    return (await modelManager.insert(data as T)) as T;\n  }\n\n  /**\n   * @description Updates or creates multiple records\n   */\n  static async upsertMany<T extends Model>(\n    this: new () => T | typeof Model,\n    searchCriteria: SelectableType<T>[],\n    data: ModelWithoutExtraColumns<T>[],\n    options: { updateOnConflict?: boolean } & BaseModelMethodOptions = {\n      updateOnConflict: true,\n    },\n  ): Promise<T[]> {\n    const typeofModel = this as unknown as typeof Model;\n    const modelManager = typeofModel.dispatchModelManager<T>(options);\n\n    if (\n      !data.every((record) =>\n        searchCriteria.every((column) => column in record),\n      )\n    ) {\n      throw new Error(\n        \"Conflict columns are not present in the data, please make sure to include them in the data, \" +\n          searchCriteria.join(\", \"),\n      );\n    }\n\n    const results: T[] = [];\n\n    for (let i = 0; i < data.length; i++) {\n      const record = data[i];\n      const search = searchCriteria.reduce((acc, column) => {\n        acc[column] = record[column];\n        return acc;\n      }, {} as ModelWithoutExtraColumns<T>);\n\n      const doesExist = await modelManager.findOne({\n        where: search,\n      });\n\n      if (doesExist) {\n        (record as T)[typeofModel.primaryKey as keyof T] =\n          doesExist[typeofModel.primaryKey as keyof T];\n\n        if (options.updateOnConflict) {\n          results.push((await modelManager.updateRecord(record as T)) as T);\n          continue;\n        }\n\n        results.push(doesExist);\n        continue;\n      }\n\n      results.push((await modelManager.insert(record as T)) as T);\n    }\n\n    return results;\n  }\n\n  /**\n   * @description Deletes a record to the database\n   */\n  static async deleteRecord<T extends Model>(\n    this: new () => T | typeof Model,\n    modelSqlInstance: T,\n    options: BaseModelMethodOptions = {},\n  ): Promise<T | null> {\n    const typeofModel = this as unknown as typeof Model;\n    const modelManager = typeofModel.dispatchModelManager<T>(options);\n    return modelManager.deleteRecord(modelSqlInstance);\n  }\n\n  /**\n   * @description Soft Deletes a record to the database\n   */\n  static async softDelete<T extends Model>(\n    this: new () => T | typeof Model,\n    modelSqlInstance: T,\n    options?: {\n      column?: string;\n      value?: string | number | boolean;\n    } & BaseModelMethodOptions,\n  ): Promise<T> {\n    const typeofModel = this as unknown as typeof Model;\n    const {\n      column = \"deletedAt\" as SelectableType<T>,\n      value = baseSoftDeleteDate(new Date()),\n    } = options || {};\n\n    modelSqlInstance[column as keyof T] = value as T[keyof T];\n    const modelManager = typeofModel.dispatchModelManager<T>({\n      trx: options?.trx,\n      useConnection: options?.useConnection,\n    });\n    await modelManager.updateRecord(modelSqlInstance);\n\n    if (typeof value === \"string\") {\n      modelSqlInstance[column as keyof T] = new Date(value) as T[keyof T];\n    }\n\n    modelSqlInstance[column as keyof T] = value as T[keyof T];\n    return (await parseDatabaseDataIntoModelResponse(\n      [modelSqlInstance],\n      typeofModel,\n    )) as T;\n  }\n\n  /**\n   * @description Adds dynamic columns to the model that are not defined in the Table and are defined in the model\n   * @description It does not support custom connection or transaction\n   */\n  static async addDynamicColumns<T extends Model>(\n    this: new () => T | typeof Model,\n    data: T | T[] | PaginatedData<T>,\n    dynamicColumns: DynamicColumnType<T>[],\n  ): Promise<T | T[] | PaginatedData<T>> {\n    const typeofModel = this as unknown as typeof Model;\n    typeofModel.establishConnection();\n    if (Array.isArray(data)) {\n      for (const model of data) {\n        await addDynamicColumnsToModel(\n          typeofModel,\n          model,\n          dynamicColumns as string[],\n        );\n      }\n\n      return data as T[];\n    }\n\n    if (!Array.isArray(data)) {\n      await addDynamicColumnsToModel(\n        typeofModel,\n        data,\n        dynamicColumns as string[],\n      );\n\n      return data as T;\n    }\n\n    for (const model of (data as PaginatedData<T>).data) {\n      await addDynamicColumnsToModel(\n        typeofModel,\n        model,\n        dynamicColumns as string[],\n      );\n    }\n\n    return data as PaginatedData<T>;\n  }\n\n  /**\n   * @description Merges the provided data with the sqlInstance\n   */\n  static combineProps<T extends Model>(sqlInstance: T, data: Partial<T>): void {\n    for (const key in data) {\n      Object.assign(sqlInstance, { [key]: data[key] });\n    }\n  }\n\n  /**\n   * @description Adds a beforeFetch clause to the model, adding the ability to modify the query before fetching the data\n   */\n  static beforeFetch(queryBuilder: ModelQueryBuilder<any>): void {\n    queryBuilder;\n  }\n\n  /**\n   * @description Adds a beforeInsert clause to the model, adding the ability to modify the data after fetching the data\n   */\n  static beforeInsert(data: any): void {\n    return data;\n  }\n\n  /**\n   * @description Adds a beforeUpdate clause to the model, adding the ability to modify the query before updating the data\n   */\n  static beforeUpdate(queryBuilder: ModelQueryBuilder<any>): void {\n    queryBuilder;\n  }\n\n  /**\n   * @description Adds a beforeDelete clause to the model, adding the ability to modify the query before deleting the data\n   */\n  static beforeDelete(queryBuilder: ModelQueryBuilder<any>): void {\n    queryBuilder;\n  }\n\n  /**\n   * @description Adds a afterFetch clause to the model, adding the ability to modify the data after fetching the data\n   */\n  static async afterFetch(data: Model[]): Promise<Model[]> {\n    return data;\n  }\n\n  // JS Static methods\n\n  /**\n   * @description Defines a column in the model, useful in javascript in order to not have to rely on decorators since are not supported without a transpiler like babel\n   * @javascript\n   */\n  static column(columnName: string, options: ColumnOptions = {}): void {\n    // take the column decorator and apply it automatically\n    column(options)(this.prototype, columnName);\n  }\n\n  /**\n   * @description Defines a dynamic column in the model, useful in javascript in order to not have to rely on decorators since are not supported without a transpiler like babel\n   * @javascript\n   */\n  static hasOne(\n    columnName: string,\n    model: () => typeof Model,\n    foreignKey: string,\n  ): void {\n    hasOne(model, foreignKey)(this.prototype, columnName);\n  }\n\n  /**\n   * @description Defines a dynamic column in the model, useful in javascript in order to not have to rely on decorators since are not supported without a transpiler like babel\n   * @javascript\n   */\n  static hasMany(\n    columnName: string,\n    model: () => typeof Model,\n    foreignKey: string,\n  ): void {\n    hasMany(model, foreignKey)(this.prototype, columnName);\n  }\n\n  /**\n   * @description Defines a dynamic column in the model, useful in javascript in order to not have to rely on decorators since are not supported without a transpiler like babel\n   * @javascript\n   */\n  static belongsTo(\n    columnName: string,\n    model: () => typeof Model,\n    foreignKey: string,\n  ): void {\n    belongsTo(model, foreignKey)(this.prototype, columnName);\n  }\n\n  /**\n   * @description Defines a dynamic column in the model, useful in javascript in order to not have to rely on decorators since are not supported without a transpiler like babel\n   * @javascript\n   */\n  static manyToMany(\n    columnName: string,\n    model: () => typeof Model,\n    throughModel: string,\n    foreignKey: string,\n  ): void {\n    manyToMany(model, throughModel, foreignKey)(this.prototype, columnName);\n  }\n\n  /**\n   * @description Defines a dynamic column in the model, useful in javascript in order to not have to rely on decorators since are not supported without a transpiler like babel\n   * @javascript\n   */\n  static dynamicColumn(columnName: string, func: () => any): void {\n    dynamicColumn(columnName)(this.prototype, func.name);\n  }\n\n  /**\n   * @description Establishes a connection to the database instantiated from the SqlDataSource.connect method, this is done automatically when using the static methods\n   * @description This method is meant to be used only if you want to establish sql sqlInstance of the model directly\n   * @internal\n   */\n  private static establishConnection(): void {\n    const sql = SqlDataSource.getInstance();\n    if (!sql) {\n      throw new Error(\n        \"sql sqlInstance not initialized, did you defined it in SqlDataSource.connect static method?\",\n      );\n    }\n\n    this.sqlInstance = sql;\n  }\n\n  /**\n   * @description Gives the correct model manager with the correct connection based on the options provided\n   */\n  private static dispatchModelManager<T extends Model>(\n    this: typeof Model,\n    options?: BaseModelMethodOptions,\n  ): ModelManager<T> {\n    if (options?.useConnection) {\n      return options.useConnection.getModelManager<T>(\n        this as unknown as typeof Model,\n      );\n    }\n\n    if (options?.trx) {\n      return options.trx.sqlDataSource.getModelManager<T>(\n        this as unknown as typeof Model,\n      );\n    }\n\n    const typeofModel = this as unknown as typeof Model;\n    typeofModel.establishConnection();\n    return typeofModel.sqlInstance.getModelManager<T>(typeofModel);\n  }\n}\n","export type CaseConvention =\n  | \"camel\"\n  | \"snake\"\n  | \"none\"\n  | RegExp\n  | ((column: string) => string);\n\nfunction camelToSnakeCase(camelCase: any) {\n  if (typeof camelCase !== \"string\" || !camelCase) {\n    return camelCase;\n  }\n\n  if (camelCase === camelCase.toLowerCase()) {\n    return camelCase;\n  }\n\n  return camelCase.replace(/([a-z0-9])([A-Z])/g, \"$1_$2\").toLowerCase();\n}\n\nfunction fromSnakeToCamelCase(snake: any) {\n  if (typeof snake !== \"string\" || !snake) {\n    return snake;\n  }\n\n  if (snake === snake.toUpperCase()) {\n    return snake;\n  }\n\n  return snake.replace(/(_\\w)/g, (x) => x[1].toUpperCase());\n}\n\nexport function convertCase(value: any, to: CaseConvention) {\n  if (to === \"none\") {\n    return value;\n  }\n\n  if (to === \"snake\") {\n    return camelToSnakeCase(value);\n  }\n\n  if (to === \"camel\") {\n    return fromSnakeToCamelCase(value);\n  }\n\n  if (to instanceof RegExp) {\n    return value.replace(to, (x: string) => x[1].toUpperCase());\n  }\n\n  return to(value);\n}\n","import { convertCase } from \"../utils/case_utils\";\nimport { isNestedObject } from \"../utils/json_utils\";\nimport { Model } from \"./models/model\";\nimport {\n  getRelations,\n  getModelColumns,\n  getDynamicColumns,\n} from \"./models/model_decorators\";\nimport {\n  isRelationDefinition,\n  Relation,\n  RelationEnum,\n} from \"./models/relations/relation\";\n\nexport async function parseDatabaseDataIntoModelResponse<T extends Model>(\n  models: T[],\n  typeofModel: typeof Model,\n  relationModels: { [relationName: string]: Model[] }[] = [],\n  modelSelectedColumns: string[] = [],\n): Promise<T | T[] | null> {\n  if (!models.length) {\n    return null;\n  }\n\n  const relations = getRelations(typeofModel);\n\n  const serializedModels = models.map((model) => {\n    const serializedModel = serializeModel(\n      model,\n      typeofModel,\n      modelSelectedColumns,\n    );\n    processRelation(serializedModel, typeofModel, relations, relationModels);\n\n    return serializedModel;\n  });\n\n  return serializedModels.length === 1 ? serializedModels[0] : serializedModels;\n}\n\nfunction serializeModel<T extends Record<string, any>>(\n  model: T,\n  typeofModel: typeof Model,\n  modelSelectedColumns: string[] = [],\n): T {\n  const casedModel: Record<string, any> = {};\n  const columns = getModelColumns(typeofModel);\n  const hiddenColumns = columns\n    .filter((column) => column.hidden)\n    .map((column) => column.columnName);\n\n  for (const key in model) {\n    if (key === \"$additionalColumns\") {\n      processAdditionalColumns(model, key, casedModel, typeofModel);\n      continue;\n    }\n\n    if (\n      !model.hasOwnProperty(key) ||\n      hiddenColumns.includes(key) ||\n      (modelSelectedColumns.length && !modelSelectedColumns.includes(key))\n    ) {\n      continue;\n    }\n\n    const originalValue = model[key];\n    // Include null values\n    if (originalValue == null) {\n      casedModel[convertCase(key, typeofModel.modelCaseConvention)] =\n        originalValue;\n      continue;\n    }\n\n    if (isRelationDefinition(originalValue)) {\n      continue;\n    }\n\n    const camelCaseKey = convertCase(key, typeofModel.modelCaseConvention);\n    if (isNestedObject(originalValue) && !Array.isArray(originalValue)) {\n      casedModel[camelCaseKey] = convertToModelCaseConvention(\n        originalValue,\n        typeofModel,\n      );\n      continue;\n    }\n\n    if (Array.isArray(originalValue)) {\n      continue;\n    }\n\n    const modelColumn = columns.find((column) => column.columnName === key);\n    if (modelColumn && modelColumn.serialize) {\n      casedModel[camelCaseKey] = modelColumn.serialize(originalValue);\n      continue;\n    }\n\n    casedModel[camelCaseKey] = originalValue;\n  }\n\n  return casedModel as T;\n}\n\nfunction processAdditionalColumns(\n  model: Record<string, any>,\n  key: string,\n  casedModel: Record<string, any>,\n  typeofModel: typeof Model,\n) {\n  if (!Object.keys(model[key]).length) {\n    return;\n  }\n\n  const $additionalColumns = Object.keys(model[key]).reduce(\n    (acc, objKey) => {\n      acc[convertCase(objKey, typeofModel.modelCaseConvention)] =\n        model[key][objKey];\n      return acc;\n    },\n    {} as Record<string, any>,\n  );\n\n  casedModel[key] = $additionalColumns;\n}\n\nfunction processRelation(\n  serializedModel: Record<string, any>,\n  typeofModel: typeof Model,\n  relations: Relation[],\n  relationModels: { [relationName: string]: Model[] }[],\n) {\n  relations.forEach((relation: Relation) => {\n    const relationModel = relationModels.find(\n      (relationModel) => relationModel[relation.columnName],\n    );\n\n    if (!relationModel) {\n      return;\n    }\n\n    const relatedModels = relationModel[relation.columnName];\n    const foreignKey = convertCase(\n      relation.foreignKey,\n      typeofModel.modelCaseConvention,\n    ) as string;\n    const primaryKey = convertCase(\n      typeofModel.primaryKey,\n      typeofModel.modelCaseConvention,\n    ) as string;\n\n    switch (relation.type) {\n      case RelationEnum.belongsTo:\n        const relatedModelMap = new Map<any, Model>();\n        const casedPrimaryKey = convertCase(\n          primaryKey,\n          typeofModel.databaseCaseConvention,\n        ) as keyof Model;\n\n        relatedModels.forEach((model) => {\n          relatedModelMap.set(model[casedPrimaryKey as keyof Model], model);\n        });\n\n        const retrievedRelatedModel = relatedModelMap.get(\n          serializedModel[foreignKey as keyof Model],\n        );\n\n        if (!retrievedRelatedModel) {\n          serializedModel[relation.columnName] = null;\n          return;\n        }\n\n        serializedModel[relation.columnName] = serializeModel(\n          retrievedRelatedModel,\n          relation.model,\n        );\n        break;\n\n      case RelationEnum.hasOne:\n        const relatedModelMapHasOne = new Map<any, Model>();\n        const casedForeignKey = convertCase(\n          foreignKey,\n          typeofModel.databaseCaseConvention,\n        ) as keyof Model;\n\n        relatedModels.forEach((model) => {\n          relatedModelMapHasOne.set(\n            model[casedForeignKey as keyof Model],\n            model,\n          );\n        });\n\n        const retrievedRelatedModelHasOne = relatedModelMapHasOne.get(\n          serializedModel[primaryKey as keyof Model],\n        );\n\n        if (!retrievedRelatedModelHasOne) {\n          serializedModel[relation.columnName] = null;\n          return;\n        }\n\n        serializedModel[relation.columnName] = serializeModel(\n          retrievedRelatedModelHasOne,\n          relation.model,\n        );\n        break;\n\n      case RelationEnum.hasMany:\n        const retrievedRelatedModels = relatedModels.filter(\n          (item) =>\n            // Since it's still raw data and it's not yet been converted to camel case (it will soon in the serializeModel call)m it's matched with the camel case key\n            item[\n              convertCase(\n                foreignKey,\n                typeofModel.databaseCaseConvention,\n              ) as keyof Model\n            ] === serializedModel[primaryKey as keyof Model],\n        );\n\n        serializedModel[relation.columnName] = retrievedRelatedModels.map(\n          (model) => serializeModel(model, relation.model),\n        );\n        break;\n\n      case RelationEnum.manyToMany:\n        const relatedModelMapManyToMany = new Map<any, Model>();\n        relatedModels.forEach((model) => {\n          relatedModelMapManyToMany.set(\n            model[primaryKey as keyof Model],\n            model,\n          );\n        });\n\n        const currentModelId = serializedModel[primaryKey as keyof Model];\n        const relatedModel = relatedModelMapManyToMany.get(currentModelId);\n\n        if (!relatedModel) {\n          serializedModel[relation.columnName] = [];\n          return;\n        }\n\n        let relatedColumnValue =\n          relatedModel[relation.columnName as keyof Model];\n        if (!relatedColumnValue) {\n          relatedColumnValue = [];\n        }\n\n        if (!Array.isArray(relatedColumnValue)) {\n          relatedColumnValue = [relatedColumnValue];\n        }\n\n        serializedModel[relation.columnName] = relatedColumnValue.map(\n          (relatedItem: Model) => serializeModel(relatedItem, relation.model),\n        );\n        break;\n      default:\n        throw new Error(\"Relation type not supported\");\n    }\n  });\n}\n\nfunction convertToModelCaseConvention(\n  originalValue: Record<string, any>,\n  typeofModel: typeof Model,\n): Record<string, any> {\n  return Object.keys(originalValue).reduce(\n    (acc, objKey) => {\n      acc[convertCase(objKey, typeofModel.modelCaseConvention)] =\n        originalValue[objKey];\n      return acc;\n    },\n    {} as Record<string, any>,\n  );\n}\n\nexport async function addDynamicColumnsToModel(\n  typeofModel: typeof Model,\n  model: Record<string, any>,\n  dynamicColumnsToAdd: string[],\n): Promise<void> {\n  const dynamicColumns = getDynamicColumns(typeofModel);\n  if (!dynamicColumns || !dynamicColumns.length) {\n    return;\n  }\n\n  const dynamicColumnMap = new Map<\n    string,\n    {\n      columnName: string;\n      dynamicColumnFn: (...args: any[]) => any;\n    }\n  >();\n\n  for (const dynamicColumn of dynamicColumns) {\n    dynamicColumnMap.set(dynamicColumn.functionName, {\n      columnName: dynamicColumn.columnName,\n      dynamicColumnFn: dynamicColumn.dynamicColumnFn,\n    });\n  }\n\n  const promises = dynamicColumnsToAdd.map(async (dynamicColumn: string) => {\n    const dynamic = dynamicColumnMap.get(dynamicColumn);\n    const casedKey = convertCase(\n      dynamic?.columnName,\n      typeofModel.modelCaseConvention,\n    );\n\n    Object.assign(model, { [casedKey]: await dynamic?.dynamicColumnFn() });\n  });\n\n  await Promise.all(promises);\n}\n","export function isNestedObject(value: any): boolean {\n  return (\n    typeof value === \"object\" &&\n    !Array.isArray(value) &&\n    value !== null &&\n    Object.keys(value).length > 0\n  );\n}\n","import { Model } from \"./model\";\nimport { BelongsTo } from \"./relations/belongs_to\";\nimport { HasMany } from \"./relations/has_many\";\nimport { HasOne } from \"./relations/has_one\";\nimport { ManyToMany } from \"./relations/many_to_many\";\nimport { RelationEnum, Relation } from \"./relations/relation\";\n\ntype LazyRelationEnum = {\n  type: RelationEnum;\n  columnName: string;\n  model: () => typeof Model;\n  foreignKey: string;\n\n  // Only for many to many\n  manyToManyOptions?: {\n    throughModel: string;\n  };\n};\n\n/**\n * columns\n * @description Options for the column decorator\n * @param primaryKey: boolean - If the column is the primary key\n * @param serialize: (value: any) => any - Function to serialize the value after it is retrieved from the database\n * @param prepare: (value: any) => any - Function to prepare the value before it is inserted or updated in the database\n */\nexport interface ColumnOptions {\n  primaryKey?: boolean;\n  serialize?: (value: any) => void;\n  prepare?: (value: any) => void;\n  hidden?: boolean;\n}\n\nconst COLUMN_METADATA_KEY = Symbol(\"columns\");\nconst DYNAMIC_COLUMN_METADATA_KEY = Symbol(\"dynamicColumns\");\nconst PRIMARY_KEY_METADATA_KEY = Symbol(\"primaryKey\");\nconst RELATION_METADATA_KEY = Symbol(\"relations\");\n\n/**\n * @description Decorator to define a column in the model\n */\nexport function column(\n  options: ColumnOptions = {\n    primaryKey: false,\n  },\n): PropertyDecorator {\n  return (target: Object, propertyKey: string | symbol) => {\n    if (options.primaryKey) {\n      const primaryKey = Reflect.getMetadata(PRIMARY_KEY_METADATA_KEY, target);\n      if (primaryKey) {\n        throw new Error(\"Multiple primary keys are not allowed\");\n      }\n      Reflect.defineMetadata(PRIMARY_KEY_METADATA_KEY, propertyKey, target);\n    }\n\n    const column = {\n      columnName: propertyKey,\n      serialize: options.serialize,\n      prepare: options.prepare,\n      hidden: options.hidden,\n    };\n\n    const existingColumns =\n      Reflect.getMetadata(COLUMN_METADATA_KEY, target) || [];\n    existingColumns.push(column);\n    Reflect.defineMetadata(COLUMN_METADATA_KEY, existingColumns, target);\n  };\n}\n\n/**\n * @description Defines a dynamic calculated column that is not defined inside the Table, it must be added to a query in order to be retrieved\n */\nexport function dynamicColumn(columnName: string): PropertyDecorator {\n  return (target: Object, propertyKey: string | symbol) => {\n    const dynamicColumn = {\n      columnName: columnName,\n      functionName: propertyKey,\n      dynamicColumnFn: target.constructor.prototype[propertyKey],\n    };\n\n    const existingColumns =\n      Reflect.getMetadata(DYNAMIC_COLUMN_METADATA_KEY, target) || [];\n    existingColumns.push(dynamicColumn);\n    Reflect.defineMetadata(\n      DYNAMIC_COLUMN_METADATA_KEY,\n      existingColumns,\n      target,\n    );\n  };\n}\n\n/**\n * @description Returns the columns of the model, columns must be decorated with the column decorator\n */\nexport function getModelColumns(target: typeof Model): {\n  columnName: string;\n  serialize?: (value: any) => any;\n  prepare?: (value: any) => any;\n  hidden?: boolean;\n}[] {\n  return Reflect.getMetadata(COLUMN_METADATA_KEY, target.prototype) || [];\n}\n\n/**\n * relations\n */\n\n/**\n * @description Establishes a belongs to relation with the given model\n */\nexport function belongsTo(\n  model: () => typeof Model,\n  foreignKey: string,\n): PropertyDecorator {\n  return (target: Object, propertyKey: string | symbol) => {\n    const relation = {\n      type: RelationEnum.belongsTo,\n      columnName: propertyKey as string,\n      model,\n      foreignKey,\n    };\n    const relations = Reflect.getMetadata(RELATION_METADATA_KEY, target) || [];\n    relations.push(relation);\n    Reflect.defineMetadata(RELATION_METADATA_KEY, relations, target);\n  };\n}\n\n/**\n * @description Establishes a has one relation with the given model\n */\nexport function hasOne(\n  model: () => typeof Model,\n  foreignKey: string,\n): PropertyDecorator {\n  return (target: Object, propertyKey: string | symbol) => {\n    const relation = {\n      type: RelationEnum.hasOne,\n      columnName: propertyKey as string,\n      model,\n      foreignKey,\n    };\n    const relations = Reflect.getMetadata(RELATION_METADATA_KEY, target) || [];\n    relations.push(relation);\n    Reflect.defineMetadata(RELATION_METADATA_KEY, relations, target);\n  };\n}\n\n/**\n * @description Establishes a has many relation with the given model\n */\nexport function hasMany(\n  model: () => typeof Model,\n  foreignKey: string,\n): PropertyDecorator {\n  return (target: Object, propertyKey: string | symbol) => {\n    const relation = {\n      type: RelationEnum.hasMany,\n      columnName: propertyKey,\n      model,\n      foreignKey,\n    };\n    const relations = Reflect.getMetadata(RELATION_METADATA_KEY, target) || [];\n    relations.push(relation);\n    Reflect.defineMetadata(RELATION_METADATA_KEY, relations, target);\n  };\n}\n\n/**\n * @description Establishes a many to many relation with the given model\n */\nexport function manyToMany(\n  model: () => typeof Model,\n  throughModel: (() => typeof Model) | string,\n  foreignKey: string,\n): PropertyDecorator {\n  return (target: Object, propertyKey: string | symbol) => {\n    if (!(typeof throughModel === \"string\")) {\n      throughModel = throughModel().table;\n    }\n\n    const relation: LazyRelationEnum = {\n      type: RelationEnum.manyToMany,\n      columnName: propertyKey as string,\n      model,\n      foreignKey,\n      manyToManyOptions: {\n        throughModel,\n      },\n    };\n\n    const relations = Reflect.getMetadata(RELATION_METADATA_KEY, target) || [];\n    relations.push(relation);\n    Reflect.defineMetadata(RELATION_METADATA_KEY, relations, target);\n  };\n}\n\n/**\n * @description Returns the relations of the model\n */\nexport function getRelations(target: typeof Model): Relation[] {\n  const relations =\n    Reflect.getMetadata(RELATION_METADATA_KEY, target.prototype) || [];\n  return relations.map((relation: LazyRelationEnum) => {\n    const { type, model, columnName, foreignKey } = relation;\n    switch (type) {\n      case RelationEnum.belongsTo:\n        return new BelongsTo(model(), columnName, foreignKey);\n      case RelationEnum.hasOne:\n        return new HasOne(model(), columnName, foreignKey);\n      case RelationEnum.hasMany:\n        return new HasMany(model(), columnName, foreignKey);\n      case RelationEnum.manyToMany:\n        if (!relation.manyToManyOptions) {\n          throw new Error(\"Many to many relation must have a through model\");\n        }\n\n        return new ManyToMany(\n          model(),\n          columnName,\n          relation.manyToManyOptions.throughModel,\n          relation.foreignKey,\n        );\n      default:\n        throw new Error(`Unknown relation type: ${type}`);\n    }\n  });\n}\n\n/**\n * @description Returns the primary key of the model\n */\nexport function getPrimaryKey(target: typeof Model): string {\n  return Reflect.getMetadata(PRIMARY_KEY_METADATA_KEY, target.prototype);\n}\n\n/**\n * @description Returns every dynamicColumn definition\n */\nexport function getDynamicColumns(target: typeof Model): {\n  columnName: string;\n  functionName: string;\n  dynamicColumnFn: (...args: any[]) => any;\n}[] {\n  return Reflect.getMetadata(DYNAMIC_COLUMN_METADATA_KEY, target.prototype);\n}\n","import { Model } from \"../model\";\nimport { Relation, RelationEnum } from \"./relation\";\n\nexport class BelongsTo extends Relation {\n  type: RelationEnum;\n  foreignKey: string;\n\n  constructor(\n    relatedModel: typeof Model,\n    columnName: string,\n    foreignKey: string,\n  ) {\n    super(relatedModel, columnName);\n    this.foreignKey = foreignKey;\n    this.type = RelationEnum.belongsTo;\n  }\n}\n","import { Model } from \"../model\";\n\n/**\n * @description Options for the relation\n * @property {string} softDeleteColumn - The column name for the soft delete column, if set, the relation will only return rows that have not been soft deleted\n * @property {string} softDeleteType - The type of the soft delete column\n */\n\nexport enum RelationEnum {\n  hasOne = \"hasOne\", // One to One without foreign key\n  belongsTo = \"belongsTo\", // One to One with foreign key\n  hasMany = \"hasMany\",\n  manyToMany = \"manyToMany\",\n}\n\nexport function isRelationDefinition(\n  originalValue: any,\n): originalValue is Relation {\n  return (\n    originalValue.hasOwnProperty(\"type\") &&\n    originalValue.hasOwnProperty(\"relatedModel\") &&\n    originalValue.hasOwnProperty(\"foreignKey\")\n  );\n}\n\n/**\n * Main Model -> Related Model\n */\n\nexport abstract class Relation {\n  abstract type: RelationEnum;\n  model: typeof Model = Model;\n  columnName: string = \"\";\n  foreignKey?: string;\n  relatedModel: string = \"\";\n\n  protected constructor(model: typeof Model, columnName: string) {\n    this.model = model;\n    this.columnName = columnName;\n    this.relatedModel = this.model.table;\n  }\n}\n","import { Model } from \"../model\";\nimport { Relation, RelationEnum } from \"./relation\";\n\nexport class HasMany extends Relation {\n  type: RelationEnum = RelationEnum.hasMany;\n  foreignKey: string;\n\n  constructor(\n    relatedModel: typeof Model,\n    columnName: string,\n    foreignKey: string,\n  ) {\n    super(relatedModel, columnName);\n    this.foreignKey = foreignKey;\n    this.type = RelationEnum.hasMany;\n  }\n}\n","import { Model } from \"../model\";\nimport { Relation, RelationEnum } from \"./relation\";\n\nexport class HasOne extends Relation {\n  type: RelationEnum;\n  foreignKey: string;\n\n  constructor(\n    relatedModel: typeof Model,\n    columnName: string,\n    foreignKey: string,\n  ) {\n    super(relatedModel, columnName);\n    this.foreignKey = foreignKey;\n    this.type = RelationEnum.hasOne;\n  }\n}\n","import { Model } from \"../model\";\nimport { Relation, RelationEnum } from \"./relation\";\n\nexport class ManyToMany extends Relation {\n  type = RelationEnum.manyToMany;\n  throughModel: string = \"\";\n  foreignKey: string = \"\";\n  relatedModelForeignKey: string = \"\";\n\n  constructor(\n    model: typeof Model,\n    columnName: string,\n    throughModel: string,\n    foreignKey: string,\n  ) {\n    super(model, columnName);\n    this.columnName = columnName;\n    this.foreignKey = foreignKey;\n    this.throughModel = throughModel;\n  }\n}\n","import { CaseConvention } from \"./utils/case_utils\";\n\n/**\n * @description The most basic class for all models for both SQL and NoSQL databases\n * @internal Not meant to be used outside of the library\n */\nexport abstract class Entity {\n  /**\n   * @description Extra columns for the model, all data retrieved from the database that is not part of the model will be stored here\n   */\n  $additionalColumns: { [key: string]: any };\n\n  /**\n   * @description Defines the case convention for the model\n   * @type {CaseConvention}\n   */\n  static modelCaseConvention: CaseConvention = \"camel\";\n\n  /**\n   * @description Defines the case convention for the database, this should be the case convention you use in your database\n   * @type {CaseConvention}\n   */\n  static databaseCaseConvention: CaseConvention = \"snake\";\n\n  constructor() {\n    this.$additionalColumns = {};\n  }\n}\n","export function baseSoftDeleteDate(date: Date): string {\n  const pad = (n: number) => n.toString().padStart(2, \"0\");\n\n  const year = date.getUTCFullYear();\n  const month = pad(date.getUTCMonth() + 1);\n  const day = pad(date.getUTCDate());\n  const hours = pad(date.getUTCHours());\n  const minutes = pad(date.getUTCMinutes());\n  const seconds = pad(date.getUTCSeconds());\n\n  return `${year}-${month}-${day} ${hours}:${minutes}:${seconds}`;\n}\n","import { log } from \"../../../utils/logger\";\nimport deleteTemplate from \"../../resources/query/DELETE\";\nimport insertTemplate from \"../../resources/query/INSERT\";\nimport relationTemplates from \"../../resources/query/RELATION\";\nimport updateTemplate from \"../../resources/query/UPDATE\";\nimport { Model } from \"../model\";\nimport { getRelations } from \"../model_decorators\";\nimport { Relation } from \"../relations/relation\";\nimport { RelationQueryBuilder } from \"../../query_builder/query_builder\";\nimport {\n  SqlDataSourceType,\n  SqlConnectionType,\n  MysqlConnectionInstance,\n  SqliteConnectionInstance,\n  PgClientInstance,\n} from \"../../sql_data_source_types\";\n\nexport default class SqlModelManagerUtils<T extends Model> {\n  private dbType: SqlDataSourceType;\n  private sqlConnection: SqlConnectionType;\n\n  constructor(dbType: SqlDataSourceType, sqlConnection: SqlConnectionType) {\n    this.dbType = dbType;\n    this.sqlConnection = sqlConnection;\n  }\n\n  parseInsert(\n    model: T,\n    typeofModel: typeof Model,\n    dbType: SqlDataSourceType,\n  ): { query: string; params: any[] } {\n    const filteredModel = this.filterRelationsAndMetadata(model);\n    const keys = Object.keys(filteredModel);\n    const values = Object.values(filteredModel);\n    const insert = insertTemplate(dbType, typeofModel);\n\n    return insert.insert(keys, values);\n  }\n\n  parseMassiveInsert(\n    models: T[],\n    typeofModel: typeof Model,\n    dbType: SqlDataSourceType,\n  ): { query: string; params: any[] } {\n    const filteredModels = models.map((m) =>\n      this.filterRelationsAndMetadata(m),\n    );\n    const insert = insertTemplate(dbType, typeofModel);\n    const keys = Object.keys(filteredModels[0]);\n    const values = filteredModels.map((model) => Object.values(model));\n\n    return insert.insertMany(keys, values);\n  }\n\n  parseUpdate(\n    model: T,\n    typeofModel: typeof Model,\n    dbType: SqlDataSourceType,\n  ): { query: string; params: any[] } {\n    const update = updateTemplate(dbType, typeofModel);\n    const filteredModel = this.filterRelationsAndMetadata(model);\n    const keys = Object.keys(filteredModel);\n    const values = Object.values(filteredModel);\n\n    const primaryKeyValue = filteredModel[typeofModel.primaryKey as keyof T];\n\n    return update.update(\n      keys,\n      values,\n      typeofModel.primaryKey,\n      primaryKeyValue as string,\n    );\n  }\n\n  private filterRelationsAndMetadata(model: T): T {\n    const filteredModel = {};\n\n    const keys = Object.keys(model);\n    const isRelation = (value: any) => value instanceof Relation;\n    for (const key of keys) {\n      if (isRelation(model[key as keyof T])) {\n        continue;\n      }\n\n      Object.assign(filteredModel, { [key]: model[key as keyof T] });\n    }\n\n    return filteredModel as T;\n  }\n\n  parseDelete(\n    table: string,\n    column: string,\n    value: string | number | boolean,\n  ): { query: string; params: any[] } {\n    return deleteTemplate(table, this.dbType).delete(column, value);\n  }\n\n  private getRelationFromModel(\n    relationField: string,\n    typeofModel: typeof Model,\n  ): Relation {\n    const relations = getRelations(typeofModel);\n    const relation = relations.find(\n      (relation) => relation.columnName === relationField,\n    );\n    if (!relation) {\n      throw new Error(\n        `Relation ${relationField} not found in model ${typeofModel}`,\n      );\n    }\n\n    return relation;\n  }\n\n  async parseQueryBuilderRelations(\n    models: T[],\n    typeofModel: typeof Model,\n    input: RelationQueryBuilder[],\n    dbType: SqlDataSourceType,\n    logs: boolean,\n  ): Promise<{ [relationName: string]: Model[] }[]> {\n    if (!input.length) {\n      return [];\n    }\n\n    if (!typeofModel.primaryKey) {\n      throw new Error(`Model ${typeofModel} does not have a primary key`);\n    }\n\n    const resultMap: { [key: string]: any[] } = {};\n\n    for (const inputRelation of input) {\n      const relation = this.getRelationFromModel(\n        inputRelation.relation,\n        typeofModel,\n      );\n      const { query, params } = relationTemplates(\n        models,\n        relation,\n        inputRelation.relation,\n        inputRelation,\n        typeofModel,\n        dbType,\n      );\n\n      if (!query) {\n        resultMap[inputRelation.relation] = [];\n        continue;\n      }\n\n      log(query, logs, params);\n      let result = await this.getQueryResult(query, params);\n      if (!result) {\n        result = [];\n      } else if (!Array.isArray(result)) {\n        result = [result];\n      }\n\n      // Dynamic columns are added to the model after the query\n      for (const row of result) {\n        if (inputRelation.dynamicColumns?.length) {\n          await (relation.model as any).addDynamicColumns(\n            row[row[\"relation_name\"]],\n            inputRelation.dynamicColumns,\n          );\n        }\n      }\n\n      // after fetch hook\n      if (!inputRelation.ignoreAfterFetchHook) {\n        result = await (relation.model as any).afterFetch(result);\n      }\n\n      // Group the result by relation name\n      result.forEach((row: any) => {\n        const relationName = row.relation_name;\n        delete row.relation_name;\n        if (!resultMap[relationName]) {\n          resultMap[relationName] = [];\n        }\n\n        resultMap[relationName].push(row);\n      });\n    }\n\n    // Map the result to the expected format\n    const resultArray: { [relationName: string]: any[] }[] = input.map(\n      (inputRelation) => {\n        const modelsForRelation = resultMap[inputRelation.relation] || [];\n\n        // Some databases return JSON as string so we need to parse it\n        modelsForRelation.forEach((model) => {\n          if (typeof model[inputRelation.relation] === \"string\") {\n            model[inputRelation.relation] = JSON.parse(\n              model[inputRelation.relation],\n            );\n          }\n        });\n\n        return {\n          [inputRelation.relation]: modelsForRelation,\n        };\n      },\n    );\n\n    return resultArray;\n  }\n\n  private async getQueryResult(\n    query: string,\n    params: any[] = [],\n  ): Promise<any> {\n    switch (this.dbType) {\n      case \"mysql\":\n      case \"mariadb\":\n        const resultMysql = await (\n          this.sqlConnection as MysqlConnectionInstance\n        ).query(query, params);\n        return resultMysql[0];\n      case \"postgres\":\n        const resultPg = await (this.sqlConnection as PgClientInstance).query(\n          query,\n          params,\n        );\n        return resultPg.rows;\n      case \"sqlite\":\n        return await new Promise((resolve, reject) => {\n          (this.sqlConnection as SqliteConnectionInstance).all(\n            query,\n            params,\n            (err, result) => {\n              if (err) {\n                reject(err);\n              }\n\n              resolve(result);\n            },\n          );\n        });\n      default:\n        throw new Error(`Unsupported data source type: ${this.dbType}`);\n    }\n  }\n}\n","import { SqlDataSourceType } from \"../../sql_data_source_types\";\n\nconst deleteTemplate = (table: string, dbType: SqlDataSourceType) => {\n  return {\n    delete: (column: string, value: string | number | boolean | Date) => {\n      let baseQuery = `DELETE FROM ${table} WHERE ${column} = PLACEHOLDER`;\n      switch (dbType) {\n        case \"mariadb\":\n        case \"sqlite\":\n        case \"mysql\":\n          baseQuery = baseQuery.replace(\"PLACEHOLDER\", \"?\");\n          break;\n        case \"postgres\":\n          baseQuery = baseQuery.replace(\"PLACEHOLDER\", \"$1\");\n          break;\n        default:\n          throw new Error(\"Unsupported database type\");\n      }\n\n      return { query: baseQuery, params: [value] };\n    },\n    massiveDelete: (whereClause: string, joinClause: string = \"\") => {\n      return `DELETE FROM ${table} ${joinClause} ${whereClause}`;\n    },\n  };\n};\n\nexport default deleteTemplate;\n","import { convertCase } from \"../../../utils/case_utils\";\nimport { isNestedObject } from \"../../../utils/json_utils\";\nimport { Model } from \"../../models/model\";\nimport { getModelColumns } from \"../../models/model_decorators\";\nimport { SqlDataSourceType } from \"../../sql_data_source_types\";\n\ntype BaseValues = string | number | boolean | Date | null | object | undefined;\n\nconst insertTemplate = (\n  dbType: SqlDataSourceType,\n  typeofModel: typeof Model,\n) => {\n  const table = typeofModel.table;\n  const modelColumns = getModelColumns(typeofModel);\n\n  return {\n    insert: (columns: string[], values: BaseValues[]) => {\n      if (columns.includes(\"$additionalColumns\")) {\n        const $additionalColumnsIndex = columns.indexOf(\"$additionalColumns\");\n        columns.splice(columns.indexOf(\"$additionalColumns\"), 1);\n        values.splice($additionalColumnsIndex, 1);\n      }\n\n      for (let i = 0; i < values.length; i++) {\n        const column = columns[i];\n        const modelColumn = modelColumns.find(\n          (modelColumn) => modelColumn.columnName === column,\n        );\n        if (modelColumn && modelColumn.prepare) {\n          values[i] = modelColumn.prepare(values[i]);\n        }\n      }\n\n      columns = columns.map((column) =>\n        convertCase(column, typeofModel.databaseCaseConvention),\n      );\n      let placeholders: string;\n      let params: BaseValues[];\n\n      switch (dbType) {\n        case \"mysql\":\n        case \"mariadb\":\n          placeholders = columns\n            .map((_, index) => {\n              if (isNestedObject(values[index])) {\n                return `?`;\n              }\n              return `?`;\n            })\n            .join(\", \");\n          params = values.map((value) =>\n            isNestedObject(value) ? JSON.stringify(value) : value,\n          );\n          break;\n        case \"sqlite\":\n          placeholders = columns.map(() => \"?\").join(\", \");\n          params = values;\n          break;\n        case \"postgres\":\n          placeholders = columns\n            .map((_, index) => {\n              if (isNestedObject(values[index])) {\n                return `$${index + 1}::jsonb`;\n              }\n              return `$${index + 1}`;\n            })\n            .join(\", \");\n          params = values.map((value) =>\n            isNestedObject(value) ? JSON.stringify(value) : value,\n          );\n          break;\n        default:\n          throw new Error(\"Unsupported database type\");\n      }\n\n      const query =\n        dbType !== \"postgres\"\n          ? `INSERT INTO ${table} (${columns.join(\", \")})\nVALUES (${placeholders});`\n          : `INSERT INTO ${table} (${columns.join(\", \")})\nVALUES (${placeholders}) RETURNING *;`;\n\n      return { query, params };\n    },\n    insertMany: (columns: string[], values: BaseValues[][]) => {\n      columns = columns.map((column) =>\n        convertCase(column, typeofModel.databaseCaseConvention),\n      );\n      let valueSets: string[];\n      let params: BaseValues[] = [];\n\n      for (let i = 0; i < values.length; i++) {\n        for (let j = 0; j < values[i].length; j++) {\n          const column = columns[j];\n          const modelColumn = modelColumns.find(\n            (modelColumn) => modelColumn.columnName === column,\n          );\n          if (modelColumn && modelColumn.prepare) {\n            values[i][j] = modelColumn.prepare(values[i][j]);\n          }\n        }\n      }\n\n      switch (dbType) {\n        case \"mysql\":\n        case \"mariadb\":\n          valueSets = values.map((valueSet) => {\n            params.push(\n              ...valueSet.map((value) =>\n                isNestedObject(value) ? JSON.stringify(value) : value,\n              ),\n            );\n            return `(${valueSet.map(() => \"?\").join(\", \")})`;\n          });\n          break;\n        case \"sqlite\":\n          valueSets = values.map((valueSet) => {\n            params.push(...valueSet);\n            return `(${valueSet.map(() => \"?\").join(\", \")})`;\n          });\n          break;\n        case \"postgres\":\n          valueSets = values.map((valueSet, rowIndex) => {\n            params.push(\n              ...valueSet.map((value) =>\n                isNestedObject(value) ? JSON.stringify(value) : value,\n              ),\n            );\n            return `(${valueSet\n              .map((value, colIndex) => {\n                if (isNestedObject(value)) {\n                  return `$${rowIndex * columns.length + colIndex + 1}::jsonb`;\n                }\n                return `$${rowIndex * columns.length + colIndex + 1}`;\n              })\n              .join(\", \")})`;\n          });\n          break;\n        default:\n          throw new Error(\"Unsupported database type\");\n      }\n\n      const query =\n        dbType !== \"postgres\"\n          ? `INSERT INTO ${table} (${columns.join(\", \")})\nVALUES ${valueSets.join(\", \")};`\n          : `INSERT INTO ${table} (${columns.join(\", \")})\nVALUES ${valueSets.join(\", \")} RETURNING *;`;\n\n      return { query, params };\n    },\n  };\n};\n\nexport default insertTemplate;\n","import { convertCase } from \"../../../utils/case_utils\";\nimport logger from \"../../../utils/logger\";\nimport { Model } from \"../../models/model\";\nimport { getModelColumns, getRelations } from \"../../models/model_decorators\";\nimport { ManyToMany } from \"../../models/relations/many_to_many\";\nimport { Relation, RelationEnum } from \"../../models/relations/relation\";\nimport { RelationQueryBuilder } from \"../../query_builder/query_builder\";\nimport { SqlDataSourceType } from \"../../sql_data_source_types\";\nimport {\n  convertValueToSQL,\n  generateHasManyQuery,\n  generateManyToManyQuery,\n} from \"../utils\";\n\nfunction parseValueType(value: any): string {\n  return typeof value;\n}\n\nfunction parseRelationQuery(relationQuery: RelationQueryBuilder): {\n  selectQuery: string;\n  whereQuery: string;\n  joinQuery: string;\n  orderByQuery: string;\n  groupByQuery: string;\n  limitQuery: string;\n  offsetQuery: string;\n  havingQuery: string;\n} {\n  const selectQuery = relationQuery.selectedColumns?.join(\", \") || \"*\";\n  const joinQuery = relationQuery.joinQuery ? relationQuery.joinQuery : \"\";\n  const orderByQuery = relationQuery.orderByQuery\n    ? `ORDER BY ${relationQuery.orderByQuery}`\n    : \"\";\n  const groupByQuery = relationQuery.groupByQuery\n    ? `GROUP BY ${relationQuery.groupByQuery}`\n    : \"\";\n  const limitQuery = relationQuery.limitQuery\n    ? `LIMIT ${relationQuery.limitQuery}`\n    : \"\";\n  const offsetQuery = relationQuery.offsetQuery\n    ? `OFFSET ${relationQuery.offsetQuery}`\n    : \"\";\n  const havingQuery = relationQuery.havingQuery\n    ? `HAVING ${relationQuery.havingQuery}`\n    : \"\";\n\n  return {\n    selectQuery,\n    whereQuery: relationQuery.whereQuery || \"\",\n    joinQuery,\n    orderByQuery,\n    groupByQuery,\n    limitQuery,\n    offsetQuery,\n    havingQuery,\n  };\n}\n\nfunction relationTemplates<T extends Model>(\n  models: T[],\n  relation: Relation,\n  relationName: string,\n  relationQuery: RelationQueryBuilder,\n  typeofModel: typeof Model,\n  dbType: SqlDataSourceType,\n): {\n  query: string;\n  params: any[];\n} {\n  const primaryKey = relation.model.primaryKey;\n  const foreignKey = relation.foreignKey as keyof T;\n  const relatedModel = relation.relatedModel;\n  const {\n    selectQuery,\n    whereQuery,\n    joinQuery,\n    orderByQuery,\n    groupByQuery,\n    limitQuery,\n    offsetQuery,\n    havingQuery,\n  } = parseRelationQuery(relationQuery);\n  const params = relationQuery.params || [];\n  const extractedLimitValue = limitQuery.match(/\\d+/)?.[0] as\n    | number\n    | undefined;\n  const extractedOffsetValue = offsetQuery.match(/\\d+/)?.[0] || 0;\n\n  const primaryKeyValues = models.map((model) => {\n    const value =\n      model[\n        convertCase(primaryKey, typeofModel.modelCaseConvention) as keyof T\n      ];\n    return { value, type: parseValueType(value) };\n  });\n\n  const foreignKeyValues = models.map((model) => {\n    const value =\n      model[\n        convertCase(foreignKey, typeofModel.modelCaseConvention) as keyof T\n      ];\n    return { value, type: parseValueType(value) };\n  });\n\n  switch (relation.type) {\n    case RelationEnum.hasOne:\n      if (primaryKeyValues.some(({ value }) => !value)) {\n        logger.error(\n          `Foreign key values are missing for has one relation: ${relationName} ${foreignKeyValues}`,\n        );\n        throw new Error(\n          `Foreign key values are missing for has one relation: ${relationName} ${foreignKeyValues}`,\n        );\n      }\n\n      if (!primaryKey) {\n        throw new Error(\n          `Related Model ${relatedModel} does not have a primary key`,\n        );\n      }\n\n      if (!foreignKeyValues.length) {\n        return {\n          query: \"\",\n          params: params,\n        };\n      }\n\n      const query = `SELECT ${selectQuery}, '${relationName}' as relation_name FROM ${relatedModel}\n${joinQuery} WHERE ${relatedModel}.${convertCase(\n        foreignKey,\n        typeofModel.databaseCaseConvention,\n      )} IN (${primaryKeyValues\n        .map(({ value, type }) => convertValueToSQL(value, type))\n        .join(\", \")}) ${whereQuery};\n      `;\n\n      return {\n        query,\n        params,\n      };\n\n    case RelationEnum.belongsTo:\n      if (foreignKeyValues.some(({ value }) => !value)) {\n        logger.error(\n          `Foreign key values are missing for belongs to relation: ${relationName} ${foreignKeyValues}`,\n        );\n        throw new Error(\n          `Foreign key values are missing for belongs to relation: ${relationName} ${foreignKeyValues}`,\n        );\n      }\n\n      if (!primaryKey) {\n        throw new Error(\n          `Related Model ${relatedModel} does not have a primary key`,\n        );\n      }\n\n      if (!foreignKeyValues.length) {\n        return {\n          query: \"\",\n          params: [],\n        };\n      }\n\n      const belongsToQuery = `SELECT ${selectQuery}, '${relationName}' as relation_name FROM ${relatedModel}\n${joinQuery}  WHERE ${relatedModel}.${primaryKey} IN (${foreignKeyValues\n        .map(({ value, type }) => convertValueToSQL(value, type))\n        .join(\n          \", \",\n        )}) ${whereQuery} ${groupByQuery} ${havingQuery} ${orderByQuery} ${limitQuery} ${offsetQuery};\n`;\n\n      return {\n        query: belongsToQuery,\n        params: params,\n      };\n\n    case RelationEnum.hasMany:\n      if (primaryKeyValues.some(({ value }) => !value)) {\n        logger.error(\n          `Primary key values are missing for has many relation: ${relationName} ${primaryKeyValues}`,\n        );\n        throw new Error(\n          `Primary key values are missing for has many relation: ${relationName} ${primaryKeyValues}`,\n        );\n      }\n\n      if (!primaryKeyValues.length) {\n        return {\n          query: \"\",\n          params: [],\n        };\n      }\n\n      return {\n        query: generateHasManyQuery({\n          selectQuery,\n          relationName,\n          relatedModel,\n          foreignKey: foreignKey as string,\n          typeofModel,\n          primaryKeyValues,\n          joinQuery,\n          whereQuery,\n          groupByQuery,\n          havingQuery,\n          orderByQuery,\n          extractedOffsetValue: extractedOffsetValue as number,\n          extractedLimitValue: extractedLimitValue as number,\n          databaseType: dbType,\n        }),\n\n        params: params,\n      };\n\n    case RelationEnum.manyToMany:\n      if (primaryKeyValues.some(({ value }) => !value)) {\n        logger.error(\n          `Primary key values are missing for many to many relation: ${relationName} ${primaryKeyValues}`,\n        );\n        throw new Error(\n          `Primary key values are missing for many to many relation: ${relationName} ${primaryKeyValues}`,\n        );\n      }\n\n      if (!primaryKeyValues.length) {\n        return {\n          query: \"\",\n          params: [],\n        };\n      }\n\n      const throughModel = (relation as ManyToMany).throughModel;\n      const throughModelPrimaryKey = (relation as ManyToMany).foreignKey;\n      const relatedModelTable = (relation as ManyToMany).relatedModel;\n      const relatedModelPrimaryKey = (relation as ManyToMany).model.primaryKey;\n\n      const relatedModeRelations = getRelations(relation.model);\n      const relatedModelManyToManyRelation = relatedModeRelations.find(\n        (relation) =>\n          relation.type === RelationEnum.manyToMany &&\n          (relation as ManyToMany).throughModel === throughModel,\n      );\n\n      if (\n        !relatedModelManyToManyRelation ||\n        !relatedModelManyToManyRelation.foreignKey\n      ) {\n        throw new Error(\n          `Many to many relation not found for related model ${relatedModel} and through model ${throughModel}, the error is likely in the relation definition and was called by relation ${relationName} in model ${typeofModel.tableName}`,\n        );\n      }\n\n      const relatedModelForeignKey = relatedModelManyToManyRelation.foreignKey;\n      const relatedModelColumns = getModelColumns(relation.model).map(\n        (column) => column.columnName,\n      );\n\n      return {\n        query: generateManyToManyQuery({\n          dbType: dbType,\n          relationName: relationName,\n          leftTablePrimaryColumn: convertCase(\n            primaryKey,\n            typeofModel.databaseCaseConvention,\n          ),\n          rightTablePrimaryColumn: convertCase(\n            relatedModelPrimaryKey,\n            typeofModel.databaseCaseConvention,\n          ),\n          pivotLeftTableColumn: convertCase(\n            throughModelPrimaryKey,\n            typeofModel.databaseCaseConvention,\n          ),\n          pivotRightTableColumn: convertCase(\n            relatedModelForeignKey,\n            typeofModel.databaseCaseConvention,\n          ),\n          selectedColumns: relationQuery.selectedColumns?.length\n            ? relationQuery.selectedColumns\n            : relatedModelColumns.map((column) =>\n                convertCase(column, typeofModel.databaseCaseConvention),\n              ),\n          relatedModelColumns: relatedModelColumns.map((column) =>\n            convertCase(column, typeofModel.databaseCaseConvention),\n          ),\n          leftTable: typeofModel.tableName,\n          rightTable: relatedModelTable,\n          pivotTable: throughModel,\n          whereCondition: whereQuery,\n          orderBy: orderByQuery,\n          havingQuery: havingQuery,\n          limit: extractedLimitValue ? +extractedLimitValue : undefined,\n          offset: +extractedOffsetValue || 0,\n        }),\n        params: params,\n      };\n\n    default:\n      throw new Error(`Unknown relation type: ${relation.type}`);\n  }\n}\n\nexport default relationTemplates;\n","import { convertCase } from \"../../utils/case_utils\";\nimport { SqlDataSourceType } from \"../sql_data_source_types\";\n\nexport function generateManyToManyQuery({\n  dbType,\n  relationName,\n  selectedColumns,\n  leftTable,\n  leftTablePrimaryColumn,\n  rightTablePrimaryColumn,\n  pivotLeftTableColumn,\n  pivotRightTableColumn,\n  rightTable,\n  pivotTable,\n  whereCondition,\n  relatedModelColumns,\n  havingQuery,\n  limit,\n  offset,\n  orderBy,\n}: {\n  dbType: SqlDataSourceType;\n  relationName: string;\n  selectedColumns: string[];\n  leftTable: string;\n  leftTablePrimaryColumn: string;\n  rightTablePrimaryColumn: string;\n  pivotLeftTableColumn: string;\n  pivotRightTableColumn: string;\n  rightTable: string;\n  pivotTable: string;\n  relatedModelColumns: string[];\n  whereCondition: string;\n  havingQuery: string;\n  limit?: number;\n  offset: number;\n  orderBy: string;\n}): string {\n  let jsonAggFunction = \"\";\n  let jsonObjectFunction = \"\";\n  let jsonAlias = \"\";\n\n  switch (dbType) {\n    case \"postgres\":\n      jsonAggFunction = \"json_agg\";\n      jsonObjectFunction = \"json_build_object\";\n      jsonAlias = \"t.json_data\";\n      break;\n    case \"mysql\":\n    case \"mariadb\":\n      jsonAggFunction = \"JSON_ARRAYAGG\";\n      jsonObjectFunction = \"JSON_OBJECT\";\n      jsonAlias = \"t.json_data\";\n      break;\n    case \"sqlite\":\n      jsonAggFunction = \"JSON_GROUP_ARRAY\";\n      jsonObjectFunction = \"JSON_OBJECT\";\n      jsonAlias = \"JSON(t.json_data)\";\n      break;\n    default:\n      throw new Error(\"Unsupported database type\");\n  }\n\n  // Prepare selected columns\n  const columnsList = selectedColumns\n    .map((col) => {\n      if (col.includes(\"*\")) {\n        return relatedModelColumns\n          .map((column) => {\n            return `'${column}', ${rightTable}.${column}`;\n          })\n          .join(\",\\n            \");\n      }\n\n      if (col.toLowerCase().includes(\"as\")) {\n        const [column, alias] = col.split(\" as \");\n        return `'${alias}', ${column}`;\n      }\n\n      if (!col.includes(\".\")) {\n        return `'${col}', ${rightTable}.${col}`;\n      }\n\n      const alias = col.split(\".\").pop();\n      return `'${alias}', ${col}`;\n    })\n    .join(\",\\n            \");\n\n  let limitOffsetClause = \"\";\n  if (limit) {\n    limitOffsetClause += `LIMIT ${limit}`;\n  }\n\n  if (offset) {\n    limitOffsetClause += ` OFFSET ${offset}`;\n  }\n\n  let query = `\n  SELECT\n    ${leftTable}.id AS ${leftTablePrimaryColumn},\n    '${relationName}' AS relation_name,\n    (\n      SELECT ${jsonAggFunction}(${jsonAlias})\n      FROM (\n        SELECT ${jsonObjectFunction}(\n          ${columnsList}\n        ) AS json_data\n        FROM ${rightTable}\n        JOIN ${pivotTable} ON ${pivotTable}.${pivotRightTableColumn} = ${rightTable}.${rightTablePrimaryColumn}\n        ${dbType === \"mariadb\" ? `JOIN ${leftTable} ON ${pivotTable}.${pivotLeftTableColumn} = ${leftTable}.${leftTablePrimaryColumn}` : \"\"}\n        WHERE ${pivotTable}.${pivotLeftTableColumn} = ${leftTable}.${leftTablePrimaryColumn}`;\n\n  if (whereCondition) {\n    query += ` AND ${whereCondition.replace(\"WHERE\", \"\")}`;\n  }\n\n  if (havingQuery) {\n    query += ` HAVING ${havingQuery}`;\n  }\n\n  if (orderBy) {\n    query += ` ${orderBy}`;\n  }\n\n  query += ` ${limitOffsetClause}\n      ) t\n    ) AS ${relationName}\n  FROM ${leftTable};\n  `;\n\n  return query.trim();\n}\n\nexport function generateHasManyQuery({\n  selectQuery,\n  relationName,\n  relatedModel,\n  foreignKey,\n  typeofModel,\n  primaryKeyValues,\n  joinQuery,\n  whereQuery,\n  groupByQuery,\n  havingQuery,\n  orderByQuery,\n  extractedOffsetValue,\n  extractedLimitValue,\n  databaseType,\n}: {\n  selectQuery: string;\n  relationName: string;\n  relatedModel: string;\n  foreignKey: string;\n  typeofModel: any;\n  primaryKeyValues: Array<{ value: any; type: string }>;\n  joinQuery: string;\n  whereQuery: string;\n  groupByQuery: string;\n  havingQuery: string;\n  orderByQuery: string;\n  extractedOffsetValue: number;\n  extractedLimitValue: number;\n  databaseType: string;\n}): string {\n  const foreignKeyConverted = convertCase(\n    foreignKey,\n    typeofModel.databaseCaseConvention,\n  );\n  const primaryKeyValuesSQL = primaryKeyValues\n    .map(({ value, type }) => convertValueToSQL(value, type))\n    .join(\", \");\n\n  let rowNumberClause;\n  if (databaseType === \"mysql\" || databaseType === \"mariadb\") {\n    rowNumberClause = `ROW_NUMBER() OVER (PARTITION BY ${relatedModel}.${foreignKeyConverted} ORDER BY ${orderByQuery || `${relatedModel}.${foreignKeyConverted}`}) as row_num`;\n  } else {\n    rowNumberClause = `ROW_NUMBER() OVER (PARTITION BY ${relatedModel}.${foreignKeyConverted} ORDER BY ${orderByQuery || \"1\"}) as row_num`;\n  }\n\n  const hasManyQuery = `\n    WITH CTE AS (\n      SELECT ${selectQuery}, '${relationName}' as relation_name,\n             ${rowNumberClause}\n      FROM ${relatedModel}\n      ${joinQuery}\n      WHERE ${relatedModel}.${foreignKeyConverted} IN (${primaryKeyValuesSQL})\n      ${whereQuery} ${groupByQuery} ${havingQuery}\n    )\n    SELECT * FROM CTE\n    WHERE row_num > ${extractedOffsetValue || 0}\n    ${extractedLimitValue ? `AND row_num <= (${extractedOffsetValue || 0} + ${extractedLimitValue})` : \"\"};\n  `;\n\n  return hasManyQuery;\n}\n\nexport function convertValueToSQL(value: any, type: string): string {\n  switch (type) {\n    case \"string\":\n      return `'${value}'`;\n    case \"number\":\n    case \"boolean\":\n      return `${value}`;\n    default:\n      throw new Error(`Unsupported value type: ${type}`);\n  }\n}\n","import { convertCase } from \"../../../utils/case_utils\";\nimport { isNestedObject } from \"../../../utils/json_utils\";\nimport { Model } from \"../../models/model\";\nimport { getModelColumns } from \"../../models/model_decorators\";\nimport { SqlDataSourceType } from \"../../sql_data_source_types\";\n\nconst updateTemplate = (\n  dbType: SqlDataSourceType,\n  typeofModel: typeof Model,\n) => {\n  const table = typeofModel.table;\n  const modelColumns = getModelColumns(typeofModel);\n\n  return {\n    update: (\n      columns: string[],\n      values: any[],\n      primaryKey?: string,\n      primaryKeyValue?: string | undefined,\n    ) => {\n      if (columns.includes(\"$additionalColumns\")) {\n        const $additionalColumnsIndex = columns.indexOf(\"$additionalColumns\");\n        columns.splice(columns.indexOf(\"$additionalColumns\"), 1);\n        values.splice($additionalColumnsIndex, 1);\n      }\n\n      for (let i = 0; i < values.length; i++) {\n        const column = columns[i];\n        const modelColumn = modelColumns.find(\n          (modelColumn) => modelColumn.columnName === column,\n        );\n        if (modelColumn && modelColumn.prepare) {\n          values[i] = modelColumn.prepare(values[i]);\n        }\n      }\n\n      values = values.map((value) => {\n        if (isNestedObject(value)) {\n          return JSON.stringify(value);\n        }\n\n        return value;\n      });\n\n      columns = columns.map((column) =>\n        convertCase(column, typeofModel.databaseCaseConvention),\n      );\n\n      let setClause: string;\n      let params: (any | null)[];\n\n      switch (dbType) {\n        case \"mysql\":\n        case \"sqlite\":\n        case \"mariadb\":\n          setClause = columns.map((column) => `\\`${column}\\` = ?`).join(\", \");\n          params = [...values, primaryKeyValue];\n          break;\n        case \"postgres\":\n          setClause = columns\n            .map((column, index) => `\"${column}\" = $${index + 1}`)\n            .join(\", \");\n          params = [...values, primaryKeyValue];\n          break;\n        default:\n          throw new Error(\"Unsupported database type\");\n      }\n\n      const primaryKeyPlaceholder =\n        dbType === \"postgres\" ? `$${columns.length + 1}` : \"?\";\n      const query = `UPDATE ${table}\nSET ${setClause}\nWHERE ${primaryKey} = ${primaryKeyPlaceholder};`;\n\n      return { query, params };\n    },\n    massiveUpdate: (\n      columns: string[],\n      values: any[],\n      whereClause: string,\n      joinClause: string = \"\",\n    ) => {\n      columns = columns.map((column) =>\n        convertCase(column, typeofModel.databaseCaseConvention),\n      );\n\n      if (columns.includes(\"$additionalColumns\")) {\n        const $additionalColumnsIndex = columns.indexOf(\"$additionalColumns\");\n        columns.splice(columns.indexOf(\"$additionalColumns\"), 1);\n        values.splice($additionalColumnsIndex, 1);\n      }\n\n      for (let i = 0; i < values.length; i++) {\n        const column = columns[i];\n        const modelColumn = modelColumns.find(\n          (modelColumn) => modelColumn.columnName === column,\n        );\n        if (modelColumn && modelColumn.prepare) {\n          values[i] = modelColumn.prepare(values[i]);\n        }\n      }\n\n      let setClause: string;\n      const params: any[] = [];\n\n      switch (dbType) {\n        case \"mysql\":\n        case \"sqlite\":\n        case \"mariadb\":\n          setClause = columns.map((column) => `\\`${column}\\` = ?`).join(\", \");\n          values.forEach((value) => {\n            if (isNestedObject(value)) {\n              params.push(JSON.stringify(value));\n              return;\n            }\n\n            params.push(value ?? null);\n          });\n          break;\n        case \"postgres\":\n          setClause = columns\n            .map((column, index) => `\"${column}\" = $${index + 1}`)\n            .join(\", \");\n          values.forEach((value) => {\n            if (isNestedObject(value)) {\n              params.push(JSON.stringify(value));\n              return;\n            }\n\n            params.push(value ?? null);\n          });\n          break;\n        default:\n          throw new Error(\"Unsupported database type\");\n      }\n\n      const query = `UPDATE ${table} ${joinClause}\nSET ${setClause} ${whereClause}`;\n\n      return { query, params };\n    },\n  };\n};\n\nexport default updateTemplate;\n","import { convertCase } from \"../../utils/case_utils\";\nimport { log } from \"../../utils/logger\";\nimport { Model, getBaseModelInstance } from \"../models/model\";\nimport {\n  SelectableType,\n  RelationType,\n  DynamicColumnType,\n} from \"../models/model_manager/model_manager_types\";\nimport SqlModelManagerUtils from \"../models/model_manager/model_manager_utils\";\nimport { PaginatedData, getPaginationMetadata } from \"../pagination\";\nimport {\n  QueryBuilder,\n  OneOptions,\n  ManyOptions,\n  ModelQueryBuilder,\n  ModelInstanceType,\n} from \"../query_builder/query_builder\";\nimport joinTemplate from \"../resources/query/JOIN\";\nimport { parseDatabaseDataIntoModelResponse } from \"../serializer\";\nimport { SqlDataSource } from \"../sql_data_source\";\nimport {\n  DeleteOptions,\n  SoftDeleteOptions,\n} from \"../query_builder/delete_query_builder_type\";\nimport deleteTemplate from \"../resources/query/DELETE\";\nimport updateTemplate from \"../resources/query/UPDATE\";\nimport { UpdateOptions } from \"../query_builder/update_query_builder_types\";\nimport { MysqlConnectionInstance } from \"../sql_data_source_types\";\n\nexport class MysqlQueryBuilder<T extends Model> extends QueryBuilder<T> {\n  protected type: \"mysql\" | \"mariadb\";\n  protected mysqlConnection: MysqlConnectionInstance;\n  protected updateTemplate: ReturnType<typeof updateTemplate>;\n  protected deleteTemplate: ReturnType<typeof deleteTemplate>;\n  protected mysqlModelManagerUtils: SqlModelManagerUtils<T>;\n\n  constructor(\n    type: \"mysql\" | \"mariadb\",\n    model: typeof Model,\n    table: string,\n    mysqlConnection: MysqlConnectionInstance,\n    logs: boolean,\n    isNestedCondition = false,\n    sqlDataSource: SqlDataSource,\n  ) {\n    super(model, table, logs, sqlDataSource);\n    this.type = type;\n    this.mysqlConnection = mysqlConnection;\n    this.updateTemplate = updateTemplate(sqlDataSource.getDbType(), this.model);\n    this.deleteTemplate = deleteTemplate(table, sqlDataSource.getDbType());\n    this.isNestedCondition = isNestedCondition;\n    this.mysqlModelManagerUtils = new SqlModelManagerUtils<T>(\n      this.type,\n      this.mysqlConnection,\n    );\n  }\n\n  async one(options: OneOptions = {}): Promise<T | null> {\n    // hook query builder\n    if (!options.ignoreHooks?.includes(\"beforeFetch\")) {\n      this.model.beforeFetch(this);\n    }\n\n    let query: string = \"\";\n    if (this.joinQuery && !this.selectQuery) {\n      this.selectQuery = this.selectTemplate.selectColumns(`${this.table}.*`);\n    }\n    query = this.selectQuery + this.joinQuery;\n\n    if (this.whereQuery) {\n      query += this.whereQuery;\n    }\n\n    query = this.whereTemplate.convertPlaceHolderToValue(query);\n\n    // limit to 1\n    this.limit(1);\n    query += this.groupFooterQuery();\n\n    query = query.trim();\n    log(query, this.logs, this.params);\n    const [rows] = await this.mysqlConnection.query<any[]>(query, this.params);\n\n    if (!rows.length) {\n      return null;\n    }\n\n    const modelInstance = getBaseModelInstance<T>();\n    await this.mergeRawPacketIntoModel(modelInstance, rows[0], this.model);\n    const relationModels =\n      await this.mysqlModelManagerUtils.parseQueryBuilderRelations(\n        [modelInstance],\n        this.model,\n        this.relations,\n        this.type,\n        this.logs,\n      );\n\n    const model = (await parseDatabaseDataIntoModelResponse(\n      [modelInstance],\n      this.model,\n      relationModels,\n      this.modelSelectedColumns,\n    )) as T;\n\n    return !options.ignoreHooks?.includes(\"afterFetch\")\n      ? ((await this.model.afterFetch([model]))[0] as T)\n      : model;\n  }\n\n  async oneOrFail(options?: OneOptions & { customError: Error }): Promise<T> {\n    const model = await this.one({\n      ignoreHooks: options?.ignoreHooks,\n    });\n\n    if (!model) {\n      if (options?.customError) {\n        throw options.customError;\n      }\n\n      throw new Error(\"ROW_NOT_FOUND\");\n    }\n\n    return model as T;\n  }\n\n  async many(options: ManyOptions = {}): Promise<T[]> {\n    // hook query builder\n    if (!options.ignoreHooks?.includes(\"beforeFetch\")) {\n      this.model.beforeFetch(this);\n    }\n\n    let query: string = \"\";\n    if (this.joinQuery && !this.selectQuery) {\n      this.selectQuery = this.selectTemplate.selectColumns(`${this.table}.*`);\n    }\n    query = this.selectQuery + this.joinQuery;\n\n    if (this.whereQuery) {\n      query += this.whereQuery;\n    }\n\n    query += this.groupFooterQuery();\n    query = this.whereTemplate.convertPlaceHolderToValue(query);\n    query = query.trim();\n\n    log(query, this.logs, this.params);\n    const [rows] = await this.mysqlConnection.query<any[]>(query, this.params);\n\n    const modelPromises = rows.map(async (row) => {\n      const modelInstance = getBaseModelInstance<T>();\n      await this.mergeRawPacketIntoModel(modelInstance, row, this.model);\n      return modelInstance as T;\n    });\n\n    const models = await Promise.all(modelPromises);\n    const relationModels =\n      await this.mysqlModelManagerUtils.parseQueryBuilderRelations(\n        models,\n        this.model,\n        this.relations,\n        this.type,\n        this.logs,\n      );\n\n    const serializedModels = await parseDatabaseDataIntoModelResponse(\n      models,\n      this.model,\n      relationModels,\n      this.modelSelectedColumns,\n    );\n    if (!serializedModels) {\n      return [];\n    }\n\n    if (!options.ignoreHooks?.includes(\"afterFetch\")) {\n      await this.model.afterFetch(\n        Array.isArray(serializedModels) ? serializedModels : [serializedModels],\n      );\n    }\n\n    return (\n      Array.isArray(serializedModels) ? serializedModels : [serializedModels]\n    ) as T[];\n  }\n\n  async softDelete(options?: SoftDeleteOptions<T>): Promise<number> {\n    const {\n      column = \"deletedAt\",\n      value = new Date().toISOString().slice(0, 19).replace(\"T\", \" \"),\n      ignoreBeforeDeleteHook = false,\n    } = options || {};\n    if (!ignoreBeforeDeleteHook) {\n      this.model.beforeDelete(this);\n    }\n\n    let { query, params } = this.updateTemplate.massiveUpdate(\n      [column as string],\n      [value],\n      this.whereQuery,\n      this.joinQuery,\n    );\n\n    params = [...params, ...this.params];\n\n    log(query, this.logs, params);\n    const rows: any = await this.mysqlConnection.query(query, params);\n    if (!rows[0].affectedRows) {\n      return 0;\n    }\n\n    return rows[0].affectedRows;\n  }\n\n  async delete(options: DeleteOptions = {}): Promise<number> {\n    const { ignoreBeforeDeleteHook } = options || {};\n    if (!ignoreBeforeDeleteHook) {\n      this.model.beforeDelete(this);\n    }\n\n    this.whereQuery = this.whereTemplate.convertPlaceHolderToValue(\n      this.whereQuery,\n    );\n\n    const query = this.deleteTemplate.massiveDelete(\n      this.whereQuery,\n      this.joinQuery,\n    );\n\n    log(query, this.logs, this.params);\n    const rows: any = await this.mysqlConnection.query(query, this.params);\n\n    if (!rows[0].affectedRows) {\n      return 0;\n    }\n\n    return rows[0].affectedRows;\n  }\n\n  async update(data: Partial<T>, options?: UpdateOptions): Promise<number> {\n    const { ignoreBeforeUpdateHook } = options || {};\n    if (!ignoreBeforeUpdateHook) {\n      this.model.beforeUpdate(this);\n    }\n\n    const columns = Object.keys(data);\n    const values = Object.values(data);\n    this.whereQuery = this.whereTemplate.convertPlaceHolderToValue(\n      this.whereQuery,\n    );\n\n    const { query, params } = this.updateTemplate.massiveUpdate(\n      columns,\n      values,\n      this.whereQuery,\n      this.joinQuery,\n    );\n    console.log(query, params, this.params);\n\n    params.push(...this.params);\n\n    log(query, this.logs, params);\n    const rows: any = await this.mysqlConnection.query(query, params);\n    if (!rows[0].affectedRows) {\n      return 0;\n    }\n\n    return rows[0].affectedRows;\n  }\n\n  whereBuilder(cb: (queryBuilder: MysqlQueryBuilder<T>) => void): this {\n    const queryBuilder = new MysqlQueryBuilder(\n      this.type,\n      this.model as typeof Model,\n      this.table,\n      this.mysqlConnection,\n      this.logs,\n      true,\n      this.sqlDataSource,\n    );\n    cb(queryBuilder as unknown as MysqlQueryBuilder<T>);\n\n    let whereCondition = queryBuilder.whereQuery.trim();\n    if (whereCondition.startsWith(\"AND\")) {\n      whereCondition = whereCondition.substring(4); // 'AND '.length === 4 has to be removed from the beginning of the where condition\n    } else if (whereCondition.startsWith(\"OR\")) {\n      whereCondition = whereCondition.substring(3); // 'OR '.length === 3 has to be removed from the beginning of the where condition\n    }\n\n    whereCondition = \"(\" + whereCondition + \")\";\n\n    if (!this.whereQuery) {\n      this.whereQuery = this.isNestedCondition\n        ? whereCondition\n        : `WHERE ${whereCondition}`;\n    } else {\n      this.whereQuery += ` AND ${whereCondition}`;\n    }\n\n    this.params.push(...queryBuilder.params);\n    return this;\n  }\n\n  orWhereBuilder(cb: (queryBuilder: MysqlQueryBuilder<T>) => void): this {\n    const nestedBuilder = new MysqlQueryBuilder(\n      this.type,\n      this.model as typeof Model,\n      this.table,\n      this.mysqlConnection,\n      this.logs,\n      true,\n      this.sqlDataSource,\n    );\n    cb(nestedBuilder as unknown as MysqlQueryBuilder<T>);\n\n    let nestedCondition = nestedBuilder.whereQuery.trim();\n    if (nestedCondition.startsWith(\"AND\")) {\n      nestedCondition = nestedCondition.substring(4);\n    } else if (nestedCondition.startsWith(\"OR\")) {\n      nestedCondition = nestedCondition.substring(3);\n    }\n\n    nestedCondition = `(${nestedCondition})`;\n\n    if (!this.whereQuery) {\n      this.whereQuery = this.isNestedCondition\n        ? nestedCondition\n        : `WHERE ${nestedCondition}`;\n\n      this.params.push(...nestedBuilder.params);\n      return this;\n    }\n\n    this.whereQuery += ` OR ${nestedCondition}`;\n    this.params.push(...nestedBuilder.params);\n\n    return this;\n  }\n\n  andWhereBuilder(cb: (queryBuilder: MysqlQueryBuilder<T>) => void): this {\n    const nestedBuilder = new MysqlQueryBuilder(\n      this.type,\n      this.model as typeof Model,\n      this.table,\n      this.mysqlConnection,\n      this.logs,\n      true,\n      this.sqlDataSource,\n    );\n    cb(nestedBuilder as unknown as MysqlQueryBuilder<T>);\n\n    let nestedCondition = nestedBuilder.whereQuery.trim();\n    if (nestedCondition.startsWith(\"AND\")) {\n      nestedCondition = nestedCondition.substring(4);\n    } else if (nestedCondition.startsWith(\"OR\")) {\n      nestedCondition = nestedCondition.substring(3);\n    }\n\n    if (!this.whereQuery) {\n      this.whereQuery = this.isNestedCondition\n        ? nestedCondition\n        : `WHERE ${nestedCondition}`;\n\n      this.params.push(...nestedBuilder.params);\n      return this;\n    }\n\n    this.whereQuery += ` AND ${nestedCondition}`;\n    this.params.push(...nestedBuilder.params);\n\n    return this;\n  }\n\n  async getCount(\n    options: { ignoreHooks: boolean } = { ignoreHooks: false },\n  ): Promise<number> {\n    if (options.ignoreHooks) {\n      const [result]: any = await this.mysqlConnection.query(\n        `SELECT COUNT(*) as total from ${this.table}`,\n      );\n      return result[0].total;\n    }\n\n    this.select(\"COUNT(*) as total\");\n    const result = await this.one();\n    return result ? +result.$additionalColumns.total : 0;\n  }\n\n  async getSum(column: SelectableType<T>): Promise<number>;\n  async getSum(column: string): Promise<number>;\n  async getSum(\n    column: SelectableType<T> | string,\n    options: { ignoreHooks: boolean } = { ignoreHooks: false },\n  ): Promise<number> {\n    if (options.ignoreHooks) {\n      const [result]: any = await this.mysqlConnection.query(\n        `SELECT SUM(${column as string}) as total from ${this.table}`,\n      );\n      return result[0].total;\n    }\n\n    column = convertCase(column as string, this.model.databaseCaseConvention);\n    this.select(`SUM(${column as string}) as total`);\n    const result = await this.one();\n    return result ? +result.$additionalColumns.total : 0;\n  }\n\n  async paginate(\n    page: number,\n    limit: number,\n    options?: ManyOptions,\n  ): Promise<PaginatedData<T>> {\n    this.limitQuery = this.selectTemplate.limit(limit);\n    this.offsetQuery = this.selectTemplate.offset((page - 1) * limit);\n\n    const originalSelectQuery = this.selectQuery;\n    this.select(\"COUNT(*) as total\");\n    const total = await this.many(options);\n\n    this.selectQuery = originalSelectQuery;\n    const models = await this.many(options);\n\n    const paginationMetadata = getPaginationMetadata(\n      page,\n      limit,\n      +total[0].$additionalColumns[\"total\"] as number,\n    );\n    let data =\n      (await parseDatabaseDataIntoModelResponse(models, this.model)) || [];\n    if (Array.isArray(data)) {\n      data = data.filter((model) => model !== null);\n    }\n\n    return {\n      paginationMetadata,\n      data: Array.isArray(data) ? data : [data],\n    } as PaginatedData<T>;\n  }\n\n  // SELECT\n  select(...columns: string[]): MysqlQueryBuilder<T>;\n  select(...columns: (SelectableType<T> | \"*\")[]): MysqlQueryBuilder<T>;\n  select(\n    ...columns: (SelectableType<T> | \"*\" | string)[]\n  ): MysqlQueryBuilder<T> {\n    this.modelSelectedColumns = columns.map((column) =>\n      convertCase(column as string, this.model.databaseCaseConvention),\n    ) as string[];\n    this.selectQuery = this.selectTemplate.selectColumns(\n      ...(columns as string[]),\n    );\n\n    return this;\n  }\n\n  distinct(): MysqlQueryBuilder<T> {\n    const distinct = this.selectTemplate.distinct;\n    this.selectQuery = this.selectQuery.replace(\n      /select/i,\n      `SELECT ${distinct}`,\n    );\n    return this;\n  }\n\n  distinctOn(...columns: string[]): MysqlQueryBuilder<T>;\n  distinctOn(...columns: SelectableType<T>[]): MysqlQueryBuilder<T>;\n  distinctOn(...columns: (string | SelectableType<T>)[]): MysqlQueryBuilder<T>;\n  distinctOn(...columns: (string | SelectableType<T>)[]): MysqlQueryBuilder<T> {\n    throw new Error(\"DISTINCT ON is only supported in postgres\");\n  }\n\n  joinRaw(query: string): this {\n    this.joinQuery += ` ${query} `;\n    return this;\n  }\n\n  join(\n    relationTable: string,\n    primaryColumn: string,\n    foreignColumn: string,\n  ): MysqlQueryBuilder<T> {\n    const join = joinTemplate(\n      this.model,\n      relationTable,\n      primaryColumn,\n      foreignColumn,\n    );\n    this.joinQuery += join.innerJoin();\n    return this;\n  }\n\n  leftJoin(\n    relationTable: string,\n    primaryColumn: string,\n    foreignColumn: string,\n  ): MysqlQueryBuilder<T> {\n    const join = joinTemplate(\n      this.model,\n      relationTable,\n      primaryColumn,\n      foreignColumn,\n    );\n    this.joinQuery += join.leftJoin();\n    return this;\n  }\n\n  with<O extends typeof Model>(\n    relation: RelationType<T>,\n    relatedModel?: O,\n    relatedModelQueryBuilder?: (\n      queryBuilder: ModelQueryBuilder<ModelInstanceType<O>>,\n    ) => void,\n    ignoreHooks?: { beforeFetch?: boolean; afterFetch?: boolean },\n  ): ModelQueryBuilder<T> {\n    if (!relatedModelQueryBuilder) {\n      this.relations.push({\n        relation: relation as string,\n      });\n\n      return this;\n    }\n\n    const queryBuilder = new MysqlQueryBuilder(\n      this.type,\n      relatedModel as typeof Model,\n      relatedModel?.table || \"\",\n      this.mysqlConnection,\n      this.logs,\n      false,\n      this.sqlDataSource,\n    );\n\n    relatedModelQueryBuilder(queryBuilder as ModelQueryBuilder<any>);\n    if (!ignoreHooks?.beforeFetch) {\n      relatedModel?.beforeFetch(queryBuilder);\n    }\n\n    this.relations.push({\n      relation: relation as string,\n      selectedColumns: queryBuilder.modelSelectedColumns,\n      whereQuery: this.whereTemplate.convertPlaceHolderToValue(\n        queryBuilder.whereQuery,\n      ),\n      params: queryBuilder.params,\n      joinQuery: queryBuilder.joinQuery,\n      groupByQuery: queryBuilder.groupByQuery,\n      orderByQuery: queryBuilder.orderByQuery,\n      limitQuery: queryBuilder.limitQuery,\n      offsetQuery: queryBuilder.offsetQuery,\n      havingQuery: queryBuilder.havingQuery,\n      dynamicColumns: queryBuilder.dynamicColumns,\n      ignoreAfterFetchHook: ignoreHooks?.afterFetch || false,\n    });\n\n    return this;\n  }\n\n  addDynamicColumns(\n    dynamicColumns: DynamicColumnType<T>[],\n  ): ModelQueryBuilder<T> {\n    this.dynamicColumns = dynamicColumns as string[];\n    return this;\n  }\n\n  groupBy(...columns: SelectableType<T>[]): this;\n  groupBy(...columns: string[]): this;\n  groupBy(...columns: (SelectableType<T> | string)[]): this {\n    this.groupByQuery = this.selectTemplate.groupBy(...(columns as string[]));\n    return this;\n  }\n\n  groupByRaw(query: string): this {\n    query.replace(\"GROUP BY\", \"\");\n    this.groupByQuery = ` GROUP BY ${query}`;\n    return this;\n  }\n\n  orderBy(column: SelectableType<T>, order: \"ASC\" | \"DESC\"): this;\n  orderBy(column: string, order: \"ASC\" | \"DESC\"): this;\n  orderBy(column: SelectableType<T> | string, order: \"ASC\" | \"DESC\"): this {\n    const casedColumn = convertCase(\n      column as string,\n      this.model.databaseCaseConvention,\n    );\n\n    if (this.orderByQuery) {\n      this.orderByQuery += `, ${casedColumn as string} ${order}`;\n      return this;\n    }\n\n    this.orderByQuery = ` ORDER BY ${casedColumn as string} ${order}`;\n    return this;\n  }\n\n  orderByRaw(query: string): this {\n    if (this.orderByQuery) {\n      this.orderByQuery += `, ${query}`;\n      return this;\n    }\n\n    this.orderByQuery = ` ORDER BY ${query}`;\n    return this;\n  }\n\n  limit(limit: number) {\n    this.limitQuery = this.selectTemplate.limit(limit);\n    return this;\n  }\n\n  offset(offset: number) {\n    this.offsetQuery = this.selectTemplate.offset(offset);\n    return this;\n  }\n\n  havingRaw(query: string): ModelQueryBuilder<T> {\n    query = query.replace(\"HAVING\", \"\");\n    if (this.havingQuery) {\n      this.havingQuery += ` AND ${query}`;\n      return this;\n    }\n\n    this.havingQuery = ` HAVING ${query}`;\n    return this;\n  }\n\n  copy(): ModelQueryBuilder<T> {\n    const queryBuilder = new MysqlQueryBuilder<T>(\n      this.type,\n      this.model as typeof Model,\n      this.table,\n      this.mysqlConnection,\n      this.logs,\n      this.isNestedCondition,\n      this.sqlDataSource,\n    );\n\n    queryBuilder.selectQuery = this.selectQuery;\n    queryBuilder.whereQuery = this.whereQuery;\n    queryBuilder.joinQuery = this.joinQuery;\n    queryBuilder.groupByQuery = this.groupByQuery;\n    queryBuilder.orderByQuery = this.orderByQuery;\n    queryBuilder.limitQuery = this.limitQuery;\n    queryBuilder.offsetQuery = this.offsetQuery;\n    queryBuilder.params = [...this.params];\n    queryBuilder.relations = [...this.relations];\n    return queryBuilder;\n  }\n}\n","export type PaginationMetadata = {\n  perPage: number;\n  currentPage: number;\n  firstPage: number;\n  isEmpty: boolean;\n  total: number;\n  hasTotal: boolean;\n  lastPage: number;\n  hasMorePages: boolean;\n  hasPages: boolean;\n};\n\nexport type PaginatedData<T> = {\n  paginationMetadata: PaginationMetadata;\n  data: T[];\n};\n\nexport function getPaginationMetadata(\n  page: number,\n  limit: number,\n  total: number,\n) {\n  return {\n    total: total,\n    perPage: limit,\n    currentPage: page,\n    firstPage: 1,\n    isEmpty: total === 0,\n    lastPage: Math.max(1, Math.ceil(total / limit)),\n    hasMorePages: page < Math.max(1, Math.ceil(total / limit)),\n    hasPages: total > limit,\n  };\n}\n","import { convertCase } from \"../../utils/case_utils\";\nimport { Model } from \"../models/model\";\nimport { getModelColumns } from \"../models/model_decorators\";\nimport {\n  SelectableType,\n  RelationType,\n  DynamicColumnType,\n} from \"../models/model_manager/model_manager_types\";\nimport { MysqlQueryBuilder } from \"../mysql/mysql_query_builder\";\nimport { PaginatedData } from \"../pagination\";\nimport { PostgresQueryBuilder } from \"../postgres/postgres_query_builder\";\nimport selectTemplate from \"../resources/query/SELECT\";\nimport { addDynamicColumnsToModel } from \"../serializer\";\nimport { SqlDataSource } from \"../sql_data_source\";\nimport { SqlLiteQueryBuilder } from \"../sqlite/sql_lite_query_builder\";\nimport { DeleteOptions, SoftDeleteOptions } from \"./delete_query_builder_type\";\nimport { UpdateOptions } from \"./update_query_builder_types\";\nimport { WhereQueryBuilder } from \"./where_query_builder\";\n\n/**\n * @description The abstract class for query builders for selecting data.\n */\nexport type ModelQueryBuilder<T extends Model> =\n  | MysqlQueryBuilder<T>\n  | PostgresQueryBuilder<T>\n  | SqlLiteQueryBuilder<T>;\n\nexport type ModelInstanceType<O> = O extends typeof Model\n  ? InstanceType<O>\n  : never;\n\nexport type FetchHooks = \"beforeFetch\" | \"afterFetch\";\n\nexport type OneOptions = {\n  ignoreHooks?: FetchHooks[];\n};\n\nexport type ManyOptions = {\n  ignoreHooks?: FetchHooks[];\n};\n\nexport type RelationQueryBuilder = {\n  relation: string;\n  selectedColumns?: string[];\n  whereQuery?: string;\n  params?: any[];\n  joinQuery?: string;\n  groupByQuery?: string;\n  orderByQuery?: string;\n  limitQuery?: string;\n  offsetQuery?: string;\n  havingQuery?: string;\n  dynamicColumns?: string[];\n  ignoreAfterFetchHook?: boolean;\n};\n\nexport abstract class QueryBuilder<\n  T extends Model,\n> extends WhereQueryBuilder<T> {\n  protected selectQuery: string;\n  protected modelSelectedColumns: string[];\n  protected joinQuery: string;\n  protected relations: RelationQueryBuilder[];\n  protected dynamicColumns: string[];\n  protected groupByQuery: string;\n  protected orderByQuery: string;\n  protected limitQuery: string;\n  protected offsetQuery: string;\n  protected havingQuery: string;\n  protected selectTemplate: ReturnType<typeof selectTemplate>;\n\n  /**\n   * @description Constructs a Mysql_query_builder instance.\n   */\n  protected constructor(\n    model: typeof Model,\n    table: string,\n    logs: boolean,\n    sqlDataSource: SqlDataSource,\n  ) {\n    super(model, table, logs, false, sqlDataSource);\n    this.sqlDataSource = sqlDataSource;\n    this.selectQuery = selectTemplate(\n      this.sqlDataSource.getDbType(),\n      this.model,\n    ).selectAll;\n    this.selectTemplate = selectTemplate(\n      this.sqlDataSource.getDbType(),\n      this.model,\n    );\n    this.joinQuery = \"\";\n    this.whereQuery = \"\";\n    this.modelSelectedColumns = [];\n    this.relations = [];\n    this.dynamicColumns = [];\n    this.groupByQuery = \"\";\n    this.orderByQuery = \"\";\n    this.limitQuery = \"\";\n    this.offsetQuery = \"\";\n    this.havingQuery = \"\";\n  }\n\n  /**\n   * @description Executes the query and retrieves the first result.\n   */\n  abstract one(options?: OneOptions): Promise<T | null>;\n\n  /**\n   * @description Executes the query and retrieves the first result.\n   * @alias one\n   */\n  async first(options?: OneOptions): Promise<T | null> {\n    return this.one(options);\n  }\n\n  /**\n   * @description Executes the query and retrieves the first result. Fail if no result is found.\n   */\n  abstract oneOrFail(options?: {\n    ignoreHooks?: OneOptions[\"ignoreHooks\"] & { customError?: Error };\n  }): Promise<T>;\n\n  /**\n   * @description Executes the query and retrieves the first result. Fail if no result is found.\n   * @alias oneOrFail\n   */\n  async firstOrFail(options?: {\n    ignoreHooks?: OneOptions[\"ignoreHooks\"] & { customError?: Error };\n  }): Promise<T> {\n    return this.oneOrFail(options);\n  }\n\n  /**\n   * @description Executes the query and retrieves multiple results.\n   */\n  abstract many(options: ManyOptions): Promise<T[]>;\n\n  /**\n   * @description Updates records in the database.\n   */\n  abstract update(data: Partial<T>, options?: UpdateOptions): Promise<number>;\n\n  /**\n   * @description soft Deletes Records from the database.\n   * @default column - 'deletedAt'\n   * @default value - The current date and time.\n   * @default ignoreBeforeDeleteHook - false\n   * @default trx - undefined\n   */\n  abstract softDelete(options?: SoftDeleteOptions<T>): Promise<number>;\n\n  /**\n   * @description Deletes Records from the database for the current query.\n   */\n  abstract delete(options?: DeleteOptions): Promise<number>;\n\n  /**\n   * @description Executes the query and retrieves the count of results, it ignores all select, group by, order by, limit and offset clauses if they are present.\n   */\n  abstract getCount(options: { ignoreHooks: boolean }): Promise<number>;\n\n  /**\n   * @description Executes the query and retrieves the sum of a column, it ignores all select, group by, order by, limit and offset clauses if they are present.\n   */\n  abstract getSum(\n    column: string,\n    options: { ignoreHooks: boolean },\n  ): Promise<number>;\n\n  /**\n   * @description Executes the query and retrieves multiple results.\n   */\n  abstract paginate(\n    page: number,\n    limit: number,\n    options?: ManyOptions,\n  ): Promise<PaginatedData<T>>;\n\n  /**\n   * @description Adds a SELECT condition to the query.\n   */\n  abstract select(...columns: string[]): ModelQueryBuilder<T>;\n  abstract select(\n    ...columns: (SelectableType<T> | \"*\")[]\n  ): ModelQueryBuilder<T>;\n  abstract select(\n    ...columns: (SelectableType<T> | \"*\" | string)[]\n  ): ModelQueryBuilder<T>;\n\n  /**\n   * @description Adds a DISTINCT condition to the query.\n   */\n  abstract distinct(): ModelQueryBuilder<T>;\n\n  /**\n   * @description Adds a DISTINCT ON condition to the query.\n   */\n  abstract distinctOn(...columns: string[]): ModelQueryBuilder<T>;\n  abstract distinctOn(...columns: SelectableType<T>[]): ModelQueryBuilder<T>;\n  abstract distinctOn(\n    ...columns: (SelectableType<T> | string)[]\n  ): ModelQueryBuilder<T>;\n\n  /**\n   * @description Adds a JOIN condition to the query.\n   */\n  abstract join(\n    table: string,\n    primaryColumn: string,\n    foreignColumn: string,\n  ): ModelQueryBuilder<T>;\n\n  /**\n   * @description Adds a raw JOIN condition to the query.\n   */\n  abstract joinRaw(query: string): QueryBuilder<T>;\n\n  /**\n   * @description Adds a LEFT JOIN condition to the query.\n   */\n  abstract leftJoin(\n    table: string,\n    primaryColumn: string,\n    foreignColumn: string,\n  ): ModelQueryBuilder<T>;\n\n  /**\n   * @description Adds a relation to the final model.\n   */\n  abstract with<O extends typeof Model>(\n    relation: RelationType<T>,\n    relatedModel?: O,\n    relatedModelQueryBuilder?: (\n      queryBuilder: ModelQueryBuilder<ModelInstanceType<O>>,\n    ) => void,\n    ignoreHooks?: { beforeFetch?: boolean; afterFetch?: boolean },\n  ): ModelQueryBuilder<T>;\n\n  /**\n   * @description Adds a the selected dynamic columns from the model into the final model\n   */\n  abstract addDynamicColumns(\n    dynamicColumns: DynamicColumnType<T>[],\n  ): ModelQueryBuilder<T>;\n\n  /**\n   * @description Build more complex where conditions.\n   */\n  abstract whereBuilder(\n    cb: (queryBuilder: ModelQueryBuilder<T>) => void,\n  ): ModelQueryBuilder<T>;\n\n  /**\n   * @description Build more complex where conditions.\n   */\n  abstract andWhereBuilder(\n    cb: (queryBuilder: ModelQueryBuilder<T>) => void,\n  ): ModelQueryBuilder<T>;\n\n  /**\n   * @description Build more complex where conditions.\n   */\n  abstract orWhereBuilder(\n    cb: (queryBuilder: ModelQueryBuilder<T>) => void,\n  ): ModelQueryBuilder<T>;\n\n  /**\n   * @description Adds GROUP BY conditions to the query.\n   */\n  abstract groupBy(...columns: SelectableType<T>[]): ModelQueryBuilder<T>;\n  abstract groupBy(...columns: string[]): ModelQueryBuilder<T>;\n  abstract groupBy(\n    ...columns: (SelectableType<T> | string)[]\n  ): ModelQueryBuilder<T>;\n\n  /**\n   * @description Adds a raw GROUP BY condition to the query, only one raw GROUP BY condition is stackable, the last one will be used.\n   */\n  abstract groupByRaw(query: string): ModelQueryBuilder<T>;\n\n  /**\n   * @description Adds ORDER BY conditions to the query.\n   */\n  abstract orderBy(\n    column: SelectableType<T>,\n    order: \"ASC\" | \"DESC\",\n  ): ModelQueryBuilder<T>;\n  abstract orderBy(column: string, order: \"ASC\" | \"DESC\"): ModelQueryBuilder<T>;\n  abstract orderBy(\n    column: SelectableType<T> | string,\n    order: \"ASC\" | \"DESC\",\n  ): ModelQueryBuilder<T>;\n\n  /**\n   * @description Adds a raw ORDER BY condition to the query, only one raw ORDER BY condition is stackable, the last one will be used.\n   * @description ORDER BY is implicitly added to the query.\n   */\n  abstract orderByRaw(query: string): ModelQueryBuilder<T>;\n\n  /**\n   * @description Adds a LIMIT condition to the query.\n   */\n  abstract limit(limit: number): ModelQueryBuilder<T>;\n\n  /**\n   * @description Adds an OFFSET condition to the query.\n   */\n  abstract offset(offset: number): ModelQueryBuilder<T>;\n\n  /**\n   * @description Adds a raw HAVING condition to the query, only one raw HAVING condition is stackable, the last one will be used.\n   */\n  abstract havingRaw(query: string): ModelQueryBuilder<T>;\n\n  /**\n   * @description Returns a copy of the query builder instance.\n   */\n  abstract copy(): ModelQueryBuilder<T>;\n\n  /**\n   * @description Returns the query and the parameters in an object.\n   */\n  toSql(): {\n    query: string;\n    params: any[];\n  } {\n    const query =\n      this.selectQuery +\n      this.joinQuery +\n      this.whereQuery +\n      this.groupByQuery +\n      this.havingQuery +\n      this.orderByQuery +\n      this.limitQuery +\n      this.offsetQuery;\n\n    function parsePlaceHolders(\n      dbType: string,\n      query: string,\n      startIndex: number = 1,\n    ): string {\n      switch (dbType) {\n        case \"mysql\":\n        case \"sqlite\":\n        case \"mariadb\":\n          return query.replace(/PLACEHOLDER/g, () => \"?\");\n        case \"postgres\":\n          let index = startIndex;\n          return query.replace(/PLACEHOLDER/g, () => `$${index++}`);\n        default:\n          throw new Error(\n            \"Unsupported database type, did you forget to set the dbType in the function params?\",\n          );\n      }\n    }\n\n    const parsedQuery = parsePlaceHolders(\n      this.sqlDataSource.getDbType(),\n      query,\n    );\n\n    return { query: parsedQuery, params: this.params };\n  }\n\n  protected groupFooterQuery(): string {\n    return (\n      this.groupByQuery +\n      this.havingQuery +\n      this.orderByQuery +\n      this.limitQuery +\n      this.offsetQuery\n    );\n  }\n\n  protected async mergeRawPacketIntoModel(\n    model: T,\n    row: any,\n    typeofModel: typeof Model,\n  ) {\n    const columns = getModelColumns(this.model);\n    Object.entries(row).forEach(([key, value]) => {\n      const casedKey = convertCase(\n        key,\n        typeofModel.modelCaseConvention,\n      ) as string;\n      if (columns.map((column) => column.columnName).includes(casedKey)) {\n        Object.assign(model, { [casedKey]: value });\n        return;\n      }\n\n      model.$additionalColumns[key] = value as string | number | boolean;\n    });\n\n    if (!this.dynamicColumns.length) {\n      return;\n    }\n\n    await addDynamicColumnsToModel(this.model, model, this.dynamicColumns);\n  }\n}\n","import { convertCase } from \"../../../utils/case_utils\";\nimport { Model } from \"../../models/model\";\nimport { SqlDataSourceType } from \"../../sql_data_source_types\";\n\nconst baseSelectMethods = [\n  \"*\",\n  \"COUNT\",\n  \"DISTINCT\",\n  \"CONCAT\",\n  \"GROUP_CONCAT\",\n  \"AVG\",\n  \"MAX\",\n  \"MIN\",\n  \"SUM\",\n  \"AS\",\n  \"CONVERT\",\n  \"CAST\",\n  \"CONVERT_TZ\",\n  \"DATE_FORMAT\",\n  \"CURDATE\",\n  \"CURRENT_DATE\",\n  \"CURRENT_TIME\",\n  \"CURRENT_TIMESTAMP\",\n  \"CURTIME\",\n  \"DAYNAME\",\n  \"DAYOFMONTH\",\n  \"DAYOFWEEK\",\n  \"DAYOFYEAR\",\n  \"EXTRACT\",\n  \"HOUR\",\n  \"LOCALTIME\",\n  \"LOCALTIMESTAMP\",\n  \"MICROSECOND\",\n  \"MINUTE\",\n  \"MONTH\",\n  \"QUARTER\",\n  \"SECOND\",\n  \"STR_TO_DATE\",\n  \"TIME\",\n  \"TIMESTAMP\",\n  \"WEEK\",\n  \"YEAR\",\n  \"NOW\",\n  \"UTC_DATE\",\n  \"UTC_TIME\",\n  \"UTC_TIMESTAMP\",\n  \"DATE_ADD\",\n  \"DATE_SUB\",\n  \"DATE\",\n  \"DATEDIFF\",\n  \"DATE_FORMAT\",\n  \"DISTINCTROW\",\n];\n\nconst selectTemplate = (\n  dbType: SqlDataSourceType,\n  typeofModel: typeof Model,\n) => {\n  const table = typeofModel.table;\n  const escapeIdentifier = (identifier: string) => {\n    switch (dbType) {\n      case \"mysql\":\n      case \"sqlite\":\n      case \"mariadb\":\n        return `\\`${identifier.replace(/`/g, \"``\")}\\``;\n      case \"postgres\":\n        return `\"${identifier.replace(/\"/g, '\"\"')}\"`;\n      default:\n        throw new Error(\"Unsupported database type\");\n    }\n  };\n\n  return {\n    selectAll: `SELECT * FROM ${table} `,\n    selectById: (id: string) => `SELECT * FROM ${table} WHERE id = ${id}`,\n    selectByIds: (ids: string[]) => {\n      ids = ids.map((id) => escapeIdentifier(id) as string);\n      return `SELECT * FROM ${table} WHERE id IN (${ids.join(\", \")})`;\n    },\n    selectColumns: (...columns: string[]) => {\n      columns = columns.map((column) => {\n        const columnCase = typeofModel.databaseCaseConvention;\n        let tableName = \"\";\n        let columnName = column;\n        let alias = \"\";\n\n        if (column.toUpperCase().includes(\" AS \")) {\n          [columnName, alias] = column.split(/ AS /i);\n        }\n        alias = convertCase(alias, columnCase);\n\n        if (columnName.includes(\".\")) {\n          [tableName, columnName] = columnName.split(\".\");\n        }\n\n        if (\n          baseSelectMethods.includes(columnName.toUpperCase()) ||\n          columnName.includes(\"(\")\n        ) {\n          return alias ? `${columnName} AS ${alias}` : columnName;\n        }\n\n        let finalColumn = columnName;\n        if (!alias) {\n          const processedColumnName = escapeIdentifier(\n            convertCase(columnName, columnCase),\n          ) as string;\n          finalColumn = tableName\n            ? `${tableName}.${processedColumnName}`\n            : processedColumnName;\n        } else if (tableName) {\n          finalColumn = `${tableName}.${columnName}`;\n        }\n\n        return alias ? `${finalColumn} AS ${alias}` : finalColumn;\n      });\n\n      return `SELECT ${columns.join(\", \")} FROM ${table} `;\n    },\n    distinct: `DISTINCT`,\n    distinctOn: (...columns: string[]) => {\n      if (dbType !== \"postgres\") {\n        throw new Error(\"DISTINCT ON is only supported in postgres\");\n      }\n\n      columns = columns.map((column) =>\n        escapeIdentifier(\n          convertCase(column, typeofModel.databaseCaseConvention),\n        ),\n      ) as string[];\n\n      return `DISTINCT ON (${columns.join(\", \")})`;\n    },\n    selectCount: `SELECT COUNT(*) FROM ${table} `,\n    selectDistinct: (...columns: string[]) => {\n      columns = columns.map((column) =>\n        escapeIdentifier(\n          convertCase(column, typeofModel.databaseCaseConvention),\n        ),\n      ) as string[];\n      return `SELECT DISTINCT ${columns.join(\", \")} FROM ${table} `;\n    },\n    selectSum: (column: string) =>\n      `SELECT SUM(${escapeIdentifier(\n        convertCase(column, typeofModel.databaseCaseConvention),\n      )}) FROM ${table} `,\n    _orderBy: (columns: string[], order: \"ASC\" | \"DESC\" = \"ASC\") => {\n      columns = columns.map((column) => {\n        let tableName = \"\";\n        let columnName = column;\n\n        if (column.includes(\".\")) {\n          [tableName, columnName] = column.split(\".\");\n        }\n\n        const processedColumnName = convertCase(\n          columnName,\n          typeofModel.databaseCaseConvention,\n        );\n\n        return tableName\n          ? `${tableName}.${processedColumnName}`\n          : processedColumnName;\n      }) as string[];\n\n      return ` ORDER BY ${columns.join(\", \")} ${order}`;\n    },\n    groupBy: (...columns: string[]) => {\n      columns = columns.map((column) => {\n        let tableName = \"\";\n        let columnName = column;\n\n        if (column.includes(\".\")) {\n          [tableName, columnName] = column.split(\".\");\n        }\n\n        const processedColumnName = convertCase(\n          columnName,\n          typeofModel.databaseCaseConvention,\n        );\n\n        return tableName\n          ? `${tableName}.${processedColumnName}`\n          : processedColumnName;\n      }) as string[];\n\n      return ` GROUP BY ${columns.join(\", \")}`;\n    },\n    limit: (limit: number) => {\n      return ` LIMIT ${limit}`;\n    },\n    offset: (offset: number) => {\n      return ` OFFSET ${offset}`;\n    },\n  };\n};\n\nexport default selectTemplate;\n","import { Model } from \"../models/model\";\nimport { SelectableType } from \"../models/model_manager/model_manager_types\";\nimport whereTemplate, {\n  BaseValues,\n  BinaryOperatorType,\n} from \"../resources/query/WHERE\";\nimport { SqlDataSource } from \"../sql_data_source\";\n\nexport class WhereQueryBuilder<T extends Model> {\n  protected sqlDataSource: SqlDataSource;\n  protected whereQuery: string = \"\";\n  protected params: BaseValues[] = [];\n  protected model: typeof Model;\n  protected table: string;\n  protected logs: boolean;\n\n  protected whereTemplate: ReturnType<typeof whereTemplate>;\n  protected isNestedCondition = false;\n\n  /**\n   * @description Constructs a query_builder instance.\n   */\n  constructor(\n    model: typeof Model,\n    table: string,\n    logs: boolean,\n    isNestedCondition = false,\n    sqlDataSource: SqlDataSource,\n  ) {\n    this.model = model;\n    this.sqlDataSource = sqlDataSource;\n    this.logs = logs;\n    this.table = table;\n    this.whereTemplate = whereTemplate(\n      this.sqlDataSource.getDbType(),\n      this.model,\n    );\n    this.params = [];\n    this.isNestedCondition = isNestedCondition;\n  }\n\n  /**\n   * @description Accepts a value and executes a callback only of the value is not null or undefined.\n   */\n  when(\n    value: any,\n    cb: (value: any, query: WhereQueryBuilder<T>) => void,\n  ): this {\n    if (value === undefined || value === null) {\n      return this;\n    }\n\n    cb(value, this);\n    return this;\n  }\n\n  /**\n   * @description Adds a WHERE condition to the query.\n   */\n  where(\n    column: SelectableType<T>,\n    operator: BinaryOperatorType,\n    value: BaseValues,\n  ): this;\n  where(column: string, operator: BinaryOperatorType, value: BaseValues): this;\n  where(column: SelectableType<T> | string, value: BaseValues): this;\n  where(\n    column: SelectableType<T> | string,\n    operatorOrValue: BinaryOperatorType | BaseValues,\n    value?: BaseValues,\n  ): this {\n    let operator: BinaryOperatorType = \"=\";\n    let actualValue: BaseValues;\n\n    if (typeof operatorOrValue === \"string\" && value) {\n      operator = operatorOrValue as BinaryOperatorType;\n      actualValue = value;\n    } else {\n      actualValue = operatorOrValue as BaseValues;\n      operator = \"=\";\n    }\n\n    if (this.whereQuery || this.isNestedCondition) {\n      const { query, params } = this.whereTemplate.andWhere(\n        column as string,\n        actualValue,\n        operator,\n      );\n      this.whereQuery += query;\n      this.params.push(...params);\n      return this;\n    }\n\n    const { query, params } = this.whereTemplate.where(\n      column as string,\n      actualValue,\n      operator,\n    );\n    this.whereQuery = query;\n    this.params.push(...params);\n    return this;\n  }\n\n  /**\n   * @description Adds an AND WHERE condition to the query.\n   */\n  andWhere(\n    column: SelectableType<T>,\n    operator: BinaryOperatorType,\n    value: BaseValues,\n  ): this;\n  andWhere(\n    column: string,\n    operator: BinaryOperatorType,\n    value: BaseValues,\n  ): this;\n  andWhere(column: SelectableType<T> | string, value: BaseValues): this;\n  andWhere(\n    column: SelectableType<T> | string,\n    operatorOrValue: BinaryOperatorType | BaseValues,\n    value?: BaseValues,\n  ): this {\n    let operator: BinaryOperatorType = \"=\";\n    let actualValue: BaseValues;\n\n    if (typeof operatorOrValue === \"string\" && value) {\n      operator = operatorOrValue as BinaryOperatorType;\n      actualValue = value;\n    } else {\n      actualValue = operatorOrValue as BaseValues;\n      operator = \"=\";\n    }\n\n    if (!this.whereQuery && !this.isNestedCondition) {\n      const { query, params } = this.whereTemplate.where(\n        column as string,\n        actualValue,\n        operator,\n      );\n      this.whereQuery = query;\n      this.params.push(...params);\n      return this;\n    }\n\n    const { query, params } = this.whereTemplate.andWhere(\n      column as string,\n      actualValue,\n      operator,\n    );\n    this.whereQuery += query;\n    this.params.push(...params);\n    return this;\n  }\n\n  /**\n   * @description Adds an OR WHERE condition to the query.\n   */\n  orWhere(\n    column: SelectableType<T>,\n    operator: BinaryOperatorType,\n    value: BaseValues,\n  ): this;\n  orWhere(\n    column: string,\n    operator: BinaryOperatorType,\n    value: BaseValues,\n  ): this;\n  orWhere(column: SelectableType<T> | string, value: BaseValues): this;\n  orWhere(\n    column: SelectableType<T> | string,\n    operatorOrValue: BinaryOperatorType | BaseValues,\n    value?: BaseValues,\n  ): this {\n    let operator: BinaryOperatorType = \"=\";\n    let actualValue: BaseValues;\n\n    if (typeof operatorOrValue === \"string\" && value) {\n      operator = operatorOrValue as BinaryOperatorType;\n      actualValue = value;\n    } else {\n      actualValue = operatorOrValue as BaseValues;\n      operator = \"=\";\n    }\n\n    if (!this.whereQuery && !this.isNestedCondition) {\n      const { query, params } = this.whereTemplate.where(\n        column as string,\n        actualValue,\n        operator,\n      );\n      this.whereQuery = query;\n      this.params.push(...params);\n      return this;\n    }\n\n    const { query, params } = this.whereTemplate.orWhere(\n      column as string,\n      actualValue,\n      operator,\n    );\n    this.whereQuery += query;\n    this.params.push(...params);\n    return this;\n  }\n\n  /**\n   * @description Adds a WHERE BETWEEN condition to the query.\n   */\n  whereBetween(\n    column: SelectableType<T>,\n    min: BaseValues,\n    max: BaseValues,\n  ): this;\n  whereBetween(column: string, min: BaseValues, max: BaseValues): this;\n  whereBetween(\n    column: SelectableType<T> | string,\n    min: BaseValues,\n    max: BaseValues,\n  ): this {\n    if (!this.whereQuery && !this.isNestedCondition) {\n      const { query, params } = this.whereTemplate.whereBetween(\n        column as string,\n        min,\n        max,\n      );\n      this.whereQuery = query;\n      this.params.push(...params);\n      return this;\n    }\n\n    const { query, params } = this.whereTemplate.andWhereBetween(\n      column as string,\n      min,\n      max,\n    );\n    this.whereQuery += query;\n    this.params.push(...params);\n    return this;\n  }\n\n  /**\n   * @description Adds an AND WHERE BETWEEN condition to the query.\n   */\n  andWhereBetween(\n    column: SelectableType<T>,\n    min: BaseValues,\n    max: BaseValues,\n  ): this;\n  andWhereBetween(column: string, min: BaseValues, max: BaseValues): this;\n  andWhereBetween(\n    column: SelectableType<T> | string,\n    min: BaseValues,\n    max: BaseValues,\n  ): this {\n    if (!this.whereQuery && !this.isNestedCondition) {\n      const { query, params } = this.whereTemplate.whereBetween(\n        column as string,\n        min,\n        max,\n      );\n      this.whereQuery = query;\n      this.params.push(...params);\n      return this;\n    }\n\n    const { query, params } = this.whereTemplate.andWhereBetween(\n      column as string,\n      min,\n      max,\n    );\n    this.whereQuery += query;\n    this.params.push(...params);\n    return this;\n  }\n\n  /**\n   * @description Adds an OR WHERE BETWEEN condition to the query.\n   */\n  orWhereBetween(\n    column: SelectableType<T>,\n    min: BaseValues,\n    max: BaseValues,\n  ): this;\n  orWhereBetween(column: string, min: BaseValues, max: BaseValues): this;\n  orWhereBetween(\n    column: SelectableType<T> | string,\n    min: BaseValues,\n    max: BaseValues,\n  ): this {\n    if (!this.whereQuery && !this.isNestedCondition) {\n      const { query, params } = this.whereTemplate.whereBetween(\n        column as string,\n        min,\n        max,\n      );\n      this.whereQuery = query;\n      this.params.push(...params);\n      return this;\n    }\n\n    const { query, params } = this.whereTemplate.orWhereBetween(\n      column as string,\n      min,\n      max,\n    );\n    this.whereQuery += query;\n    this.params.push(...params);\n    return this;\n  }\n\n  /**\n   * @description Adds a WHERE NOT BETWEEN condition to the query.\n   */\n  whereNotBetween(\n    column: SelectableType<T>,\n    min: BaseValues,\n    max: BaseValues,\n  ): this;\n  whereNotBetween(column: string, min: BaseValues, max: BaseValues): this;\n  whereNotBetween(\n    column: SelectableType<T> | string,\n    min: BaseValues,\n    max: BaseValues,\n  ): this {\n    if (!this.whereQuery && !this.isNestedCondition) {\n      const { query, params } = this.whereTemplate.whereNotBetween(\n        column as string,\n        min,\n        max,\n      );\n      this.whereQuery = query;\n      this.params.push(...params);\n      return this;\n    }\n\n    const { query, params } = this.whereTemplate.andWhereNotBetween(\n      column as string,\n      min,\n      max,\n    );\n    this.whereQuery += query;\n    this.params.push(...params);\n    return this;\n  }\n\n  /**\n   * @description Adds an OR WHERE NOT BETWEEN condition to the query.\n   */\n  orWhereNotBetween(\n    column: SelectableType<T>,\n    min: BaseValues,\n    max: BaseValues,\n  ): this;\n  orWhereNotBetween(column: string, min: BaseValues, max: BaseValues): this;\n  orWhereNotBetween(\n    column: SelectableType<T> | string,\n    min: BaseValues,\n    max: BaseValues,\n  ): this {\n    if (!this.whereQuery && !this.isNestedCondition) {\n      const { query, params } = this.whereTemplate.whereNotBetween(\n        column as string,\n        min,\n        max,\n      );\n      this.whereQuery = query;\n      this.params.push(...params);\n      return this;\n    }\n\n    const { query, params } = this.whereTemplate.orWhereNotBetween(\n      column as string,\n      min,\n      max,\n    );\n    this.whereQuery += query;\n    this.params.push(...params);\n    return this;\n  }\n\n  /**\n   * @description Adds a WHERE IN condition to the query.\n   */\n  whereIn(column: SelectableType<T>, values: BaseValues[]): this;\n  whereIn(column: string, values: BaseValues[]): this;\n  whereIn(column: SelectableType<T> | string, values: BaseValues[]): this {\n    if (!this.whereQuery && !this.isNestedCondition) {\n      const { query, params } = this.whereTemplate.whereIn(\n        column as string,\n        values,\n      );\n      this.whereQuery = query;\n      this.params.push(...params);\n      return this;\n    }\n\n    const { query, params } = this.whereTemplate.andWhereIn(\n      column as string,\n      values,\n    );\n    this.whereQuery += query;\n    this.params.push(...params);\n    return this;\n  }\n\n  /**\n   * @description Adds an AND WHERE IN condition to the query.\n   */\n  andWhereIn(column: SelectableType<T>, values: BaseValues[]): this;\n  andWhereIn(column: string, values: BaseValues[]): this;\n  andWhereIn(column: SelectableType<T> | string, values: BaseValues[]): this {\n    if (!this.whereQuery && !this.isNestedCondition) {\n      const { query, params } = this.whereTemplate.whereIn(\n        column as string,\n        values,\n      );\n      this.whereQuery = query;\n      this.params.push(...params);\n      return this;\n    }\n\n    const { query, params } = this.whereTemplate.andWhereIn(\n      column as string,\n      values,\n    );\n    this.whereQuery += query;\n    this.params.push(...params);\n    return this;\n  }\n\n  /**\n   * @description Adds an OR WHERE IN condition to the query.\n   */\n  orWhereIn(column: SelectableType<T>, values: BaseValues[]): this;\n  orWhereIn(column: string, values: BaseValues[]): this;\n  orWhereIn(column: SelectableType<T> | string, values: BaseValues[]): this {\n    if (!this.whereQuery && !this.isNestedCondition) {\n      const { query, params } = this.whereTemplate.whereIn(\n        column as string,\n        values,\n      );\n      this.whereQuery = query;\n      this.params.push(...params);\n      return this;\n    }\n\n    const { query, params } = this.whereTemplate.orWhereIn(\n      column as string,\n      values,\n    );\n    this.whereQuery += query;\n    this.params.push(...params);\n    return this;\n  }\n\n  /**\n   * @description Adds a WHERE NOT IN condition to the query.\n   */\n  whereNotIn(column: SelectableType<T>, values: BaseValues[]): this;\n  whereNotIn(column: string, values: BaseValues[]): this;\n  whereNotIn(column: SelectableType<T> | string, values: BaseValues[]): this {\n    if (!this.whereQuery && !this.isNestedCondition) {\n      const { query, params } = this.whereTemplate.whereNotIn(\n        column as string,\n        values,\n      );\n      this.whereQuery = query;\n      this.params.push(...params);\n      return this;\n    }\n\n    const { query, params } = this.whereTemplate.andWhereNotIn(\n      column as string,\n      values,\n    );\n    this.whereQuery += query;\n    this.params.push(...params);\n    return this;\n  }\n\n  /**\n   * @description Adds an OR WHERE NOT IN condition to the query.\n   */\n  orWhereNotIn(column: SelectableType<T>, values: BaseValues[]): this;\n  orWhereNotIn(column: string, values: BaseValues[]): this;\n  orWhereNotIn(column: SelectableType<T> | string, values: BaseValues[]): this {\n    if (!this.whereQuery && !this.isNestedCondition) {\n      const { query, params } = this.whereTemplate.whereNotIn(\n        column as string,\n        values,\n      );\n      this.whereQuery = query;\n      this.params.push(...params);\n      return this;\n    }\n\n    const { query, params } = this.whereTemplate.orWhereNotIn(\n      column as string,\n      values,\n    );\n    this.whereQuery += query;\n    this.params.push(...params);\n    return this;\n  }\n\n  /**\n   * @description Adds a WHERE NULL condition to the query.\n   */\n  whereNull(column: SelectableType<T>): this;\n  whereNull(column: string): this;\n  whereNull(column: SelectableType<T> | string): this {\n    if (!this.whereQuery && !this.isNestedCondition) {\n      const { query, params } = this.whereTemplate.whereNull(column as string);\n      this.whereQuery = query;\n      this.params.push(...params);\n      return this;\n    }\n\n    const { query, params } = this.whereTemplate.andWhereNull(column as string);\n    this.whereQuery += query;\n    this.params.push(...params);\n    return this;\n  }\n\n  /**\n   * @description Adds an AND WHERE NULL condition to the query.\n   */\n  andWhereNull(column: SelectableType<T>): this;\n  andWhereNull(column: string): this;\n  andWhereNull(column: SelectableType<T> | string): this {\n    if (!this.whereQuery && !this.isNestedCondition) {\n      const { query, params } = this.whereTemplate.whereNull(column as string);\n      this.whereQuery = query;\n      this.params.push(...params);\n      return this;\n    }\n\n    const { query, params } = this.whereTemplate.andWhereNull(column as string);\n    this.whereQuery += query;\n    this.params.push(...params);\n    return this;\n  }\n\n  /**\n   * @description Adds an OR WHERE NULL condition to the query.\n   */\n  orWhereNull(column: SelectableType<T>): this;\n  orWhereNull(column: string): this;\n  orWhereNull(column: SelectableType<T> | string): this {\n    if (!this.whereQuery && !this.isNestedCondition) {\n      const { query, params } = this.whereTemplate.whereNull(column as string);\n      this.whereQuery = query;\n      this.params.push(...params);\n      return this;\n    }\n\n    const { query, params } = this.whereTemplate.orWhereNull(column as string);\n    this.whereQuery += query;\n    this.params.push(...params);\n    return this;\n  }\n\n  /**\n   * @description Adds a WHERE NOT NULL condition to the query.\n   */\n  whereNotNull(column: SelectableType<T>): this;\n  whereNotNull(column: string): this;\n  whereNotNull(column: SelectableType<T> | string): this {\n    if (!this.whereQuery && !this.isNestedCondition) {\n      const { query, params } = this.whereTemplate.whereNotNull(\n        column as string,\n      );\n      this.whereQuery = query;\n      this.params.push(...params);\n      return this;\n    }\n\n    const { query, params } = this.whereTemplate.andWhereNotNull(\n      column as string,\n    );\n    this.whereQuery += query;\n    this.params.push(...params);\n    return this;\n  }\n\n  /**\n   * @description Adds an AND WHERE NOT NULL condition to the query.\n   */\n  andWhereNotNull(column: SelectableType<T>): this;\n  andWhereNotNull(column: string): this;\n  andWhereNotNull(column: SelectableType<T> | string): this {\n    if (!this.whereQuery && !this.isNestedCondition) {\n      const { query, params } = this.whereTemplate.whereNotNull(\n        column as string,\n      );\n      this.whereQuery = query;\n      this.params.push(...params);\n      return this;\n    }\n\n    const { query, params } = this.whereTemplate.andWhereNotNull(\n      column as string,\n    );\n    this.whereQuery += query;\n    this.params.push(...params);\n    return this;\n  }\n\n  /**\n   * @description Adds an OR WHERE NOT NULL condition to the query.\n   */\n  orWhereNotNull(column: SelectableType<T>): this;\n  orWhereNotNull(column: string): this;\n  orWhereNotNull(column: SelectableType<T> | string): this {\n    if (!this.whereQuery && !this.isNestedCondition) {\n      const { query, params } = this.whereTemplate.whereNotNull(\n        column as string,\n      );\n      this.whereQuery = query;\n      this.params.push(...params);\n      return this;\n    }\n\n    const { query, params } = this.whereTemplate.orWhereNotNull(\n      column as string,\n    );\n    this.whereQuery += query;\n    this.params.push(...params);\n    return this;\n  }\n\n  /**\n   * @description Adds a WHERE REGEXP condition to the query.\n   */\n  whereRegexp(column: SelectableType<T>, regexp: RegExp): this;\n  whereRegexp(column: string, regexp: RegExp): this;\n  whereRegexp(column: SelectableType<T> | string, regexp: RegExp): this {\n    if (!this.whereQuery && !this.isNestedCondition) {\n      const { query, params } = this.whereTemplate.whereRegex(\n        column as string,\n        regexp,\n      );\n      this.whereQuery = query;\n      this.params.push(...params);\n      return this;\n    }\n\n    const { query, params } = this.whereTemplate.andWhereRegex(\n      column as string,\n      regexp,\n    );\n    this.whereQuery += query;\n    this.params.push(...params);\n    return this;\n  }\n\n  /**\n   * @description Adds an AND WHERE REGEXP condition to the query.\n   */\n  andWhereRegexp(column: SelectableType<T>, regexp: RegExp): this;\n  andWhereRegexp(column: string, regexp: RegExp): this;\n  andWhereRegexp(column: SelectableType<T> | string, regexp: RegExp): this {\n    if (!this.whereQuery && !this.isNestedCondition) {\n      const { query, params } = this.whereTemplate.whereRegex(\n        column as string,\n        regexp,\n      );\n      this.whereQuery = query;\n      this.params.push(...params);\n      return this;\n    }\n\n    const { query, params } = this.whereTemplate.andWhereRegex(\n      column as string,\n      regexp,\n    );\n    this.whereQuery += query;\n    this.params.push(...params);\n    return this;\n  }\n\n  /**\n   * @description Adds an OR WHERE REGEXP condition to the query.\n   */\n  orWhereRegexp(column: SelectableType<T>, regexp: RegExp): this;\n  orWhereRegexp(column: string, regexp: RegExp): this;\n  orWhereRegexp(column: SelectableType<T> | string, regexp: RegExp): this {\n    if (!this.whereQuery && !this.isNestedCondition) {\n      const { query, params } = this.whereTemplate.whereRegex(\n        column as string,\n        regexp,\n      );\n      this.whereQuery = query;\n      this.params.push(...params);\n      return this;\n    }\n\n    const { query, params } = this.whereTemplate.orWhereRegex(\n      column as string,\n      regexp,\n    );\n    this.whereQuery += query;\n    this.params.push(...params);\n    return this;\n  }\n\n  /**\n   * @description Adds a raw WHERE condition to the query.\n   */\n  rawWhere(query: string, queryParams: any[] = []) {\n    if (!this.whereQuery && !this.isNestedCondition) {\n      const { query: rawQuery, params } = this.whereTemplate.rawWhere(\n        query,\n        queryParams,\n      );\n      this.whereQuery = rawQuery;\n      this.params.push(...params);\n      return this;\n    }\n\n    const { query: rawQuery, params } = this.whereTemplate.rawAndWhere(\n      query,\n      queryParams,\n    );\n    this.whereQuery += rawQuery;\n    this.params.push(...params);\n    return this;\n  }\n\n  /**\n   * @description Adds a raw AND WHERE condition to the query.\n   */\n  rawAndWhere(query: string, queryParams: any[] = []) {\n    if (!this.whereQuery && !this.isNestedCondition) {\n      const { query: rawQuery, params } = this.whereTemplate.rawWhere(\n        query,\n        queryParams,\n      );\n      this.whereQuery = rawQuery;\n      this.params.push(...params);\n      return this;\n    }\n\n    const { query: rawQuery, params } = this.whereTemplate.rawAndWhere(\n      query,\n      queryParams,\n    );\n    this.whereQuery += rawQuery;\n    this.params.push(...params);\n    return this;\n  }\n\n  /**\n   * @description Adds a raw OR WHERE condition to the query.\n   */\n  rawOrWhere(query: string, queryParams: any[] = []) {\n    if (!this.whereQuery && !this.isNestedCondition) {\n      const { query: rawQuery, params } = this.whereTemplate.rawWhere(\n        query,\n        queryParams,\n      );\n      this.whereQuery = rawQuery;\n      this.params.push(...params);\n      return this;\n    }\n\n    const { query: rawQuery, params } = this.whereTemplate.rawOrWhere(\n      query,\n      queryParams,\n    );\n    this.whereQuery += rawQuery;\n    this.params.push(...params);\n    return this;\n  }\n}\n","import { convertCase } from \"../../../utils/case_utils\";\nimport { Model } from \"../../models/model\";\nimport { SqlDataSourceType } from \"../../sql_data_source_types\";\n\nexport type BinaryOperatorType =\n  | \"=\"\n  | \"!=\"\n  | \"<>\"\n  | \">\"\n  | \"<\"\n  | \">=\"\n  | \"<=\"\n  | \"LIKE\"\n  | \"ILIKE\"\n  | \"NOT LIKE\"\n  | \"NOT ILIKE\"\n  | \"IN\"\n  | \"NOT IN\"\n  | \"BETWEEN\"\n  | \"NOT BETWEEN\";\n\nexport type BaseValues = string | number | boolean | object;\n\nconst whereTemplate = (\n  dbType: SqlDataSourceType,\n  typeofModel: typeof Model,\n) => {\n  return {\n    convertPlaceHolderToValue: (query: string, startIndex: number = 1) => {\n      switch (dbType) {\n        case \"mysql\":\n        case \"sqlite\":\n        case \"mariadb\":\n          return query.replace(/PLACEHOLDER/g, () => \"?\");\n        case \"postgres\":\n          let index = startIndex;\n          return query.replace(/PLACEHOLDER/g, () => `$${index++}`);\n        default:\n          throw new Error(\"Unsupported database type\");\n      }\n    },\n    where: (\n      column: string,\n      value: BaseValues,\n      operator: BinaryOperatorType = \"=\",\n    ) => {\n      let query = `\\nWHERE ${convertCase(\n        column,\n        typeofModel.databaseCaseConvention,\n      )} ${operator} PLACEHOLDER`;\n      let params = [value];\n\n      if (typeof value === \"object\" && value !== null) {\n        switch (dbType) {\n          case \"mariadb\":\n          case \"mysql\":\n          case \"sqlite\":\n            query = `\\nWHERE JSON_UNQUOTE(JSON_EXTRACT(${column}, '$')) ${operator} PLACEHOLDER`;\n            params = [value];\n            break;\n          case \"postgres\":\n            query = `\\nWHERE ${column}::jsonb ${operator} PLACEHOLDER::jsonb`;\n            break;\n          default:\n            throw new Error(`Unsupported database type: ${dbType}`);\n        }\n      }\n\n      return {\n        query,\n        params,\n      };\n    },\n    andWhere: (\n      column: string,\n      value: BaseValues,\n      operator: BinaryOperatorType = \"=\",\n    ) => {\n      let query = ` AND ${convertCase(\n        column,\n        typeofModel.databaseCaseConvention,\n      )} ${operator} PLACEHOLDER`;\n      let params = [value];\n\n      if (typeof value === \"object\" && value !== null) {\n        switch (dbType) {\n          case \"mariadb\":\n          case \"mysql\":\n          case \"sqlite\":\n            query = ` AND JSON_UNQUOTE(JSON_EXTRACT(${column}, '$')) ${operator} PLACEHOLDER`;\n            break;\n          case \"postgres\":\n            query = ` AND ${column}::jsonb ${operator} PLACEHOLDER::jsonb`;\n            break;\n          default:\n            throw new Error(`Unsupported database type: ${dbType}`);\n        }\n      }\n\n      return {\n        query,\n        params,\n      };\n    },\n    orWhere: (\n      column: string,\n      value: BaseValues,\n      operator: BinaryOperatorType = \"=\",\n    ) => {\n      let query = ` OR ${convertCase(\n        column,\n        typeofModel.databaseCaseConvention,\n      )} ${operator} PLACEHOLDER`;\n      let params = [value];\n\n      if (typeof value === \"object\" && value !== null) {\n        switch (dbType) {\n          case \"mariadb\":\n          case \"mysql\":\n          case \"sqlite\":\n            query = ` OR JSON_UNQUOTE(JSON_EXTRACT(${column}, '$')) ${operator} PLACEHOLDER`;\n            break;\n          case \"postgres\":\n            query = ` OR ${column}::jsonb ${operator} PLACEHOLDER::jsonb`;\n            break;\n          default:\n            throw new Error(`Unsupported database type: ${dbType}`);\n        }\n      }\n\n      return {\n        query,\n        params,\n      };\n    },\n    whereNot: (column: string, value: BaseValues) => {\n      let query = `\\nWHERE ${convertCase(\n        column,\n        typeofModel.databaseCaseConvention,\n      )} != PLACEHOLDER`;\n      let params = [value];\n\n      if (typeof value === \"object\" && value !== null) {\n        switch (dbType) {\n          case \"mariadb\":\n          case \"mysql\":\n          case \"sqlite\":\n            query = `\\nWHERE JSON_UNQUOTE(JSON_EXTRACT(${column}, '$')) != PLACEHOLDER`;\n            break;\n          case \"postgres\":\n            query = `\\nWHERE ${column}::jsonb != PLACEHOLDER::jsonb`;\n            break;\n          default:\n            throw new Error(`Unsupported database type: ${dbType}`);\n        }\n      }\n\n      return {\n        query,\n        params,\n      };\n    },\n    andWhereNot: (column: string, value: BaseValues) => {\n      let query = ` AND ${convertCase(\n        column,\n        typeofModel.databaseCaseConvention,\n      )} != PLACEHOLDER`;\n      let params = [value];\n\n      if (typeof value === \"object\" && value !== null) {\n        switch (dbType) {\n          case \"mariadb\":\n          case \"mysql\":\n          case \"sqlite\":\n            query = ` AND JSON_UNQUOTE(JSON_EXTRACT(${column}, '$')) != PLACEHOLDER`;\n            break;\n          case \"postgres\":\n            query = ` AND ${column}::jsonb != PLACEHOLDER::jsonb`;\n            break;\n          default:\n            throw new Error(`Unsupported database type: ${dbType}`);\n        }\n      }\n\n      return {\n        query,\n        params,\n      };\n    },\n    orWhereNot: (column: string, value: BaseValues) => {\n      let query = ` OR ${convertCase(\n        column,\n        typeofModel.databaseCaseConvention,\n      )} != PLACEHOLDER`;\n      let params = [value];\n\n      if (typeof value === \"object\" && value !== null) {\n        switch (dbType) {\n          case \"mariadb\":\n          case \"mysql\":\n          case \"sqlite\":\n            query = ` OR JSON_UNQUOTE(JSON_EXTRACT(${column}, '$')) != PLACEHOLDER`;\n            break;\n          case \"postgres\":\n            query = ` OR ${column}::jsonb != PLACEHOLDER::jsonb`;\n            break;\n          default:\n            throw new Error(`Unsupported database type: ${dbType}`);\n        }\n      }\n\n      return {\n        query,\n        params,\n      };\n    },\n    whereBetween: (column: string, min: BaseValues, max: BaseValues) => {\n      let query = `\\nWHERE ${convertCase(\n        column,\n        typeofModel.databaseCaseConvention,\n      )} BETWEEN PLACEHOLDER AND PLACEHOLDER`;\n      let params = [min, max];\n\n      if (typeof min === \"object\" && min !== null) {\n        switch (dbType) {\n          case \"mariadb\":\n          case \"mysql\":\n          case \"sqlite\":\n            query = `\\nWHERE JSON_UNQUOTE(JSON_EXTRACT(${column}, '$')) BETWEEN PLACEHOLDER AND PLACEHOLDER`;\n            break;\n          case \"postgres\":\n            query = `\\nWHERE ${column}::jsonb BETWEEN PLACEHOLDER::jsonb AND PLACEHOLDER::jsonb`;\n            break;\n          default:\n            throw new Error(`Unsupported database type: ${dbType}`);\n        }\n      }\n\n      return {\n        query,\n        params,\n      };\n    },\n    andWhereBetween: (column: string, min: BaseValues, max: BaseValues) => {\n      let query = ` AND ${convertCase(\n        column,\n        typeofModel.databaseCaseConvention,\n      )} BETWEEN PLACEHOLDER AND PLACEHOLDER`;\n      let params = [min, max];\n\n      if (typeof min === \"object\" && min !== null) {\n        switch (dbType) {\n          case \"mariadb\":\n          case \"mysql\":\n          case \"sqlite\":\n            query = ` AND JSON_UNQUOTE(JSON_EXTRACT(${column}, '$')) BETWEEN PLACEHOLDER AND PLACEHOLDER`;\n            break;\n          case \"postgres\":\n            query = ` AND ${column}::jsonb BETWEEN PLACEHOLDER::jsonb AND PLACEHOLDER::jsonb`;\n            break;\n          default:\n            throw new Error(`Unsupported database type: ${dbType}`);\n        }\n      }\n\n      return {\n        query,\n        params,\n      };\n    },\n    orWhereBetween: (column: string, min: BaseValues, max: BaseValues) => {\n      let query = ` OR ${convertCase(\n        column,\n        typeofModel.databaseCaseConvention,\n      )} BETWEEN PLACEHOLDER AND PLACEHOLDER`;\n      let params = [min, max];\n\n      if (typeof min === \"object\" && min !== null) {\n        switch (dbType) {\n          case \"mariadb\":\n          case \"mysql\":\n          case \"sqlite\":\n            query = ` OR JSON_UNQUOTE(JSON_EXTRACT(${column}, '$')) BETWEEN PLACEHOLDER AND PLACEHOLDER`;\n            break;\n          case \"postgres\":\n            query = ` OR ${column}::jsonb BETWEEN PLACEHOLDER::jsonb AND PLACEHOLDER::jsonb`;\n            break;\n          default:\n            throw new Error(`Unsupported database type: ${dbType}`);\n        }\n      }\n\n      return {\n        query,\n        params,\n      };\n    },\n    whereNotBetween: (column: string, min: BaseValues, max: BaseValues) => {\n      let query = `\\nWHERE ${convertCase(\n        column,\n        typeofModel.databaseCaseConvention,\n      )} NOT BETWEEN PLACEHOLDER AND PLACEHOLDER`;\n      let params = [min, max];\n\n      if (typeof min === \"object\" && min !== null) {\n        switch (dbType) {\n          case \"mariadb\":\n          case \"mysql\":\n          case \"sqlite\":\n            query = `\\nWHERE JSON_UNQUOTE(JSON_EXTRACT(${column}, '$')) NOT BETWEEN PLACEHOLDER AND PLACEHOLDER`;\n            break;\n          case \"postgres\":\n            query = `\\nWHERE ${column}::jsonb NOT BETWEEN PLACEHOLDER::jsonb AND PLACEHOLDER::jsonb`;\n            break;\n          default:\n            throw new Error(`Unsupported database type: ${dbType}`);\n        }\n      }\n\n      return {\n        query,\n        params,\n      };\n    },\n    andWhereNotBetween: (column: string, min: BaseValues, max: BaseValues) => {\n      let query = ` AND ${convertCase(\n        column,\n        typeofModel.databaseCaseConvention,\n      )} NOT BETWEEN PLACEHOLDER AND PLACEHOLDER`;\n      let params = [min, max];\n\n      if (typeof min === \"object\" && min !== null) {\n        switch (dbType) {\n          case \"mariadb\":\n          case \"mysql\":\n          case \"sqlite\":\n            query = ` AND JSON_UNQUOTE(JSON_EXTRACT(${column}, '$')) NOT BETWEEN PLACEHOLDER AND PLACEHOLDER`;\n            break;\n          case \"postgres\":\n            query = ` AND ${column}::jsonb NOT BETWEEN PLACEHOLDER::jsonb AND PLACEHOLDER::jsonb`;\n            break;\n          default:\n            throw new Error(`Unsupported database type: ${dbType}`);\n        }\n      }\n\n      return {\n        query,\n        params,\n      };\n    },\n    orWhereNotBetween: (column: string, min: BaseValues, max: BaseValues) => {\n      let query = ` OR ${convertCase(\n        column,\n        typeofModel.databaseCaseConvention,\n      )} NOT BETWEEN PLACEHOLDER AND PLACEHOLDER`;\n      let params = [min, max];\n\n      if (typeof min === \"object\" && min !== null) {\n        switch (dbType) {\n          case \"mariadb\":\n          case \"mysql\":\n          case \"sqlite\":\n            query = ` OR JSON_UNQUOTE(JSON_EXTRACT(${column}, '$')) NOT BETWEEN PLACEHOLDER AND PLACEHOLDER`;\n            break;\n          case \"postgres\":\n            query = ` OR ${column}::jsonb NOT BETWEEN PLACEHOLDER::jsonb AND PLACEHOLDER::jsonb`;\n            break;\n          default:\n            throw new Error(`Unsupported database type: ${dbType}`);\n        }\n      }\n\n      return {\n        query,\n        params,\n      };\n    },\n    whereIn: (column: string, values: BaseValues[]) => {\n      let query = `\\nWHERE ${convertCase(\n        column,\n        typeofModel.databaseCaseConvention,\n      )} IN (${values.map((_) => \"PLACEHOLDER\").join(\", \")})`;\n      let params = values;\n\n      if (values[0] && typeof values[0] === \"object\") {\n        switch (dbType) {\n          case \"mariadb\":\n          case \"mysql\":\n          case \"sqlite\":\n            query = `\\nWHERE JSON_UNQUOTE(JSON_EXTRACT(${column}, '$')) IN (${values\n              .map((_) => \"PLACEHOLDER\")\n              .join(\", \")})`;\n            break;\n          case \"postgres\":\n            query = `\\nWHERE ${convertCase(\n              column,\n              typeofModel.databaseCaseConvention,\n            )}::jsonb IN (${values.map((_) => \"PLACEHOLDER\").join(\", \")})`;\n            break;\n          default:\n            throw new Error(`Unsupported database type: ${dbType}`);\n        }\n      }\n\n      return {\n        query,\n        params,\n      };\n    },\n    andWhereIn: (column: string, values: BaseValues[]) => {\n      let query = ` AND ${convertCase(\n        column,\n        typeofModel.databaseCaseConvention,\n      )} IN (${values.map((_) => \"PLACEHOLDER\").join(\", \")})`;\n      let params = values;\n\n      if (values[0] && typeof values[0] === \"object\") {\n        switch (dbType) {\n          case \"mariadb\":\n          case \"mysql\":\n          case \"sqlite\":\n            query = ` AND JSON_UNQUOTE(JSON_EXTRACT(${column}, '$')) IN (${values\n              .map((_) => \"PLACEHOLDER\")\n              .join(\", \")})`;\n            break;\n          case \"postgres\":\n            query = ` AND ${convertCase(\n              column,\n              typeofModel.databaseCaseConvention,\n            )}::jsonb IN (${values.map((_) => \"PLACEHOLDER\").join(\", \")})`;\n            break;\n          default:\n            throw new Error(`Unsupported database type: ${dbType}`);\n        }\n      }\n\n      return {\n        query,\n        params,\n      };\n    },\n    orWhereIn: (column: string, values: BaseValues[]) => {\n      let query = ` OR ${convertCase(\n        column,\n        typeofModel.databaseCaseConvention,\n      )} IN (${values.map((_) => \"PLACEHOLDER\").join(\", \")})`;\n      let params = values;\n\n      if (values[0] && typeof values[0] === \"object\") {\n        switch (dbType) {\n          case \"mariadb\":\n          case \"mysql\":\n          case \"sqlite\":\n            query = ` OR JSON_UNQUOTE(JSON_EXTRACT(${column}, '$')) IN (${values\n              .map((_) => \"PLACEHOLDER\")\n              .join(\", \")})`;\n            break;\n          case \"postgres\":\n            query = ` OR ${convertCase(\n              column,\n              typeofModel.databaseCaseConvention,\n            )}::jsonb IN (${values.map((_) => \"PLACEHOLDER\").join(\", \")})`;\n            break;\n          default:\n            throw new Error(`Unsupported database type: ${dbType}`);\n        }\n      }\n\n      return {\n        query,\n        params,\n      };\n    },\n    whereNotIn: (column: string, values: BaseValues[]) => {\n      let query = `\\nWHERE ${convertCase(\n        column,\n        typeofModel.databaseCaseConvention,\n      )} NOT IN (${values.map((_) => \"PLACEHOLDER\").join(\", \")})`;\n      let params = values;\n\n      if (values[0] && typeof values[0] === \"object\") {\n        switch (dbType) {\n          case \"mariadb\":\n          case \"mysql\":\n          case \"sqlite\":\n            query = `\\nWHERE JSON_UNQUOTE(JSON_EXTRACT(${column}, '$')) NOT IN (${values\n              .map((_) => \"PLACEHOLDER\")\n              .join(\", \")})`;\n            break;\n          case \"postgres\":\n            query = `\\nWHERE ${convertCase(\n              column,\n              typeofModel.databaseCaseConvention,\n            )}::jsonb NOT IN (${values.map((_) => \"PLACEHOLDER\").join(\", \")})`;\n            break;\n          default:\n            throw new Error(`Unsupported database type: ${dbType}`);\n        }\n      }\n\n      return {\n        query,\n        params,\n      };\n    },\n    andWhereNotIn: (column: string, values: BaseValues[]) => {\n      let query = ` AND ${convertCase(\n        column,\n        typeofModel.databaseCaseConvention,\n      )} NOT IN (${values.map((_) => \"PLACEHOLDER\").join(\", \")})`;\n      let params = values;\n\n      if (values[0] && typeof values[0] === \"object\") {\n        switch (dbType) {\n          case \"mariadb\":\n          case \"mysql\":\n          case \"sqlite\":\n            query = ` AND JSON_UNQUOTE(JSON_EXTRACT(${column}, '$')) NOT IN (${values\n              .map((_) => \"PLACEHOLDER\")\n              .join(\", \")})`;\n            break;\n          case \"postgres\":\n            query = ` AND ${convertCase(\n              column,\n              typeofModel.databaseCaseConvention,\n            )}::jsonb NOT IN (${values.map((_) => \"PLACEHOLDER\").join(\", \")})`;\n            break;\n          default:\n            throw new Error(`Unsupported database type: ${dbType}`);\n        }\n      }\n\n      return {\n        query,\n        params,\n      };\n    },\n    orWhereNotIn: (column: string, values: BaseValues[]) => {\n      let query = ` OR ${convertCase(\n        column,\n        typeofModel.databaseCaseConvention,\n      )} NOT IN (${values.map((_) => \"PLACEHOLDER\").join(\", \")})`;\n      let params = values;\n\n      if (values[0] && typeof values[0] === \"object\") {\n        switch (dbType) {\n          case \"mariadb\":\n          case \"mysql\":\n          case \"sqlite\":\n            query = ` OR JSON_UNQUOTE(JSON_EXTRACT(${column}, '$')) NOT IN (${values\n              .map((_) => \"PLACEHOLDER\")\n              .join(\", \")})`;\n            break;\n          case \"postgres\":\n            query = ` OR ${convertCase(\n              column,\n              typeofModel.databaseCaseConvention,\n            )}::jsonb NOT IN (${values.map((_) => \"PLACEHOLDER\").join(\", \")})`;\n            break;\n          default:\n            throw new Error(`Unsupported database type: ${dbType}`);\n        }\n      }\n\n      return {\n        query,\n        params,\n      };\n    },\n    whereNull: (column: string) => ({\n      query: `\\nWHERE ${convertCase(\n        column,\n        typeofModel.databaseCaseConvention,\n      )} IS NULL`,\n      params: [],\n    }),\n    andWhereNull: (column: string) => ({\n      query: ` AND ${convertCase(\n        column,\n        typeofModel.databaseCaseConvention,\n      )} IS NULL`,\n      params: [],\n    }),\n    orWhereNull: (column: string) => ({\n      query: ` OR ${convertCase(\n        column,\n        typeofModel.databaseCaseConvention,\n      )} IS NULL`,\n      params: [],\n    }),\n    whereNotNull: (column: string) => ({\n      query: `\\nWHERE ${convertCase(\n        column,\n        typeofModel.databaseCaseConvention,\n      )} IS NOT NULL`,\n      params: [],\n    }),\n    andWhereNotNull: (column: string) => ({\n      query: ` AND ${convertCase(\n        column,\n        typeofModel.databaseCaseConvention,\n      )} IS NOT NULL`,\n      params: [],\n    }),\n    orWhereNotNull: (column: string) => ({\n      query: ` OR ${convertCase(\n        column,\n        typeofModel.databaseCaseConvention,\n      )} IS NOT NULL`,\n      params: [],\n    }),\n    rawWhere: (query: string, params: any[]) => ({\n      query: `\\nWHERE ${query}`,\n      params,\n    }),\n    rawAndWhere: (query: string, params: any[]) => ({\n      query: ` AND ${query}`,\n      params,\n    }),\n    rawOrWhere: (query: string, params: any[]) => ({\n      query: ` OR ${query}`,\n      params,\n    }),\n    whereRegex: (column: string, regex: RegExp) => {\n      switch (dbType) {\n        case \"postgres\":\n          return {\n            query: `\\nWHERE ${convertCase(\n              column,\n              typeofModel.databaseCaseConvention,\n            )} ~ PLACEHOLDER`,\n            params: [regex.source],\n          };\n        case \"mysql\":\n        case \"mariadb\":\n          return {\n            query: `\\nWHERE ${convertCase(\n              column,\n              typeofModel.databaseCaseConvention,\n            )} REGEXP PLACEHOLDER`,\n            params: [regex.source],\n          };\n        case \"sqlite\":\n          throw new Error(\"SQLite does not support REGEXP out of the box\");\n        default:\n          throw new Error(`Unsupported database type: ${dbType}`);\n      }\n    },\n    andWhereRegex: (column: string, regex: RegExp) => {\n      switch (dbType) {\n        case \"postgres\":\n          return {\n            query: ` AND ${convertCase(\n              column,\n              typeofModel.databaseCaseConvention,\n            )} ~ PLACEHOLDER`,\n            params: [regex.source],\n          };\n        case \"mysql\":\n        case \"mariadb\":\n          return {\n            query: ` AND ${convertCase(\n              column,\n              typeofModel.databaseCaseConvention,\n            )} REGEXP PLACEHOLDER`,\n            params: [regex.source],\n          };\n        case \"sqlite\":\n          throw new Error(\"SQLite does not support REGEXP out of the box\");\n        default:\n          throw new Error(`Unsupported database type: ${dbType}`);\n      }\n    },\n    orWhereRegex: (column: string, regex: RegExp) => {\n      switch (dbType) {\n        case \"postgres\":\n          return {\n            query: ` OR ${convertCase(\n              column,\n              typeofModel.databaseCaseConvention,\n            )} ~ PLACEHOLDER`,\n            params: [regex.source],\n          };\n        case \"mysql\":\n        case \"mariadb\":\n          return {\n            query: ` OR ${convertCase(\n              column,\n              typeofModel.databaseCaseConvention,\n            )} REGEXP PLACEHOLDER`,\n            params: [regex.source],\n          };\n        case \"sqlite\":\n          throw new Error(\"SQLite does not support REGEXP out of the box\");\n        default:\n          throw new Error(`Unsupported database type: ${dbType}`);\n      }\n    },\n  };\n};\n\nexport default whereTemplate;\n","import { convertCase } from \"../../../utils/case_utils\";\nimport { Model } from \"../../models/model\";\n\nconst joinTemplate = (\n  typeofModel: typeof Model,\n  relatedTable: string,\n  primaryColumn: string,\n  foreignColumn: string,\n) => {\n  const table = typeofModel.table;\n  const foreignColumnName = foreignColumn.includes(\".\")\n    ? foreignColumn.split(\".\").pop()\n    : foreignColumn;\n  const primaryColumnName = primaryColumn.includes(\".\")\n    ? primaryColumn.split(\".\").pop()\n    : primaryColumn;\n\n  return {\n    innerJoin: () => {\n      const foreignColumnConverted = convertCase(\n        foreignColumnName,\n        typeofModel.databaseCaseConvention,\n      );\n      const primaryColumnConverted = convertCase(\n        primaryColumnName,\n        typeofModel.databaseCaseConvention,\n      );\n\n      return `\\nINNER JOIN ${relatedTable} ON ${relatedTable}.${foreignColumnConverted} = ${table}.${primaryColumnConverted} `;\n    },\n    leftJoin: () => {\n      const foreignColumnConverted = convertCase(\n        foreignColumnName,\n        typeofModel.databaseCaseConvention,\n      );\n      const primaryColumnConverted = convertCase(\n        primaryColumnName,\n        typeofModel.databaseCaseConvention,\n      );\n\n      return `\\nLEFT JOIN ${relatedTable} ON ${relatedTable}.${foreignColumnConverted} = ${table}.${primaryColumnConverted} `;\n    },\n  };\n};\n\nexport default joinTemplate;\n","import { Model } from \"../models/model\";\nimport {\n  FindOneType,\n  FindType,\n  UnrestrictedFindOneType,\n  UnrestrictedFindType,\n} from \"../models/model_manager/model_manager_types\";\nimport { log } from \"../../utils/logger\";\nimport { ModelManager } from \"../models/model_manager/model_manager\";\nimport { PostgresQueryBuilder } from \"./postgres_query_builder\";\nimport { parseDatabaseDataIntoModelResponse } from \"../serializer\";\nimport { SqlDataSource } from \"../../../src/sql/sql_data_source\";\nimport SqlModelManagerUtils from \"../models/model_manager/model_manager_utils\";\nimport { PgClientInstance } from \"../sql_data_source_types\";\n\nexport class PostgresModelManager<T extends Model> extends ModelManager<T> {\n  protected pgConnection: PgClientInstance;\n  protected sqlModelManagerUtils: SqlModelManagerUtils<T>;\n\n  /**\n   * Constructor for Postgres_model_manager class.\n   *\n   * @param {typeof Model} model - Model constructor.\n   * @param {Pool} pgConnection - PostgreSQL connection pool.\n   * @param {boolean} logs - Flag to enable or disable logging.\n   */\n  constructor(\n    model: typeof Model,\n    pgConnection: PgClientInstance,\n    logs: boolean,\n    sqlDataSource: SqlDataSource,\n  ) {\n    super(model, logs, sqlDataSource);\n    this.pgConnection = pgConnection;\n    this.sqlModelManagerUtils = new SqlModelManagerUtils(\n      \"postgres\",\n      pgConnection,\n    );\n  }\n\n  /**\n   * Find method to retrieve multiple records from the database based on the input conditions.\n   *\n   * @param {FindType} input - Optional query parameters for filtering, ordering, and pagination.\n   * @returns Promise resolving to an array of models.\n   */\n  async find(input?: FindType<T> | UnrestrictedFindType<T>): Promise<T[]> {\n    if (!input) {\n      return await this.query().many();\n    }\n\n    const query = this.query();\n    if (input.select) {\n      query.select(...(input.select as string[]));\n    }\n\n    if (input.relations) {\n      input.relations.forEach((relation) => {\n        query.with(relation);\n      });\n    }\n    if (input.where) {\n      Object.entries(input.where).forEach(([key, value]) => {\n        query.where(key, value);\n      });\n    }\n\n    if (input.orderBy) {\n      Object.entries(input.orderBy).forEach(([key, value]) => {\n        query.orderBy(key, value);\n      });\n    }\n\n    if (input.limit) {\n      query.limit(input.limit);\n    }\n\n    if (input.offset) {\n      query.offset(input.offset);\n    }\n\n    if (input.groupBy) {\n      query.groupBy(...(input.groupBy as string[]));\n    }\n\n    return await query.many({ ignoreHooks: input.ignoreHooks || [] });\n  }\n\n  /**\n   * Find a single record from the database based on the input conditions.\n   *\n   * @param {FindOneType} input - query parameters for filtering and selecting a single record.\n   * @returns Promise resolving to a single model or null if not found.\n   */\n  async findOne(\n    input: FindOneType<T> | UnrestrictedFindOneType<T>,\n  ): Promise<T | null> {\n    const results = await this.find({\n      ...input,\n      limit: 1,\n    });\n\n    if (!results.length) {\n      return null;\n    }\n\n    return results[0];\n  }\n\n  /**\n   * Find a single record by its PK from the database.\n   *\n   * @param {string | number | boolean} value - PK value of the record to retrieve.\n   * @returns Promise resolving to a single model or null if not found.\n   */\n  async findOneByPrimaryKey(\n    value: string | number | boolean,\n  ): Promise<T | null> {\n    if (!this.model.primaryKey) {\n      throw new Error(\n        \"Model \" + this.model.table + \" has no primary key to be retrieved by\",\n      );\n    }\n\n    return await this.query()\n      .where(this.model.primaryKey as string, \"=\", value)\n      .one();\n  }\n\n  /**\n   * Save a new model instance to the database.\n   *\n   * @param {Model} model - Model instance to be saved.\n   * @param {MysqlTransaction} trx - MysqlTransaction to be used on the save operation.\n   * @returns Promise resolving to the saved model or null if saving fails.\n   */\n  async insert(model: Partial<T>): Promise<T | null> {\n    this.model.beforeInsert(model as T);\n    const { query, params } = this.sqlModelManagerUtils.parseInsert(\n      model as T,\n      this.model,\n      this.sqlDataSource.getDbType(),\n    );\n    log(query, this.logs, params);\n    const { rows } = await this.pgConnection.query(query, params);\n    const insertedModel = rows[0] as T;\n    if (!insertedModel) {\n      throw new Error(rows[0]);\n    }\n\n    const result = (await parseDatabaseDataIntoModelResponse(\n      [insertedModel],\n      this.model,\n    )) as T;\n\n    this.model.afterFetch([result]);\n    return result;\n  }\n\n  /**\n   * Create multiple model instances in the database.\n   *\n   * @param {Model} models - Model instance to be saved.\n   * @param {Transaction} trx - MysqlTransaction to be used on the save operation.\n   * @returns Promise resolving to an array of saved models or null if saving fails.\n   */\n  async insertMany(models: Partial<T>[]): Promise<T[]> {\n    models.forEach((model) => this.model.beforeInsert(model as T));\n\n    const { query, params } = this.sqlModelManagerUtils.parseMassiveInsert(\n      models as T[],\n      this.model,\n      this.sqlDataSource.getDbType(),\n    );\n\n    log(query, this.logs, params);\n    const { rows } = await this.pgConnection.query(query, params);\n    const insertedModel = rows as T[];\n    if (!insertedModel.length) {\n      return [];\n    }\n\n    const insertModelPromise = insertedModel.map(\n      async (model) =>\n        (await parseDatabaseDataIntoModelResponse([model], this.model)) as T,\n    );\n\n    const results = await Promise.all(insertModelPromise);\n    this.model.afterFetch(results);\n    return results;\n  }\n\n  /**\n   * Update an existing model instance in the database.\n   * @param {Model} model - Model instance to be updated.\n   * @param {Transaction} trx - Transaction to be used on the update operation.\n   * @returns Promise resolving to the updated model or null if updating fails.\n   */\n  async updateRecord(model: T): Promise<T | null> {\n    const { table, primaryKey } = this.model;\n    if (!primaryKey) {\n      throw new Error(\n        \"Model \" + table + \" has no primary key to be updated, try save\",\n      );\n    }\n\n    const { query, params } = this.sqlModelManagerUtils.parseUpdate(\n      model,\n      this.model,\n      this.sqlDataSource.getDbType(),\n    );\n    log(query, this.logs, params);\n    await this.pgConnection.query(query, params);\n    if (!primaryKey) {\n      return null;\n    }\n\n    return await this.findOneByPrimaryKey(\n      model[primaryKey as keyof T] as string | number | boolean,\n    );\n  }\n\n  /**\n   * @description Delete a record from the database from the given model.\n   *\n   * @param {Model} model - Model to delete.\n   * @param {Transaction} trx - Transaction to be used on the delete operation.\n   * @returns Promise resolving to the deleted model or null if deleting fails.\n   */\n  async deleteRecord(model: T): Promise<T | null> {\n    if (!this.model.primaryKey) {\n      throw new Error(\n        \"Model \" + this.model.table + \" has no primary key to be deleted from\",\n      );\n    }\n\n    const { query, params } = this.sqlModelManagerUtils.parseDelete(\n      this.model.table,\n      this.model.primaryKey,\n      model[this.model.primaryKey as keyof T] as string,\n    );\n\n    log(query, this.logs, params);\n    await this.pgConnection.query(query, params);\n    return model;\n  }\n\n  /**\n   * Create and return a new instance of the Mysql_query_builder for building more complex SQL queries.\n   *\n   * @returns {MysqlQueryBuilder<Model>} - Instance of Mysql_query_builder.\n   */\n  query(): PostgresQueryBuilder<T> {\n    return new PostgresQueryBuilder<T>(\n      this.model,\n      this.model.table,\n      this.pgConnection,\n      this.logs,\n      false,\n      this.sqlDataSource,\n    );\n  }\n}\n","import { getBaseModelInstance, Model } from \"../models/model\";\nimport {\n  OneOptions,\n  QueryBuilder,\n  ModelQueryBuilder,\n  ManyOptions,\n  ModelInstanceType,\n} from \"../query_builder/query_builder\";\nimport { log } from \"../../utils/logger\";\nimport joinTemplate from \"../resources/query/JOIN\";\nimport { PaginatedData, getPaginationMetadata } from \"../pagination\";\nimport { parseDatabaseDataIntoModelResponse } from \"../serializer\";\nimport {\n  DynamicColumnType,\n  RelationType,\n  SelectableType,\n} from \"../models/model_manager/model_manager_types\";\nimport \"reflect-metadata\";\nimport { SqlDataSource } from \"../../../src/sql/sql_data_source\";\nimport { convertCase } from \"../../utils/case_utils\";\nimport SqlModelManagerUtils from \"../models/model_manager/model_manager_utils\";\nimport {\n  DeleteOptions,\n  SoftDeleteOptions,\n} from \"../query_builder/delete_query_builder_type\";\nimport deleteTemplate from \"../resources/query/DELETE\";\nimport updateTemplate from \"../resources/query/UPDATE\";\nimport { UpdateOptions } from \"../query_builder/update_query_builder_types\";\nimport { PgClientInstance } from \"../sql_data_source_types\";\n\nexport class PostgresQueryBuilder<T extends Model> extends QueryBuilder<T> {\n  protected pgClient: PgClientInstance;\n  protected postgresModelManagerUtils: SqlModelManagerUtils<T>;\n  protected updateTemplate: ReturnType<typeof updateTemplate>;\n  protected deleteTemplate: ReturnType<typeof deleteTemplate>;\n\n  constructor(\n    model: typeof Model,\n    table: string,\n    pgClient: PgClientInstance,\n    logs: boolean,\n    isNestedCondition = false,\n    sqlDataSource: SqlDataSource,\n  ) {\n    super(model, table, logs, sqlDataSource);\n    this.pgClient = pgClient;\n    this.isNestedCondition = isNestedCondition;\n    this.updateTemplate = updateTemplate(sqlDataSource.getDbType(), this.model);\n    this.deleteTemplate = deleteTemplate(table, sqlDataSource.getDbType());\n    this.postgresModelManagerUtils = new SqlModelManagerUtils<T>(\n      \"postgres\",\n      this.pgClient,\n    );\n  }\n\n  // SELECT\n  select(...columns: string[]): PostgresQueryBuilder<T>;\n  select(...columns: (SelectableType<T> | \"*\")[]): PostgresQueryBuilder<T>;\n  select(\n    ...columns: (SelectableType<T> | \"*\" | string)[]\n  ): PostgresQueryBuilder<T> {\n    this.selectQuery = this.selectTemplate.selectColumns(\n      ...(columns as string[]),\n    );\n    this.modelSelectedColumns = columns.map((column) =>\n      convertCase(column as string, this.model.databaseCaseConvention),\n    ) as string[];\n    return this;\n  }\n\n  distinct(): PostgresQueryBuilder<T> {\n    const distinct = this.selectTemplate.distinct;\n    this.selectQuery = this.selectQuery.replace(\n      /select/i,\n      `SELECT ${distinct}`,\n    );\n    return this;\n  }\n\n  distinctOn(...columns: string[]): PostgresQueryBuilder<T>;\n  distinctOn(...columns: SelectableType<T>[]): PostgresQueryBuilder<T>;\n  distinctOn(\n    ...columns: (string | SelectableType<T>)[]\n  ): PostgresQueryBuilder<T> {\n    const distinctOn = this.selectTemplate.distinctOn(...(columns as string[]));\n\n    this.selectQuery = this.selectQuery.replace(\n      /select/i,\n      `SELECT ${distinctOn}`,\n    );\n    return this;\n  }\n\n  async one(options: OneOptions = {}): Promise<T | null> {\n    // hook query builder\n    if (!options.ignoreHooks?.includes(\"beforeFetch\")) {\n      this.model.beforeFetch(this);\n    }\n\n    this.limitQuery = this.selectTemplate.limit(1);\n    let query: string = \"\";\n    if (this.joinQuery && !this.selectQuery) {\n      this.selectQuery = this.selectTemplate.selectColumns(`${this.table}.*`);\n    }\n    query = this.selectQuery + this.joinQuery;\n\n    if (this.whereQuery) {\n      query += this.whereQuery;\n    }\n\n    query = this.whereTemplate.convertPlaceHolderToValue(query);\n\n    // limit to 1\n    this.limit(1);\n    query += this.groupFooterQuery();\n\n    query = query.trim();\n    log(query, this.logs, this.params);\n    const result = await this.pgClient.query(query, this.params);\n    if (!result.rows[0]) {\n      return null;\n    }\n\n    const modelInstance = getBaseModelInstance<T>();\n    await this.mergeRawPacketIntoModel(\n      modelInstance,\n      result.rows[0],\n      this.model,\n    );\n\n    const relationModels =\n      await this.postgresModelManagerUtils.parseQueryBuilderRelations(\n        [modelInstance],\n        this.model,\n        this.relations,\n        \"postgres\",\n        this.logs,\n      );\n\n    const model = (await parseDatabaseDataIntoModelResponse(\n      [modelInstance],\n      this.model,\n      relationModels,\n      this.modelSelectedColumns,\n    )) as T;\n\n    return !options.ignoreHooks?.includes(\"afterFetch\")\n      ? ((await this.model.afterFetch([model]))[0] as T)\n      : model;\n  }\n\n  async oneOrFail(options?: OneOptions & { customError: Error }): Promise<T> {\n    const model = await this.one({\n      ignoreHooks: options?.ignoreHooks,\n    });\n\n    if (!model) {\n      if (options?.customError) {\n        throw options.customError;\n      }\n\n      throw new Error(\"ROW_NOT_FOUND\");\n    }\n\n    return model as T;\n  }\n\n  async many(options: ManyOptions = {}): Promise<T[]> {\n    // hook query builder\n    if (!options.ignoreHooks?.includes(\"beforeFetch\")) {\n      this.model.beforeFetch(this);\n    }\n\n    let query: string = \"\";\n    if (this.joinQuery && !this.selectQuery) {\n      this.selectQuery = this.selectTemplate.selectColumns(`${this.table}.*`);\n    }\n    query = this.selectQuery + this.joinQuery;\n\n    if (this.whereQuery) {\n      query += this.whereQuery;\n    }\n\n    query += this.groupFooterQuery();\n    query = this.whereTemplate.convertPlaceHolderToValue(query);\n    query = query.trim();\n\n    log(query, this.logs, this.params);\n    const result = await this.pgClient.query(query, this.params);\n    const rows = result.rows;\n\n    const modelPromises = rows.map(async (row) => {\n      const modelInstance = getBaseModelInstance<T>();\n      await this.mergeRawPacketIntoModel(modelInstance, row, this.model);\n\n      return modelInstance as T;\n    });\n\n    const models = await Promise.all(modelPromises);\n    const relationModels =\n      await this.postgresModelManagerUtils.parseQueryBuilderRelations(\n        models,\n        this.model,\n        this.relations,\n        \"postgres\",\n        this.logs,\n      );\n\n    const serializedModels = await parseDatabaseDataIntoModelResponse(\n      models,\n      this.model,\n      relationModels,\n      this.modelSelectedColumns,\n    );\n    if (!serializedModels) {\n      return [];\n    }\n\n    if (!options.ignoreHooks?.includes(\"afterFetch\")) {\n      await this.model.afterFetch(\n        Array.isArray(serializedModels) ? serializedModels : [serializedModels],\n      );\n    }\n\n    return (\n      Array.isArray(serializedModels) ? serializedModels : [serializedModels]\n    ) as T[];\n  }\n\n  async update(data: Partial<T>, options?: UpdateOptions): Promise<number> {\n    const { ignoreBeforeUpdateHook } = options || {};\n    if (!ignoreBeforeUpdateHook) {\n      this.model.beforeUpdate(this);\n    }\n\n    const columns = Object.keys(data);\n    const values = Object.values(data);\n    this.whereQuery = this.whereTemplate.convertPlaceHolderToValue(\n      this.whereQuery,\n      values.length + 1,\n    );\n    const { query, params } = this.updateTemplate.massiveUpdate(\n      columns,\n      values,\n      this.whereQuery,\n      this.joinQuery,\n    );\n\n    params.push(...this.params);\n\n    log(query, this.logs, params);\n    const result = await this.pgClient.query<T>(query, params);\n    if (!result.rows) {\n      return 0;\n    }\n\n    return result.rowCount || 0;\n  }\n\n  async delete(options: DeleteOptions = {}): Promise<number> {\n    const { ignoreBeforeDeleteHook } = options || {};\n    if (!ignoreBeforeDeleteHook) {\n      this.model.beforeDelete(this);\n    }\n\n    this.whereQuery = this.whereTemplate.convertPlaceHolderToValue(\n      this.whereQuery,\n    );\n    const query = this.deleteTemplate.massiveDelete(\n      this.whereQuery,\n      this.joinQuery,\n    );\n\n    log(query, this.logs, this.params);\n    const result = await this.pgClient.query<T>(query, this.params);\n    if (!result.rows) {\n      return 0;\n    }\n\n    return result.rowCount || 0;\n  }\n\n  async softDelete(options?: SoftDeleteOptions<T>): Promise<number> {\n    const {\n      column = \"deletedAt\",\n      value = new Date().toISOString().slice(0, 19).replace(\"T\", \" \"),\n      ignoreBeforeDeleteHook = false,\n    } = options || {};\n    if (!ignoreBeforeDeleteHook) {\n      this.model.beforeDelete(this);\n    }\n\n    let { query, params } = this.updateTemplate.massiveUpdate(\n      [column as string],\n      [value],\n      this.whereQuery,\n      this.joinQuery,\n    );\n\n    params = [...params, ...this.params];\n\n    log(query, this.logs, params);\n    const result = await this.pgClient.query<T>(query, params);\n    if (!result.rows) {\n      return 0;\n    }\n\n    return result.rowCount || 0;\n  }\n\n  whereBuilder(cb: (queryBuilder: PostgresQueryBuilder<T>) => void): this {\n    const queryBuilder = new PostgresQueryBuilder(\n      this.model as typeof Model,\n      this.table,\n      this.pgClient,\n      this.logs,\n      true,\n      this.sqlDataSource,\n    );\n    cb(queryBuilder as unknown as PostgresQueryBuilder<T>);\n\n    let whereCondition = queryBuilder.whereQuery.trim();\n    if (whereCondition.startsWith(\"AND\")) {\n      whereCondition = whereCondition.substring(4); // 'AND '.length === 4 has to be removed from the beginning of the where condition\n    } else if (whereCondition.startsWith(\"OR\")) {\n      whereCondition = whereCondition.substring(3); // 'OR '.length === 3 has to be removed from the beginning of the where condition\n    }\n\n    whereCondition = \"(\" + whereCondition + \")\";\n\n    if (!this.whereQuery) {\n      this.whereQuery = this.isNestedCondition\n        ? whereCondition\n        : `WHERE ${whereCondition}`;\n    } else {\n      this.whereQuery += ` AND ${whereCondition}`;\n    }\n\n    this.params.push(...queryBuilder.params);\n    return this;\n  }\n\n  orWhereBuilder(cb: (queryBuilder: PostgresQueryBuilder<T>) => void): this {\n    const nestedBuilder = new PostgresQueryBuilder(\n      this.model as typeof Model,\n      this.table,\n      this.pgClient,\n      this.logs,\n      true,\n      this.sqlDataSource,\n    );\n    cb(nestedBuilder as unknown as PostgresQueryBuilder<T>);\n\n    let nestedCondition = nestedBuilder.whereQuery.trim();\n    if (nestedCondition.startsWith(\"AND\")) {\n      nestedCondition = nestedCondition.substring(4);\n    } else if (nestedCondition.startsWith(\"OR\")) {\n      nestedCondition = nestedCondition.substring(3);\n    }\n\n    nestedCondition = `(${nestedCondition})`;\n\n    if (!this.whereQuery) {\n      this.whereQuery = this.isNestedCondition\n        ? nestedCondition\n        : `WHERE ${nestedCondition}`;\n\n      this.params.push(...nestedBuilder.params);\n      return this;\n    }\n\n    this.whereQuery += ` OR ${nestedCondition}`;\n    this.params.push(...nestedBuilder.params);\n\n    return this;\n  }\n\n  andWhereBuilder(cb: (queryBuilder: PostgresQueryBuilder<T>) => void): this {\n    const nestedBuilder = new PostgresQueryBuilder(\n      this.model as typeof Model,\n      this.table,\n      this.pgClient,\n      this.logs,\n      true,\n      this.sqlDataSource,\n    );\n    cb(nestedBuilder as unknown as PostgresQueryBuilder<T>);\n\n    let nestedCondition = nestedBuilder.whereQuery.trim();\n    if (nestedCondition.startsWith(\"AND\")) {\n      nestedCondition = nestedCondition.substring(4);\n    } else if (nestedCondition.startsWith(\"OR\")) {\n      nestedCondition = nestedCondition.substring(3);\n    }\n\n    if (!this.whereQuery) {\n      this.whereQuery = this.isNestedCondition\n        ? nestedCondition\n        : `WHERE ${nestedCondition}`;\n\n      this.params.push(...nestedBuilder.params);\n      return this;\n    }\n\n    this.whereQuery += ` AND ${nestedCondition}`;\n    this.params.push(...nestedBuilder.params);\n\n    return this;\n  }\n\n  async getCount(\n    options: { ignoreHooks: boolean } = { ignoreHooks: false },\n  ): Promise<number> {\n    if (options.ignoreHooks) {\n      const { rows } = await this.pgClient.query(\n        `SELECT COUNT(*) as total from ${this.table}`,\n      );\n      return +rows[0].total;\n    }\n    this.select(\"COUNT(*) as total\");\n    const result = await this.one();\n    return result ? +result.$additionalColumns[\"total\"] : 0;\n  }\n\n  async getSum(column: SelectableType<T>): Promise<number>;\n  async getSum(column: string): Promise<number>;\n  async getSum(\n    column: SelectableType<T> | string,\n    options: { ignoreHooks: boolean } = { ignoreHooks: false },\n  ): Promise<number> {\n    if (options.ignoreHooks) {\n      const { rows } = await this.pgClient.query(\n        `SELECT SUM(${column as string}) as total from ${this.table}`,\n      );\n      return +rows[0].total || 0;\n    }\n\n    column = convertCase(column as string, this.model.databaseCaseConvention);\n    this.select(`SUM(${column as string}) as total`);\n    const result = await this.one();\n    return result ? +result.$additionalColumns[\"total\"] : 0;\n  }\n\n  async paginate(\n    page: number,\n    limit: number,\n    options?: ManyOptions,\n  ): Promise<PaginatedData<T>> {\n    this.limitQuery = this.selectTemplate.limit(limit);\n    this.offsetQuery = this.selectTemplate.offset((page - 1) * limit);\n\n    const originalSelectQuery = this.selectQuery;\n    this.select(\"COUNT(*) as total\");\n    const total = await this.many(options);\n    this.selectQuery = originalSelectQuery;\n\n    const models = await this.many(options);\n    const paginationMetadata = getPaginationMetadata(\n      page,\n      limit,\n      +total[0].$additionalColumns[\"total\"] as number,\n    );\n    let data =\n      (await parseDatabaseDataIntoModelResponse(models, this.model)) || [];\n    if (Array.isArray(data)) {\n      data = data.filter((model) => model !== null);\n    }\n    return {\n      paginationMetadata,\n      data: Array.isArray(data) ? data : [data],\n    } as PaginatedData<T>;\n  }\n\n  joinRaw(query: string): this {\n    this.joinQuery += ` ${query} `;\n    return this;\n  }\n\n  join(\n    relationTable: string,\n    primaryColumn: string,\n    foreignColumn: string,\n  ): PostgresQueryBuilder<T> {\n    const join = joinTemplate(\n      this.model,\n      relationTable,\n      primaryColumn as string,\n      foreignColumn as string,\n    );\n    this.joinQuery += join.innerJoin();\n    return this;\n  }\n\n  leftJoin(\n    relationTable: string,\n    primaryColumn: string,\n    foreignColumn: string,\n  ): PostgresQueryBuilder<T> {\n    const join = joinTemplate(\n      this.model,\n      relationTable,\n      primaryColumn as string,\n      foreignColumn as string,\n    );\n    this.joinQuery += join.leftJoin();\n    return this;\n  }\n  with<O extends typeof Model>(\n    relation: RelationType<T>,\n    relatedModel?: O,\n    relatedModelQueryBuilder?: (\n      queryBuilder: ModelQueryBuilder<ModelInstanceType<O>>,\n    ) => void,\n    ignoreHooks?: { beforeFetch?: boolean; afterFetch?: boolean },\n  ): ModelQueryBuilder<T> {\n    if (!relatedModelQueryBuilder) {\n      this.relations.push({\n        relation: relation as string,\n      });\n\n      return this;\n    }\n\n    const queryBuilder = new PostgresQueryBuilder(\n      relatedModel as typeof Model,\n      relatedModel?.table || \"\",\n      this.pgClient,\n      this.logs,\n      false,\n      this.sqlDataSource,\n    );\n\n    relatedModelQueryBuilder(queryBuilder as ModelQueryBuilder<any>);\n    if (!ignoreHooks?.beforeFetch) {\n      relatedModel?.beforeFetch(queryBuilder);\n    }\n\n    this.relations.push({\n      relation: relation as string,\n      selectedColumns: queryBuilder.modelSelectedColumns,\n      whereQuery: this.whereTemplate.convertPlaceHolderToValue(\n        queryBuilder.whereQuery,\n      ),\n      params: queryBuilder.params,\n      joinQuery: queryBuilder.joinQuery,\n      groupByQuery: queryBuilder.groupByQuery,\n      orderByQuery: queryBuilder.orderByQuery,\n      limitQuery: queryBuilder.limitQuery,\n      offsetQuery: queryBuilder.offsetQuery,\n      havingQuery: queryBuilder.havingQuery,\n      dynamicColumns: queryBuilder.dynamicColumns,\n      ignoreAfterFetchHook: ignoreHooks?.afterFetch || false,\n    });\n\n    return this;\n  }\n\n  addDynamicColumns(\n    dynamicColumns: DynamicColumnType<T>[],\n  ): ModelQueryBuilder<T> {\n    this.dynamicColumns = dynamicColumns as string[];\n    return this;\n  }\n\n  groupBy(...columns: SelectableType<T>[]): this;\n  groupBy(...columns: string[]): this;\n  groupBy(...columns: (SelectableType<T> | string)[]): this {\n    this.groupByQuery = this.selectTemplate.groupBy(...(columns as string[]));\n    return this;\n  }\n\n  groupByRaw(query: string): this {\n    query.replace(\"GROUP BY\", \"\");\n    this.groupByQuery = ` GROUP BY ${query}`;\n    return this;\n  }\n\n  orderBy(column: SelectableType<T>, order: \"ASC\" | \"DESC\"): this;\n  orderBy(column: string, order: \"ASC\" | \"DESC\"): this;\n  orderBy(column: SelectableType<T> | string, order: \"ASC\" | \"DESC\"): this {\n    const casedColumn = convertCase(\n      column as string,\n      this.model.databaseCaseConvention,\n    );\n\n    if (this.orderByQuery) {\n      this.orderByQuery += `, ${casedColumn as string} ${order}`;\n      return this;\n    }\n\n    this.orderByQuery = ` ORDER BY ${casedColumn as string} ${order}`;\n    return this;\n  }\n\n  orderByRaw(query: string): this {\n    if (this.orderByQuery) {\n      this.orderByQuery += `, ${query}`;\n      return this;\n    }\n\n    this.orderByQuery = ` ORDER BY ${query}`;\n    return this;\n  }\n\n  limit(limit: number) {\n    this.limitQuery = this.selectTemplate.limit(limit);\n    return this;\n  }\n\n  offset(offset: number) {\n    this.offsetQuery = this.selectTemplate.offset(offset);\n    return this;\n  }\n\n  havingRaw(query: string): ModelQueryBuilder<T> {\n    query = query.replace(\"HAVING\", \"\");\n    if (this.havingQuery) {\n      this.havingQuery += ` AND ${query}`;\n      return this;\n    }\n\n    this.havingQuery = ` HAVING ${query}`;\n    return this;\n  }\n\n  copy(): ModelQueryBuilder<T> {\n    const queryBuilder = new PostgresQueryBuilder<T>(\n      this.model as typeof Model,\n      this.table,\n      this.pgClient,\n      this.logs,\n      this.isNestedCondition,\n      this.sqlDataSource,\n    );\n    queryBuilder.selectQuery = this.selectQuery;\n    queryBuilder.whereQuery = this.whereQuery;\n    queryBuilder.groupByQuery = this.groupByQuery;\n    queryBuilder.orderByQuery = this.orderByQuery;\n    queryBuilder.limitQuery = this.limitQuery;\n    queryBuilder.offsetQuery = this.offsetQuery;\n    queryBuilder.params = [...this.params];\n    return queryBuilder;\n  }\n}\n","import { Model } from \"../models/model\";\nimport {\n  FindOneType,\n  FindType,\n  UnrestrictedFindOneType,\n  UnrestrictedFindType,\n} from \"../models/model_manager/model_manager_types\";\nimport { log } from \"../../utils/logger\";\nimport { ModelManager } from \"../models/model_manager/model_manager\";\nimport { SqlDataSource } from \"../../../src/sql/sql_data_source\";\nimport SqlModelManagerUtils from \"../models/model_manager/model_manager_utils\";\nimport { SqlLiteQueryBuilder } from \"./sql_lite_query_builder\";\nimport { SqliteConnectionInstance } from \"../sql_data_source_types\";\n\nexport class SqliteModelManager<T extends Model> extends ModelManager<T> {\n  protected sqLiteConnection: SqliteConnectionInstance;\n  protected sqlModelManagerUtils: SqlModelManagerUtils<T>;\n\n  /**\n   * Constructor for SqLiteModelManager class.\n   *\n   * @param {typeof Model} model - Model constructor.\n   * @param {Pool} sqLiteConnection - sqlite connection.\n   * @param {boolean} logs - Flag to enable or disable logging.\n   */\n  constructor(\n    model: typeof Model,\n    sqLiteConnection: SqliteConnectionInstance,\n    logs: boolean,\n    sqlDataSource: SqlDataSource,\n  ) {\n    super(model, logs, sqlDataSource);\n    this.sqLiteConnection = sqLiteConnection;\n    this.sqlModelManagerUtils = new SqlModelManagerUtils<T>(\n      \"sqlite\",\n      sqLiteConnection,\n    );\n  }\n\n  /**\n   * Find method to retrieve multiple records from the database based on the input conditions.\n   *\n   * @param {FindType} input - Optional query parameters for filtering, ordering, and pagination.\n   * @returns Promise resolving to an array of models.\n   */\n  async find(input?: FindType<T> | UnrestrictedFindType<T>): Promise<T[]> {\n    if (!input) {\n      return await this.query().many();\n    }\n\n    const query = this.query();\n    if (input.select) {\n      query.select(...(input.select as string[]));\n    }\n\n    if (input.relations) {\n      input.relations.forEach((relation) => {\n        query.with(relation);\n      });\n    }\n\n    if (input.where) {\n      Object.entries(input.where).forEach(([key, value]) => {\n        query.where(key, value);\n      });\n    }\n\n    if (input.orderBy) {\n      Object.entries(input.orderBy).forEach(([key, value]) => {\n        query.orderBy(key, value);\n      });\n    }\n\n    if (input.limit) {\n      query.limit(input.limit);\n    }\n\n    if (input.offset) {\n      query.offset(input.offset);\n    }\n\n    if (input.groupBy) {\n      query.groupBy(...(input.groupBy as string[]));\n    }\n\n    return await query.many({ ignoreHooks: input.ignoreHooks || [] });\n  }\n\n  /**\n   * Find a single record from the database based on the input conditions.\n   *\n   * @param {FindOneType} input - query parameters for filtering and selecting a single record.\n   * @returns Promise resolving to a single model or null if not found.\n   */\n  async findOne(\n    input: FindOneType<T> | UnrestrictedFindOneType<T>,\n  ): Promise<T | null> {\n    const results = await this.find({\n      ...input,\n      limit: 1,\n    });\n\n    if (!results.length) {\n      return null;\n    }\n\n    return results[0];\n  }\n\n  /**\n   * Find a single record by its PK from the database.\n   *\n   * @param {string | number | boolean} value - PK of the record to retrieve, hooks will not have any effect, since it's a direct query for the PK.\n   * @returns Promise resolving to a single model or null if not found.\n   */\n  async findOneByPrimaryKey(\n    value: string | number | boolean,\n  ): Promise<T | null> {\n    if (!this.model.primaryKey) {\n      throw new Error(\n        \"Model \" + this.model.table + \" has no primary key to be retrieved by\",\n      );\n    }\n\n    return await this.query()\n      .where(this.model.primaryKey as string, value)\n      .one();\n  }\n\n  /**\n   * Save a new model instance to the database.\n   *\n   * @param {Model} model - Model instance to be saved.\n   * @param {SqliteTransaction} trx - SqliteTransaction to be used on the save operation.\n   * @returns Promise resolving to the saved model or null if saving fails.\n   */\n  async insert(model: Partial<T>): Promise<T | null> {\n    this.model.beforeInsert(model as T);\n\n    const { query, params } = this.sqlModelManagerUtils.parseInsert(\n      model as T,\n      this.model,\n      this.sqlDataSource.getDbType(),\n    );\n\n    log(query, this.logs, params);\n    return (await this.promisifyQuery<T>(query, params, {\n      isCreate: true,\n      models: model as T,\n    })) as T;\n  }\n\n  /**\n   * Create multiple model instances in the database.\n   *\n   * @param {Model} model - Model instance to be saved.\n   * @param {SqliteTransaction} trx - SqliteTransaction to be used on the save operation.\n   * @returns Promise resolving to an array of saved models or null if saving fails.\n   */\n  async insertMany(models: Partial<T>[]): Promise<T[]> {\n    models.forEach((model) => {\n      this.model.beforeInsert(model as T);\n    });\n\n    const { query, params } = this.sqlModelManagerUtils.parseMassiveInsert(\n      models as T[],\n      this.model,\n      this.sqlDataSource.getDbType(),\n    );\n    log(query, this.logs, params);\n    return (await this.promisifyQuery<T[]>(query, params, {\n      isInsertMany: true,\n      models: models as T[],\n    })) as T[];\n  }\n\n  /**\n   * Update an existing model instance in the database.\n   * @param {Model} model - Model instance to be updated.\n   * @param {SqliteTransaction} trx - SqliteTransaction to be used on the update operation.\n   * @returns Promise resolving to the updated model or null if updating fails.\n   */\n  async updateRecord(model: T): Promise<T | null> {\n    if (!this.model.primaryKey) {\n      throw new Error(\n        \"Model \" +\n          this.model.table +\n          \" has no primary key to be updated, try save\",\n      );\n    }\n\n    const updateQuery = this.sqlModelManagerUtils.parseUpdate(\n      model,\n      this.model,\n      this.sqlDataSource.getDbType(),\n    );\n\n    log(updateQuery.query, this.logs, updateQuery.params);\n    await this.promisifyQuery<T>(updateQuery.query, updateQuery.params);\n\n    return await this.findOneByPrimaryKey(\n      model[this.model.primaryKey as keyof T] as string | number,\n    );\n  }\n\n  /**\n   * @description Delete a record from the database from the given model.\n   *\n   * @param {Model} model - Model to delete.\n   * @param trx - SqliteTransaction to be used on the delete operation.\n   * @returns Promise resolving to the deleted model or null if deleting fails.\n   */\n  async deleteRecord(model: T): Promise<T | null> {\n    if (!this.model.primaryKey) {\n      throw new Error(\n        \"Model \" + this.model.table + \" has no primary key to be deleted from\",\n      );\n    }\n    const { query, params } = this.sqlModelManagerUtils.parseDelete(\n      this.model.table,\n      this.model.primaryKey,\n      model[this.model.primaryKey as keyof T] as string,\n    );\n\n    log(query, this.logs, params);\n    await this.promisifyQuery<T>(query, params);\n    return model;\n  }\n\n  /**\n   * Create and return a new instance of the Mysql_query_builder for building more complex SQL queries.\n   *\n   * @returns {MysqlQueryBuilder<Model>} - Instance of Mysql_query_builder.\n   */\n  query(): SqlLiteQueryBuilder<T> {\n    return new SqlLiteQueryBuilder<T>(\n      this.model,\n      this.model.table,\n      this.sqLiteConnection,\n      this.logs,\n      false,\n      this.sqlDataSource,\n    );\n  }\n\n  private promisifyQuery<T>(\n    query: string,\n    params: any,\n    options: {\n      isCreate?: boolean;\n      isInsertMany?: boolean;\n      models?: T | T[];\n    } = {\n      isCreate: false,\n      isInsertMany: false,\n      models: [],\n    },\n  ): Promise<T | T[]> {\n    const primaryKeyName = this.model.primaryKey as string;\n    if (options.isCreate || options.isInsertMany) {\n      if (options.isCreate) {\n        const table = this.model.table;\n        const sqLiteConnection = this.sqLiteConnection;\n        return new Promise<T>((resolve, reject) => {\n          this.sqLiteConnection.run(\n            query,\n            params,\n            function (this: any, err: any) {\n              if (err) {\n                return reject(err);\n              }\n\n              const currentModel = options.models as T;\n              const lastID =\n                currentModel[primaryKeyName as keyof T] || this.lastID;\n              const selectQuery = `SELECT * FROM ${table} WHERE ${primaryKeyName} = ?`;\n              sqLiteConnection.get(\n                selectQuery,\n                [lastID],\n                (err: any, row: T) => {\n                  if (err) {\n                    return reject(err);\n                  }\n\n                  resolve(row as T);\n                },\n              );\n            },\n          );\n        });\n      }\n\n      if (!Array.isArray(options.models)) {\n        throw new Error(\n          \"Models should be an array when massive creating on sqlite\",\n        );\n      }\n\n      const models = options.models as T[];\n      const table = this.model.table;\n      const finalResult: T[] = [];\n      const sqLiteConnection = this.sqLiteConnection;\n      return new Promise<T[]>(async (resolve, reject) => {\n        for (const model of models) {\n          try {\n            const { query, params } = this.sqlModelManagerUtils.parseInsert(\n              model as any,\n              this.model,\n              this.sqlDataSource.getDbType(),\n            );\n\n            await new Promise<void>((resolve, reject) => {\n              this.sqLiteConnection.run(query, params, function (err: any) {\n                if (err) {\n                  return reject(err);\n                }\n\n                const lastID = model[primaryKeyName as keyof T] || this.lastID;\n                const selectQuery = `SELECT * FROM ${table} WHERE ${primaryKeyName} = ?`;\n                sqLiteConnection.get(\n                  selectQuery,\n                  [lastID],\n                  (err: any, row: T) => {\n                    if (err) {\n                      return reject(err);\n                    }\n\n                    finalResult.push(row as T);\n                    resolve();\n                  },\n                );\n              });\n            });\n          } catch (err) {\n            return reject(err);\n          }\n        }\n        resolve(finalResult);\n      });\n    }\n\n    return new Promise<T>((resolve, reject) => {\n      this.sqLiteConnection.all(query, params, (err, rows) => {\n        if (err) {\n          return reject(err);\n        }\n\n        resolve(rows as T);\n      });\n    });\n  }\n}\n","import { getBaseModelInstance, Model } from \"../models/model\";\nimport { log } from \"../../utils/logger\";\nimport {\n  OneOptions,\n  QueryBuilder,\n  ModelQueryBuilder,\n  ManyOptions,\n  ModelInstanceType,\n} from \"../query_builder/query_builder\";\nimport joinTemplate from \"../resources/query/JOIN\";\nimport { getPaginationMetadata, PaginatedData } from \"../pagination\";\nimport { parseDatabaseDataIntoModelResponse } from \"../serializer\";\nimport {\n  DynamicColumnType,\n  RelationType,\n  SelectableType,\n} from \"../models/model_manager/model_manager_types\";\nimport { SqlDataSource } from \"../../../src/sql/sql_data_source\";\nimport { convertCase } from \"../../utils/case_utils\";\nimport SqlModelManagerUtils from \"../models/model_manager/model_manager_utils\";\nimport {\n  DeleteOptions,\n  SoftDeleteOptions,\n} from \"../query_builder/delete_query_builder_type\";\nimport deleteTemplate from \"../resources/query/DELETE\";\nimport updateTemplate from \"../resources/query/UPDATE\";\nimport { UpdateOptions } from \"../query_builder/update_query_builder_types\";\nimport { SqliteConnectionInstance } from \"../sql_data_source_types\";\n\nexport class SqlLiteQueryBuilder<T extends Model> extends QueryBuilder<T> {\n  protected sqLiteConnection: SqliteConnectionInstance;\n  protected sqliteModelManagerUtils: SqlModelManagerUtils<T>;\n  protected updateTemplate: ReturnType<typeof updateTemplate>;\n  protected deleteTemplate: ReturnType<typeof deleteTemplate>;\n\n  constructor(\n    model: typeof Model,\n    table: string,\n    sqLiteConnection: SqliteConnectionInstance,\n    logs: boolean,\n    isNestedCondition = false,\n    sqlDataSource: SqlDataSource,\n  ) {\n    super(model, table, logs, sqlDataSource);\n    this.sqLiteConnection = sqLiteConnection;\n    this.isNestedCondition = isNestedCondition;\n    this.updateTemplate = updateTemplate(sqlDataSource.getDbType(), this.model);\n    this.deleteTemplate = deleteTemplate(table, sqlDataSource.getDbType());\n    this.sqliteModelManagerUtils = new SqlModelManagerUtils<T>(\n      \"sqlite\",\n      this.sqLiteConnection,\n    );\n  }\n\n  async one(options: OneOptions = {}): Promise<T | null> {\n    // hook query builder\n    if (!options.ignoreHooks?.includes(\"beforeFetch\")) {\n      this.model.beforeFetch(this);\n    }\n\n    let query: string = \"\";\n    if (this.joinQuery && !this.selectQuery) {\n      this.selectQuery = this.selectTemplate.selectColumns(`${this.table}.*`);\n    }\n    query = this.selectQuery + this.joinQuery;\n\n    if (this.whereQuery) {\n      query += this.whereQuery;\n    }\n\n    query = this.whereTemplate.convertPlaceHolderToValue(query);\n\n    // limit to 1\n    this.limit(1);\n    query += this.groupFooterQuery();\n\n    query = query.trim();\n    log(query, this.logs, this.params);\n    const results = await this.promisifyQuery<T>(query, this.params);\n    if (!results.length) {\n      return null;\n    }\n\n    const result = results[0];\n\n    const modelInstance = getBaseModelInstance<T>();\n    await this.mergeRawPacketIntoModel(modelInstance, result, this.model);\n    const relationModels =\n      await this.sqliteModelManagerUtils.parseQueryBuilderRelations(\n        [modelInstance],\n        this.model,\n        this.relations,\n        \"sqlite\",\n        this.logs,\n      );\n\n    const model = (await parseDatabaseDataIntoModelResponse(\n      [modelInstance],\n      this.model,\n      relationModels,\n      this.modelSelectedColumns,\n    )) as T;\n\n    return !options.ignoreHooks?.includes(\"afterFetch\")\n      ? ((await this.model.afterFetch([model]))[0] as T)\n      : model;\n  }\n\n  async oneOrFail(options?: OneOptions & { customError: Error }): Promise<T> {\n    const model = await this.one({\n      ignoreHooks: options?.ignoreHooks,\n    });\n\n    if (!model) {\n      if (options?.customError) {\n        throw options.customError;\n      }\n\n      throw new Error(\"ROW_NOT_FOUND\");\n    }\n\n    return model as T;\n  }\n\n  async many(options: ManyOptions = {}): Promise<T[]> {\n    // hook query builder\n    if (!options.ignoreHooks?.includes(\"beforeFetch\")) {\n      this.model.beforeFetch(this);\n    }\n\n    let query: string = \"\";\n    if (this.joinQuery && !this.selectQuery) {\n      this.selectQuery = this.selectTemplate.selectColumns(`${this.table}.*`);\n    }\n    query = this.selectQuery + this.joinQuery;\n\n    if (this.whereQuery) {\n      query += this.whereQuery;\n    }\n\n    query += this.groupFooterQuery();\n    query = this.whereTemplate.convertPlaceHolderToValue(query);\n    query = query.trim();\n\n    log(query, this.logs, this.params);\n    const results = await this.promisifyQuery<T[]>(query, this.params);\n    const modelPromises = results.map(async (result) => {\n      const modelInstance = getBaseModelInstance<T>();\n      await this.mergeRawPacketIntoModel(modelInstance, result, this.model);\n\n      return modelInstance as T;\n    });\n\n    const models = await Promise.all(modelPromises);\n    const relationModels =\n      await this.sqliteModelManagerUtils.parseQueryBuilderRelations(\n        models,\n        this.model,\n        this.relations,\n        \"sqlite\",\n        this.logs,\n      );\n\n    const serializedModels = await parseDatabaseDataIntoModelResponse(\n      models,\n      this.model,\n      relationModels,\n      this.modelSelectedColumns,\n    );\n    if (!serializedModels) {\n      return [];\n    }\n\n    if (!options.ignoreHooks?.includes(\"afterFetch\")) {\n      await this.model.afterFetch(\n        Array.isArray(serializedModels) ? serializedModels : [serializedModels],\n      );\n    }\n\n    return (\n      Array.isArray(serializedModels) ? serializedModels : [serializedModels]\n    ) as T[];\n  }\n\n  async update(data: Partial<T>, options?: UpdateOptions): Promise<number> {\n    const { ignoreBeforeUpdateHook } = options || {};\n    if (!ignoreBeforeUpdateHook) {\n      this.model.beforeUpdate(this);\n    }\n\n    const columns = Object.keys(data);\n    const values = Object.values(data);\n    this.whereQuery = this.whereTemplate.convertPlaceHolderToValue(\n      this.whereQuery,\n      values.length + 1,\n    );\n    const { query, params } = this.updateTemplate.massiveUpdate(\n      columns,\n      values,\n      this.whereQuery,\n      this.joinQuery,\n    );\n\n    params.push(...this.params);\n\n    log(query, this.logs, params);\n    return await new Promise((resolve, reject) => {\n      this.sqLiteConnection.run(query, params, function (this: any, err) {\n        if (err) {\n          reject(new Error(err.message));\n        } else {\n          resolve(this.changes);\n        }\n      });\n    });\n  }\n\n  async delete(options: DeleteOptions = {}): Promise<number> {\n    const { ignoreBeforeDeleteHook } = options || {};\n    if (!ignoreBeforeDeleteHook) {\n      this.model.beforeDelete(this);\n    }\n\n    this.whereQuery = this.whereTemplate.convertPlaceHolderToValue(\n      this.whereQuery,\n    );\n    const query = this.deleteTemplate.massiveDelete(\n      this.whereQuery,\n      this.joinQuery,\n    );\n\n    log(query, this.logs, this.params);\n    return new Promise((resolve, reject) => {\n      this.sqLiteConnection.run(query, this.params, function (this: any, err) {\n        if (err) {\n          reject(new Error(err.message));\n        } else {\n          resolve(this.changes);\n        }\n      });\n    });\n  }\n\n  async softDelete(options?: SoftDeleteOptions<T>): Promise<number> {\n    const {\n      column = \"deletedAt\",\n      value = new Date().toISOString().slice(0, 19).replace(\"T\", \" \"), // TODO: check if this is the correct format\n      ignoreBeforeDeleteHook = false,\n    } = options || {};\n    if (!ignoreBeforeDeleteHook) {\n      this.model.beforeDelete(this);\n    }\n\n    let { query, params } = this.updateTemplate.massiveUpdate(\n      [column as string],\n      [value],\n      this.whereQuery,\n      this.joinQuery,\n    );\n\n    params = [...params, ...this.params];\n\n    log(query, this.logs, params);\n    return new Promise((resolve, reject) => {\n      this.sqLiteConnection.run(query, params, function (this: any, err) {\n        if (err) {\n          reject(new Error(err.message));\n        } else {\n          resolve(this.changes);\n        }\n      });\n    });\n  }\n\n  whereBuilder(cb: (queryBuilder: SqlLiteQueryBuilder<T>) => void): this {\n    const queryBuilder = new SqlLiteQueryBuilder(\n      this.model as typeof Model,\n      this.table,\n      this.sqLiteConnection,\n      this.logs,\n      true,\n      this.sqlDataSource,\n    );\n    cb(queryBuilder as unknown as SqlLiteQueryBuilder<T>);\n\n    let whereCondition = queryBuilder.whereQuery.trim();\n    if (whereCondition.startsWith(\"AND\")) {\n      whereCondition = whereCondition.substring(4); // 'AND '.length === 4 has to be removed from the beginning of the where condition\n    } else if (whereCondition.startsWith(\"OR\")) {\n      whereCondition = whereCondition.substring(3); // 'OR '.length === 3 has to be removed from the beginning of the where condition\n    }\n\n    whereCondition = \"(\" + whereCondition + \")\";\n\n    if (!this.whereQuery) {\n      this.whereQuery = this.isNestedCondition\n        ? whereCondition\n        : `WHERE ${whereCondition}`;\n    } else {\n      this.whereQuery += ` AND ${whereCondition}`;\n    }\n\n    this.params.push(...queryBuilder.params);\n    return this;\n  }\n\n  orWhereBuilder(cb: (queryBuilder: SqlLiteQueryBuilder<T>) => void): this {\n    const nestedBuilder = new SqlLiteQueryBuilder(\n      this.model as typeof Model,\n      this.table,\n      this.sqLiteConnection,\n      this.logs,\n      true,\n      this.sqlDataSource,\n    );\n    cb(nestedBuilder as unknown as SqlLiteQueryBuilder<T>);\n\n    let nestedCondition = nestedBuilder.whereQuery.trim();\n    if (nestedCondition.startsWith(\"AND\")) {\n      nestedCondition = nestedCondition.substring(4);\n    } else if (nestedCondition.startsWith(\"OR\")) {\n      nestedCondition = nestedCondition.substring(3);\n    }\n\n    nestedCondition = `(${nestedCondition})`;\n\n    if (!this.whereQuery) {\n      this.whereQuery = this.isNestedCondition\n        ? nestedCondition\n        : `WHERE ${nestedCondition}`;\n\n      this.params.push(...nestedBuilder.params);\n      return this;\n    }\n\n    this.whereQuery += ` OR ${nestedCondition}`;\n    this.params.push(...nestedBuilder.params);\n\n    return this;\n  }\n\n  andWhereBuilder(cb: (queryBuilder: SqlLiteQueryBuilder<T>) => void): this {\n    const nestedBuilder = new SqlLiteQueryBuilder(\n      this.model as typeof Model,\n      this.table,\n      this.sqLiteConnection,\n      this.logs,\n      true,\n      this.sqlDataSource,\n    );\n    cb(nestedBuilder as unknown as SqlLiteQueryBuilder<T>);\n\n    let nestedCondition = nestedBuilder.whereQuery.trim();\n    if (nestedCondition.startsWith(\"AND\")) {\n      nestedCondition = nestedCondition.substring(4);\n    } else if (nestedCondition.startsWith(\"OR\")) {\n      nestedCondition = nestedCondition.substring(3);\n    }\n\n    if (!this.whereQuery) {\n      this.whereQuery = this.isNestedCondition\n        ? nestedCondition\n        : `WHERE ${nestedCondition}`;\n\n      this.params.push(...nestedBuilder.params);\n      return this;\n    }\n\n    this.whereQuery += ` AND ${nestedCondition}`;\n    this.params.push(...nestedBuilder.params);\n\n    return this;\n  }\n\n  async raw<T>(query: string, params: any[] = []) {\n    return await this.promisifyQuery<T>(query, params);\n  }\n\n  async getCount(\n    options: { ignoreHooks: boolean } = { ignoreHooks: false },\n  ): Promise<number> {\n    if (options.ignoreHooks) {\n      const result = (await this.promisifyQuery<T>(\n        \"SELECT COUNT(*) as total FROM \" + this.table,\n        [],\n      )) as any;\n      return +result[0].total;\n    }\n\n    this.select(\"COUNT(*) as total\");\n    const result = await this.one();\n    return result ? +result.$additionalColumns.total : 0;\n  }\n\n  async getSum(column: SelectableType<T>): Promise<number>;\n  async getSum(column: string): Promise<number>;\n  async getSum(\n    column: SelectableType<T> | string,\n    options: { ignoreHooks: boolean } = { ignoreHooks: false },\n  ): Promise<number> {\n    if (!options.ignoreHooks) {\n      const result = (await this.promisifyQuery(\n        `SELECT SUM(\"${column as string}) as total FROM ` + this.table,\n        [],\n      )) as any;\n      return +result[0].total || 0;\n    }\n\n    column = convertCase(column as string, this.model.databaseCaseConvention);\n    this.select(`SUM(${column as string}) as total`);\n    const result = await this.one();\n    return result ? +result.$additionalColumns.total : 0;\n  }\n\n  async paginate(\n    page: number,\n    limit: number,\n    options?: ManyOptions,\n  ): Promise<PaginatedData<T>> {\n    this.limitQuery = this.selectTemplate.limit(limit);\n    this.offsetQuery = this.selectTemplate.offset((page - 1) * limit);\n\n    const originalSelectQuery = this.selectQuery;\n    this.select(\"COUNT(*) as total\");\n    const total = await this.many(options);\n\n    this.selectQuery = originalSelectQuery;\n    const models = await this.many(options);\n\n    const paginationMetadata = getPaginationMetadata(\n      page,\n      limit,\n      +total[0].$additionalColumns[\"total\"] as number,\n    );\n    let data =\n      (await parseDatabaseDataIntoModelResponse(models, this.model)) || [];\n    if (Array.isArray(data)) {\n      data = data.filter((model) => model !== null);\n    }\n\n    return {\n      paginationMetadata,\n      data: Array.isArray(data) ? data : [data],\n    } as PaginatedData<T>;\n  }\n\n  // SELECT\n  select(...columns: string[]): SqlLiteQueryBuilder<T>;\n  select(...columns: (SelectableType<T> | \"*\")[]): SqlLiteQueryBuilder<T>;\n  select(\n    ...columns: (SelectableType<T> | \"*\" | string)[]\n  ): SqlLiteQueryBuilder<T> {\n    this.selectQuery = this.selectTemplate.selectColumns(\n      ...(columns as string[]),\n    );\n    this.modelSelectedColumns = columns.map((column) =>\n      convertCase(column as string, this.model.databaseCaseConvention),\n    ) as string[];\n    return this;\n  }\n\n  distinct(): SqlLiteQueryBuilder<T> {\n    const distinct = this.selectTemplate.distinct;\n    this.selectQuery = this.selectQuery.replace(\n      /select/i,\n      `SELECT ${distinct}`,\n    );\n    return this;\n  }\n\n  distinctOn(...columns: string[]): SqlLiteQueryBuilder<T>;\n  distinctOn(...columns: SelectableType<T>[]): SqlLiteQueryBuilder<T>;\n  distinctOn(\n    ...columns: (string | SelectableType<T>)[]\n  ): SqlLiteQueryBuilder<T>;\n  distinctOn(\n    ...columns: (string | SelectableType<T>)[]\n  ): SqlLiteQueryBuilder<T> {\n    throw new Error(\"DISTINCT ON is only supported in postgres\");\n  }\n\n  joinRaw(query: string): this {\n    this.joinQuery += ` ${query} `;\n    return this;\n  }\n\n  join(\n    relationTable: string,\n    primaryColumn: string,\n    foreignColumn: string,\n  ): SqlLiteQueryBuilder<T> {\n    const join = joinTemplate(\n      this.model,\n      relationTable,\n      primaryColumn,\n      foreignColumn,\n    );\n    this.joinQuery += join.innerJoin();\n    return this;\n  }\n\n  leftJoin(\n    relationTable: string,\n    primaryColumn: string,\n    foreignColumn: string,\n  ): SqlLiteQueryBuilder<T> {\n    const join = joinTemplate(\n      this.model,\n      relationTable,\n      primaryColumn,\n      foreignColumn,\n    );\n    this.joinQuery += join.leftJoin();\n    return this;\n  }\n\n  with<O extends typeof Model>(\n    relation: RelationType<T>,\n    relatedModel?: O,\n    relatedModelQueryBuilder?: (\n      queryBuilder: ModelQueryBuilder<ModelInstanceType<O>>,\n    ) => void,\n    ignoreHooks?: { beforeFetch?: boolean; afterFetch?: boolean },\n  ): ModelQueryBuilder<T> {\n    if (!relatedModelQueryBuilder) {\n      this.relations.push({\n        relation: relation as string,\n      });\n\n      return this;\n    }\n\n    const queryBuilder = new SqlLiteQueryBuilder(\n      relatedModel as typeof Model,\n      relatedModel?.table || \"\",\n      this.sqLiteConnection,\n      this.logs,\n      false,\n      this.sqlDataSource,\n    );\n\n    relatedModelQueryBuilder(queryBuilder as ModelQueryBuilder<any>);\n    if (!ignoreHooks?.beforeFetch) {\n      relatedModel?.beforeFetch(queryBuilder);\n    }\n\n    this.relations.push({\n      relation: relation as string,\n      selectedColumns: queryBuilder.modelSelectedColumns,\n      whereQuery: this.whereTemplate.convertPlaceHolderToValue(\n        queryBuilder.whereQuery,\n      ),\n      params: queryBuilder.params,\n      joinQuery: queryBuilder.joinQuery,\n      groupByQuery: queryBuilder.groupByQuery,\n      orderByQuery: queryBuilder.orderByQuery,\n      limitQuery: queryBuilder.limitQuery,\n      offsetQuery: queryBuilder.offsetQuery,\n      havingQuery: queryBuilder.havingQuery,\n      dynamicColumns: queryBuilder.dynamicColumns,\n      ignoreAfterFetchHook: ignoreHooks?.afterFetch || false,\n    });\n\n    return this;\n  }\n\n  addDynamicColumns(\n    dynamicColumns: DynamicColumnType<T>[],\n  ): ModelQueryBuilder<T> {\n    this.dynamicColumns = dynamicColumns as string[];\n    return this;\n  }\n\n  groupBy(...columns: SelectableType<T>[]): this;\n  groupBy(...columns: string[]): this;\n  groupBy(...columns: (SelectableType<T> | string)[]): this {\n    this.groupByQuery = this.selectTemplate.groupBy(...(columns as string[]));\n    return this;\n  }\n\n  groupByRaw(query: string): this {\n    query.replace(\"GROUP BY\", \"\");\n    this.groupByQuery = ` GROUP BY ${query}`;\n    return this;\n  }\n\n  orderBy(column: SelectableType<T>, order: \"ASC\" | \"DESC\"): this;\n  orderBy(column: string, order: \"ASC\" | \"DESC\"): this;\n  orderBy(column: SelectableType<T> | string, order: \"ASC\" | \"DESC\"): this {\n    const casedColumn = convertCase(\n      column as string,\n      this.model.databaseCaseConvention,\n    );\n\n    if (this.orderByQuery) {\n      this.orderByQuery += `, ${casedColumn as string} ${order}`;\n      return this;\n    }\n\n    this.orderByQuery = ` ORDER BY ${casedColumn as string} ${order}`;\n    return this;\n  }\n\n  orderByRaw(query: string): this {\n    if (this.orderByQuery) {\n      this.orderByQuery += `, ${query}`;\n      return this;\n    }\n\n    this.orderByQuery = ` ORDER BY ${query}`;\n    return this;\n  }\n\n  limit(limit: number) {\n    this.limitQuery = this.selectTemplate.limit(limit);\n    return this;\n  }\n\n  offset(offset: number) {\n    this.offsetQuery = this.selectTemplate.offset(offset);\n    return this;\n  }\n\n  havingRaw(query: string): ModelQueryBuilder<T> {\n    query = query.replace(\"HAVING\", \"\");\n    if (this.havingQuery) {\n      this.havingQuery += ` AND ${query}`;\n      return this;\n    }\n\n    this.havingQuery = ` HAVING ${query}`;\n    return this;\n  }\n\n  copy(): ModelQueryBuilder<T> {\n    const queryBuilder = new SqlLiteQueryBuilder<T>(\n      this.model as typeof Model,\n      this.table,\n      this.sqLiteConnection,\n      this.logs,\n      this.isNestedCondition,\n      this.sqlDataSource,\n    );\n\n    queryBuilder.selectQuery = this.selectQuery;\n    queryBuilder.whereQuery = this.whereQuery;\n    queryBuilder.joinQuery = this.joinQuery;\n    queryBuilder.groupByQuery = this.groupByQuery;\n    queryBuilder.orderByQuery = this.orderByQuery;\n    queryBuilder.limitQuery = this.limitQuery;\n    queryBuilder.offsetQuery = this.offsetQuery;\n    queryBuilder.params = [...this.params];\n    queryBuilder.relations = [...this.relations];\n    return queryBuilder;\n  }\n\n  private promisifyQuery<T>(query: string, params: any): Promise<T[]> {\n    return new Promise<T[]>((resolve, reject) => {\n      this.sqLiteConnection.all(query, params, (err, result) => {\n        if (err) {\n          reject(err);\n        }\n\n        if (!result) {\n          resolve([] as T[]);\n        }\n\n        if (!Array.isArray(result)) {\n          resolve([result as T]);\n        }\n\n        resolve(result as T[]);\n      });\n    });\n  }\n}\n","import { SqlDataSource } from \"../sql_data_source\";\nimport {\n  BEGIN_TRANSACTION,\n  COMMIT_TRANSACTION,\n  ROLLBACK_TRANSACTION,\n} from \"../resources/query/TRANSACTION\";\nimport { log } from \"../../utils/logger\";\nimport {\n  MysqlConnectionInstance,\n  PgClientInstance,\n  SqlConnectionType,\n  SqliteConnectionInstance,\n} from \"../sql_data_source_types\";\n\nexport class Transaction {\n  sqlDataSource: SqlDataSource;\n  sqlConnection: SqlConnectionType;\n  isActive: boolean;\n  private readonly logs: boolean;\n\n  constructor(sqlDataSource: SqlDataSource, logs?: boolean) {\n    this.sqlDataSource = sqlDataSource;\n    this.sqlConnection = this.sqlDataSource.getCurrentConnection();\n    this.isActive = false;\n    this.logs = logs || this.sqlDataSource.logs || false;\n  }\n\n  async startTransaction(): Promise<void> {\n    try {\n      switch (this.sqlDataSource.getDbType()) {\n        case \"mysql\":\n        case \"mariadb\":\n          log(BEGIN_TRANSACTION, this.logs);\n          await (\n            this.sqlConnection as MysqlConnectionInstance\n          ).beginTransaction();\n          break;\n\n        case \"postgres\":\n          log(BEGIN_TRANSACTION, this.logs);\n          await (this.sqlConnection as PgClientInstance).query(\n            BEGIN_TRANSACTION,\n          );\n          break;\n\n        case \"sqlite\":\n          log(BEGIN_TRANSACTION, this.logs);\n          (this.sqlConnection as SqliteConnectionInstance).run(\n            BEGIN_TRANSACTION,\n            (err) => {\n              if (err) {\n                throw new Error(err.message);\n              }\n            },\n          );\n          break;\n\n        default:\n          throw new Error(\"Invalid database type while beginning transaction\");\n      }\n\n      this.isActive = true;\n    } catch (error) {\n      await this.releaseConnection();\n    }\n  }\n\n  async commit(): Promise<void> {\n    try {\n      switch (this.sqlDataSource.getDbType()) {\n        case \"mysql\":\n        case \"mariadb\":\n          log(COMMIT_TRANSACTION, this.logs);\n          await (this.sqlConnection as MysqlConnectionInstance).commit();\n          break;\n\n        case \"postgres\":\n          log(COMMIT_TRANSACTION, this.logs);\n          await (this.sqlConnection as PgClientInstance).query(\n            COMMIT_TRANSACTION,\n          );\n          break;\n\n        case \"sqlite\":\n          log(COMMIT_TRANSACTION, this.logs);\n          (this.sqlConnection as SqliteConnectionInstance).run(\n            COMMIT_TRANSACTION,\n            (err) => {\n              if (err) {\n                throw new Error(err.message);\n              }\n            },\n          );\n          break;\n        default:\n          throw new Error(\"Invalid database type while committing transaction\");\n      }\n\n      this.isActive = false;\n    } catch (error) {\n      throw error;\n    } finally {\n      await this.releaseConnection();\n    }\n  }\n\n  async rollback(): Promise<void> {\n    try {\n      switch (this.sqlDataSource.getDbType()) {\n        case \"mysql\":\n        case \"mariadb\":\n          log(ROLLBACK_TRANSACTION, this.logs);\n          await (this.sqlConnection as MysqlConnectionInstance).rollback();\n          break;\n\n        case \"postgres\":\n          log(ROLLBACK_TRANSACTION, this.logs);\n          await (this.sqlConnection as PgClientInstance).query(\n            ROLLBACK_TRANSACTION,\n          );\n          break;\n\n        case \"sqlite\":\n          log(ROLLBACK_TRANSACTION, this.logs);\n          (this.sqlConnection as SqliteConnectionInstance).run(\n            ROLLBACK_TRANSACTION,\n            (err) => {\n              if (err) {\n                throw new Error(err.message);\n              }\n            },\n          );\n          break;\n\n        default:\n          throw new Error(\n            \"Invalid database type while rolling back transaction\",\n          );\n      }\n\n      this.isActive = false;\n    } finally {\n      await this.releaseConnection();\n    }\n  }\n\n  private async releaseConnection(): Promise<void> {\n    switch (this.sqlDataSource.getDbType()) {\n      case \"mysql\":\n      case \"mariadb\":\n        await (this.sqlConnection as MysqlConnectionInstance).end();\n        break;\n\n      case \"postgres\":\n        await (this.sqlConnection as PgClientInstance).end();\n        break;\n\n      case \"sqlite\":\n        (this.sqlConnection as SqliteConnectionInstance).close();\n        break;\n\n      default:\n        throw new Error(\"Invalid database type while releasing connection\");\n    }\n  }\n}\n","import fs from \"fs\";\nimport path from \"path\";\nimport { Migration } from \"../sql/migrations/migration\";\nimport dotenv from \"dotenv\";\nimport { MigrationTableType } from \"./resources/migration_table_type\";\nimport MigrationTemplates from \"./resources/migration_templates\";\nimport {\n  MysqlConnectionInstance,\n  PgClientInstance,\n  SqlConnectionType,\n  SqliteConnectionInstance,\n} from \"../sql/sql_data_source_types\";\n\ndotenv.config();\n\nexport async function getMigrationTable(\n  sqlConnection: SqlConnectionType,\n): Promise<MigrationTableType[]> {\n  switch (process.env.DB_TYPE) {\n    case \"mariadb\":\n    case \"mysql\":\n      const mysqlConnection = sqlConnection as MysqlConnectionInstance;\n      await mysqlConnection.query(\n        MigrationTemplates.migrationTableTemplateMysql(),\n      );\n      const result = await mysqlConnection.query(\n        MigrationTemplates.selectAllFromMigrationsTemplate(),\n      );\n      return result[0] as MigrationTableType[];\n\n    case \"postgres\":\n      const pgConnection = sqlConnection as PgClientInstance;\n      await pgConnection.query(MigrationTemplates.migrationTableTemplatePg());\n      const pgResult = await pgConnection.query(\n        MigrationTemplates.selectAllFromMigrationsTemplate(),\n      );\n      return pgResult.rows as MigrationTableType[];\n\n    case \"sqlite\":\n      await promisifySqliteQuery(\n        MigrationTemplates.migrationTableTemplateSQLite(),\n        [],\n        sqlConnection as SqliteConnectionInstance,\n      );\n      const resultSqlite =\n        (await promisifySqliteQuery<MigrationTableType[]>(\n          MigrationTemplates.selectAllFromMigrationsTemplate(),\n          [],\n          sqlConnection as SqliteConnectionInstance,\n        )) || [];\n      return Array.isArray(resultSqlite) ? resultSqlite : [resultSqlite];\n\n    default:\n      throw new Error(\"Unsupported database type\");\n  }\n}\n\nexport async function getMigrations(): Promise<Migration[]> {\n  const migrationNames = findMigrationNames();\n  const migrations: Migration[] = [];\n\n  for (const migrationName of migrationNames) {\n    const migrationModule = await findMigrationModule(migrationName);\n    const migration: Migration = new migrationModule();\n    migration.migrationName = migrationName;\n    migrations.push(migration);\n  }\n\n  return migrations;\n}\n\nexport function getPendingMigrations(\n  migrations: Migration[],\n  migrationTable: MigrationTableType[],\n): Migration[] {\n  return migrations.filter((migration) => {\n    const migrationName = migration.migrationName;\n    const migrationEntry = migrationTable.find(\n      (migration) => migration.name === migrationName,\n    );\n\n    return !migrationEntry;\n  });\n}\n\nasync function loadMigrationModule(\n  absolutePath: string,\n): Promise<new () => Migration> {\n  const isJs = path.extname(absolutePath) === \".js\";\n  if (isJs) {\n    const migrationModule = await import(absolutePath);\n    return migrationModule.default;\n  }\n\n  const tsNode = require(\"ts-node\");\n  tsNode.register({\n    transpileOnly: true,\n  });\n\n  const migrationModule = require(absolutePath);\n  return migrationModule.default;\n}\n\nasync function findMigrationModule(\n  migrationName: string,\n  migrationModulePath: string = process.env.MIGRATION_PATH\n    ? process.env.MIGRATION_PATH + \"/\" + migrationName\n    : \"database/migrations/\" + migrationName,\n): Promise<new () => Migration> {\n  const migrationPath = process.cwd() + \"/\" + migrationModulePath;\n  const migrationModule = await loadMigrationModule(migrationPath);\n\n  if (!migrationModule) {\n    throw new Error(\n      \"migrations module not found for migration: \" + migrationName,\n    );\n  }\n\n  return migrationModule;\n}\n\nfunction findMigrationNames(): string[] {\n  const currentUserDirectory = process.cwd();\n  const migrationPath = path.resolve(\n    process.env.MIGRATION_PATH || \"database/migrations\",\n  );\n\n  const fullPathToMigrationPath = path.resolve(\n    currentUserDirectory,\n    migrationPath,\n  );\n\n  try {\n    const migrationFiles = fs.readdirSync(fullPathToMigrationPath);\n    if (migrationFiles.length > 0) {\n      return migrationFiles;\n    }\n\n    throw new Error(\n      \"No database migration files found on path: \" + fullPathToMigrationPath,\n    );\n  } catch (error) {\n    throw new Error(\n      \"No database migration files found on path: \" + fullPathToMigrationPath,\n    );\n  }\n}\n\nexport async function promisifySqliteQuery<T>(\n  query: string,\n  params: any,\n  sqLiteConnection: SqliteConnectionInstance,\n): Promise<T> {\n  return new Promise<T>((resolve, reject) => {\n    sqLiteConnection.get<T>(query, params, (err, result) => {\n      if (err) {\n        reject(err);\n      }\n      resolve(result);\n    });\n  });\n}\n","#!/usr/bin/env node\n\nimport dotenv from \"dotenv\";\nimport { MigrationTableType } from \"../resources/migration_table_type\";\nimport { Migration } from \"../../sql/migrations/migration\";\nimport { MigrationController } from \"../../sql/migrations/migration_controller\";\nimport {\n  BEGIN_TRANSACTION,\n  COMMIT_TRANSACTION,\n  ROLLBACK_TRANSACTION,\n} from \"../../sql/resources/query/TRANSACTION\";\nimport logger, { log } from \"../../utils/logger\";\nimport { SqlDataSource } from \"../../sql/sql_data_source\";\nimport { getMigrations, getMigrationTable } from \"../migration_utils\";\nimport { MysqlConnectionInstance } from \"../../sql/sql_data_source_types\";\n\ndotenv.config();\n\nexport async function runMigrationsSql(runUntil?: string): Promise<void> {\n  const sql = await SqlDataSource.connect();\n  const sqlConnection = sql.getCurrentConnection() as MysqlConnectionInstance;\n  try {\n    log(BEGIN_TRANSACTION, true);\n    await sqlConnection.beginTransaction();\n    const migrationTable: MigrationTableType[] = await getMigrationTable(\n      sqlConnection as MysqlConnectionInstance,\n    );\n    const migrations: Migration[] = await getMigrations();\n    const pendingMigrations = migrations.filter(\n      (migration) =>\n        !migrationTable\n          .map((table) => table.name)\n          .includes(migration.migrationName),\n    );\n\n    if (pendingMigrations.length === 0) {\n      logger.info(\"No pending migrations.\");\n      await sql.closeConnection();\n      process.exit(0);\n    }\n\n    if (runUntil) {\n      const runUntilIndex = pendingMigrations.findIndex(\n        (migration) => migration.migrationName === runUntil,\n      );\n\n      if (runUntilIndex === -1) {\n        throw new Error(`Migration ${runUntil} not found.`);\n      }\n\n      const filteredMigrations = pendingMigrations.slice(0, runUntilIndex + 1);\n      const migrationController = new MigrationController(\n        sql,\n        sqlConnection as MysqlConnectionInstance,\n        \"mysql\",\n      );\n      await migrationController.upMigrations(filteredMigrations);\n      log(COMMIT_TRANSACTION, true);\n      await sqlConnection.commit();\n      return;\n    }\n\n    const migrationController = new MigrationController(\n      sql,\n      sqlConnection as MysqlConnectionInstance,\n      \"mysql\",\n    );\n\n    await migrationController.upMigrations(pendingMigrations);\n\n    log(COMMIT_TRANSACTION, true);\n    await sqlConnection.commit();\n  } catch (error: any) {\n    log(ROLLBACK_TRANSACTION, true);\n    await sqlConnection.rollback();\n    throw error;\n  } finally {\n    await sql.closeConnection();\n  }\n}\n","#!/usr/bin/env node\n\nimport dotenv from \"dotenv\";\nimport { MigrationTableType } from \"../resources/migration_table_type\";\nimport { Migration } from \"../../sql/migrations/migration\";\nimport { MigrationController } from \"../../sql/migrations/migration_controller\";\nimport logger from \"../../utils/logger\";\nimport { SqlDataSource } from \"../../sql/sql_data_source\";\nimport { getMigrations, getMigrationTable } from \"../migration_utils\";\nimport { SqliteConnectionInstance } from \"../../sql/sql_data_source_types\";\n\ndotenv.config();\n\nexport async function runMigrationsSQLite(runUntil?: string): Promise<void> {\n  const sql = await SqlDataSource.connect();\n  const sqlConnection = sql.getCurrentConnection() as SqliteConnectionInstance;\n\n  try {\n    const migrationTable: MigrationTableType[] =\n      (await getMigrationTable(sqlConnection)) || [];\n    const migrations: Migration[] = await getMigrations();\n    const pendingMigrations = migrations.filter(\n      (migration) =>\n        !migrationTable\n          .map((table) => table.name)\n          .includes(migration.migrationName),\n    );\n\n    if (pendingMigrations.length === 0) {\n      logger.info(\"No pending migrations.\");\n      await sql.closeConnection();\n      process.exit(0);\n    }\n\n    if (runUntil) {\n      const runUntilIndex = pendingMigrations.findIndex(\n        (migration) => migration.migrationName === runUntil,\n      );\n\n      if (runUntilIndex === -1) {\n        throw new Error(`Migration ${runUntil} not found.`);\n      }\n\n      const filteredMigrations = pendingMigrations.slice(0, runUntilIndex + 1);\n      const migrationController = new MigrationController(\n        sql,\n        sqlConnection,\n        \"sqlite\",\n      );\n\n      await migrationController.upMigrations(filteredMigrations);\n    }\n\n    const migrationController = new MigrationController(\n      sql,\n      sqlConnection,\n      \"sqlite\",\n    );\n\n    await migrationController.upMigrations(pendingMigrations);\n  } finally {\n    await sql.closeConnection();\n  }\n}\n","import dotenv from \"dotenv\";\nimport { migrationRollBackSql } from \"./mysql/rollback_migration\";\nimport { migrationRollBackPg } from \"./postgres/rollback_migration\";\nimport logger from \"../utils/logger\";\nimport { migrationRollBackSqlite } from \"./sqlite/rollback_migration\";\n\ndotenv.config();\n\nexport default async function rollbackMigrationConnector(\n  rollBackUntil?: string,\n) {\n  const databaseType = process.env.DB_TYPE;\n  logger.info(\"Rolling back migrations for database type: \" + databaseType);\n\n  switch (databaseType) {\n    case \"mariadb\":\n    case \"mysql\":\n      await migrationRollBackSql(rollBackUntil);\n      break;\n    case \"postgres\":\n      await migrationRollBackPg(rollBackUntil);\n      break;\n    case \"sqlite\":\n      await migrationRollBackSqlite(rollBackUntil);\n      break;\n    default:\n      throw new Error(\n        \"Invalid database type, must be mysql or mysql, postgres, mariadb, sqlite, got: \" +\n          databaseType,\n      );\n  }\n}\n","#!/usr/bin/env node\n\nimport dotenv from \"dotenv\";\nimport { MigrationTableType } from \"../resources/migration_table_type\";\nimport { Migration } from \"../../sql/migrations/migration\";\nimport { MigrationController } from \"../../sql/migrations/migration_controller\";\nimport {\n  BEGIN_TRANSACTION,\n  COMMIT_TRANSACTION,\n  ROLLBACK_TRANSACTION,\n} from \"../../sql/resources/query/TRANSACTION\";\nimport logger, { log } from \"../../utils/logger\";\nimport { SqlDataSource } from \"../../sql/sql_data_source\";\nimport { getMigrations, getMigrationTable } from \"../migration_utils\";\nimport { MysqlConnectionInstance } from \"../../sql/sql_data_source_types\";\n\ndotenv.config();\n\nexport async function migrationRollBackSql(\n  rollBackUntil?: string,\n): Promise<void> {\n  const sql = await SqlDataSource.connect();\n  const sqlConnection = sql.getCurrentConnection() as MysqlConnectionInstance;\n\n  try {\n    log(BEGIN_TRANSACTION, true);\n    await sqlConnection.beginTransaction();\n    const migrationTable: MigrationTableType[] =\n      await getMigrationTable(sqlConnection);\n    const migrations: Migration[] = await getMigrations();\n    const tableMigrations = migrationTable.map((migration) => migration.name);\n    const pendingMigrations = migrations.filter((migration) =>\n      tableMigrations.includes(migration.migrationName),\n    );\n\n    if (pendingMigrations.length === 0) {\n      logger.info(\"No pending migrations.\");\n      await sql.closeConnection();\n      process.exit(0);\n    }\n\n    if (rollBackUntil) {\n      const rollBackUntilIndex = pendingMigrations.findIndex(\n        (migration) => migration.migrationName === rollBackUntil,\n      );\n\n      if (rollBackUntilIndex === -1) {\n        throw new Error(`Migration ${rollBackUntil} not found.`);\n      }\n\n      const filteredMigrations = pendingMigrations.slice(rollBackUntilIndex);\n      const migrationController: MigrationController = new MigrationController(\n        sql,\n        sqlConnection,\n        \"mysql\",\n      );\n\n      await migrationController.downMigrations(filteredMigrations);\n      log(COMMIT_TRANSACTION, true);\n      await sqlConnection.commit();\n      return;\n    }\n\n    const migrationController: MigrationController = new MigrationController(\n      sql,\n      sqlConnection,\n      \"mysql\",\n    );\n\n    await migrationController.downMigrations(pendingMigrations);\n\n    log(COMMIT_TRANSACTION, true);\n    await sqlConnection.commit();\n  } catch (error: any) {\n    log(ROLLBACK_TRANSACTION, true);\n    await sqlConnection.rollback();\n    throw error;\n  } finally {\n    await sql.closeConnection();\n  }\n}\n","#!/usr/bin/env node\n\nimport dotenv from \"dotenv\";\nimport { MigrationTableType } from \"../resources/migration_table_type\";\nimport { Migration } from \"../../sql/migrations/migration\";\nimport { MigrationController } from \"../../sql/migrations/migration_controller\";\nimport {\n  BEGIN_TRANSACTION,\n  COMMIT_TRANSACTION,\n  ROLLBACK_TRANSACTION,\n} from \"../../sql/resources/query/TRANSACTION\";\nimport logger, { log } from \"../../utils/logger\";\nimport { SqlDataSource } from \"../../sql/sql_data_source\";\nimport { getMigrationTable, getMigrations } from \"../migration_utils\";\nimport { PgClientInstance } from \"../../sql/sql_data_source_types\";\n\ndotenv.config();\n\nexport async function migrationRollBackPg(\n  rollBackUntil?: string,\n): Promise<void> {\n  const sql = await SqlDataSource.connect();\n  const sqlConnection = sql.getCurrentConnection() as PgClientInstance;\n  try {\n    const migrationTable: MigrationTableType[] =\n      await getMigrationTable(sqlConnection);\n    const migrations: Migration[] = await getMigrations();\n\n    const tableMigrations = migrationTable.map((migration) => migration.name);\n    const pendingMigrations = migrations.filter((migration) =>\n      tableMigrations.includes(migration.migrationName),\n    );\n\n    if (pendingMigrations.length === 0) {\n      logger.info(\"No pending migrations.\");\n      await sql.closeConnection();\n      process.exit(0);\n    }\n\n    if (rollBackUntil) {\n      const rollBackUntilIndex = pendingMigrations.findIndex(\n        (migration) => migration.migrationName === rollBackUntil,\n      );\n\n      if (rollBackUntilIndex === -1) {\n        throw new Error(`Migration ${rollBackUntil} not found.`);\n      }\n\n      const filteredMigrations = pendingMigrations.slice(rollBackUntilIndex);\n      const migrationController = new MigrationController(\n        sql,\n        sqlConnection,\n        \"postgres\",\n      );\n\n      log(BEGIN_TRANSACTION, true);\n      await sqlConnection.query(BEGIN_TRANSACTION);\n      await migrationController.downMigrations(filteredMigrations);\n      await sqlConnection.query(COMMIT_TRANSACTION);\n      return;\n    }\n\n    const migrationController = new MigrationController(\n      sql,\n      sqlConnection,\n      \"postgres\",\n    );\n    log(BEGIN_TRANSACTION, true);\n    await sqlConnection.query(BEGIN_TRANSACTION);\n    await migrationController.downMigrations(pendingMigrations);\n\n    log(COMMIT_TRANSACTION, true);\n    await sqlConnection.query(COMMIT_TRANSACTION);\n  } catch (error: any) {\n    log(ROLLBACK_TRANSACTION, true);\n    await sqlConnection.query(ROLLBACK_TRANSACTION);\n    throw error;\n  } finally {\n    await sql.closeConnection();\n  }\n}\n","#!/usr/bin/env node\n\nimport dotenv from \"dotenv\";\nimport { MigrationTableType } from \"../resources/migration_table_type\";\nimport { Migration } from \"../../sql/migrations/migration\";\nimport { MigrationController } from \"../../sql/migrations/migration_controller\";\nimport logger from \"../../utils/logger\";\nimport { SqlDataSource } from \"../../sql/sql_data_source\";\nimport { getMigrations, getMigrationTable } from \"../migration_utils\";\nimport { SqliteConnectionInstance } from \"../../sql/sql_data_source_types\";\n\ndotenv.config();\n\nexport async function migrationRollBackSqlite(\n  rollBackUntil?: string,\n): Promise<void> {\n  const sql = await SqlDataSource.connect();\n  const sqlConnection = sql.getCurrentConnection() as SqliteConnectionInstance;\n\n  try {\n    const migrationTable: MigrationTableType[] =\n      (await getMigrationTable(sqlConnection)) || [];\n    const migrations: Migration[] = await getMigrations();\n\n    const tableMigrations = migrationTable.map((migration) => migration.name);\n    const pendingMigrations = migrations.filter((migration) =>\n      tableMigrations.includes(migration.migrationName),\n    );\n\n    if (pendingMigrations.length === 0) {\n      logger.info(\"No pending migrations.\");\n      await sql.closeConnection();\n      process.exit(0);\n    }\n\n    if (rollBackUntil) {\n      const rollBackUntilIndex = pendingMigrations.findIndex(\n        (migration) => migration.migrationName === rollBackUntil,\n      );\n\n      if (rollBackUntilIndex === -1) {\n        throw new Error(`Migration ${rollBackUntil} not found.`);\n      }\n\n      const filteredMigrations = pendingMigrations.slice(rollBackUntilIndex);\n      const migrationController = new MigrationController(\n        sql,\n        sqlConnection,\n        \"sqlite\",\n      );\n\n      await migrationController.downMigrations(filteredMigrations);\n      return;\n    }\n\n    const migrationController = new MigrationController(\n      sql,\n      sqlConnection,\n      \"sqlite\",\n    );\n    await migrationController.downMigrations(pendingMigrations);\n  } finally {\n    await sql.closeConnection();\n  }\n}\n"],"mappings":"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,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,GAAG,IAAI,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,KAAK,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,KAAK,IAAI,KAAK,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,KAAK,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,GAAG,IAAI,IAAI,KAAK,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,GAAG,KAAK,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI,KAAK,GAAG,IAAI,KAAK,KAAK,KAAK,IAAI,KAAK,MAAM,IAAI,IAAI,MAAM,IAAI,GAAG,IAAI,MAAM,GAAG,KAAK,MAAM,IAAI,MAAM,KAAK,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,GAAG,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,MAAM,GAAG,MAAM,IAAI,GAAG,MAAM,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,KAAK,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,KAAK,MAAM,KAAK,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,MAAM,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,KAAK,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,MAAM,IAAI,GAAG,GAAG,KAAK,IAAI,KAAK,IAAI,IAAI,GAAG,IAAI,GAAG,KAAK,IAAI,IAAI,IAAI,KAAK,IAAI,KAAK,IAAI,GAAG,GAAG,KAAK,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,KAAK,IAAI,IAAI,GAAG,GAAG,MAAM,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,MAAM,OAAO,IAAI,MAAM,GAAG,KAAK,GAAG,MAAM,IAAI,MAAM,IAAI,KAAK,MAAM,KAAK,MAAM,MAAM,GAAG,IAAI;AAGnpE,UAAI,0BAA0B;AAG9B,UAAI,+BAA+B;AASnC,UAAI,gBAAgB;AAAA,QAClB,GAAG;AAAA,QACH,GAAG;AAAA,QACH,GAAG;AAAA,QACH,QAAQ;AAAA,QACR,YAAY;AAAA,MACd;AAIA,UAAI,uBAAuB;AAE3B,UAAI,aAAa;AAAA,QACf,GAAG;AAAA,QACH,WAAW,uBAAuB;AAAA,QAClC,GAAG,uBAAuB;AAAA,MAC5B;AAEA,UAAI,4BAA4B;AAIhC,UAAI,0BAA0B,IAAI,OAAO,MAAM,+BAA+B,GAAG;AACjF,UAAI,qBAAqB,IAAI,OAAO,MAAM,+BAA+B,0BAA0B,GAAG;AAKtG,eAAS,cAAc,MAAM,KAAK;AAChC,YAAI,MAAM;AACV,iBAASC,KAAI,GAAGA,KAAI,IAAI,QAAQA,MAAK,GAAG;AACtC,iBAAO,IAAIA,EAAC;AACZ,cAAI,MAAM,MAAM;AAAE,mBAAO;AAAA,UAAM;AAC/B,iBAAO,IAAIA,KAAI,CAAC;AAChB,cAAI,OAAO,MAAM;AAAE,mBAAO;AAAA,UAAK;AAAA,QACjC;AACA,eAAO;AAAA,MACT;AAIA,eAAS,kBAAkB,MAAM,QAAQ;AACvC,YAAI,OAAO,IAAI;AAAE,iBAAO,SAAS;AAAA,QAAG;AACpC,YAAI,OAAO,IAAI;AAAE,iBAAO;AAAA,QAAK;AAC7B,YAAI,OAAO,IAAI;AAAE,iBAAO,SAAS;AAAA,QAAG;AACpC,YAAI,OAAO,KAAK;AAAE,iBAAO;AAAA,QAAK;AAC9B,YAAI,QAAQ,OAAQ;AAAE,iBAAO,QAAQ,OAAQ,wBAAwB,KAAK,OAAO,aAAa,IAAI,CAAC;AAAA,QAAE;AACrG,YAAI,WAAW,OAAO;AAAE,iBAAO;AAAA,QAAM;AACrC,eAAO,cAAc,MAAM,0BAA0B;AAAA,MACvD;AAIA,eAAS,iBAAiB,MAAM,QAAQ;AACtC,YAAI,OAAO,IAAI;AAAE,iBAAO,SAAS;AAAA,QAAG;AACpC,YAAI,OAAO,IAAI;AAAE,iBAAO;AAAA,QAAK;AAC7B,YAAI,OAAO,IAAI;AAAE,iBAAO;AAAA,QAAM;AAC9B,YAAI,OAAO,IAAI;AAAE,iBAAO;AAAA,QAAK;AAC7B,YAAI,OAAO,IAAI;AAAE,iBAAO,SAAS;AAAA,QAAG;AACpC,YAAI,OAAO,KAAK;AAAE,iBAAO;AAAA,QAAK;AAC9B,YAAI,QAAQ,OAAQ;AAAE,iBAAO,QAAQ,OAAQ,mBAAmB,KAAK,OAAO,aAAa,IAAI,CAAC;AAAA,QAAE;AAChG,YAAI,WAAW,OAAO;AAAE,iBAAO;AAAA,QAAM;AACrC,eAAO,cAAc,MAAM,0BAA0B,KAAK,cAAc,MAAM,qBAAqB;AAAA,MACrG;AAyBA,UAAI,YAAY,SAASC,WAAU,OAAO,MAAM;AAC9C,YAAK,SAAS,OAAS,QAAO,CAAC;AAE/B,aAAK,QAAQ;AACb,aAAK,UAAU,KAAK;AACpB,aAAK,aAAa,CAAC,CAAC,KAAK;AACzB,aAAK,aAAa,CAAC,CAAC,KAAK;AACzB,aAAK,SAAS,CAAC,CAAC,KAAK;AACrB,aAAK,WAAW,CAAC,CAAC,KAAK;AACvB,aAAK,SAAS,CAAC,CAAC,KAAK;AACrB,aAAK,UAAU,CAAC,CAAC,KAAK;AACtB,aAAK,QAAQ,KAAK,SAAS;AAC3B,aAAK,gBAAgB;AAAA,MACvB;AAEA,eAAS,MAAM,MAAM,MAAM;AACzB,eAAO,IAAI,UAAU,MAAM,EAAC,YAAY,MAAM,OAAO,KAAI,CAAC;AAAA,MAC5D;AACA,UAAI,aAAa,EAAC,YAAY,KAAI,GAAG,aAAa,EAAC,YAAY,KAAI;AAInE,UAAI,WAAW,CAAC;AAGhB,eAAS,GAAG,MAAM,SAAS;AACzB,YAAK,YAAY,OAAS,WAAU,CAAC;AAErC,gBAAQ,UAAU;AAClB,eAAO,SAAS,IAAI,IAAI,IAAI,UAAU,MAAM,OAAO;AAAA,MACrD;AAEA,UAAI,UAAU;AAAA,QACZ,KAAK,IAAI,UAAU,OAAO,UAAU;AAAA,QACpC,QAAQ,IAAI,UAAU,UAAU,UAAU;AAAA,QAC1C,QAAQ,IAAI,UAAU,UAAU,UAAU;AAAA,QAC1C,MAAM,IAAI,UAAU,QAAQ,UAAU;AAAA,QACtC,WAAW,IAAI,UAAU,aAAa,UAAU;AAAA,QAChD,KAAK,IAAI,UAAU,KAAK;AAAA;AAAA,QAGxB,UAAU,IAAI,UAAU,KAAK,EAAC,YAAY,MAAM,YAAY,KAAI,CAAC;AAAA,QACjE,UAAU,IAAI,UAAU,GAAG;AAAA,QAC3B,QAAQ,IAAI,UAAU,KAAK,EAAC,YAAY,MAAM,YAAY,KAAI,CAAC;AAAA,QAC/D,QAAQ,IAAI,UAAU,GAAG;AAAA,QACzB,QAAQ,IAAI,UAAU,KAAK,EAAC,YAAY,MAAM,YAAY,KAAI,CAAC;AAAA,QAC/D,QAAQ,IAAI,UAAU,GAAG;AAAA,QACzB,OAAO,IAAI,UAAU,KAAK,UAAU;AAAA,QACpC,MAAM,IAAI,UAAU,KAAK,UAAU;AAAA,QACnC,OAAO,IAAI,UAAU,KAAK,UAAU;AAAA,QACpC,KAAK,IAAI,UAAU,GAAG;AAAA,QACtB,UAAU,IAAI,UAAU,KAAK,UAAU;AAAA,QACvC,aAAa,IAAI,UAAU,IAAI;AAAA,QAC/B,OAAO,IAAI,UAAU,MAAM,UAAU;AAAA,QACrC,UAAU,IAAI,UAAU,UAAU;AAAA,QAClC,iBAAiB,IAAI,UAAU,iBAAiB;AAAA,QAChD,UAAU,IAAI,UAAU,OAAO,UAAU;AAAA,QACzC,WAAW,IAAI,UAAU,KAAK,UAAU;AAAA,QACxC,cAAc,IAAI,UAAU,MAAM,EAAC,YAAY,MAAM,YAAY,KAAI,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAgBtE,IAAI,IAAI,UAAU,KAAK,EAAC,YAAY,MAAM,UAAU,KAAI,CAAC;AAAA,QACzD,QAAQ,IAAI,UAAU,MAAM,EAAC,YAAY,MAAM,UAAU,KAAI,CAAC;AAAA,QAC9D,QAAQ,IAAI,UAAU,SAAS,EAAC,QAAQ,MAAM,SAAS,MAAM,YAAY,KAAI,CAAC;AAAA,QAC9E,QAAQ,IAAI,UAAU,OAAO,EAAC,YAAY,MAAM,QAAQ,MAAM,YAAY,KAAI,CAAC;AAAA,QAC/E,WAAW,MAAM,MAAM,CAAC;AAAA,QACxB,YAAY,MAAM,MAAM,CAAC;AAAA,QACzB,WAAW,MAAM,KAAK,CAAC;AAAA,QACvB,YAAY,MAAM,KAAK,CAAC;AAAA,QACxB,YAAY,MAAM,KAAK,CAAC;AAAA,QACxB,UAAU,MAAM,iBAAiB,CAAC;AAAA,QAClC,YAAY,MAAM,aAAa,CAAC;AAAA,QAChC,UAAU,MAAM,aAAa,CAAC;AAAA,QAC9B,SAAS,IAAI,UAAU,OAAO,EAAC,YAAY,MAAM,OAAO,GAAG,QAAQ,MAAM,YAAY,KAAI,CAAC;AAAA,QAC1F,QAAQ,MAAM,KAAK,EAAE;AAAA,QACrB,MAAM,MAAM,KAAK,EAAE;AAAA,QACnB,OAAO,MAAM,KAAK,EAAE;AAAA,QACpB,UAAU,IAAI,UAAU,MAAM,EAAC,YAAY,KAAI,CAAC;AAAA,QAChD,UAAU,MAAM,MAAM,CAAC;AAAA;AAAA,QAGvB,QAAQ,GAAG,OAAO;AAAA,QAClB,OAAO,GAAG,QAAQ,UAAU;AAAA,QAC5B,QAAQ,GAAG,OAAO;AAAA,QAClB,WAAW,GAAG,UAAU;AAAA,QACxB,WAAW,GAAG,UAAU;AAAA,QACxB,UAAU,GAAG,WAAW,UAAU;AAAA,QAClC,KAAK,GAAG,MAAM,EAAC,QAAQ,MAAM,YAAY,KAAI,CAAC;AAAA,QAC9C,OAAO,GAAG,QAAQ,UAAU;AAAA,QAC5B,UAAU,GAAG,SAAS;AAAA,QACtB,MAAM,GAAG,OAAO,EAAC,QAAQ,KAAI,CAAC;AAAA,QAC9B,WAAW,GAAG,YAAY,UAAU;AAAA,QACpC,KAAK,GAAG,IAAI;AAAA,QACZ,SAAS,GAAG,UAAU,UAAU;AAAA,QAChC,SAAS,GAAG,QAAQ;AAAA,QACpB,QAAQ,GAAG,SAAS,UAAU;AAAA,QAC9B,MAAM,GAAG,KAAK;AAAA,QACd,MAAM,GAAG,KAAK;AAAA,QACd,QAAQ,GAAG,OAAO;AAAA,QAClB,QAAQ,GAAG,SAAS,EAAC,QAAQ,KAAI,CAAC;AAAA,QAClC,OAAO,GAAG,MAAM;AAAA,QAChB,MAAM,GAAG,OAAO,EAAC,YAAY,MAAM,YAAY,KAAI,CAAC;AAAA,QACpD,OAAO,GAAG,QAAQ,UAAU;AAAA,QAC5B,QAAQ,GAAG,SAAS,UAAU;AAAA,QAC9B,QAAQ,GAAG,SAAS,UAAU;AAAA,QAC9B,UAAU,GAAG,WAAW,UAAU;AAAA,QAClC,SAAS,GAAG,QAAQ;AAAA,QACpB,SAAS,GAAG,UAAU,UAAU;AAAA,QAChC,OAAO,GAAG,QAAQ,UAAU;AAAA,QAC5B,OAAO,GAAG,QAAQ,UAAU;AAAA,QAC5B,QAAQ,GAAG,SAAS,UAAU;AAAA,QAC9B,KAAK,GAAG,MAAM,EAAC,YAAY,MAAM,OAAO,EAAC,CAAC;AAAA,QAC1C,aAAa,GAAG,cAAc,EAAC,YAAY,MAAM,OAAO,EAAC,CAAC;AAAA,QAC1D,SAAS,GAAG,UAAU,EAAC,YAAY,MAAM,QAAQ,MAAM,YAAY,KAAI,CAAC;AAAA,QACxE,OAAO,GAAG,QAAQ,EAAC,YAAY,MAAM,QAAQ,MAAM,YAAY,KAAI,CAAC;AAAA,QACpE,SAAS,GAAG,UAAU,EAAC,YAAY,MAAM,QAAQ,MAAM,YAAY,KAAI,CAAC;AAAA,MAC1E;AAKA,UAAI,YAAY;AAChB,UAAI,aAAa,IAAI,OAAO,UAAU,QAAQ,GAAG;AAEjD,eAAS,UAAU,MAAM;AACvB,eAAO,SAAS,MAAM,SAAS,MAAM,SAAS,QAAU,SAAS;AAAA,MACnE;AAEA,eAAS,cAAc,MAAM,MAAM,KAAK;AACtC,YAAK,QAAQ,OAAS,OAAM,KAAK;AAEjC,iBAASD,KAAI,MAAMA,KAAI,KAAKA,MAAK;AAC/B,cAAI,OAAO,KAAK,WAAWA,EAAC;AAC5B,cAAI,UAAU,IAAI,GAChB;AAAE,mBAAOA,KAAI,MAAM,KAAK,SAAS,MAAM,KAAK,WAAWA,KAAI,CAAC,MAAM,KAAKA,KAAI,IAAIA,KAAI;AAAA,UAAE;AAAA,QACzF;AACA,eAAO;AAAA,MACT;AAEA,UAAI,qBAAqB;AAEzB,UAAI,iBAAiB;AAErB,UAAI,MAAM,OAAO;AACjB,UAAI,iBAAiB,IAAI;AACzB,UAAI,WAAW,IAAI;AAEnB,UAAI,SAAS,OAAO,UAAW,SAAU,KAAK,UAAU;AAAE,eACxD,eAAe,KAAK,KAAK,QAAQ;AAAA,MAChC;AAEH,UAAI,UAAU,MAAM,WAAY,SAAU,KAAK;AAAE,eAC/C,SAAS,KAAK,GAAG,MAAM;AAAA,MACtB;AAEH,UAAI,cAAc,uBAAO,OAAO,IAAI;AAEpC,eAAS,YAAY,OAAO;AAC1B,eAAO,YAAY,KAAK,MAAM,YAAY,KAAK,IAAI,IAAI,OAAO,SAAS,MAAM,QAAQ,MAAM,GAAG,IAAI,IAAI;AAAA,MACxG;AAEA,eAAS,kBAAkB,MAAM;AAE/B,YAAI,QAAQ,OAAQ;AAAE,iBAAO,OAAO,aAAa,IAAI;AAAA,QAAE;AACvD,gBAAQ;AACR,eAAO,OAAO,cAAc,QAAQ,MAAM,QAAS,OAAO,QAAQ,KAAM;AAAA,MAC1E;AAEA,UAAI,gBAAgB;AAKpB,UAAI,WAAW,SAASE,UAAS,MAAM,KAAK;AAC1C,aAAK,OAAO;AACZ,aAAK,SAAS;AAAA,MAChB;AAEA,eAAS,UAAU,SAAS,SAAS,OAAQ,GAAG;AAC9C,eAAO,IAAI,SAAS,KAAK,MAAM,KAAK,SAAS,CAAC;AAAA,MAChD;AAEA,UAAI,iBAAiB,SAASC,gBAAe,GAAG,OAAO,KAAK;AAC1D,aAAK,QAAQ;AACb,aAAK,MAAM;AACX,YAAI,EAAE,eAAe,MAAM;AAAE,eAAK,SAAS,EAAE;AAAA,QAAY;AAAA,MAC3D;AAQA,eAAS,YAAY,OAAO,QAAQ;AAClC,iBAAS,OAAO,GAAG,MAAM,OAAK;AAC5B,cAAI,YAAY,cAAc,OAAO,KAAK,MAAM;AAChD,cAAI,YAAY,GAAG;AAAE,mBAAO,IAAI,SAAS,MAAM,SAAS,GAAG;AAAA,UAAE;AAC7D,YAAE;AACF,gBAAM;AAAA,QACR;AAAA,MACF;AAKA,UAAI,iBAAiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAOnB,aAAa;AAAA;AAAA;AAAA;AAAA,QAIb,YAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAMZ,qBAAqB;AAAA;AAAA;AAAA,QAGrB,iBAAiB;AAAA;AAAA;AAAA;AAAA;AAAA,QAKjB,eAAe;AAAA;AAAA;AAAA,QAGf,4BAA4B;AAAA;AAAA;AAAA;AAAA,QAI5B,6BAA6B;AAAA;AAAA;AAAA;AAAA,QAI7B,2BAA2B;AAAA;AAAA;AAAA,QAG3B,yBAAyB;AAAA;AAAA;AAAA;AAAA,QAIzB,eAAe;AAAA;AAAA;AAAA;AAAA,QAIf,oBAAoB;AAAA;AAAA;AAAA;AAAA;AAAA,QAKpB,WAAW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAMX,SAAS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAaT,WAAW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QASX,QAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAMR,SAAS;AAAA;AAAA;AAAA,QAGT,YAAY;AAAA;AAAA;AAAA,QAGZ,kBAAkB;AAAA;AAAA;AAAA,QAGlB,gBAAgB;AAAA,MAClB;AAIA,UAAI,yBAAyB;AAE7B,eAAS,WAAW,MAAM;AACxB,YAAI,UAAU,CAAC;AAEf,iBAAS,OAAO,gBACd;AAAE,kBAAQ,GAAG,IAAI,QAAQ,OAAO,MAAM,GAAG,IAAI,KAAK,GAAG,IAAI,eAAe,GAAG;AAAA,QAAG;AAEhF,YAAI,QAAQ,gBAAgB,UAAU;AACpC,kBAAQ,cAAc;AAAA,QACxB,WAAW,QAAQ,eAAe,MAAM;AACtC,cAAI,CAAC,0BAA0B,OAAO,YAAY,YAAY,QAAQ,MAAM;AAC1E,qCAAyB;AACzB,oBAAQ,KAAK,oHAAoH;AAAA,UACnI;AACA,kBAAQ,cAAc;AAAA,QACxB,WAAW,QAAQ,eAAe,MAAM;AACtC,kBAAQ,eAAe;AAAA,QACzB;AAEA,YAAI,QAAQ,iBAAiB,MAC3B;AAAE,kBAAQ,gBAAgB,QAAQ,cAAc;AAAA,QAAG;AAErD,YAAI,CAAC,QAAQ,KAAK,iBAAiB,MACjC;AAAE,kBAAQ,gBAAgB,QAAQ,eAAe;AAAA,QAAI;AAEvD,YAAI,QAAQ,QAAQ,OAAO,GAAG;AAC5B,cAAI,SAAS,QAAQ;AACrB,kBAAQ,UAAU,SAAU,OAAO;AAAE,mBAAO,OAAO,KAAK,KAAK;AAAA,UAAG;AAAA,QAClE;AACA,YAAI,QAAQ,QAAQ,SAAS,GAC3B;AAAE,kBAAQ,YAAY,YAAY,SAAS,QAAQ,SAAS;AAAA,QAAG;AAEjE,eAAO;AAAA,MACT;AAEA,eAAS,YAAY,SAAS,OAAO;AACnC,eAAO,SAAS,OAAO,MAAM,OAAO,KAAK,UAAU,QAAQ;AACzD,cAAI,UAAU;AAAA,YACZ,MAAM,QAAQ,UAAU;AAAA,YACxB,OAAO;AAAA,YACP;AAAA,YACA;AAAA,UACF;AACA,cAAI,QAAQ,WACV;AAAE,oBAAQ,MAAM,IAAI,eAAe,MAAM,UAAU,MAAM;AAAA,UAAG;AAC9D,cAAI,QAAQ,QACV;AAAE,oBAAQ,QAAQ,CAAC,OAAO,GAAG;AAAA,UAAG;AAClC,gBAAM,KAAK,OAAO;AAAA,QACpB;AAAA,MACF;AAGA,UACI,YAAY,GACZ,iBAAiB,GACjB,cAAc,GACd,kBAAkB,GAClB,cAAc,IACd,qBAAqB,IACrB,cAAc,IACd,qBAAqB,KACrB,2BAA2B,KAC3B,YAAY,YAAY,iBAAiB;AAE7C,eAAS,cAAc,OAAO,WAAW;AACvC,eAAO,kBAAkB,QAAQ,cAAc,MAAM,YAAY,kBAAkB;AAAA,MACrF;AAGA,UACI,YAAY,GACZ,WAAW,GACX,eAAe,GACf,gBAAgB,GAChB,oBAAoB,GACpB,eAAe;AAEnB,UAAI,SAAS,SAASC,QAAO,SAAS,OAAO,UAAU;AACrD,aAAK,UAAU,UAAU,WAAW,OAAO;AAC3C,aAAK,aAAa,QAAQ;AAC1B,aAAK,WAAW,YAAY,WAAW,QAAQ,eAAe,IAAI,IAAI,QAAQ,eAAe,WAAW,YAAY,CAAC,CAAC;AACtH,YAAI,WAAW;AACf,YAAI,QAAQ,kBAAkB,MAAM;AAClC,qBAAW,cAAc,QAAQ,eAAe,IAAI,IAAI,QAAQ,gBAAgB,IAAI,IAAI,CAAC;AACzF,cAAI,QAAQ,eAAe,UAAU;AAAE,wBAAY;AAAA,UAAU;AAAA,QAC/D;AACA,aAAK,gBAAgB,YAAY,QAAQ;AACzC,YAAI,kBAAkB,WAAW,WAAW,MAAM,MAAM,cAAc;AACtE,aAAK,sBAAsB,YAAY,cAAc;AACrD,aAAK,0BAA0B,YAAY,iBAAiB,MAAM,cAAc,UAAU;AAC1F,aAAK,QAAQ,OAAO,KAAK;AAKzB,aAAK,cAAc;AAKnB,YAAI,UAAU;AACZ,eAAK,MAAM;AACX,eAAK,YAAY,KAAK,MAAM,YAAY,MAAM,WAAW,CAAC,IAAI;AAC9D,eAAK,UAAU,KAAK,MAAM,MAAM,GAAG,KAAK,SAAS,EAAE,MAAM,SAAS,EAAE;AAAA,QACtE,OAAO;AACL,eAAK,MAAM,KAAK,YAAY;AAC5B,eAAK,UAAU;AAAA,QACjB;AAIA,aAAK,OAAO,QAAQ;AAEpB,aAAK,QAAQ;AAEb,aAAK,QAAQ,KAAK,MAAM,KAAK;AAG7B,aAAK,WAAW,KAAK,SAAS,KAAK,YAAY;AAG/C,aAAK,gBAAgB,KAAK,kBAAkB;AAC5C,aAAK,eAAe,KAAK,aAAa,KAAK;AAK3C,aAAK,UAAU,KAAK,eAAe;AACnC,aAAK,cAAc;AAGnB,aAAK,WAAW,QAAQ,eAAe;AACvC,aAAK,SAAS,KAAK,YAAY,KAAK,gBAAgB,KAAK,GAAG;AAG5D,aAAK,mBAAmB;AACxB,aAAK,2BAA2B;AAGhC,aAAK,WAAW,KAAK,WAAW,KAAK,gBAAgB;AAErD,aAAK,SAAS,CAAC;AAEf,aAAK,mBAAmB,uBAAO,OAAO,IAAI;AAG1C,YAAI,KAAK,QAAQ,KAAK,QAAQ,iBAAiB,KAAK,MAAM,MAAM,GAAG,CAAC,MAAM,MACxE;AAAE,eAAK,gBAAgB,CAAC;AAAA,QAAG;AAG7B,aAAK,aAAa,CAAC;AACnB,aAAK,WAAW,SAAS;AAGzB,aAAK,cAAc;AAKnB,aAAK,mBAAmB,CAAC;AAAA,MAC3B;AAEA,UAAI,qBAAqB,EAAE,YAAY,EAAE,cAAc,KAAK,GAAE,aAAa,EAAE,cAAc,KAAK,GAAE,SAAS,EAAE,cAAc,KAAK,GAAE,UAAU,EAAE,cAAc,KAAK,GAAE,YAAY,EAAE,cAAc,KAAK,GAAE,kBAAkB,EAAE,cAAc,KAAK,GAAE,qBAAqB,EAAE,cAAc,KAAK,GAAE,mBAAmB,EAAE,cAAc,KAAK,GAAE,oBAAoB,EAAE,cAAc,KAAK,EAAE;AAEhX,aAAO,UAAU,QAAQ,SAASC,SAAS;AACzC,YAAI,OAAO,KAAK,QAAQ,WAAW,KAAK,UAAU;AAClD,aAAK,UAAU;AACf,eAAO,KAAK,cAAc,IAAI;AAAA,MAChC;AAEA,yBAAmB,WAAW,MAAM,WAAY;AAAE,gBAAQ,KAAK,gBAAgB,EAAE,QAAQ,kBAAkB;AAAA,MAAE;AAE7G,yBAAmB,YAAY,MAAM,WAAY;AAAE,gBAAQ,KAAK,gBAAgB,EAAE,QAAQ,mBAAmB,KAAK,CAAC,KAAK,gBAAgB,EAAE;AAAA,MAAiB;AAE3J,yBAAmB,QAAQ,MAAM,WAAY;AAAE,gBAAQ,KAAK,gBAAgB,EAAE,QAAQ,eAAe,KAAK,CAAC,KAAK,gBAAgB,EAAE;AAAA,MAAiB;AAEnJ,yBAAmB,SAAS,MAAM,WAAY;AAC5C,iBAASL,KAAI,KAAK,WAAW,SAAS,GAAGA,MAAK,GAAGA,MAAK;AACpD,cAAI,QAAQ,KAAK,WAAWA,EAAC;AAC7B,cAAI,MAAM,oBAAoB,MAAM,QAAQ,0BAA0B;AAAE,mBAAO;AAAA,UAAM;AACrF,cAAI,MAAM,QAAQ,gBAAgB;AAAE,oBAAQ,MAAM,QAAQ,eAAe;AAAA,UAAE;AAAA,QAC7E;AACA,eAAQ,KAAK,YAAY,KAAK,QAAQ,eAAe,MAAO,KAAK,QAAQ;AAAA,MAC3E;AAEA,yBAAmB,WAAW,MAAM,WAAY;AAC9C,YAAIM,OAAM,KAAK,iBAAiB;AAC9B,YAAI,QAAQA,KAAI;AAChB,YAAI,mBAAmBA,KAAI;AAC7B,gBAAQ,QAAQ,eAAe,KAAK,oBAAoB,KAAK,QAAQ;AAAA,MACvE;AAEA,yBAAmB,iBAAiB,MAAM,WAAY;AAAE,gBAAQ,KAAK,iBAAiB,EAAE,QAAQ,sBAAsB;AAAA,MAAE;AAExH,yBAAmB,oBAAoB,MAAM,WAAY;AAAE,eAAO,KAAK,2BAA2B,KAAK,aAAa,CAAC;AAAA,MAAE;AAEvH,yBAAmB,kBAAkB,MAAM,WAAY;AACrD,YAAIA,OAAM,KAAK,iBAAiB;AAC9B,YAAI,QAAQA,KAAI;AAChB,YAAI,mBAAmBA,KAAI;AAC7B,gBAAQ,SAAS,iBAAiB,6BAA6B,KAAK;AAAA,MACtE;AAEA,yBAAmB,mBAAmB,MAAM,WAAY;AACtD,gBAAQ,KAAK,gBAAgB,EAAE,QAAQ,4BAA4B;AAAA,MACrE;AAEA,aAAO,SAAS,SAAS,SAAU;AAC/B,YAAI,UAAU,CAAC,GAAG,MAAM,UAAU;AAClC,eAAQ,MAAQ,SAAS,GAAI,IAAI,UAAW,GAAI;AAElD,YAAI,MAAM;AACV,iBAASN,KAAI,GAAGA,KAAI,QAAQ,QAAQA,MAAK;AAAE,gBAAM,QAAQA,EAAC,EAAE,GAAG;AAAA,QAAG;AAClE,eAAO;AAAA,MACT;AAEA,aAAO,QAAQ,SAASK,OAAO,OAAO,SAAS;AAC7C,eAAO,IAAI,KAAK,SAAS,KAAK,EAAE,MAAM;AAAA,MACxC;AAEA,aAAO,oBAAoB,SAASE,mBAAmB,OAAO,KAAK,SAAS;AAC1E,YAAI,SAAS,IAAI,KAAK,SAAS,OAAO,GAAG;AACzC,eAAO,UAAU;AACjB,eAAO,OAAO,gBAAgB;AAAA,MAChC;AAEA,aAAO,YAAY,SAASC,WAAW,OAAO,SAAS;AACrD,eAAO,IAAI,KAAK,SAAS,KAAK;AAAA,MAChC;AAEA,aAAO,iBAAkB,OAAO,WAAW,kBAAmB;AAE9D,UAAI,OAAO,OAAO;AAIlB,UAAI,UAAU;AACd,WAAK,kBAAkB,SAAS,OAAO;AACrC,YAAI,KAAK,QAAQ,cAAc,GAAG;AAAE,iBAAO;AAAA,QAAM;AACjD,mBAAS;AAEP,yBAAe,YAAY;AAC3B,mBAAS,eAAe,KAAK,KAAK,KAAK,EAAE,CAAC,EAAE;AAC5C,cAAI,QAAQ,QAAQ,KAAK,KAAK,MAAM,MAAM,KAAK,CAAC;AAChD,cAAI,CAAC,OAAO;AAAE,mBAAO;AAAA,UAAM;AAC3B,eAAK,MAAM,CAAC,KAAK,MAAM,CAAC,OAAO,cAAc;AAC3C,2BAAe,YAAY,QAAQ,MAAM,CAAC,EAAE;AAC5C,gBAAI,aAAa,eAAe,KAAK,KAAK,KAAK,GAAG,MAAM,WAAW,QAAQ,WAAW,CAAC,EAAE;AACzF,gBAAI,OAAO,KAAK,MAAM,OAAO,GAAG;AAChC,mBAAO,SAAS,OAAO,SAAS,OAC7B,UAAU,KAAK,WAAW,CAAC,CAAC,KAC5B,EAAE,sBAAsB,KAAK,IAAI,KAAK,SAAS,OAAO,KAAK,MAAM,OAAO,MAAM,CAAC,MAAM;AAAA,UAC1F;AACA,mBAAS,MAAM,CAAC,EAAE;AAGlB,yBAAe,YAAY;AAC3B,mBAAS,eAAe,KAAK,KAAK,KAAK,EAAE,CAAC,EAAE;AAC5C,cAAI,KAAK,MAAM,KAAK,MAAM,KACxB;AAAE;AAAA,UAAS;AAAA,QACf;AAAA,MACF;AAKA,WAAK,MAAM,SAAS,MAAM;AACxB,YAAI,KAAK,SAAS,MAAM;AACtB,eAAK,KAAK;AACV,iBAAO;AAAA,QACT,OAAO;AACL,iBAAO;AAAA,QACT;AAAA,MACF;AAIA,WAAK,eAAe,SAAS,MAAM;AACjC,eAAO,KAAK,SAAS,QAAQ,QAAQ,KAAK,UAAU,QAAQ,CAAC,KAAK;AAAA,MACpE;AAIA,WAAK,gBAAgB,SAAS,MAAM;AAClC,YAAI,CAAC,KAAK,aAAa,IAAI,GAAG;AAAE,iBAAO;AAAA,QAAM;AAC7C,aAAK,KAAK;AACV,eAAO;AAAA,MACT;AAIA,WAAK,mBAAmB,SAAS,MAAM;AACrC,YAAI,CAAC,KAAK,cAAc,IAAI,GAAG;AAAE,eAAK,WAAW;AAAA,QAAG;AAAA,MACtD;AAIA,WAAK,qBAAqB,WAAW;AACnC,eAAO,KAAK,SAAS,QAAQ,OAC3B,KAAK,SAAS,QAAQ,UACtB,UAAU,KAAK,KAAK,MAAM,MAAM,KAAK,YAAY,KAAK,KAAK,CAAC;AAAA,MAChE;AAEA,WAAK,kBAAkB,WAAW;AAChC,YAAI,KAAK,mBAAmB,GAAG;AAC7B,cAAI,KAAK,QAAQ,qBACf;AAAE,iBAAK,QAAQ,oBAAoB,KAAK,YAAY,KAAK,aAAa;AAAA,UAAG;AAC3E,iBAAO;AAAA,QACT;AAAA,MACF;AAKA,WAAK,YAAY,WAAW;AAC1B,YAAI,CAAC,KAAK,IAAI,QAAQ,IAAI,KAAK,CAAC,KAAK,gBAAgB,GAAG;AAAE,eAAK,WAAW;AAAA,QAAG;AAAA,MAC/E;AAEA,WAAK,qBAAqB,SAAS,SAAS,SAAS;AACnD,YAAI,KAAK,SAAS,SAAS;AACzB,cAAI,KAAK,QAAQ,iBACf;AAAE,iBAAK,QAAQ,gBAAgB,KAAK,cAAc,KAAK,eAAe;AAAA,UAAG;AAC3E,cAAI,CAAC,SACH;AAAE,iBAAK,KAAK;AAAA,UAAG;AACjB,iBAAO;AAAA,QACT;AAAA,MACF;AAKA,WAAK,SAAS,SAAS,MAAM;AAC3B,aAAK,IAAI,IAAI,KAAK,KAAK,WAAW;AAAA,MACpC;AAIA,WAAK,aAAa,SAAS,KAAK;AAC9B,aAAK,MAAM,OAAO,OAAO,MAAM,KAAK,OAAO,kBAAkB;AAAA,MAC/D;AAEA,UAAI,sBAAsB,SAASC,uBAAsB;AACvD,aAAK,kBACL,KAAK,gBACL,KAAK,sBACL,KAAK,oBACL,KAAK,cACH;AAAA,MACJ;AAEA,WAAK,qBAAqB,SAAS,wBAAwB,UAAU;AACnE,YAAI,CAAC,wBAAwB;AAAE;AAAA,QAAO;AACtC,YAAI,uBAAuB,gBAAgB,IACzC;AAAE,eAAK,iBAAiB,uBAAuB,eAAe,+CAA+C;AAAA,QAAG;AAClH,YAAI,SAAS,WAAW,uBAAuB,sBAAsB,uBAAuB;AAC5F,YAAI,SAAS,IAAI;AAAE,eAAK,iBAAiB,QAAQ,WAAW,wBAAwB,uBAAuB;AAAA,QAAG;AAAA,MAChH;AAEA,WAAK,wBAAwB,SAAS,wBAAwB,UAAU;AACtE,YAAI,CAAC,wBAAwB;AAAE,iBAAO;AAAA,QAAM;AAC5C,YAAI,kBAAkB,uBAAuB;AAC7C,YAAI,cAAc,uBAAuB;AACzC,YAAI,CAAC,UAAU;AAAE,iBAAO,mBAAmB,KAAK,eAAe;AAAA,QAAE;AACjE,YAAI,mBAAmB,GACrB;AAAE,eAAK,MAAM,iBAAiB,yEAAyE;AAAA,QAAG;AAC5G,YAAI,eAAe,GACjB;AAAE,eAAK,iBAAiB,aAAa,oCAAoC;AAAA,QAAG;AAAA,MAChF;AAEA,WAAK,iCAAiC,WAAW;AAC/C,YAAI,KAAK,aAAa,CAAC,KAAK,YAAY,KAAK,WAAW,KAAK,WAC3D;AAAE,eAAK,MAAM,KAAK,UAAU,4CAA4C;AAAA,QAAG;AAC7E,YAAI,KAAK,UACP;AAAE,eAAK,MAAM,KAAK,UAAU,4CAA4C;AAAA,QAAG;AAAA,MAC/E;AAEA,WAAK,uBAAuB,SAAS,MAAM;AACzC,YAAI,KAAK,SAAS,2BAChB;AAAE,iBAAO,KAAK,qBAAqB,KAAK,UAAU;AAAA,QAAE;AACtD,eAAO,KAAK,SAAS,gBAAgB,KAAK,SAAS;AAAA,MACrD;AAEA,UAAI,OAAO,OAAO;AASlB,WAAK,gBAAgB,SAAS,MAAM;AAClC,YAAIV,WAAU,uBAAO,OAAO,IAAI;AAChC,YAAI,CAAC,KAAK,MAAM;AAAE,eAAK,OAAO,CAAC;AAAA,QAAG;AAClC,eAAO,KAAK,SAAS,QAAQ,KAAK;AAChC,cAAI,OAAO,KAAK,eAAe,MAAM,MAAMA,QAAO;AAClD,eAAK,KAAK,KAAK,IAAI;AAAA,QACrB;AACA,YAAI,KAAK,UACP;AAAE,mBAASC,KAAI,GAAGU,QAAO,OAAO,KAAK,KAAK,gBAAgB,GAAGV,KAAIU,MAAK,QAAQV,MAAK,GACjF;AACE,gBAAI,OAAOU,MAAKV,EAAC;AAEjB,iBAAK,iBAAiB,KAAK,iBAAiB,IAAI,EAAE,OAAQ,aAAa,OAAO,kBAAmB;AAAA,UACnG;AAAA,QAAE;AACN,aAAK,uBAAuB,KAAK,IAAI;AACrC,aAAK,KAAK;AACV,aAAK,aAAa,KAAK,QAAQ;AAC/B,eAAO,KAAK,WAAW,MAAM,SAAS;AAAA,MACxC;AAEA,UAAI,YAAY,EAAC,MAAM,OAAM,GAAG,cAAc,EAAC,MAAM,SAAQ;AAE7D,WAAK,QAAQ,SAAS,SAAS;AAC7B,YAAI,KAAK,QAAQ,cAAc,KAAK,CAAC,KAAK,aAAa,KAAK,GAAG;AAAE,iBAAO;AAAA,QAAM;AAC9E,uBAAe,YAAY,KAAK;AAChC,YAAI,OAAO,eAAe,KAAK,KAAK,KAAK;AACzC,YAAI,OAAO,KAAK,MAAM,KAAK,CAAC,EAAE,QAAQ,SAAS,KAAK,MAAM,WAAW,IAAI;AAKzE,YAAI,WAAW,MAAM,WAAW,IAAI;AAAE,iBAAO;AAAA,QAAK;AAClD,YAAI,SAAS;AAAE,iBAAO;AAAA,QAAM;AAE5B,YAAI,WAAW,OAAO,SAAS,SAAU,SAAS,OAAQ;AAAE,iBAAO;AAAA,QAAK;AACxE,YAAI,kBAAkB,QAAQ,IAAI,GAAG;AACnC,cAAI,MAAM,OAAO;AACjB,iBAAO,iBAAiB,SAAS,KAAK,MAAM,WAAW,GAAG,GAAG,IAAI,GAAG;AAAE,cAAE;AAAA,UAAK;AAC7E,cAAI,WAAW,MAAM,SAAS,SAAU,SAAS,OAAQ;AAAE,mBAAO;AAAA,UAAK;AACvE,cAAI,QAAQ,KAAK,MAAM,MAAM,MAAM,GAAG;AACtC,cAAI,CAAC,0BAA0B,KAAK,KAAK,GAAG;AAAE,mBAAO;AAAA,UAAK;AAAA,QAC5D;AACA,eAAO;AAAA,MACT;AAKA,WAAK,kBAAkB,WAAW;AAChC,YAAI,KAAK,QAAQ,cAAc,KAAK,CAAC,KAAK,aAAa,OAAO,GAC5D;AAAE,iBAAO;AAAA,QAAM;AAEjB,uBAAe,YAAY,KAAK;AAChC,YAAI,OAAO,eAAe,KAAK,KAAK,KAAK;AACzC,YAAI,OAAO,KAAK,MAAM,KAAK,CAAC,EAAE,QAAQ;AACtC,eAAO,CAAC,UAAU,KAAK,KAAK,MAAM,MAAM,KAAK,KAAK,IAAI,CAAC,KACrD,KAAK,MAAM,MAAM,MAAM,OAAO,CAAC,MAAM,eACpC,OAAO,MAAM,KAAK,MAAM,UACxB,EAAE,iBAAiB,QAAQ,KAAK,MAAM,WAAW,OAAO,CAAC,CAAC,KAAK,QAAQ,SAAU,QAAQ;AAAA,MAC9F;AASA,WAAK,iBAAiB,SAAS,SAAS,UAAUD,UAAS;AACzD,YAAI,YAAY,KAAK,MAAM,OAAO,KAAK,UAAU,GAAG;AAEpD,YAAI,KAAK,MAAM,OAAO,GAAG;AACvB,sBAAY,QAAQ;AACpB,iBAAO;AAAA,QACT;AAMA,gBAAQ,WAAW;AAAA,UACnB,KAAK,QAAQ;AAAA,UAAQ,KAAK,QAAQ;AAAW,mBAAO,KAAK,4BAA4B,MAAM,UAAU,OAAO;AAAA,UAC5G,KAAK,QAAQ;AAAW,mBAAO,KAAK,uBAAuB,IAAI;AAAA,UAC/D,KAAK,QAAQ;AAAK,mBAAO,KAAK,iBAAiB,IAAI;AAAA,UACnD,KAAK,QAAQ;AAAM,mBAAO,KAAK,kBAAkB,IAAI;AAAA,UACrD,KAAK,QAAQ;AAIX,gBAAK,YAAY,KAAK,UAAU,YAAY,QAAQ,YAAY,YAAa,KAAK,QAAQ,eAAe,GAAG;AAAE,mBAAK,WAAW;AAAA,YAAG;AACjI,mBAAO,KAAK,uBAAuB,MAAM,OAAO,CAAC,OAAO;AAAA,UAC1D,KAAK,QAAQ;AACX,gBAAI,SAAS;AAAE,mBAAK,WAAW;AAAA,YAAG;AAClC,mBAAO,KAAK,WAAW,MAAM,IAAI;AAAA,UACnC,KAAK,QAAQ;AAAK,mBAAO,KAAK,iBAAiB,IAAI;AAAA,UACnD,KAAK,QAAQ;AAAS,mBAAO,KAAK,qBAAqB,IAAI;AAAA,UAC3D,KAAK,QAAQ;AAAS,mBAAO,KAAK,qBAAqB,IAAI;AAAA,UAC3D,KAAK,QAAQ;AAAQ,mBAAO,KAAK,oBAAoB,IAAI;AAAA,UACzD,KAAK,QAAQ;AAAM,mBAAO,KAAK,kBAAkB,IAAI;AAAA,UACrD,KAAK,QAAQ;AAAA,UAAQ,KAAK,QAAQ;AAChC,mBAAO,QAAQ,KAAK;AACpB,gBAAI,WAAW,SAAS,OAAO;AAAE,mBAAK,WAAW;AAAA,YAAG;AACpD,mBAAO,KAAK,kBAAkB,MAAM,IAAI;AAAA,UAC1C,KAAK,QAAQ;AAAQ,mBAAO,KAAK,oBAAoB,IAAI;AAAA,UACzD,KAAK,QAAQ;AAAO,mBAAO,KAAK,mBAAmB,IAAI;AAAA,UACvD,KAAK,QAAQ;AAAQ,mBAAO,KAAK,WAAW,MAAM,IAAI;AAAA,UACtD,KAAK,QAAQ;AAAM,mBAAO,KAAK,oBAAoB,IAAI;AAAA,UACvD,KAAK,QAAQ;AAAA,UACb,KAAK,QAAQ;AACX,gBAAI,KAAK,QAAQ,cAAc,MAAM,cAAc,QAAQ,SAAS;AAClE,6BAAe,YAAY,KAAK;AAChC,kBAAI,OAAO,eAAe,KAAK,KAAK,KAAK;AACzC,kBAAI,OAAO,KAAK,MAAM,KAAK,CAAC,EAAE,QAAQ,SAAS,KAAK,MAAM,WAAW,IAAI;AACzE,kBAAI,WAAW,MAAM,WAAW,IAC9B;AAAE,uBAAO,KAAK,yBAAyB,MAAM,KAAK,gBAAgB,CAAC;AAAA,cAAE;AAAA,YACzE;AAEA,gBAAI,CAAC,KAAK,QAAQ,6BAA6B;AAC7C,kBAAI,CAAC,UACH;AAAE,qBAAK,MAAM,KAAK,OAAO,wDAAwD;AAAA,cAAG;AACtF,kBAAI,CAAC,KAAK,UACR;AAAE,qBAAK,MAAM,KAAK,OAAO,iEAAiE;AAAA,cAAG;AAAA,YACjG;AACA,mBAAO,cAAc,QAAQ,UAAU,KAAK,YAAY,IAAI,IAAI,KAAK,YAAY,MAAMA,QAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAOhG;AACE,gBAAI,KAAK,gBAAgB,GAAG;AAC1B,kBAAI,SAAS;AAAE,qBAAK,WAAW;AAAA,cAAG;AAClC,mBAAK,KAAK;AACV,qBAAO,KAAK,uBAAuB,MAAM,MAAM,CAAC,OAAO;AAAA,YACzD;AAEA,gBAAI,YAAY,KAAK,OAAO,OAAO,KAAK,gBAAgB;AACxD,gBAAI,cAAc,QAAQ,QAAQ,KAAK,SAAS,gBAAgB,KAAK,IAAI,QAAQ,KAAK,GACpF;AAAE,qBAAO,KAAK,sBAAsB,MAAM,WAAW,MAAM,OAAO;AAAA,YAAE,OACjE;AAAE,qBAAO,KAAK,yBAAyB,MAAM,IAAI;AAAA,YAAE;AAAA,QAC1D;AAAA,MACF;AAEA,WAAK,8BAA8B,SAAS,MAAM,SAAS;AACzD,YAAI,UAAU,YAAY;AAC1B,aAAK,KAAK;AACV,YAAI,KAAK,IAAI,QAAQ,IAAI,KAAK,KAAK,gBAAgB,GAAG;AAAE,eAAK,QAAQ;AAAA,QAAM,WAClE,KAAK,SAAS,QAAQ,MAAM;AAAE,eAAK,WAAW;AAAA,QAAG,OACrD;AACH,eAAK,QAAQ,KAAK,WAAW;AAC7B,eAAK,UAAU;AAAA,QACjB;AAIA,YAAIC,KAAI;AACR,eAAOA,KAAI,KAAK,OAAO,QAAQ,EAAEA,IAAG;AAClC,cAAI,MAAM,KAAK,OAAOA,EAAC;AACvB,cAAI,KAAK,SAAS,QAAQ,IAAI,SAAS,KAAK,MAAM,MAAM;AACtD,gBAAI,IAAI,QAAQ,SAAS,WAAW,IAAI,SAAS,SAAS;AAAE;AAAA,YAAM;AAClE,gBAAI,KAAK,SAAS,SAAS;AAAE;AAAA,YAAM;AAAA,UACrC;AAAA,QACF;AACA,YAAIA,OAAM,KAAK,OAAO,QAAQ;AAAE,eAAK,MAAM,KAAK,OAAO,iBAAiB,OAAO;AAAA,QAAG;AAClF,eAAO,KAAK,WAAW,MAAM,UAAU,mBAAmB,mBAAmB;AAAA,MAC/E;AAEA,WAAK,yBAAyB,SAAS,MAAM;AAC3C,aAAK,KAAK;AACV,aAAK,UAAU;AACf,eAAO,KAAK,WAAW,MAAM,mBAAmB;AAAA,MAClD;AAEA,WAAK,mBAAmB,SAAS,MAAM;AACrC,aAAK,KAAK;AACV,aAAK,OAAO,KAAK,SAAS;AAC1B,aAAK,OAAO,KAAK,eAAe,IAAI;AACpC,aAAK,OAAO,IAAI;AAChB,aAAK,OAAO,QAAQ,MAAM;AAC1B,aAAK,OAAO,KAAK,qBAAqB;AACtC,YAAI,KAAK,QAAQ,eAAe,GAC9B;AAAE,eAAK,IAAI,QAAQ,IAAI;AAAA,QAAG,OAE1B;AAAE,eAAK,UAAU;AAAA,QAAG;AACtB,eAAO,KAAK,WAAW,MAAM,kBAAkB;AAAA,MACjD;AAUA,WAAK,oBAAoB,SAAS,MAAM;AACtC,aAAK,KAAK;AACV,YAAI,UAAW,KAAK,QAAQ,eAAe,KAAK,KAAK,YAAY,KAAK,cAAc,OAAO,IAAK,KAAK,eAAe;AACpH,aAAK,OAAO,KAAK,SAAS;AAC1B,aAAK,WAAW,CAAC;AACjB,aAAK,OAAO,QAAQ,MAAM;AAC1B,YAAI,KAAK,SAAS,QAAQ,MAAM;AAC9B,cAAI,UAAU,IAAI;AAAE,iBAAK,WAAW,OAAO;AAAA,UAAG;AAC9C,iBAAO,KAAK,SAAS,MAAM,IAAI;AAAA,QACjC;AACA,YAAI,QAAQ,KAAK,MAAM;AACvB,YAAI,KAAK,SAAS,QAAQ,QAAQ,KAAK,SAAS,QAAQ,UAAU,OAAO;AACvE,cAAI,SAAS,KAAK,UAAU,GAAG,OAAO,QAAQ,QAAQ,KAAK;AAC3D,eAAK,KAAK;AACV,eAAK,SAAS,QAAQ,MAAM,IAAI;AAChC,eAAK,WAAW,QAAQ,qBAAqB;AAC7C,eAAK,KAAK,SAAS,QAAQ,OAAQ,KAAK,QAAQ,eAAe,KAAK,KAAK,aAAa,IAAI,MAAO,OAAO,aAAa,WAAW,GAAG;AACjI,gBAAI,KAAK,QAAQ,eAAe,GAAG;AACjC,kBAAI,KAAK,SAAS,QAAQ,KAAK;AAC7B,oBAAI,UAAU,IAAI;AAAE,uBAAK,WAAW,OAAO;AAAA,gBAAG;AAAA,cAChD,OAAO;AAAE,qBAAK,QAAQ,UAAU;AAAA,cAAI;AAAA,YACtC;AACA,mBAAO,KAAK,WAAW,MAAM,MAAM;AAAA,UACrC;AACA,cAAI,UAAU,IAAI;AAAE,iBAAK,WAAW,OAAO;AAAA,UAAG;AAC9C,iBAAO,KAAK,SAAS,MAAM,MAAM;AAAA,QACnC;AACA,YAAI,gBAAgB,KAAK,aAAa,KAAK,GAAG,UAAU;AACxD,YAAI,cAAc,KAAK;AACvB,YAAI,yBAAyB,IAAI;AACjC,YAAI,UAAU,KAAK;AACnB,YAAI,OAAO,UAAU,KACjB,KAAK,oBAAoB,wBAAwB,OAAO,IACxD,KAAK,gBAAgB,MAAM,sBAAsB;AACrD,YAAI,KAAK,SAAS,QAAQ,QAAQ,UAAU,KAAK,QAAQ,eAAe,KAAK,KAAK,aAAa,IAAI,IAAI;AACrG,cAAI,UAAU,IAAI;AAChB,gBAAI,KAAK,SAAS,QAAQ,KAAK;AAAE,mBAAK,WAAW,OAAO;AAAA,YAAG;AAC3D,iBAAK,QAAQ;AAAA,UACf,WAAW,WAAW,KAAK,QAAQ,eAAe,GAAG;AACnD,gBAAI,KAAK,UAAU,WAAW,CAAC,eAAe,KAAK,SAAS,gBAAgB,KAAK,SAAS,SAAS;AAAE,mBAAK,WAAW;AAAA,YAAG,WAC/G,KAAK,QAAQ,eAAe,GAAG;AAAE,mBAAK,QAAQ;AAAA,YAAO;AAAA,UAChE;AACA,cAAI,iBAAiB,SAAS;AAAE,iBAAK,MAAM,KAAK,OAAO,+DAA+D;AAAA,UAAG;AACzH,eAAK,aAAa,MAAM,OAAO,sBAAsB;AACrD,eAAK,iBAAiB,IAAI;AAC1B,iBAAO,KAAK,WAAW,MAAM,IAAI;AAAA,QACnC,OAAO;AACL,eAAK,sBAAsB,wBAAwB,IAAI;AAAA,QACzD;AACA,YAAI,UAAU,IAAI;AAAE,eAAK,WAAW,OAAO;AAAA,QAAG;AAC9C,eAAO,KAAK,SAAS,MAAM,IAAI;AAAA,MACjC;AAEA,WAAK,yBAAyB,SAAS,MAAM,SAAS,qBAAqB;AACzE,aAAK,KAAK;AACV,eAAO,KAAK,cAAc,MAAM,kBAAkB,sBAAsB,IAAI,yBAAyB,OAAO,OAAO;AAAA,MACrH;AAEA,WAAK,mBAAmB,SAAS,MAAM;AACrC,aAAK,KAAK;AACV,aAAK,OAAO,KAAK,qBAAqB;AAEtC,aAAK,aAAa,KAAK,eAAe,IAAI;AAC1C,aAAK,YAAY,KAAK,IAAI,QAAQ,KAAK,IAAI,KAAK,eAAe,IAAI,IAAI;AACvE,eAAO,KAAK,WAAW,MAAM,aAAa;AAAA,MAC5C;AAEA,WAAK,uBAAuB,SAAS,MAAM;AACzC,YAAI,CAAC,KAAK,cAAc,CAAC,KAAK,QAAQ,4BACpC;AAAE,eAAK,MAAM,KAAK,OAAO,8BAA8B;AAAA,QAAG;AAC5D,aAAK,KAAK;AAMV,YAAI,KAAK,IAAI,QAAQ,IAAI,KAAK,KAAK,gBAAgB,GAAG;AAAE,eAAK,WAAW;AAAA,QAAM,OACzE;AAAE,eAAK,WAAW,KAAK,gBAAgB;AAAG,eAAK,UAAU;AAAA,QAAG;AACjE,eAAO,KAAK,WAAW,MAAM,iBAAiB;AAAA,MAChD;AAEA,WAAK,uBAAuB,SAAS,MAAM;AACzC,aAAK,KAAK;AACV,aAAK,eAAe,KAAK,qBAAqB;AAC9C,aAAK,QAAQ,CAAC;AACd,aAAK,OAAO,QAAQ,MAAM;AAC1B,aAAK,OAAO,KAAK,WAAW;AAC5B,aAAK,WAAW,CAAC;AAMjB,YAAI;AACJ,iBAAS,aAAa,OAAO,KAAK,SAAS,QAAQ,UAAS;AAC1D,cAAI,KAAK,SAAS,QAAQ,SAAS,KAAK,SAAS,QAAQ,UAAU;AACjE,gBAAI,SAAS,KAAK,SAAS,QAAQ;AACnC,gBAAI,KAAK;AAAE,mBAAK,WAAW,KAAK,YAAY;AAAA,YAAG;AAC/C,iBAAK,MAAM,KAAK,MAAM,KAAK,UAAU,CAAC;AACtC,gBAAI,aAAa,CAAC;AAClB,iBAAK,KAAK;AACV,gBAAI,QAAQ;AACV,kBAAI,OAAO,KAAK,gBAAgB;AAAA,YAClC,OAAO;AACL,kBAAI,YAAY;AAAE,qBAAK,iBAAiB,KAAK,cAAc,0BAA0B;AAAA,cAAG;AACxF,2BAAa;AACb,kBAAI,OAAO;AAAA,YACb;AACA,iBAAK,OAAO,QAAQ,KAAK;AAAA,UAC3B,OAAO;AACL,gBAAI,CAAC,KAAK;AAAE,mBAAK,WAAW;AAAA,YAAG;AAC/B,gBAAI,WAAW,KAAK,KAAK,eAAe,IAAI,CAAC;AAAA,UAC/C;AAAA,QACF;AACA,aAAK,UAAU;AACf,YAAI,KAAK;AAAE,eAAK,WAAW,KAAK,YAAY;AAAA,QAAG;AAC/C,aAAK,KAAK;AACV,aAAK,OAAO,IAAI;AAChB,eAAO,KAAK,WAAW,MAAM,iBAAiB;AAAA,MAChD;AAEA,WAAK,sBAAsB,SAAS,MAAM;AACxC,aAAK,KAAK;AACV,YAAI,UAAU,KAAK,KAAK,MAAM,MAAM,KAAK,YAAY,KAAK,KAAK,CAAC,GAC9D;AAAE,eAAK,MAAM,KAAK,YAAY,6BAA6B;AAAA,QAAG;AAChE,aAAK,WAAW,KAAK,gBAAgB;AACrC,aAAK,UAAU;AACf,eAAO,KAAK,WAAW,MAAM,gBAAgB;AAAA,MAC/C;AAIA,UAAI,UAAU,CAAC;AAEf,WAAK,wBAAwB,WAAW;AACtC,YAAI,QAAQ,KAAK,iBAAiB;AAClC,YAAI,SAAS,MAAM,SAAS;AAC5B,aAAK,WAAW,SAAS,qBAAqB,CAAC;AAC/C,aAAK,iBAAiB,OAAO,SAAS,oBAAoB,YAAY;AACtE,aAAK,OAAO,QAAQ,MAAM;AAE1B,eAAO;AAAA,MACT;AAEA,WAAK,oBAAoB,SAAS,MAAM;AACtC,aAAK,KAAK;AACV,aAAK,QAAQ,KAAK,WAAW;AAC7B,aAAK,UAAU;AACf,YAAI,KAAK,SAAS,QAAQ,QAAQ;AAChC,cAAI,SAAS,KAAK,UAAU;AAC5B,eAAK,KAAK;AACV,cAAI,KAAK,IAAI,QAAQ,MAAM,GAAG;AAC5B,mBAAO,QAAQ,KAAK,sBAAsB;AAAA,UAC5C,OAAO;AACL,gBAAI,KAAK,QAAQ,cAAc,IAAI;AAAE,mBAAK,WAAW;AAAA,YAAG;AACxD,mBAAO,QAAQ;AACf,iBAAK,WAAW,CAAC;AAAA,UACnB;AACA,iBAAO,OAAO,KAAK,WAAW,KAAK;AACnC,eAAK,UAAU;AACf,eAAK,UAAU,KAAK,WAAW,QAAQ,aAAa;AAAA,QACtD;AACA,aAAK,YAAY,KAAK,IAAI,QAAQ,QAAQ,IAAI,KAAK,WAAW,IAAI;AAClE,YAAI,CAAC,KAAK,WAAW,CAAC,KAAK,WACzB;AAAE,eAAK,MAAM,KAAK,OAAO,iCAAiC;AAAA,QAAG;AAC/D,eAAO,KAAK,WAAW,MAAM,cAAc;AAAA,MAC7C;AAEA,WAAK,oBAAoB,SAAS,MAAM,MAAM,yBAAyB;AACrE,aAAK,KAAK;AACV,aAAK,SAAS,MAAM,OAAO,MAAM,uBAAuB;AACxD,aAAK,UAAU;AACf,eAAO,KAAK,WAAW,MAAM,qBAAqB;AAAA,MACpD;AAEA,WAAK,sBAAsB,SAAS,MAAM;AACxC,aAAK,KAAK;AACV,aAAK,OAAO,KAAK,qBAAqB;AACtC,aAAK,OAAO,KAAK,SAAS;AAC1B,aAAK,OAAO,KAAK,eAAe,OAAO;AACvC,aAAK,OAAO,IAAI;AAChB,eAAO,KAAK,WAAW,MAAM,gBAAgB;AAAA,MAC/C;AAEA,WAAK,qBAAqB,SAAS,MAAM;AACvC,YAAI,KAAK,QAAQ;AAAE,eAAK,MAAM,KAAK,OAAO,uBAAuB;AAAA,QAAG;AACpE,aAAK,KAAK;AACV,aAAK,SAAS,KAAK,qBAAqB;AACxC,aAAK,OAAO,KAAK,eAAe,MAAM;AACtC,eAAO,KAAK,WAAW,MAAM,eAAe;AAAA,MAC9C;AAEA,WAAK,sBAAsB,SAAS,MAAM;AACxC,aAAK,KAAK;AACV,eAAO,KAAK,WAAW,MAAM,gBAAgB;AAAA,MAC/C;AAEA,WAAK,wBAAwB,SAAS,MAAM,WAAW,MAAM,SAAS;AACpE,iBAAS,MAAM,GAAGU,QAAO,KAAK,QAAQ,MAAMA,MAAK,QAAQ,OAAO,GAC9D;AACA,cAAI,QAAQA,MAAK,GAAG;AAEpB,cAAI,MAAM,SAAS,WACjB;AAAE,iBAAK,MAAM,KAAK,OAAO,YAAY,YAAY,uBAAuB;AAAA,UAC5E;AAAA,QAAE;AACF,YAAI,OAAO,KAAK,KAAK,SAAS,SAAS,KAAK,SAAS,QAAQ,UAAU,WAAW;AAClF,iBAASV,KAAI,KAAK,OAAO,SAAS,GAAGA,MAAK,GAAGA,MAAK;AAChD,cAAI,UAAU,KAAK,OAAOA,EAAC;AAC3B,cAAI,QAAQ,mBAAmB,KAAK,OAAO;AAEzC,oBAAQ,iBAAiB,KAAK;AAC9B,oBAAQ,OAAO;AAAA,UACjB,OAAO;AAAE;AAAA,UAAM;AAAA,QACjB;AACA,aAAK,OAAO,KAAK,EAAC,MAAM,WAAW,MAAY,gBAAgB,KAAK,MAAK,CAAC;AAC1E,aAAK,OAAO,KAAK,eAAe,UAAU,QAAQ,QAAQ,OAAO,MAAM,KAAK,UAAU,UAAU,UAAU,OAAO;AACjH,aAAK,OAAO,IAAI;AAChB,aAAK,QAAQ;AACb,eAAO,KAAK,WAAW,MAAM,kBAAkB;AAAA,MACjD;AAEA,WAAK,2BAA2B,SAAS,MAAM,MAAM;AACnD,aAAK,aAAa;AAClB,aAAK,UAAU;AACf,eAAO,KAAK,WAAW,MAAM,qBAAqB;AAAA,MACpD;AAMA,WAAK,aAAa,SAAS,uBAAuB,MAAM,YAAY;AAClE,YAAK,0BAA0B,OAAS,yBAAwB;AAChE,YAAK,SAAS,OAAS,QAAO,KAAK,UAAU;AAE7C,aAAK,OAAO,CAAC;AACb,aAAK,OAAO,QAAQ,MAAM;AAC1B,YAAI,uBAAuB;AAAE,eAAK,WAAW,CAAC;AAAA,QAAG;AACjD,eAAO,KAAK,SAAS,QAAQ,QAAQ;AACnC,cAAI,OAAO,KAAK,eAAe,IAAI;AACnC,eAAK,KAAK,KAAK,IAAI;AAAA,QACrB;AACA,YAAI,YAAY;AAAE,eAAK,SAAS;AAAA,QAAO;AACvC,aAAK,KAAK;AACV,YAAI,uBAAuB;AAAE,eAAK,UAAU;AAAA,QAAG;AAC/C,eAAO,KAAK,WAAW,MAAM,gBAAgB;AAAA,MAC/C;AAMA,WAAK,WAAW,SAAS,MAAM,MAAM;AACnC,aAAK,OAAO;AACZ,aAAK,OAAO,QAAQ,IAAI;AACxB,aAAK,OAAO,KAAK,SAAS,QAAQ,OAAO,OAAO,KAAK,gBAAgB;AACrE,aAAK,OAAO,QAAQ,IAAI;AACxB,aAAK,SAAS,KAAK,SAAS,QAAQ,SAAS,OAAO,KAAK,gBAAgB;AACzE,aAAK,OAAO,QAAQ,MAAM;AAC1B,aAAK,OAAO,KAAK,eAAe,KAAK;AACrC,aAAK,UAAU;AACf,aAAK,OAAO,IAAI;AAChB,eAAO,KAAK,WAAW,MAAM,cAAc;AAAA,MAC7C;AAKA,WAAK,aAAa,SAAS,MAAM,MAAM;AACrC,YAAI,UAAU,KAAK,SAAS,QAAQ;AACpC,aAAK,KAAK;AAEV,YACE,KAAK,SAAS,yBACd,KAAK,aAAa,CAAC,EAAE,QAAQ,SAE3B,CAAC,WACD,KAAK,QAAQ,cAAc,KAC3B,KAAK,UACL,KAAK,SAAS,SACd,KAAK,aAAa,CAAC,EAAE,GAAG,SAAS,eAEnC;AACA,eAAK;AAAA,YACH,KAAK;AAAA,aACH,UAAU,WAAW,YAAY;AAAA,UACrC;AAAA,QACF;AACA,aAAK,OAAO;AACZ,aAAK,QAAQ,UAAU,KAAK,gBAAgB,IAAI,KAAK,iBAAiB;AACtE,aAAK,OAAO,QAAQ,MAAM;AAC1B,aAAK,OAAO,KAAK,eAAe,KAAK;AACrC,aAAK,UAAU;AACf,aAAK,OAAO,IAAI;AAChB,eAAO,KAAK,WAAW,MAAM,UAAU,mBAAmB,gBAAgB;AAAA,MAC5E;AAIA,WAAK,WAAW,SAAS,MAAM,OAAO,MAAM,yBAAyB;AACnE,aAAK,eAAe,CAAC;AACrB,aAAK,OAAO;AACZ,mBAAS;AACP,cAAI,OAAO,KAAK,UAAU;AAC1B,eAAK,WAAW,MAAM,IAAI;AAC1B,cAAI,KAAK,IAAI,QAAQ,EAAE,GAAG;AACxB,iBAAK,OAAO,KAAK,iBAAiB,KAAK;AAAA,UACzC,WAAW,CAAC,2BAA2B,SAAS,WAAW,EAAE,KAAK,SAAS,QAAQ,OAAQ,KAAK,QAAQ,eAAe,KAAK,KAAK,aAAa,IAAI,IAAK;AACrJ,iBAAK,WAAW;AAAA,UAClB,WAAW,CAAC,2BAA2B,KAAK,GAAG,SAAS,gBAAgB,EAAE,UAAU,KAAK,SAAS,QAAQ,OAAO,KAAK,aAAa,IAAI,KAAK;AAC1I,iBAAK,MAAM,KAAK,YAAY,0DAA0D;AAAA,UACxF,OAAO;AACL,iBAAK,OAAO;AAAA,UACd;AACA,eAAK,aAAa,KAAK,KAAK,WAAW,MAAM,oBAAoB,CAAC;AAClE,cAAI,CAAC,KAAK,IAAI,QAAQ,KAAK,GAAG;AAAE;AAAA,UAAM;AAAA,QACxC;AACA,eAAO;AAAA,MACT;AAEA,WAAK,aAAa,SAAS,MAAM,MAAM;AACrC,aAAK,KAAK,KAAK,iBAAiB;AAChC,aAAK,iBAAiB,KAAK,IAAI,SAAS,QAAQ,WAAW,cAAc,KAAK;AAAA,MAChF;AAEA,UAAI,iBAAiB,GAAG,yBAAyB,GAAG,mBAAmB;AAMvE,WAAK,gBAAgB,SAAS,MAAM,WAAW,qBAAqB,SAAS,SAAS;AACpF,aAAK,aAAa,IAAI;AACtB,YAAI,KAAK,QAAQ,eAAe,KAAK,KAAK,QAAQ,eAAe,KAAK,CAAC,SAAS;AAC9E,cAAI,KAAK,SAAS,QAAQ,QAAS,YAAY,wBAC7C;AAAE,iBAAK,WAAW;AAAA,UAAG;AACvB,eAAK,YAAY,KAAK,IAAI,QAAQ,IAAI;AAAA,QACxC;AACA,YAAI,KAAK,QAAQ,eAAe,GAC9B;AAAE,eAAK,QAAQ,CAAC,CAAC;AAAA,QAAS;AAE5B,YAAI,YAAY,gBAAgB;AAC9B,eAAK,KAAM,YAAY,oBAAqB,KAAK,SAAS,QAAQ,OAAO,OAAO,KAAK,WAAW;AAChG,cAAI,KAAK,MAAM,EAAE,YAAY,yBAK3B;AAAE,iBAAK,gBAAgB,KAAK,IAAK,KAAK,UAAU,KAAK,aAAa,KAAK,QAAS,KAAK,sBAAsB,WAAW,eAAe,aAAa;AAAA,UAAG;AAAA,QACzJ;AAEA,YAAI,cAAc,KAAK,UAAU,cAAc,KAAK,UAAU,mBAAmB,KAAK;AACtF,aAAK,WAAW;AAChB,aAAK,WAAW;AAChB,aAAK,gBAAgB;AACrB,aAAK,WAAW,cAAc,KAAK,OAAO,KAAK,SAAS,CAAC;AAEzD,YAAI,EAAE,YAAY,iBAChB;AAAE,eAAK,KAAK,KAAK,SAAS,QAAQ,OAAO,KAAK,WAAW,IAAI;AAAA,QAAM;AAErE,aAAK,oBAAoB,IAAI;AAC7B,aAAK,kBAAkB,MAAM,qBAAqB,OAAO,OAAO;AAEhE,aAAK,WAAW;AAChB,aAAK,WAAW;AAChB,aAAK,gBAAgB;AACrB,eAAO,KAAK,WAAW,MAAO,YAAY,iBAAkB,wBAAwB,oBAAoB;AAAA,MAC1G;AAEA,WAAK,sBAAsB,SAAS,MAAM;AACxC,aAAK,OAAO,QAAQ,MAAM;AAC1B,aAAK,SAAS,KAAK,iBAAiB,QAAQ,QAAQ,OAAO,KAAK,QAAQ,eAAe,CAAC;AACxF,aAAK,+BAA+B;AAAA,MACtC;AAKA,WAAK,aAAa,SAAS,MAAM,aAAa;AAC5C,aAAK,KAAK;AAIV,YAAI,YAAY,KAAK;AACrB,aAAK,SAAS;AAEd,aAAK,aAAa,MAAM,WAAW;AACnC,aAAK,gBAAgB,IAAI;AACzB,YAAI,iBAAiB,KAAK,eAAe;AACzC,YAAI,YAAY,KAAK,UAAU;AAC/B,YAAI,iBAAiB;AACrB,kBAAU,OAAO,CAAC;AAClB,aAAK,OAAO,QAAQ,MAAM;AAC1B,eAAO,KAAK,SAAS,QAAQ,QAAQ;AACnC,cAAI,UAAU,KAAK,kBAAkB,KAAK,eAAe,IAAI;AAC7D,cAAI,SAAS;AACX,sBAAU,KAAK,KAAK,OAAO;AAC3B,gBAAI,QAAQ,SAAS,sBAAsB,QAAQ,SAAS,eAAe;AACzE,kBAAI,gBAAgB;AAAE,qBAAK,iBAAiB,QAAQ,OAAO,yCAAyC;AAAA,cAAG;AACvG,+BAAiB;AAAA,YACnB,WAAW,QAAQ,OAAO,QAAQ,IAAI,SAAS,uBAAuB,wBAAwB,gBAAgB,OAAO,GAAG;AACtH,mBAAK,iBAAiB,QAAQ,IAAI,OAAQ,kBAAmB,QAAQ,IAAI,OAAQ,6BAA8B;AAAA,YACjH;AAAA,UACF;AAAA,QACF;AACA,aAAK,SAAS;AACd,aAAK,KAAK;AACV,aAAK,OAAO,KAAK,WAAW,WAAW,WAAW;AAClD,aAAK,cAAc;AACnB,eAAO,KAAK,WAAW,MAAM,cAAc,qBAAqB,iBAAiB;AAAA,MACnF;AAEA,WAAK,oBAAoB,SAAS,wBAAwB;AACxD,YAAI,KAAK,IAAI,QAAQ,IAAI,GAAG;AAAE,iBAAO;AAAA,QAAK;AAE1C,YAAIW,eAAc,KAAK,QAAQ;AAC/B,YAAI,OAAO,KAAK,UAAU;AAC1B,YAAI,UAAU;AACd,YAAI,cAAc;AAClB,YAAI,UAAU;AACd,YAAI,OAAO;AACX,YAAI,WAAW;AAEf,YAAI,KAAK,cAAc,QAAQ,GAAG;AAEhC,cAAIA,gBAAe,MAAM,KAAK,IAAI,QAAQ,MAAM,GAAG;AACjD,iBAAK,sBAAsB,IAAI;AAC/B,mBAAO;AAAA,UACT;AACA,cAAI,KAAK,wBAAwB,KAAK,KAAK,SAAS,QAAQ,MAAM;AAChE,uBAAW;AAAA,UACb,OAAO;AACL,sBAAU;AAAA,UACZ;AAAA,QACF;AACA,aAAK,SAAS;AACd,YAAI,CAAC,WAAWA,gBAAe,KAAK,KAAK,cAAc,OAAO,GAAG;AAC/D,eAAK,KAAK,wBAAwB,KAAK,KAAK,SAAS,QAAQ,SAAS,CAAC,KAAK,mBAAmB,GAAG;AAChG,sBAAU;AAAA,UACZ,OAAO;AACL,sBAAU;AAAA,UACZ;AAAA,QACF;AACA,YAAI,CAAC,YAAYA,gBAAe,KAAK,CAAC,YAAY,KAAK,IAAI,QAAQ,IAAI,GAAG;AACxE,wBAAc;AAAA,QAChB;AACA,YAAI,CAAC,WAAW,CAAC,WAAW,CAAC,aAAa;AACxC,cAAI,YAAY,KAAK;AACrB,cAAI,KAAK,cAAc,KAAK,KAAK,KAAK,cAAc,KAAK,GAAG;AAC1D,gBAAI,KAAK,wBAAwB,GAAG;AAClC,qBAAO;AAAA,YACT,OAAO;AACL,wBAAU;AAAA,YACZ;AAAA,UACF;AAAA,QACF;AAGA,YAAI,SAAS;AAGX,eAAK,WAAW;AAChB,eAAK,MAAM,KAAK,YAAY,KAAK,cAAc,KAAK,eAAe;AACnE,eAAK,IAAI,OAAO;AAChB,eAAK,WAAW,KAAK,KAAK,YAAY;AAAA,QACxC,OAAO;AACL,eAAK,sBAAsB,IAAI;AAAA,QACjC;AAGA,YAAIA,eAAc,MAAM,KAAK,SAAS,QAAQ,UAAU,SAAS,YAAY,eAAe,SAAS;AACnG,cAAI,gBAAgB,CAAC,KAAK,UAAU,aAAa,MAAM,aAAa;AACpE,cAAI,oBAAoB,iBAAiB;AAEzC,cAAI,iBAAiB,SAAS,UAAU;AAAE,iBAAK,MAAM,KAAK,IAAI,OAAO,yCAAyC;AAAA,UAAG;AACjH,eAAK,OAAO,gBAAgB,gBAAgB;AAC5C,eAAK,iBAAiB,MAAM,aAAa,SAAS,iBAAiB;AAAA,QACrE,OAAO;AACL,eAAK,gBAAgB,IAAI;AAAA,QAC3B;AAEA,eAAO;AAAA,MACT;AAEA,WAAK,0BAA0B,WAAW;AACxC,eACE,KAAK,SAAS,QAAQ,QACtB,KAAK,SAAS,QAAQ,aACtB,KAAK,SAAS,QAAQ,OACtB,KAAK,SAAS,QAAQ,UACtB,KAAK,SAAS,QAAQ,YACtB,KAAK,KAAK;AAAA,MAEd;AAEA,WAAK,wBAAwB,SAAS,SAAS;AAC7C,YAAI,KAAK,SAAS,QAAQ,WAAW;AACnC,cAAI,KAAK,UAAU,eAAe;AAChC,iBAAK,MAAM,KAAK,OAAO,oDAAoD;AAAA,UAC7E;AACA,kBAAQ,WAAW;AACnB,kBAAQ,MAAM,KAAK,kBAAkB;AAAA,QACvC,OAAO;AACL,eAAK,kBAAkB,OAAO;AAAA,QAChC;AAAA,MACF;AAEA,WAAK,mBAAmB,SAAS,QAAQ,aAAa,SAAS,mBAAmB;AAEhF,YAAI,MAAM,OAAO;AACjB,YAAI,OAAO,SAAS,eAAe;AACjC,cAAI,aAAa;AAAE,iBAAK,MAAM,IAAI,OAAO,kCAAkC;AAAA,UAAG;AAC9E,cAAI,SAAS;AAAE,iBAAK,MAAM,IAAI,OAAO,sCAAsC;AAAA,UAAG;AAAA,QAChF,WAAW,OAAO,UAAU,aAAa,QAAQ,WAAW,GAAG;AAC7D,eAAK,MAAM,IAAI,OAAO,wDAAwD;AAAA,QAChF;AAGA,YAAIC,SAAQ,OAAO,QAAQ,KAAK,YAAY,aAAa,SAAS,iBAAiB;AAGnF,YAAI,OAAO,SAAS,SAASA,OAAM,OAAO,WAAW,GACnD;AAAE,eAAK,iBAAiBA,OAAM,OAAO,8BAA8B;AAAA,QAAG;AACxE,YAAI,OAAO,SAAS,SAASA,OAAM,OAAO,WAAW,GACnD;AAAE,eAAK,iBAAiBA,OAAM,OAAO,sCAAsC;AAAA,QAAG;AAChF,YAAI,OAAO,SAAS,SAASA,OAAM,OAAO,CAAC,EAAE,SAAS,eACpD;AAAE,eAAK,iBAAiBA,OAAM,OAAO,CAAC,EAAE,OAAO,+BAA+B;AAAA,QAAG;AAEnF,eAAO,KAAK,WAAW,QAAQ,kBAAkB;AAAA,MACnD;AAEA,WAAK,kBAAkB,SAAS,OAAO;AACrC,YAAI,aAAa,OAAO,aAAa,GAAG;AACtC,eAAK,MAAM,MAAM,IAAI,OAAO,gDAAgD;AAAA,QAC9E,WAAW,MAAM,UAAU,aAAa,OAAO,WAAW,GAAG;AAC3D,eAAK,MAAM,MAAM,IAAI,OAAO,qDAAqD;AAAA,QACnF;AAEA,YAAI,KAAK,IAAI,QAAQ,EAAE,GAAG;AAExB,cAAI,QAAQ,KAAK,iBAAiB;AAClC,cAAI,mBAAmB,MAAM;AAC7B,gBAAM,mBAAmB;AACzB,gBAAM,QAAQ,KAAK,iBAAiB;AACpC,gBAAM,mBAAmB;AAAA,QAC3B,OAAO;AACL,gBAAM,QAAQ;AAAA,QAChB;AACA,aAAK,UAAU;AAEf,eAAO,KAAK,WAAW,OAAO,oBAAoB;AAAA,MACpD;AAEA,WAAK,wBAAwB,SAAS,MAAM;AAC1C,aAAK,OAAO,CAAC;AAEb,YAAI,YAAY,KAAK;AACrB,aAAK,SAAS,CAAC;AACf,aAAK,WAAW,2BAA2B,WAAW;AACtD,eAAO,KAAK,SAAS,QAAQ,QAAQ;AACnC,cAAI,OAAO,KAAK,eAAe,IAAI;AACnC,eAAK,KAAK,KAAK,IAAI;AAAA,QACrB;AACA,aAAK,KAAK;AACV,aAAK,UAAU;AACf,aAAK,SAAS;AAEd,eAAO,KAAK,WAAW,MAAM,aAAa;AAAA,MAC5C;AAEA,WAAK,eAAe,SAAS,MAAM,aAAa;AAC9C,YAAI,KAAK,SAAS,QAAQ,MAAM;AAC9B,eAAK,KAAK,KAAK,WAAW;AAC1B,cAAI,aACF;AAAE,iBAAK,gBAAgB,KAAK,IAAI,cAAc,KAAK;AAAA,UAAG;AAAA,QAC1D,OAAO;AACL,cAAI,gBAAgB,MAClB;AAAE,iBAAK,WAAW;AAAA,UAAG;AACvB,eAAK,KAAK;AAAA,QACZ;AAAA,MACF;AAEA,WAAK,kBAAkB,SAAS,MAAM;AACpC,aAAK,aAAa,KAAK,IAAI,QAAQ,QAAQ,IAAI,KAAK,oBAAoB,MAAM,KAAK,IAAI;AAAA,MACzF;AAEA,WAAK,iBAAiB,WAAW;AAC/B,YAAI,UAAU,EAAC,UAAU,uBAAO,OAAO,IAAI,GAAG,MAAM,CAAC,EAAC;AACtD,aAAK,iBAAiB,KAAK,OAAO;AAClC,eAAO,QAAQ;AAAA,MACjB;AAEA,WAAK,gBAAgB,WAAW;AAC9B,YAAIN,OAAM,KAAK,iBAAiB,IAAI;AACpC,YAAI,WAAWA,KAAI;AACnB,YAAI,OAAOA,KAAI;AACf,YAAI,CAAC,KAAK,QAAQ,oBAAoB;AAAE;AAAA,QAAO;AAC/C,YAAI,MAAM,KAAK,iBAAiB;AAChC,YAAI,SAAS,QAAQ,IAAI,OAAO,KAAK,iBAAiB,MAAM,CAAC;AAC7D,iBAASN,KAAI,GAAGA,KAAI,KAAK,QAAQ,EAAEA,IAAG;AACpC,cAAI,KAAK,KAAKA,EAAC;AACf,cAAI,CAAC,OAAO,UAAU,GAAG,IAAI,GAAG;AAC9B,gBAAI,QAAQ;AACV,qBAAO,KAAK,KAAK,EAAE;AAAA,YACrB,OAAO;AACL,mBAAK,iBAAiB,GAAG,OAAQ,qBAAsB,GAAG,OAAQ,0CAA2C;AAAA,YAC/G;AAAA,UACF;AAAA,QACF;AAAA,MACF;AAEA,eAAS,wBAAwB,gBAAgB,SAAS;AACxD,YAAI,OAAO,QAAQ,IAAI;AACvB,YAAI,OAAO,eAAe,IAAI;AAE9B,YAAI,OAAO;AACX,YAAI,QAAQ,SAAS,uBAAuB,QAAQ,SAAS,SAAS,QAAQ,SAAS,QAAQ;AAC7F,kBAAQ,QAAQ,SAAS,MAAM,OAAO,QAAQ;AAAA,QAChD;AAGA,YACE,SAAS,UAAU,SAAS,UAC5B,SAAS,UAAU,SAAS,UAC5B,SAAS,UAAU,SAAS,UAC5B,SAAS,UAAU,SAAS,QAC5B;AACA,yBAAe,IAAI,IAAI;AACvB,iBAAO;AAAA,QACT,WAAW,CAAC,MAAM;AAChB,yBAAe,IAAI,IAAI;AACvB,iBAAO;AAAA,QACT,OAAO;AACL,iBAAO;AAAA,QACT;AAAA,MACF;AAEA,eAAS,aAAa,MAAM,MAAM;AAChC,YAAI,WAAW,KAAK;AACpB,YAAI,MAAM,KAAK;AACf,eAAO,CAAC,aACN,IAAI,SAAS,gBAAgB,IAAI,SAAS,QAC1C,IAAI,SAAS,aAAa,IAAI,UAAU;AAAA,MAE5C;AAIA,WAAK,4BAA4B,SAAS,MAAMD,UAAS;AACvD,YAAI,KAAK,QAAQ,eAAe,IAAI;AAClC,cAAI,KAAK,cAAc,IAAI,GAAG;AAC5B,iBAAK,WAAW,KAAK,sBAAsB;AAC3C,iBAAK,YAAYA,UAAS,KAAK,UAAU,KAAK,YAAY;AAAA,UAC5D,OAAO;AACL,iBAAK,WAAW;AAAA,UAClB;AAAA,QACF;AACA,aAAK,iBAAiB,MAAM;AAC5B,YAAI,KAAK,SAAS,QAAQ,QAAQ;AAAE,eAAK,WAAW;AAAA,QAAG;AACvD,aAAK,SAAS,KAAK,cAAc;AACjC,YAAI,KAAK,QAAQ,eAAe,IAC9B;AAAE,eAAK,aAAa,KAAK,gBAAgB;AAAA,QAAG;AAC9C,aAAK,UAAU;AACf,eAAO,KAAK,WAAW,MAAM,sBAAsB;AAAA,MACrD;AAEA,WAAK,cAAc,SAAS,MAAMA,UAAS;AACzC,aAAK,KAAK;AAEV,YAAI,KAAK,IAAI,QAAQ,IAAI,GAAG;AAC1B,iBAAO,KAAK,0BAA0B,MAAMA,QAAO;AAAA,QACrD;AACA,YAAI,KAAK,IAAI,QAAQ,QAAQ,GAAG;AAC9B,eAAK,YAAYA,UAAS,WAAW,KAAK,YAAY;AACtD,eAAK,cAAc,KAAK,8BAA8B;AACtD,iBAAO,KAAK,WAAW,MAAM,0BAA0B;AAAA,QACzD;AAEA,YAAI,KAAK,2BAA2B,GAAG;AACrC,eAAK,cAAc,KAAK,uBAAuB,IAAI;AACnD,cAAI,KAAK,YAAY,SAAS,uBAC5B;AAAE,iBAAK,oBAAoBA,UAAS,KAAK,YAAY,YAAY;AAAA,UAAG,OAEpE;AAAE,iBAAK,YAAYA,UAAS,KAAK,YAAY,IAAI,KAAK,YAAY,GAAG,KAAK;AAAA,UAAG;AAC/E,eAAK,aAAa,CAAC;AACnB,eAAK,SAAS;AAAA,QAChB,OAAO;AACL,eAAK,cAAc;AACnB,eAAK,aAAa,KAAK,sBAAsBA,QAAO;AACpD,cAAI,KAAK,cAAc,MAAM,GAAG;AAC9B,gBAAI,KAAK,SAAS,QAAQ,QAAQ;AAAE,mBAAK,WAAW;AAAA,YAAG;AACvD,iBAAK,SAAS,KAAK,cAAc;AACjC,gBAAI,KAAK,QAAQ,eAAe,IAC9B;AAAE,mBAAK,aAAa,KAAK,gBAAgB;AAAA,YAAG;AAAA,UAChD,OAAO;AACL,qBAASC,KAAI,GAAGU,QAAO,KAAK,YAAYV,KAAIU,MAAK,QAAQV,MAAK,GAAG;AAE/D,kBAAI,OAAOU,MAAKV,EAAC;AAEjB,mBAAK,gBAAgB,KAAK,KAAK;AAE/B,mBAAK,iBAAiB,KAAK,KAAK;AAEhC,kBAAI,KAAK,MAAM,SAAS,WAAW;AACjC,qBAAK,MAAM,KAAK,MAAM,OAAO,wEAAwE;AAAA,cACvG;AAAA,YACF;AAEA,iBAAK,SAAS;AAAA,UAChB;AACA,eAAK,UAAU;AAAA,QACjB;AACA,eAAO,KAAK,WAAW,MAAM,wBAAwB;AAAA,MACvD;AAEA,WAAK,yBAAyB,SAAS,MAAM;AAC3C,eAAO,KAAK,eAAe,IAAI;AAAA,MACjC;AAEA,WAAK,gCAAgC,WAAW;AAC9C,YAAI;AACJ,YAAI,KAAK,SAAS,QAAQ,cAAc,UAAU,KAAK,gBAAgB,IAAI;AACzE,cAAI,QAAQ,KAAK,UAAU;AAC3B,eAAK,KAAK;AACV,cAAI,SAAS;AAAE,iBAAK,KAAK;AAAA,UAAG;AAC5B,iBAAO,KAAK,cAAc,OAAO,iBAAiB,kBAAkB,OAAO,OAAO;AAAA,QACpF,WAAW,KAAK,SAAS,QAAQ,QAAQ;AACvC,cAAI,QAAQ,KAAK,UAAU;AAC3B,iBAAO,KAAK,WAAW,OAAO,YAAY;AAAA,QAC5C,OAAO;AACL,cAAI,cAAc,KAAK,iBAAiB;AACxC,eAAK,UAAU;AACf,iBAAO;AAAA,QACT;AAAA,MACF;AAEA,WAAK,cAAc,SAASD,UAAS,MAAM,KAAK;AAC9C,YAAI,CAACA,UAAS;AAAE;AAAA,QAAO;AACvB,YAAI,OAAO,SAAS,UAClB;AAAE,iBAAO,KAAK,SAAS,eAAe,KAAK,OAAO,KAAK;AAAA,QAAO;AAChE,YAAI,OAAOA,UAAS,IAAI,GACtB;AAAE,eAAK,iBAAiB,KAAK,uBAAuB,OAAO,GAAG;AAAA,QAAG;AACnE,QAAAA,SAAQ,IAAI,IAAI;AAAA,MAClB;AAEA,WAAK,qBAAqB,SAASA,UAAS,KAAK;AAC/C,YAAI,OAAO,IAAI;AACf,YAAI,SAAS,cACX;AAAE,eAAK,YAAYA,UAAS,KAAK,IAAI,KAAK;AAAA,QAAG,WACtC,SAAS,iBAChB;AAAE,mBAASC,KAAI,GAAGU,QAAO,IAAI,YAAYV,KAAIU,MAAK,QAAQV,MAAK,GAC7D;AACE,gBAAI,OAAOU,MAAKV,EAAC;AAEjB,iBAAK,mBAAmBD,UAAS,IAAI;AAAA,UACvC;AAAA,QAAE,WACG,SAAS,gBAChB;AAAE,mBAAS,MAAM,GAAG,SAAS,IAAI,UAAU,MAAM,OAAO,QAAQ,OAAO,GAAG;AACxE,gBAAI,MAAM,OAAO,GAAG;AAElB,gBAAI,KAAK;AAAE,mBAAK,mBAAmBA,UAAS,GAAG;AAAA,YAAG;AAAA,UACtD;AAAA,QAAE,WACK,SAAS,YAChB;AAAE,eAAK,mBAAmBA,UAAS,IAAI,KAAK;AAAA,QAAG,WACxC,SAAS,qBAChB;AAAE,eAAK,mBAAmBA,UAAS,IAAI,IAAI;AAAA,QAAG,WACvC,SAAS,eAChB;AAAE,eAAK,mBAAmBA,UAAS,IAAI,QAAQ;AAAA,QAAG;AAAA,MACtD;AAEA,WAAK,sBAAsB,SAASA,UAAS,OAAO;AAClD,YAAI,CAACA,UAAS;AAAE;AAAA,QAAO;AACvB,iBAASC,KAAI,GAAGU,QAAO,OAAOV,KAAIU,MAAK,QAAQV,MAAK,GAClD;AACA,cAAI,OAAOU,MAAKV,EAAC;AAEjB,eAAK,mBAAmBD,UAAS,KAAK,EAAE;AAAA,QAC1C;AAAA,MACF;AAEA,WAAK,6BAA6B,WAAW;AAC3C,eAAO,KAAK,KAAK,YAAY,SAC3B,KAAK,KAAK,YAAY,WACtB,KAAK,KAAK,YAAY,WACtB,KAAK,KAAK,YAAY,cACtB,KAAK,MAAM,KACX,KAAK,gBAAgB;AAAA,MACzB;AAIA,WAAK,uBAAuB,SAASA,UAAS;AAC5C,YAAI,OAAO,KAAK,UAAU;AAC1B,aAAK,QAAQ,KAAK,sBAAsB;AAExC,aAAK,WAAW,KAAK,cAAc,IAAI,IAAI,KAAK,sBAAsB,IAAI,KAAK;AAC/E,aAAK;AAAA,UACHA;AAAA,UACA,KAAK;AAAA,UACL,KAAK,SAAS;AAAA,QAChB;AAEA,eAAO,KAAK,WAAW,MAAM,iBAAiB;AAAA,MAChD;AAEA,WAAK,wBAAwB,SAASA,UAAS;AAC7C,YAAI,QAAQ,CAAC,GAAG,QAAQ;AAExB,aAAK,OAAO,QAAQ,MAAM;AAC1B,eAAO,CAAC,KAAK,IAAI,QAAQ,MAAM,GAAG;AAChC,cAAI,CAAC,OAAO;AACV,iBAAK,OAAO,QAAQ,KAAK;AACzB,gBAAI,KAAK,mBAAmB,QAAQ,MAAM,GAAG;AAAE;AAAA,YAAM;AAAA,UACvD,OAAO;AAAE,oBAAQ;AAAA,UAAO;AAExB,gBAAM,KAAK,KAAK,qBAAqBA,QAAO,CAAC;AAAA,QAC/C;AACA,eAAO;AAAA,MACT;AAIA,WAAK,cAAc,SAAS,MAAM;AAChC,aAAK,KAAK;AAGV,YAAI,KAAK,SAAS,QAAQ,QAAQ;AAChC,eAAK,aAAa;AAClB,eAAK,SAAS,KAAK,cAAc;AAAA,QACnC,OAAO;AACL,eAAK,aAAa,KAAK,sBAAsB;AAC7C,eAAK,iBAAiB,MAAM;AAC5B,eAAK,SAAS,KAAK,SAAS,QAAQ,SAAS,KAAK,cAAc,IAAI,KAAK,WAAW;AAAA,QACtF;AACA,YAAI,KAAK,QAAQ,eAAe,IAC9B;AAAE,eAAK,aAAa,KAAK,gBAAgB;AAAA,QAAG;AAC9C,aAAK,UAAU;AACf,eAAO,KAAK,WAAW,MAAM,mBAAmB;AAAA,MAClD;AAIA,WAAK,uBAAuB,WAAW;AACrC,YAAI,OAAO,KAAK,UAAU;AAC1B,aAAK,WAAW,KAAK,sBAAsB;AAE3C,YAAI,KAAK,cAAc,IAAI,GAAG;AAC5B,eAAK,QAAQ,KAAK,WAAW;AAAA,QAC/B,OAAO;AACL,eAAK,gBAAgB,KAAK,QAAQ;AAClC,eAAK,QAAQ,KAAK;AAAA,QACpB;AACA,aAAK,gBAAgB,KAAK,OAAO,YAAY;AAE7C,eAAO,KAAK,WAAW,MAAM,iBAAiB;AAAA,MAChD;AAEA,WAAK,8BAA8B,WAAW;AAE5C,YAAI,OAAO,KAAK,UAAU;AAC1B,aAAK,QAAQ,KAAK,WAAW;AAC7B,aAAK,gBAAgB,KAAK,OAAO,YAAY;AAC7C,eAAO,KAAK,WAAW,MAAM,wBAAwB;AAAA,MACvD;AAEA,WAAK,gCAAgC,WAAW;AAC9C,YAAI,OAAO,KAAK,UAAU;AAC1B,aAAK,KAAK;AACV,aAAK,iBAAiB,IAAI;AAC1B,aAAK,QAAQ,KAAK,WAAW;AAC7B,aAAK,gBAAgB,KAAK,OAAO,YAAY;AAC7C,eAAO,KAAK,WAAW,MAAM,0BAA0B;AAAA,MACzD;AAEA,WAAK,wBAAwB,WAAW;AACtC,YAAI,QAAQ,CAAC,GAAG,QAAQ;AACxB,YAAI,KAAK,SAAS,QAAQ,MAAM;AAC9B,gBAAM,KAAK,KAAK,4BAA4B,CAAC;AAC7C,cAAI,CAAC,KAAK,IAAI,QAAQ,KAAK,GAAG;AAAE,mBAAO;AAAA,UAAM;AAAA,QAC/C;AACA,YAAI,KAAK,SAAS,QAAQ,MAAM;AAC9B,gBAAM,KAAK,KAAK,8BAA8B,CAAC;AAC/C,iBAAO;AAAA,QACT;AACA,aAAK,OAAO,QAAQ,MAAM;AAC1B,eAAO,CAAC,KAAK,IAAI,QAAQ,MAAM,GAAG;AAChC,cAAI,CAAC,OAAO;AACV,iBAAK,OAAO,QAAQ,KAAK;AACzB,gBAAI,KAAK,mBAAmB,QAAQ,MAAM,GAAG;AAAE;AAAA,YAAM;AAAA,UACvD,OAAO;AAAE,oBAAQ;AAAA,UAAO;AAExB,gBAAM,KAAK,KAAK,qBAAqB,CAAC;AAAA,QACxC;AACA,eAAO;AAAA,MACT;AAEA,WAAK,kBAAkB,WAAW;AAChC,YAAI,QAAQ,CAAC;AACb,YAAI,CAAC,KAAK,IAAI,QAAQ,KAAK,GAAG;AAC5B,iBAAO;AAAA,QACT;AACA,aAAK,OAAO,QAAQ,MAAM;AAC1B,YAAI,gBAAgB,CAAC;AACrB,YAAI,QAAQ;AACZ,eAAO,CAAC,KAAK,IAAI,QAAQ,MAAM,GAAG;AAChC,cAAI,CAAC,OAAO;AACV,iBAAK,OAAO,QAAQ,KAAK;AACzB,gBAAI,KAAK,mBAAmB,QAAQ,MAAM,GAAG;AAAE;AAAA,YAAM;AAAA,UACvD,OAAO;AAAE,oBAAQ;AAAA,UAAO;AAExB,cAAI,OAAO,KAAK,qBAAqB;AACrC,cAAI,UAAU,KAAK,IAAI,SAAS,eAAe,KAAK,IAAI,OAAO,KAAK,IAAI;AACxE,cAAI,OAAO,eAAe,OAAO,GAC/B;AAAE,iBAAK,iBAAiB,KAAK,IAAI,OAAO,8BAA8B,UAAU,GAAG;AAAA,UAAG;AACxF,wBAAc,OAAO,IAAI;AACzB,gBAAM,KAAK,IAAI;AAAA,QACjB;AACA,eAAO;AAAA,MACT;AAEA,WAAK,uBAAuB,WAAW;AACrC,YAAI,OAAO,KAAK,UAAU;AAC1B,aAAK,MAAM,KAAK,SAAS,QAAQ,SAAS,KAAK,cAAc,IAAI,KAAK,WAAW,KAAK,QAAQ,kBAAkB,OAAO;AACvH,aAAK,OAAO,QAAQ,KAAK;AACzB,YAAI,KAAK,SAAS,QAAQ,QAAQ;AAChC,eAAK,WAAW;AAAA,QAClB;AACA,aAAK,QAAQ,KAAK,cAAc;AAChC,eAAO,KAAK,WAAW,MAAM,iBAAiB;AAAA,MAChD;AAEA,WAAK,wBAAwB,WAAW;AACtC,YAAI,KAAK,QAAQ,eAAe,MAAM,KAAK,SAAS,QAAQ,QAAQ;AAClE,cAAI,gBAAgB,KAAK,aAAa,KAAK,KAAK;AAChD,cAAI,cAAc,KAAK,cAAc,KAAK,GAAG;AAC3C,iBAAK,MAAM,cAAc,OAAO,iDAAiD;AAAA,UACnF;AACA,iBAAO;AAAA,QACT;AACA,eAAO,KAAK,WAAW,IAAI;AAAA,MAC7B;AAGA,WAAK,yBAAyB,SAAS,YAAY;AACjD,iBAASC,KAAI,GAAGA,KAAI,WAAW,UAAU,KAAK,qBAAqB,WAAWA,EAAC,CAAC,GAAG,EAAEA,IAAG;AACtF,qBAAWA,EAAC,EAAE,YAAY,WAAWA,EAAC,EAAE,WAAW,IAAI,MAAM,GAAG,EAAE;AAAA,QACpE;AAAA,MACF;AACA,WAAK,uBAAuB,SAAS,WAAW;AAC9C,eACE,KAAK,QAAQ,eAAe,KAC5B,UAAU,SAAS,yBACnB,UAAU,WAAW,SAAS,aAC9B,OAAO,UAAU,WAAW,UAAU;AAAA,SAErC,KAAK,MAAM,UAAU,KAAK,MAAM,OAAQ,KAAK,MAAM,UAAU,KAAK,MAAM;AAAA,MAE7E;AAEA,UAAI,OAAO,OAAO;AAKlB,WAAK,eAAe,SAAS,MAAM,WAAW,wBAAwB;AACpE,YAAI,KAAK,QAAQ,eAAe,KAAK,MAAM;AACzC,kBAAQ,KAAK,MAAM;AAAA,YACnB,KAAK;AACH,kBAAI,KAAK,WAAW,KAAK,SAAS,SAChC;AAAE,qBAAK,MAAM,KAAK,OAAO,2DAA2D;AAAA,cAAG;AACzF;AAAA,YAEF,KAAK;AAAA,YACL,KAAK;AAAA,YACL,KAAK;AAAA,YACL,KAAK;AACH;AAAA,YAEF,KAAK;AACH,mBAAK,OAAO;AACZ,kBAAI,wBAAwB;AAAE,qBAAK,mBAAmB,wBAAwB,IAAI;AAAA,cAAG;AACrF,uBAASA,KAAI,GAAGU,QAAO,KAAK,YAAYV,KAAIU,MAAK,QAAQV,MAAK,GAAG;AAC/D,oBAAI,OAAOU,MAAKV,EAAC;AAEnB,qBAAK,aAAa,MAAM,SAAS;AAM/B,oBACE,KAAK,SAAS,kBACb,KAAK,SAAS,SAAS,kBAAkB,KAAK,SAAS,SAAS,kBACjE;AACA,uBAAK,MAAM,KAAK,SAAS,OAAO,kBAAkB;AAAA,gBACpD;AAAA,cACF;AACA;AAAA,YAEF,KAAK;AAEH,kBAAI,KAAK,SAAS,QAAQ;AAAE,qBAAK,MAAM,KAAK,IAAI,OAAO,+CAA+C;AAAA,cAAG;AACzG,mBAAK,aAAa,KAAK,OAAO,SAAS;AACvC;AAAA,YAEF,KAAK;AACH,mBAAK,OAAO;AACZ,kBAAI,wBAAwB;AAAE,qBAAK,mBAAmB,wBAAwB,IAAI;AAAA,cAAG;AACrF,mBAAK,iBAAiB,KAAK,UAAU,SAAS;AAC9C;AAAA,YAEF,KAAK;AACH,mBAAK,OAAO;AACZ,mBAAK,aAAa,KAAK,UAAU,SAAS;AAC1C,kBAAI,KAAK,SAAS,SAAS,qBACzB;AAAE,qBAAK,MAAM,KAAK,SAAS,OAAO,2CAA2C;AAAA,cAAG;AAClF;AAAA,YAEF,KAAK;AACH,kBAAI,KAAK,aAAa,KAAK;AAAE,qBAAK,MAAM,KAAK,KAAK,KAAK,6DAA6D;AAAA,cAAG;AACvH,mBAAK,OAAO;AACZ,qBAAO,KAAK;AACZ,mBAAK,aAAa,KAAK,MAAM,SAAS;AACtC;AAAA,YAEF,KAAK;AACH,mBAAK,aAAa,KAAK,YAAY,WAAW,sBAAsB;AACpE;AAAA,YAEF,KAAK;AACH,mBAAK,iBAAiB,KAAK,OAAO,mDAAmD;AACrF;AAAA,YAEF,KAAK;AACH,kBAAI,CAAC,WAAW;AAAE;AAAA,cAAM;AAAA,YAE1B;AACE,mBAAK,MAAM,KAAK,OAAO,qBAAqB;AAAA,UAC9C;AAAA,QACF,WAAW,wBAAwB;AAAE,eAAK,mBAAmB,wBAAwB,IAAI;AAAA,QAAG;AAC5F,eAAO;AAAA,MACT;AAIA,WAAK,mBAAmB,SAAS,UAAU,WAAW;AACpD,YAAI,MAAM,SAAS;AACnB,iBAASA,KAAI,GAAGA,KAAI,KAAKA,MAAK;AAC5B,cAAI,MAAM,SAASA,EAAC;AACpB,cAAI,KAAK;AAAE,iBAAK,aAAa,KAAK,SAAS;AAAA,UAAG;AAAA,QAChD;AACA,YAAI,KAAK;AACP,cAAI,OAAO,SAAS,MAAM,CAAC;AAC3B,cAAI,KAAK,QAAQ,gBAAgB,KAAK,aAAa,QAAQ,KAAK,SAAS,iBAAiB,KAAK,SAAS,SAAS,cAC/G;AAAE,iBAAK,WAAW,KAAK,SAAS,KAAK;AAAA,UAAG;AAAA,QAC5C;AACA,eAAO;AAAA,MACT;AAIA,WAAK,cAAc,SAAS,wBAAwB;AAClD,YAAI,OAAO,KAAK,UAAU;AAC1B,aAAK,KAAK;AACV,aAAK,WAAW,KAAK,iBAAiB,OAAO,sBAAsB;AACnE,eAAO,KAAK,WAAW,MAAM,eAAe;AAAA,MAC9C;AAEA,WAAK,mBAAmB,WAAW;AACjC,YAAI,OAAO,KAAK,UAAU;AAC1B,aAAK,KAAK;AAGV,YAAI,KAAK,QAAQ,gBAAgB,KAAK,KAAK,SAAS,QAAQ,MAC1D;AAAE,eAAK,WAAW;AAAA,QAAG;AAEvB,aAAK,WAAW,KAAK,iBAAiB;AAEtC,eAAO,KAAK,WAAW,MAAM,aAAa;AAAA,MAC5C;AAIA,WAAK,mBAAmB,WAAW;AACjC,YAAI,KAAK,QAAQ,eAAe,GAAG;AACjC,kBAAQ,KAAK,MAAM;AAAA,YACnB,KAAK,QAAQ;AACX,kBAAI,OAAO,KAAK,UAAU;AAC1B,mBAAK,KAAK;AACV,mBAAK,WAAW,KAAK,iBAAiB,QAAQ,UAAU,MAAM,IAAI;AAClE,qBAAO,KAAK,WAAW,MAAM,cAAc;AAAA,YAE7C,KAAK,QAAQ;AACX,qBAAO,KAAK,SAAS,IAAI;AAAA,UAC3B;AAAA,QACF;AACA,eAAO,KAAK,WAAW;AAAA,MACzB;AAEA,WAAK,mBAAmB,SAAS,OAAO,YAAY,oBAAoB,gBAAgB;AACtF,YAAI,OAAO,CAAC,GAAG,QAAQ;AACvB,eAAO,CAAC,KAAK,IAAI,KAAK,GAAG;AACvB,cAAI,OAAO;AAAE,oBAAQ;AAAA,UAAO,OACvB;AAAE,iBAAK,OAAO,QAAQ,KAAK;AAAA,UAAG;AACnC,cAAI,cAAc,KAAK,SAAS,QAAQ,OAAO;AAC7C,iBAAK,KAAK,IAAI;AAAA,UAChB,WAAW,sBAAsB,KAAK,mBAAmB,KAAK,GAAG;AAC/D;AAAA,UACF,WAAW,KAAK,SAAS,QAAQ,UAAU;AACzC,gBAAI,OAAO,KAAK,iBAAiB;AACjC,iBAAK,qBAAqB,IAAI;AAC9B,iBAAK,KAAK,IAAI;AACd,gBAAI,KAAK,SAAS,QAAQ,OAAO;AAAE,mBAAK,iBAAiB,KAAK,OAAO,+CAA+C;AAAA,YAAG;AACvH,iBAAK,OAAO,KAAK;AACjB;AAAA,UACF,OAAO;AACL,iBAAK,KAAK,KAAK,wBAAwB,cAAc,CAAC;AAAA,UACxD;AAAA,QACF;AACA,eAAO;AAAA,MACT;AAEA,WAAK,0BAA0B,SAAS,gBAAgB;AACtD,YAAI,OAAO,KAAK,kBAAkB,KAAK,OAAO,KAAK,QAAQ;AAC3D,aAAK,qBAAqB,IAAI;AAC9B,eAAO;AAAA,MACT;AAEA,WAAK,uBAAuB,SAAS,OAAO;AAC1C,eAAO;AAAA,MACT;AAIA,WAAK,oBAAoB,SAAS,UAAU,UAAU,MAAM;AAC1D,eAAO,QAAQ,KAAK,iBAAiB;AACrC,YAAI,KAAK,QAAQ,cAAc,KAAK,CAAC,KAAK,IAAI,QAAQ,EAAE,GAAG;AAAE,iBAAO;AAAA,QAAK;AACzE,YAAI,OAAO,KAAK,YAAY,UAAU,QAAQ;AAC9C,aAAK,OAAO;AACZ,aAAK,QAAQ,KAAK,iBAAiB;AACnC,eAAO,KAAK,WAAW,MAAM,mBAAmB;AAAA,MAClD;AAkEA,WAAK,kBAAkB,SAAS,MAAM,aAAa,cAAc;AAC/D,YAAK,gBAAgB,OAAS,eAAc;AAE5C,YAAI,SAAS,gBAAgB;AAE7B,gBAAQ,KAAK,MAAM;AAAA,UACnB,KAAK;AACH,gBAAI,KAAK,UAAU,KAAK,wBAAwB,KAAK,KAAK,IAAI,GAC5D;AAAE,mBAAK,iBAAiB,KAAK,QAAQ,SAAS,aAAa,mBAAmB,KAAK,OAAO,iBAAiB;AAAA,YAAG;AAChH,gBAAI,QAAQ;AACV,kBAAI,gBAAgB,gBAAgB,KAAK,SAAS,OAChD;AAAE,qBAAK,iBAAiB,KAAK,OAAO,6CAA6C;AAAA,cAAG;AACtF,kBAAI,cAAc;AAChB,oBAAI,OAAO,cAAc,KAAK,IAAI,GAChC;AAAE,uBAAK,iBAAiB,KAAK,OAAO,qBAAqB;AAAA,gBAAG;AAC9D,6BAAa,KAAK,IAAI,IAAI;AAAA,cAC5B;AACA,kBAAI,gBAAgB,cAAc;AAAE,qBAAK,YAAY,KAAK,MAAM,aAAa,KAAK,KAAK;AAAA,cAAG;AAAA,YAC5F;AACA;AAAA,UAEF,KAAK;AACH,iBAAK,iBAAiB,KAAK,OAAO,mDAAmD;AACrF;AAAA,UAEF,KAAK;AACH,gBAAI,QAAQ;AAAE,mBAAK,iBAAiB,KAAK,OAAO,2BAA2B;AAAA,YAAG;AAC9E;AAAA,UAEF,KAAK;AACH,gBAAI,QAAQ;AAAE,mBAAK,iBAAiB,KAAK,OAAO,kCAAkC;AAAA,YAAG;AACrF,mBAAO,KAAK,gBAAgB,KAAK,YAAY,aAAa,YAAY;AAAA,UAExE;AACE,iBAAK,MAAM,KAAK,QAAQ,SAAS,YAAY,kBAAkB,SAAS;AAAA,QAC1E;AAAA,MACF;AAEA,WAAK,mBAAmB,SAAS,MAAM,aAAa,cAAc;AAChE,YAAK,gBAAgB,OAAS,eAAc;AAE5C,gBAAQ,KAAK,MAAM;AAAA,UACnB,KAAK;AACH,qBAASA,KAAI,GAAGU,QAAO,KAAK,YAAYV,KAAIU,MAAK,QAAQV,MAAK,GAAG;AAC/D,kBAAI,OAAOU,MAAKV,EAAC;AAEnB,mBAAK,sBAAsB,MAAM,aAAa,YAAY;AAAA,YAC1D;AACA;AAAA,UAEF,KAAK;AACH,qBAAS,MAAM,GAAG,SAAS,KAAK,UAAU,MAAM,OAAO,QAAQ,OAAO,GAAG;AACvE,kBAAI,OAAO,OAAO,GAAG;AAEvB,kBAAI,MAAM;AAAE,qBAAK,sBAAsB,MAAM,aAAa,YAAY;AAAA,cAAG;AAAA,YACzE;AACA;AAAA,UAEF;AACE,iBAAK,gBAAgB,MAAM,aAAa,YAAY;AAAA,QACtD;AAAA,MACF;AAEA,WAAK,wBAAwB,SAAS,MAAM,aAAa,cAAc;AACrE,YAAK,gBAAgB,OAAS,eAAc;AAE5C,gBAAQ,KAAK,MAAM;AAAA,UACnB,KAAK;AAEH,iBAAK,sBAAsB,KAAK,OAAO,aAAa,YAAY;AAChE;AAAA,UAEF,KAAK;AACH,iBAAK,iBAAiB,KAAK,MAAM,aAAa,YAAY;AAC1D;AAAA,UAEF,KAAK;AACH,iBAAK,iBAAiB,KAAK,UAAU,aAAa,YAAY;AAC9D;AAAA,UAEF;AACE,iBAAK,iBAAiB,MAAM,aAAa,YAAY;AAAA,QACvD;AAAA,MACF;AAOA,UAAI,aAAa,SAASa,YAAW,OAAO,QAAQ,eAAe,UAAU,WAAW;AACtF,aAAK,QAAQ;AACb,aAAK,SAAS,CAAC,CAAC;AAChB,aAAK,gBAAgB,CAAC,CAAC;AACvB,aAAK,WAAW;AAChB,aAAK,YAAY,CAAC,CAAC;AAAA,MACrB;AAEA,UAAI,QAAQ;AAAA,QACV,QAAQ,IAAI,WAAW,KAAK,KAAK;AAAA,QACjC,QAAQ,IAAI,WAAW,KAAK,IAAI;AAAA,QAChC,QAAQ,IAAI,WAAW,MAAM,KAAK;AAAA,QAClC,QAAQ,IAAI,WAAW,KAAK,KAAK;AAAA,QACjC,QAAQ,IAAI,WAAW,KAAK,IAAI;AAAA,QAChC,QAAQ,IAAI,WAAW,KAAK,MAAM,MAAM,SAAU,GAAG;AAAE,iBAAO,EAAE,qBAAqB;AAAA,QAAG,CAAC;AAAA,QACzF,QAAQ,IAAI,WAAW,YAAY,KAAK;AAAA,QACxC,QAAQ,IAAI,WAAW,YAAY,IAAI;AAAA,QACvC,YAAY,IAAI,WAAW,YAAY,MAAM,OAAO,MAAM,IAAI;AAAA,QAC9D,OAAO,IAAI,WAAW,YAAY,OAAO,OAAO,MAAM,IAAI;AAAA,MAC5D;AAEA,UAAI,OAAO,OAAO;AAElB,WAAK,iBAAiB,WAAW;AAC/B,eAAO,CAAC,MAAM,MAAM;AAAA,MACtB;AAEA,WAAK,aAAa,WAAW;AAC3B,eAAO,KAAK,QAAQ,KAAK,QAAQ,SAAS,CAAC;AAAA,MAC7C;AAEA,WAAK,eAAe,SAAS,UAAU;AACrC,YAAI,SAAS,KAAK,WAAW;AAC7B,YAAI,WAAW,MAAM,UAAU,WAAW,MAAM,QAC9C;AAAE,iBAAO;AAAA,QAAK;AAChB,YAAI,aAAa,QAAQ,UAAU,WAAW,MAAM,UAAU,WAAW,MAAM,SAC7E;AAAE,iBAAO,CAAC,OAAO;AAAA,QAAO;AAK1B,YAAI,aAAa,QAAQ,WAAW,aAAa,QAAQ,QAAQ,KAAK,aACpE;AAAE,iBAAO,UAAU,KAAK,KAAK,MAAM,MAAM,KAAK,YAAY,KAAK,KAAK,CAAC;AAAA,QAAE;AACzE,YAAI,aAAa,QAAQ,SAAS,aAAa,QAAQ,QAAQ,aAAa,QAAQ,OAAO,aAAa,QAAQ,UAAU,aAAa,QAAQ,OAC7I;AAAE,iBAAO;AAAA,QAAK;AAChB,YAAI,aAAa,QAAQ,QACvB;AAAE,iBAAO,WAAW,MAAM;AAAA,QAAO;AACnC,YAAI,aAAa,QAAQ,QAAQ,aAAa,QAAQ,UAAU,aAAa,QAAQ,MACnF;AAAE,iBAAO;AAAA,QAAM;AACjB,eAAO,CAAC,KAAK;AAAA,MACf;AAEA,WAAK,qBAAqB,WAAW;AACnC,iBAASb,KAAI,KAAK,QAAQ,SAAS,GAAGA,MAAK,GAAGA,MAAK;AACjD,cAAI,UAAU,KAAK,QAAQA,EAAC;AAC5B,cAAI,QAAQ,UAAU,YACpB;AAAE,mBAAO,QAAQ;AAAA,UAAU;AAAA,QAC/B;AACA,eAAO;AAAA,MACT;AAEA,WAAK,gBAAgB,SAAS,UAAU;AACtC,YAAI,QAAQ,OAAO,KAAK;AACxB,YAAI,KAAK,WAAW,aAAa,QAAQ,KACvC;AAAE,eAAK,cAAc;AAAA,QAAO,WACrB,SAAS,KAAK,eACrB;AAAE,iBAAO,KAAK,MAAM,QAAQ;AAAA,QAAG,OAE/B;AAAE,eAAK,cAAc,KAAK;AAAA,QAAY;AAAA,MAC1C;AAIA,WAAK,kBAAkB,SAAS,UAAU;AACxC,YAAI,KAAK,WAAW,MAAM,UAAU;AAClC,eAAK,QAAQ,KAAK,QAAQ,SAAS,CAAC,IAAI;AAAA,QAC1C;AAAA,MACF;AAIA,cAAQ,OAAO,gBAAgB,QAAQ,OAAO,gBAAgB,WAAW;AACvE,YAAI,KAAK,QAAQ,WAAW,GAAG;AAC7B,eAAK,cAAc;AACnB;AAAA,QACF;AACA,YAAI,MAAM,KAAK,QAAQ,IAAI;AAC3B,YAAI,QAAQ,MAAM,UAAU,KAAK,WAAW,EAAE,UAAU,YAAY;AAClE,gBAAM,KAAK,QAAQ,IAAI;AAAA,QACzB;AACA,aAAK,cAAc,CAAC,IAAI;AAAA,MAC1B;AAEA,cAAQ,OAAO,gBAAgB,SAAS,UAAU;AAChD,aAAK,QAAQ,KAAK,KAAK,aAAa,QAAQ,IAAI,MAAM,SAAS,MAAM,MAAM;AAC3E,aAAK,cAAc;AAAA,MACrB;AAEA,cAAQ,aAAa,gBAAgB,WAAW;AAC9C,aAAK,QAAQ,KAAK,MAAM,MAAM;AAC9B,aAAK,cAAc;AAAA,MACrB;AAEA,cAAQ,OAAO,gBAAgB,SAAS,UAAU;AAChD,YAAI,kBAAkB,aAAa,QAAQ,OAAO,aAAa,QAAQ,QAAQ,aAAa,QAAQ,SAAS,aAAa,QAAQ;AAClI,aAAK,QAAQ,KAAK,kBAAkB,MAAM,SAAS,MAAM,MAAM;AAC/D,aAAK,cAAc;AAAA,MACrB;AAEA,cAAQ,OAAO,gBAAgB,WAAW;AAAA,MAE1C;AAEA,cAAQ,UAAU,gBAAgB,QAAQ,OAAO,gBAAgB,SAAS,UAAU;AAClF,YAAI,SAAS,cAAc,aAAa,QAAQ,SAC5C,EAAE,aAAa,QAAQ,QAAQ,KAAK,WAAW,MAAM,MAAM,WAC3D,EAAE,aAAa,QAAQ,WAAW,UAAU,KAAK,KAAK,MAAM,MAAM,KAAK,YAAY,KAAK,KAAK,CAAC,MAC9F,GAAG,aAAa,QAAQ,SAAS,aAAa,QAAQ,WAAW,KAAK,WAAW,MAAM,MAAM,SAC/F;AAAE,eAAK,QAAQ,KAAK,MAAM,MAAM;AAAA,QAAG,OAEnC;AAAE,eAAK,QAAQ,KAAK,MAAM,MAAM;AAAA,QAAG;AACrC,aAAK,cAAc;AAAA,MACrB;AAEA,cAAQ,MAAM,gBAAgB,WAAW;AACvC,YAAI,KAAK,WAAW,EAAE,UAAU,YAAY;AAAE,eAAK,QAAQ,IAAI;AAAA,QAAG;AAClE,aAAK,cAAc;AAAA,MACrB;AAEA,cAAQ,UAAU,gBAAgB,WAAW;AAC3C,YAAI,KAAK,WAAW,MAAM,MAAM,QAC9B;AAAE,eAAK,QAAQ,IAAI;AAAA,QAAG,OAEtB;AAAE,eAAK,QAAQ,KAAK,MAAM,MAAM;AAAA,QAAG;AACrC,aAAK,cAAc;AAAA,MACrB;AAEA,cAAQ,KAAK,gBAAgB,SAAS,UAAU;AAC9C,YAAI,aAAa,QAAQ,WAAW;AAClC,cAAI,QAAQ,KAAK,QAAQ,SAAS;AAClC,cAAI,KAAK,QAAQ,KAAK,MAAM,MAAM,QAChC;AAAE,iBAAK,QAAQ,KAAK,IAAI,MAAM;AAAA,UAAY,OAE1C;AAAE,iBAAK,QAAQ,KAAK,IAAI,MAAM;AAAA,UAAO;AAAA,QACzC;AACA,aAAK,cAAc;AAAA,MACrB;AAEA,cAAQ,KAAK,gBAAgB,SAAS,UAAU;AAC9C,YAAI,UAAU;AACd,YAAI,KAAK,QAAQ,eAAe,KAAK,aAAa,QAAQ,KAAK;AAC7D,cAAI,KAAK,UAAU,QAAQ,CAAC,KAAK,eAC7B,KAAK,UAAU,WAAW,KAAK,mBAAmB,GACpD;AAAE,sBAAU;AAAA,UAAM;AAAA,QACtB;AACA,aAAK,cAAc;AAAA,MACrB;AAqBA,UAAI,OAAO,OAAO;AAOlB,WAAK,iBAAiB,SAAS,MAAM,UAAU,wBAAwB;AACrE,YAAI,KAAK,QAAQ,eAAe,KAAK,KAAK,SAAS,iBACjD;AAAE;AAAA,QAAO;AACX,YAAI,KAAK,QAAQ,eAAe,MAAM,KAAK,YAAY,KAAK,UAAU,KAAK,YACzE;AAAE;AAAA,QAAO;AACX,YAAI,MAAM,KAAK;AACf,YAAI;AACJ,gBAAQ,IAAI,MAAM;AAAA,UAClB,KAAK;AAAc,mBAAO,IAAI;AAAM;AAAA,UACpC,KAAK;AAAW,mBAAO,OAAO,IAAI,KAAK;AAAG;AAAA,UAC1C;AAAS;AAAA,QACT;AACA,YAAI,OAAO,KAAK;AAChB,YAAI,KAAK,QAAQ,eAAe,GAAG;AACjC,cAAI,SAAS,eAAe,SAAS,QAAQ;AAC3C,gBAAI,SAAS,OAAO;AAClB,kBAAI,wBAAwB;AAC1B,oBAAI,uBAAuB,cAAc,GAAG;AAC1C,yCAAuB,cAAc,IAAI;AAAA,gBAC3C;AAAA,cACF,OAAO;AACL,qBAAK,iBAAiB,IAAI,OAAO,oCAAoC;AAAA,cACvE;AAAA,YACF;AACA,qBAAS,QAAQ;AAAA,UACnB;AACA;AAAA,QACF;AACA,eAAO,MAAM;AACb,YAAI,QAAQ,SAAS,IAAI;AACzB,YAAI,OAAO;AACT,cAAI;AACJ,cAAI,SAAS,QAAQ;AACnB,2BAAe,KAAK,UAAU,MAAM,QAAQ,MAAM,OAAO,MAAM;AAAA,UACjE,OAAO;AACL,2BAAe,MAAM,QAAQ,MAAM,IAAI;AAAA,UACzC;AACA,cAAI,cACF;AAAE,iBAAK,iBAAiB,IAAI,OAAO,0BAA0B;AAAA,UAAG;AAAA,QACpE,OAAO;AACL,kBAAQ,SAAS,IAAI,IAAI;AAAA,YACvB,MAAM;AAAA,YACN,KAAK;AAAA,YACL,KAAK;AAAA,UACP;AAAA,QACF;AACA,cAAM,IAAI,IAAI;AAAA,MAChB;AAiBA,WAAK,kBAAkB,SAAS,SAAS,wBAAwB;AAC/D,YAAI,WAAW,KAAK,OAAO,WAAW,KAAK;AAC3C,YAAI,OAAO,KAAK,iBAAiB,SAAS,sBAAsB;AAChE,YAAI,KAAK,SAAS,QAAQ,OAAO;AAC/B,cAAI,OAAO,KAAK,YAAY,UAAU,QAAQ;AAC9C,eAAK,cAAc,CAAC,IAAI;AACxB,iBAAO,KAAK,IAAI,QAAQ,KAAK,GAAG;AAAE,iBAAK,YAAY,KAAK,KAAK,iBAAiB,SAAS,sBAAsB,CAAC;AAAA,UAAG;AACjH,iBAAO,KAAK,WAAW,MAAM,oBAAoB;AAAA,QACnD;AACA,eAAO;AAAA,MACT;AAKA,WAAK,mBAAmB,SAAS,SAAS,wBAAwB,gBAAgB;AAChF,YAAI,KAAK,aAAa,OAAO,GAAG;AAC9B,cAAI,KAAK,aAAa;AAAE,mBAAO,KAAK,WAAW,OAAO;AAAA,UAAE,OAGnD;AAAE,iBAAK,cAAc;AAAA,UAAO;AAAA,QACnC;AAEA,YAAI,yBAAyB,OAAO,iBAAiB,IAAI,mBAAmB,IAAI,iBAAiB;AACjG,YAAI,wBAAwB;AAC1B,2BAAiB,uBAAuB;AACxC,6BAAmB,uBAAuB;AAC1C,2BAAiB,uBAAuB;AACxC,iCAAuB,sBAAsB,uBAAuB,gBAAgB;AAAA,QACtF,OAAO;AACL,mCAAyB,IAAI;AAC7B,mCAAyB;AAAA,QAC3B;AAEA,YAAI,WAAW,KAAK,OAAO,WAAW,KAAK;AAC3C,YAAI,KAAK,SAAS,QAAQ,UAAU,KAAK,SAAS,QAAQ,MAAM;AAC9D,eAAK,mBAAmB,KAAK;AAC7B,eAAK,2BAA2B,YAAY;AAAA,QAC9C;AACA,YAAI,OAAO,KAAK,sBAAsB,SAAS,sBAAsB;AACrE,YAAI,gBAAgB;AAAE,iBAAO,eAAe,KAAK,MAAM,MAAM,UAAU,QAAQ;AAAA,QAAG;AAClF,YAAI,KAAK,KAAK,UAAU;AACtB,cAAI,OAAO,KAAK,YAAY,UAAU,QAAQ;AAC9C,eAAK,WAAW,KAAK;AACrB,cAAI,KAAK,SAAS,QAAQ,IACxB;AAAE,mBAAO,KAAK,aAAa,MAAM,OAAO,sBAAsB;AAAA,UAAG;AACnE,cAAI,CAAC,wBAAwB;AAC3B,mCAAuB,sBAAsB,uBAAuB,gBAAgB,uBAAuB,cAAc;AAAA,UAC3H;AACA,cAAI,uBAAuB,mBAAmB,KAAK,OACjD;AAAE,mCAAuB,kBAAkB;AAAA,UAAI;AACjD,cAAI,KAAK,SAAS,QAAQ,IACxB;AAAE,iBAAK,iBAAiB,IAAI;AAAA,UAAG,OAE/B;AAAE,iBAAK,gBAAgB,IAAI;AAAA,UAAG;AAChC,eAAK,OAAO;AACZ,eAAK,KAAK;AACV,eAAK,QAAQ,KAAK,iBAAiB,OAAO;AAC1C,cAAI,iBAAiB,IAAI;AAAE,mCAAuB,cAAc;AAAA,UAAgB;AAChF,iBAAO,KAAK,WAAW,MAAM,sBAAsB;AAAA,QACrD,OAAO;AACL,cAAI,wBAAwB;AAAE,iBAAK,sBAAsB,wBAAwB,IAAI;AAAA,UAAG;AAAA,QAC1F;AACA,YAAI,iBAAiB,IAAI;AAAE,iCAAuB,sBAAsB;AAAA,QAAgB;AACxF,YAAI,mBAAmB,IAAI;AAAE,iCAAuB,gBAAgB;AAAA,QAAkB;AACtF,eAAO;AAAA,MACT;AAIA,WAAK,wBAAwB,SAAS,SAAS,wBAAwB;AACrE,YAAI,WAAW,KAAK,OAAO,WAAW,KAAK;AAC3C,YAAI,OAAO,KAAK,aAAa,SAAS,sBAAsB;AAC5D,YAAI,KAAK,sBAAsB,sBAAsB,GAAG;AAAE,iBAAO;AAAA,QAAK;AACtE,YAAI,KAAK,IAAI,QAAQ,QAAQ,GAAG;AAC9B,cAAI,OAAO,KAAK,YAAY,UAAU,QAAQ;AAC9C,eAAK,OAAO;AACZ,eAAK,aAAa,KAAK,iBAAiB;AACxC,eAAK,OAAO,QAAQ,KAAK;AACzB,eAAK,YAAY,KAAK,iBAAiB,OAAO;AAC9C,iBAAO,KAAK,WAAW,MAAM,uBAAuB;AAAA,QACtD;AACA,eAAO;AAAA,MACT;AAIA,WAAK,eAAe,SAAS,SAAS,wBAAwB;AAC5D,YAAI,WAAW,KAAK,OAAO,WAAW,KAAK;AAC3C,YAAI,OAAO,KAAK,gBAAgB,wBAAwB,OAAO,OAAO,OAAO;AAC7E,YAAI,KAAK,sBAAsB,sBAAsB,GAAG;AAAE,iBAAO;AAAA,QAAK;AACtE,eAAO,KAAK,UAAU,YAAY,KAAK,SAAS,4BAA4B,OAAO,KAAK,YAAY,MAAM,UAAU,UAAU,IAAI,OAAO;AAAA,MAC3I;AAQA,WAAK,cAAc,SAAS,MAAM,cAAc,cAAc,SAAS,SAAS;AAC9E,YAAI,OAAO,KAAK,KAAK;AACrB,YAAI,QAAQ,SAAS,CAAC,WAAW,KAAK,SAAS,QAAQ,MAAM;AAC3D,cAAI,OAAO,SAAS;AAClB,gBAAI,UAAU,KAAK,SAAS,QAAQ,aAAa,KAAK,SAAS,QAAQ;AACvE,gBAAI,WAAW,KAAK,SAAS,QAAQ;AACrC,gBAAI,UAAU;AAGZ,qBAAO,QAAQ,WAAW;AAAA,YAC5B;AACA,gBAAI,KAAK,KAAK;AACd,iBAAK,KAAK;AACV,gBAAI,WAAW,KAAK,OAAO,WAAW,KAAK;AAC3C,gBAAI,QAAQ,KAAK,YAAY,KAAK,gBAAgB,MAAM,OAAO,OAAO,OAAO,GAAG,UAAU,UAAU,MAAM,OAAO;AACjH,gBAAI,OAAO,KAAK,YAAY,cAAc,cAAc,MAAM,OAAO,IAAI,WAAW,QAAQ;AAC5F,gBAAK,WAAW,KAAK,SAAS,QAAQ,YAAc,aAAa,KAAK,SAAS,QAAQ,aAAa,KAAK,SAAS,QAAQ,aAAc;AACtI,mBAAK,iBAAiB,KAAK,OAAO,0FAA0F;AAAA,YAC9H;AACA,mBAAO,KAAK,YAAY,MAAM,cAAc,cAAc,SAAS,OAAO;AAAA,UAC5E;AAAA,QACF;AACA,eAAO;AAAA,MACT;AAEA,WAAK,cAAc,SAAS,UAAU,UAAU,MAAM,OAAO,IAAI,SAAS;AACxE,YAAI,MAAM,SAAS,qBAAqB;AAAE,eAAK,MAAM,MAAM,OAAO,+DAA+D;AAAA,QAAG;AACpI,YAAI,OAAO,KAAK,YAAY,UAAU,QAAQ;AAC9C,aAAK,OAAO;AACZ,aAAK,WAAW;AAChB,aAAK,QAAQ;AACb,eAAO,KAAK,WAAW,MAAM,UAAU,sBAAsB,kBAAkB;AAAA,MACjF;AAIA,WAAK,kBAAkB,SAAS,wBAAwB,UAAU,QAAQ,SAAS;AACjF,YAAI,WAAW,KAAK,OAAO,WAAW,KAAK,UAAU;AACrD,YAAI,KAAK,aAAa,OAAO,KAAK,KAAK,UAAU;AAC/C,iBAAO,KAAK,WAAW,OAAO;AAC9B,qBAAW;AAAA,QACb,WAAW,KAAK,KAAK,QAAQ;AAC3B,cAAI,OAAO,KAAK,UAAU,GAAG,SAAS,KAAK,SAAS,QAAQ;AAC5D,eAAK,WAAW,KAAK;AACrB,eAAK,SAAS;AACd,eAAK,KAAK;AACV,eAAK,WAAW,KAAK,gBAAgB,MAAM,MAAM,QAAQ,OAAO;AAChE,eAAK,sBAAsB,wBAAwB,IAAI;AACvD,cAAI,QAAQ;AAAE,iBAAK,gBAAgB,KAAK,QAAQ;AAAA,UAAG,WAC1C,KAAK,UAAU,KAAK,aAAa,YAAY,sBAAsB,KAAK,QAAQ,GACvF;AAAE,iBAAK,iBAAiB,KAAK,OAAO,wCAAwC;AAAA,UAAG,WACxE,KAAK,aAAa,YAAY,qBAAqB,KAAK,QAAQ,GACvE;AAAE,iBAAK,iBAAiB,KAAK,OAAO,mCAAmC;AAAA,UAAG,OACvE;AAAE,uBAAW;AAAA,UAAM;AACxB,iBAAO,KAAK,WAAW,MAAM,SAAS,qBAAqB,iBAAiB;AAAA,QAC9E,WAAW,CAAC,YAAY,KAAK,SAAS,QAAQ,WAAW;AACvD,eAAK,WAAW,KAAK,iBAAiB,WAAW,MAAM,KAAK,QAAQ,oBAAoB;AAAE,iBAAK,WAAW;AAAA,UAAG;AAC7G,iBAAO,KAAK,kBAAkB;AAE9B,cAAI,KAAK,SAAS,QAAQ,KAAK;AAAE,iBAAK,WAAW;AAAA,UAAG;AAAA,QACtD,OAAO;AACL,iBAAO,KAAK,oBAAoB,wBAAwB,OAAO;AAC/D,cAAI,KAAK,sBAAsB,sBAAsB,GAAG;AAAE,mBAAO;AAAA,UAAK;AACtE,iBAAO,KAAK,KAAK,WAAW,CAAC,KAAK,mBAAmB,GAAG;AACtD,gBAAI,SAAS,KAAK,YAAY,UAAU,QAAQ;AAChD,mBAAO,WAAW,KAAK;AACvB,mBAAO,SAAS;AAChB,mBAAO,WAAW;AAClB,iBAAK,gBAAgB,IAAI;AACzB,iBAAK,KAAK;AACV,mBAAO,KAAK,WAAW,QAAQ,kBAAkB;AAAA,UACnD;AAAA,QACF;AAEA,YAAI,CAAC,UAAU,KAAK,IAAI,QAAQ,QAAQ,GAAG;AACzC,cAAI,UACF;AAAE,iBAAK,WAAW,KAAK,YAAY;AAAA,UAAG,OAEtC;AAAE,mBAAO,KAAK,YAAY,UAAU,UAAU,MAAM,KAAK,gBAAgB,MAAM,OAAO,OAAO,OAAO,GAAG,MAAM,KAAK;AAAA,UAAE;AAAA,QACxH,OAAO;AACL,iBAAO;AAAA,QACT;AAAA,MACF;AAEA,eAAS,sBAAsB,MAAM;AACnC,eACE,KAAK,SAAS,gBACd,KAAK,SAAS,6BAA6B,sBAAsB,KAAK,UAAU;AAAA,MAEpF;AAEA,eAAS,qBAAqB,MAAM;AAClC,eACE,KAAK,SAAS,sBAAsB,KAAK,SAAS,SAAS,uBAC3D,KAAK,SAAS,qBAAqB,qBAAqB,KAAK,UAAU,KACvE,KAAK,SAAS,6BAA6B,qBAAqB,KAAK,UAAU;AAAA,MAEnF;AAIA,WAAK,sBAAsB,SAAS,wBAAwB,SAAS;AACnE,YAAI,WAAW,KAAK,OAAO,WAAW,KAAK;AAC3C,YAAI,OAAO,KAAK,cAAc,wBAAwB,OAAO;AAC7D,YAAI,KAAK,SAAS,6BAA6B,KAAK,MAAM,MAAM,KAAK,cAAc,KAAK,UAAU,MAAM,KACtG;AAAE,iBAAO;AAAA,QAAK;AAChB,YAAI,SAAS,KAAK,gBAAgB,MAAM,UAAU,UAAU,OAAO,OAAO;AAC1E,YAAI,0BAA0B,OAAO,SAAS,oBAAoB;AAChE,cAAI,uBAAuB,uBAAuB,OAAO,OAAO;AAAE,mCAAuB,sBAAsB;AAAA,UAAI;AACnH,cAAI,uBAAuB,qBAAqB,OAAO,OAAO;AAAE,mCAAuB,oBAAoB;AAAA,UAAI;AAC/G,cAAI,uBAAuB,iBAAiB,OAAO,OAAO;AAAE,mCAAuB,gBAAgB;AAAA,UAAI;AAAA,QACzG;AACA,eAAO;AAAA,MACT;AAEA,WAAK,kBAAkB,SAAS,MAAM,UAAU,UAAU,SAAS,SAAS;AAC1E,YAAI,kBAAkB,KAAK,QAAQ,eAAe,KAAK,KAAK,SAAS,gBAAgB,KAAK,SAAS,WAC/F,KAAK,eAAe,KAAK,OAAO,CAAC,KAAK,mBAAmB,KAAK,KAAK,MAAM,KAAK,UAAU,KACxF,KAAK,qBAAqB,KAAK;AACnC,YAAI,kBAAkB;AAEtB,eAAO,MAAM;AACX,cAAI,UAAU,KAAK,eAAe,MAAM,UAAU,UAAU,SAAS,iBAAiB,iBAAiB,OAAO;AAE9G,cAAI,QAAQ,UAAU;AAAE,8BAAkB;AAAA,UAAM;AAChD,cAAI,YAAY,QAAQ,QAAQ,SAAS,2BAA2B;AAClE,gBAAI,iBAAiB;AACnB,kBAAI,YAAY,KAAK,YAAY,UAAU,QAAQ;AACnD,wBAAU,aAAa;AACvB,wBAAU,KAAK,WAAW,WAAW,iBAAiB;AAAA,YACxD;AACA,mBAAO;AAAA,UACT;AAEA,iBAAO;AAAA,QACT;AAAA,MACF;AAEA,WAAK,wBAAwB,WAAW;AACtC,eAAO,CAAC,KAAK,mBAAmB,KAAK,KAAK,IAAI,QAAQ,KAAK;AAAA,MAC7D;AAEA,WAAK,2BAA2B,SAAS,UAAU,UAAU,UAAU,SAAS;AAC9E,eAAO,KAAK,qBAAqB,KAAK,YAAY,UAAU,QAAQ,GAAG,UAAU,MAAM,OAAO;AAAA,MAChG;AAEA,WAAK,iBAAiB,SAAS,MAAM,UAAU,UAAU,SAAS,iBAAiB,iBAAiB,SAAS;AAC3G,YAAI,oBAAoB,KAAK,QAAQ,eAAe;AACpD,YAAI,WAAW,qBAAqB,KAAK,IAAI,QAAQ,WAAW;AAChE,YAAI,WAAW,UAAU;AAAE,eAAK,MAAM,KAAK,cAAc,kEAAkE;AAAA,QAAG;AAE9H,YAAI,WAAW,KAAK,IAAI,QAAQ,QAAQ;AACxC,YAAI,YAAa,YAAY,KAAK,SAAS,QAAQ,UAAU,KAAK,SAAS,QAAQ,aAAc,KAAK,IAAI,QAAQ,GAAG,GAAG;AACtH,cAAI,OAAO,KAAK,YAAY,UAAU,QAAQ;AAC9C,eAAK,SAAS;AACd,cAAI,UAAU;AACZ,iBAAK,WAAW,KAAK,gBAAgB;AACrC,iBAAK,OAAO,QAAQ,QAAQ;AAAA,UAC9B,WAAW,KAAK,SAAS,QAAQ,aAAa,KAAK,SAAS,SAAS;AACnE,iBAAK,WAAW,KAAK,kBAAkB;AAAA,UACzC,OAAO;AACL,iBAAK,WAAW,KAAK,WAAW,KAAK,QAAQ,kBAAkB,OAAO;AAAA,UACxE;AACA,eAAK,WAAW,CAAC,CAAC;AAClB,cAAI,mBAAmB;AACrB,iBAAK,WAAW;AAAA,UAClB;AACA,iBAAO,KAAK,WAAW,MAAM,kBAAkB;AAAA,QACjD,WAAW,CAAC,WAAW,KAAK,IAAI,QAAQ,MAAM,GAAG;AAC/C,cAAI,yBAAyB,IAAI,uBAAqB,cAAc,KAAK,UAAU,cAAc,KAAK,UAAU,mBAAmB,KAAK;AACxI,eAAK,WAAW;AAChB,eAAK,WAAW;AAChB,eAAK,gBAAgB;AACrB,cAAI,WAAW,KAAK,cAAc,QAAQ,QAAQ,KAAK,QAAQ,eAAe,GAAG,OAAO,sBAAsB;AAC9G,cAAI,mBAAmB,CAAC,YAAY,KAAK,sBAAsB,GAAG;AAChE,iBAAK,mBAAmB,wBAAwB,KAAK;AACrD,iBAAK,+BAA+B;AACpC,gBAAI,KAAK,gBAAgB,GACvB;AAAE,mBAAK,MAAM,KAAK,eAAe,2DAA2D;AAAA,YAAG;AACjG,iBAAK,WAAW;AAChB,iBAAK,WAAW;AAChB,iBAAK,gBAAgB;AACrB,mBAAO,KAAK,yBAAyB,UAAU,UAAU,UAAU,OAAO;AAAA,UAC5E;AACA,eAAK,sBAAsB,wBAAwB,IAAI;AACvD,eAAK,WAAW,eAAe,KAAK;AACpC,eAAK,WAAW,eAAe,KAAK;AACpC,eAAK,gBAAgB,oBAAoB,KAAK;AAC9C,cAAI,SAAS,KAAK,YAAY,UAAU,QAAQ;AAChD,iBAAO,SAAS;AAChB,iBAAO,YAAY;AACnB,cAAI,mBAAmB;AACrB,mBAAO,WAAW;AAAA,UACpB;AACA,iBAAO,KAAK,WAAW,QAAQ,gBAAgB;AAAA,QACjD,WAAW,KAAK,SAAS,QAAQ,WAAW;AAC1C,cAAI,YAAY,iBAAiB;AAC/B,iBAAK,MAAM,KAAK,OAAO,2EAA2E;AAAA,UACpG;AACA,cAAI,SAAS,KAAK,YAAY,UAAU,QAAQ;AAChD,iBAAO,MAAM;AACb,iBAAO,QAAQ,KAAK,cAAc,EAAC,UAAU,KAAI,CAAC;AAClD,iBAAO,KAAK,WAAW,QAAQ,0BAA0B;AAAA,QAC3D;AACA,eAAO;AAAA,MACT;AAOA,WAAK,gBAAgB,SAAS,wBAAwB,SAAS,QAAQ;AAGrE,YAAI,KAAK,SAAS,QAAQ,OAAO;AAAE,eAAK,WAAW;AAAA,QAAG;AAEtD,YAAI,MAAM,aAAa,KAAK,qBAAqB,KAAK;AACtD,gBAAQ,KAAK,MAAM;AAAA,UACnB,KAAK,QAAQ;AACX,gBAAI,CAAC,KAAK,YACR;AAAE,mBAAK,MAAM,KAAK,OAAO,kCAAkC;AAAA,YAAG;AAChE,mBAAO,KAAK,UAAU;AACtB,iBAAK,KAAK;AACV,gBAAI,KAAK,SAAS,QAAQ,UAAU,CAAC,KAAK,kBACxC;AAAE,mBAAK,MAAM,KAAK,OAAO,gDAAgD;AAAA,YAAG;AAO9E,gBAAI,KAAK,SAAS,QAAQ,OAAO,KAAK,SAAS,QAAQ,YAAY,KAAK,SAAS,QAAQ,QACvF;AAAE,mBAAK,WAAW;AAAA,YAAG;AACvB,mBAAO,KAAK,WAAW,MAAM,OAAO;AAAA,UAEtC,KAAK,QAAQ;AACX,mBAAO,KAAK,UAAU;AACtB,iBAAK,KAAK;AACV,mBAAO,KAAK,WAAW,MAAM,gBAAgB;AAAA,UAE/C,KAAK,QAAQ;AACX,gBAAI,WAAW,KAAK,OAAO,WAAW,KAAK,UAAU,cAAc,KAAK;AACxE,gBAAI,KAAK,KAAK,WAAW,KAAK;AAC9B,gBAAI,KAAK,QAAQ,eAAe,KAAK,CAAC,eAAe,GAAG,SAAS,WAAW,CAAC,KAAK,mBAAmB,KAAK,KAAK,IAAI,QAAQ,SAAS,GAAG;AACrI,mBAAK,gBAAgB,MAAM,MAAM;AACjC,qBAAO,KAAK,cAAc,KAAK,YAAY,UAAU,QAAQ,GAAG,GAAG,OAAO,MAAM,OAAO;AAAA,YACzF;AACA,gBAAI,cAAc,CAAC,KAAK,mBAAmB,GAAG;AAC5C,kBAAI,KAAK,IAAI,QAAQ,KAAK,GACxB;AAAE,uBAAO,KAAK,qBAAqB,KAAK,YAAY,UAAU,QAAQ,GAAG,CAAC,EAAE,GAAG,OAAO,OAAO;AAAA,cAAE;AACjG,kBAAI,KAAK,QAAQ,eAAe,KAAK,GAAG,SAAS,WAAW,KAAK,SAAS,QAAQ,QAAQ,CAAC,gBACtF,CAAC,KAAK,4BAA4B,KAAK,UAAU,QAAQ,KAAK,cAAc;AAC/E,qBAAK,KAAK,WAAW,KAAK;AAC1B,oBAAI,KAAK,mBAAmB,KAAK,CAAC,KAAK,IAAI,QAAQ,KAAK,GACtD;AAAE,uBAAK,WAAW;AAAA,gBAAG;AACvB,uBAAO,KAAK,qBAAqB,KAAK,YAAY,UAAU,QAAQ,GAAG,CAAC,EAAE,GAAG,MAAM,OAAO;AAAA,cAC5F;AAAA,YACF;AACA,mBAAO;AAAA,UAET,KAAK,QAAQ;AACX,gBAAIY,SAAQ,KAAK;AACjB,mBAAO,KAAK,aAAaA,OAAM,KAAK;AACpC,iBAAK,QAAQ,EAAC,SAASA,OAAM,SAAS,OAAOA,OAAM,MAAK;AACxD,mBAAO;AAAA,UAET,KAAK,QAAQ;AAAA,UAAK,KAAK,QAAQ;AAC7B,mBAAO,KAAK,aAAa,KAAK,KAAK;AAAA,UAErC,KAAK,QAAQ;AAAA,UAAO,KAAK,QAAQ;AAAA,UAAO,KAAK,QAAQ;AACnD,mBAAO,KAAK,UAAU;AACtB,iBAAK,QAAQ,KAAK,SAAS,QAAQ,QAAQ,OAAO,KAAK,SAAS,QAAQ;AACxE,iBAAK,MAAM,KAAK,KAAK;AACrB,iBAAK,KAAK;AACV,mBAAO,KAAK,WAAW,MAAM,SAAS;AAAA,UAExC,KAAK,QAAQ;AACX,gBAAI,QAAQ,KAAK,OAAO,OAAO,KAAK,mCAAmC,YAAY,OAAO;AAC1F,gBAAI,wBAAwB;AAC1B,kBAAI,uBAAuB,sBAAsB,KAAK,CAAC,KAAK,qBAAqB,IAAI,GACnF;AAAE,uCAAuB,sBAAsB;AAAA,cAAO;AACxD,kBAAI,uBAAuB,oBAAoB,GAC7C;AAAE,uCAAuB,oBAAoB;AAAA,cAAO;AAAA,YACxD;AACA,mBAAO;AAAA,UAET,KAAK,QAAQ;AACX,mBAAO,KAAK,UAAU;AACtB,iBAAK,KAAK;AACV,iBAAK,WAAW,KAAK,cAAc,QAAQ,UAAU,MAAM,MAAM,sBAAsB;AACvF,mBAAO,KAAK,WAAW,MAAM,iBAAiB;AAAA,UAEhD,KAAK,QAAQ;AACX,iBAAK,gBAAgB,MAAM,MAAM;AACjC,mBAAO,KAAK,SAAS,OAAO,sBAAsB;AAAA,UAEpD,KAAK,QAAQ;AACX,mBAAO,KAAK,UAAU;AACtB,iBAAK,KAAK;AACV,mBAAO,KAAK,cAAc,MAAM,CAAC;AAAA,UAEnC,KAAK,QAAQ;AACX,mBAAO,KAAK,WAAW,KAAK,UAAU,GAAG,KAAK;AAAA,UAEhD,KAAK,QAAQ;AACX,mBAAO,KAAK,SAAS;AAAA,UAEvB,KAAK,QAAQ;AACX,mBAAO,KAAK,cAAc;AAAA,UAE5B,KAAK,QAAQ;AACX,gBAAI,KAAK,QAAQ,eAAe,IAAI;AAClC,qBAAO,KAAK,gBAAgB,MAAM;AAAA,YACpC,OAAO;AACL,qBAAO,KAAK,WAAW;AAAA,YACzB;AAAA,UAEF;AACE,mBAAO,KAAK,qBAAqB;AAAA,QACnC;AAAA,MACF;AAEA,WAAK,uBAAuB,WAAW;AACrC,aAAK,WAAW;AAAA,MAClB;AAEA,WAAK,kBAAkB,SAAS,QAAQ;AACtC,YAAI,OAAO,KAAK,UAAU;AAI1B,YAAI,KAAK,aAAa;AAAE,eAAK,iBAAiB,KAAK,OAAO,mCAAmC;AAAA,QAAG;AAChG,aAAK,KAAK;AAEV,YAAI,KAAK,SAAS,QAAQ,UAAU,CAAC,QAAQ;AAC3C,iBAAO,KAAK,mBAAmB,IAAI;AAAA,QACrC,WAAW,KAAK,SAAS,QAAQ,KAAK;AACpC,cAAI,OAAO,KAAK,YAAY,KAAK,OAAO,KAAK,OAAO,KAAK,IAAI,KAAK;AAClE,eAAK,OAAO;AACZ,eAAK,OAAO,KAAK,WAAW,MAAM,YAAY;AAC9C,iBAAO,KAAK,gBAAgB,IAAI;AAAA,QAClC,OAAO;AACL,eAAK,WAAW;AAAA,QAClB;AAAA,MACF;AAEA,WAAK,qBAAqB,SAAS,MAAM;AACvC,aAAK,KAAK;AAGV,aAAK,SAAS,KAAK,iBAAiB;AAEpC,YAAI,KAAK,QAAQ,eAAe,IAAI;AAClC,cAAI,CAAC,KAAK,IAAI,QAAQ,MAAM,GAAG;AAC7B,iBAAK,OAAO,QAAQ,KAAK;AACzB,gBAAI,CAAC,KAAK,mBAAmB,QAAQ,MAAM,GAAG;AAC5C,mBAAK,UAAU,KAAK,iBAAiB;AACrC,kBAAI,CAAC,KAAK,IAAI,QAAQ,MAAM,GAAG;AAC7B,qBAAK,OAAO,QAAQ,KAAK;AACzB,oBAAI,CAAC,KAAK,mBAAmB,QAAQ,MAAM,GAAG;AAC5C,uBAAK,WAAW;AAAA,gBAClB;AAAA,cACF;AAAA,YACF,OAAO;AACL,mBAAK,UAAU;AAAA,YACjB;AAAA,UACF,OAAO;AACL,iBAAK,UAAU;AAAA,UACjB;AAAA,QACF,OAAO;AAEL,cAAI,CAAC,KAAK,IAAI,QAAQ,MAAM,GAAG;AAC7B,gBAAI,WAAW,KAAK;AACpB,gBAAI,KAAK,IAAI,QAAQ,KAAK,KAAK,KAAK,IAAI,QAAQ,MAAM,GAAG;AACvD,mBAAK,iBAAiB,UAAU,2CAA2C;AAAA,YAC7E,OAAO;AACL,mBAAK,WAAW,QAAQ;AAAA,YAC1B;AAAA,UACF;AAAA,QACF;AAEA,eAAO,KAAK,WAAW,MAAM,kBAAkB;AAAA,MACjD;AAEA,WAAK,kBAAkB,SAAS,MAAM;AACpC,aAAK,KAAK;AAEV,YAAI,cAAc,KAAK;AACvB,aAAK,WAAW,KAAK,WAAW,IAAI;AAEpC,YAAI,KAAK,SAAS,SAAS,QACzB;AAAE,eAAK,iBAAiB,KAAK,SAAS,OAAO,0DAA0D;AAAA,QAAG;AAC5G,YAAI,aACF;AAAE,eAAK,iBAAiB,KAAK,OAAO,mDAAmD;AAAA,QAAG;AAC5F,YAAI,KAAK,QAAQ,eAAe,YAAY,CAAC,KAAK,QAAQ,6BACxD;AAAE,eAAK,iBAAiB,KAAK,OAAO,2CAA2C;AAAA,QAAG;AAEpF,eAAO,KAAK,WAAW,MAAM,cAAc;AAAA,MAC7C;AAEA,WAAK,eAAe,SAASA,QAAO;AAClC,YAAI,OAAO,KAAK,UAAU;AAC1B,aAAK,QAAQA;AACb,aAAK,MAAM,KAAK,MAAM,MAAM,KAAK,OAAO,KAAK,GAAG;AAChD,YAAI,KAAK,IAAI,WAAW,KAAK,IAAI,SAAS,CAAC,MAAM,KAAK;AAAE,eAAK,SAAS,KAAK,IAAI,MAAM,GAAG,EAAE,EAAE,QAAQ,MAAM,EAAE;AAAA,QAAG;AAC/G,aAAK,KAAK;AACV,eAAO,KAAK,WAAW,MAAM,SAAS;AAAA,MACxC;AAEA,WAAK,uBAAuB,WAAW;AACrC,aAAK,OAAO,QAAQ,MAAM;AAC1B,YAAI,MAAM,KAAK,gBAAgB;AAC/B,aAAK,OAAO,QAAQ,MAAM;AAC1B,eAAO;AAAA,MACT;AAEA,WAAK,mBAAmB,SAAS,UAAU;AACzC,eAAO,CAAC,KAAK,mBAAmB;AAAA,MAClC;AAEA,WAAK,qCAAqC,SAAS,YAAY,SAAS;AACtE,YAAI,WAAW,KAAK,OAAO,WAAW,KAAK,UAAU,KAAK,qBAAqB,KAAK,QAAQ,eAAe;AAC3G,YAAI,KAAK,QAAQ,eAAe,GAAG;AACjC,eAAK,KAAK;AAEV,cAAI,gBAAgB,KAAK,OAAO,gBAAgB,KAAK;AACrD,cAAI,WAAW,CAAC,GAAG,QAAQ,MAAM,cAAc;AAC/C,cAAI,yBAAyB,IAAI,uBAAqB,cAAc,KAAK,UAAU,cAAc,KAAK,UAAU;AAChH,eAAK,WAAW;AAChB,eAAK,WAAW;AAEhB,iBAAO,KAAK,SAAS,QAAQ,QAAQ;AACnC,oBAAQ,QAAQ,QAAQ,KAAK,OAAO,QAAQ,KAAK;AACjD,gBAAI,sBAAsB,KAAK,mBAAmB,QAAQ,QAAQ,IAAI,GAAG;AACvE,4BAAc;AACd;AAAA,YACF,WAAW,KAAK,SAAS,QAAQ,UAAU;AACzC,4BAAc,KAAK;AACnB,uBAAS,KAAK,KAAK,eAAe,KAAK,iBAAiB,CAAC,CAAC;AAC1D,kBAAI,KAAK,SAAS,QAAQ,OAAO;AAC/B,qBAAK;AAAA,kBACH,KAAK;AAAA,kBACL;AAAA,gBACF;AAAA,cACF;AACA;AAAA,YACF,OAAO;AACL,uBAAS,KAAK,KAAK,iBAAiB,OAAO,wBAAwB,KAAK,cAAc,CAAC;AAAA,YACzF;AAAA,UACF;AACA,cAAI,cAAc,KAAK,YAAY,cAAc,KAAK;AACtD,eAAK,OAAO,QAAQ,MAAM;AAE1B,cAAI,cAAc,KAAK,iBAAiB,QAAQ,KAAK,KAAK,IAAI,QAAQ,KAAK,GAAG;AAC5E,iBAAK,mBAAmB,wBAAwB,KAAK;AACrD,iBAAK,+BAA+B;AACpC,iBAAK,WAAW;AAChB,iBAAK,WAAW;AAChB,mBAAO,KAAK,oBAAoB,UAAU,UAAU,UAAU,OAAO;AAAA,UACvE;AAEA,cAAI,CAAC,SAAS,UAAU,aAAa;AAAE,iBAAK,WAAW,KAAK,YAAY;AAAA,UAAG;AAC3E,cAAI,aAAa;AAAE,iBAAK,WAAW,WAAW;AAAA,UAAG;AACjD,eAAK,sBAAsB,wBAAwB,IAAI;AACvD,eAAK,WAAW,eAAe,KAAK;AACpC,eAAK,WAAW,eAAe,KAAK;AAEpC,cAAI,SAAS,SAAS,GAAG;AACvB,kBAAM,KAAK,YAAY,eAAe,aAAa;AACnD,gBAAI,cAAc;AAClB,iBAAK,aAAa,KAAK,sBAAsB,aAAa,WAAW;AAAA,UACvE,OAAO;AACL,kBAAM,SAAS,CAAC;AAAA,UAClB;AAAA,QACF,OAAO;AACL,gBAAM,KAAK,qBAAqB;AAAA,QAClC;AAEA,YAAI,KAAK,QAAQ,gBAAgB;AAC/B,cAAI,MAAM,KAAK,YAAY,UAAU,QAAQ;AAC7C,cAAI,aAAa;AACjB,iBAAO,KAAK,WAAW,KAAK,yBAAyB;AAAA,QACvD,OAAO;AACL,iBAAO;AAAA,QACT;AAAA,MACF;AAEA,WAAK,iBAAiB,SAAS,MAAM;AACnC,eAAO;AAAA,MACT;AAEA,WAAK,sBAAsB,SAAS,UAAU,UAAU,UAAU,SAAS;AACzE,eAAO,KAAK,qBAAqB,KAAK,YAAY,UAAU,QAAQ,GAAG,UAAU,OAAO,OAAO;AAAA,MACjG;AAQA,UAAI,QAAQ,CAAC;AAEb,WAAK,WAAW,WAAW;AACzB,YAAI,KAAK,aAAa;AAAE,eAAK,iBAAiB,KAAK,OAAO,gCAAgC;AAAA,QAAG;AAC7F,YAAI,OAAO,KAAK,UAAU;AAC1B,aAAK,KAAK;AACV,YAAI,KAAK,QAAQ,eAAe,KAAK,KAAK,SAAS,QAAQ,KAAK;AAC9D,cAAI,OAAO,KAAK,YAAY,KAAK,OAAO,KAAK,OAAO,KAAK,IAAI,KAAK;AAClE,eAAK,OAAO;AACZ,eAAK,OAAO,KAAK,WAAW,MAAM,YAAY;AAC9C,eAAK,KAAK;AACV,cAAI,cAAc,KAAK;AACvB,eAAK,WAAW,KAAK,WAAW,IAAI;AACpC,cAAI,KAAK,SAAS,SAAS,UACzB;AAAE,iBAAK,iBAAiB,KAAK,SAAS,OAAO,sDAAsD;AAAA,UAAG;AACxG,cAAI,aACF;AAAE,iBAAK,iBAAiB,KAAK,OAAO,kDAAkD;AAAA,UAAG;AAC3F,cAAI,CAAC,KAAK,mBACR;AAAE,iBAAK,iBAAiB,KAAK,OAAO,mEAAmE;AAAA,UAAG;AAC5G,iBAAO,KAAK,WAAW,MAAM,cAAc;AAAA,QAC7C;AACA,YAAI,WAAW,KAAK,OAAO,WAAW,KAAK;AAC3C,aAAK,SAAS,KAAK,gBAAgB,KAAK,cAAc,MAAM,OAAO,IAAI,GAAG,UAAU,UAAU,MAAM,KAAK;AACzG,YAAI,KAAK,IAAI,QAAQ,MAAM,GAAG;AAAE,eAAK,YAAY,KAAK,cAAc,QAAQ,QAAQ,KAAK,QAAQ,eAAe,GAAG,KAAK;AAAA,QAAG,OACtH;AAAE,eAAK,YAAY;AAAA,QAAO;AAC/B,eAAO,KAAK,WAAW,MAAM,eAAe;AAAA,MAC9C;AAIA,WAAK,uBAAuB,SAASN,MAAK;AACxC,YAAI,WAAWA,KAAI;AAEnB,YAAI,OAAO,KAAK,UAAU;AAC1B,YAAI,KAAK,SAAS,QAAQ,iBAAiB;AACzC,cAAI,CAAC,UAAU;AACb,iBAAK,iBAAiB,KAAK,OAAO,kDAAkD;AAAA,UACtF;AACA,eAAK,QAAQ;AAAA,YACX,KAAK,KAAK,MAAM,QAAQ,UAAU,IAAI;AAAA,YACtC,QAAQ;AAAA,UACV;AAAA,QACF,OAAO;AACL,eAAK,QAAQ;AAAA,YACX,KAAK,KAAK,MAAM,MAAM,KAAK,OAAO,KAAK,GAAG,EAAE,QAAQ,UAAU,IAAI;AAAA,YAClE,QAAQ,KAAK;AAAA,UACf;AAAA,QACF;AACA,aAAK,KAAK;AACV,aAAK,OAAO,KAAK,SAAS,QAAQ;AAClC,eAAO,KAAK,WAAW,MAAM,iBAAiB;AAAA,MAChD;AAEA,WAAK,gBAAgB,SAASA,MAAK;AACjC,YAAKA,SAAQ,OAAS,CAAAA,OAAM,CAAC;AAC7B,YAAI,WAAWA,KAAI;AAAU,YAAK,aAAa,OAAS,YAAW;AAEnE,YAAI,OAAO,KAAK,UAAU;AAC1B,aAAK,KAAK;AACV,aAAK,cAAc,CAAC;AACpB,YAAI,SAAS,KAAK,qBAAqB,EAAC,SAAkB,CAAC;AAC3D,aAAK,SAAS,CAAC,MAAM;AACrB,eAAO,CAAC,OAAO,MAAM;AACnB,cAAI,KAAK,SAAS,QAAQ,KAAK;AAAE,iBAAK,MAAM,KAAK,KAAK,+BAA+B;AAAA,UAAG;AACxF,eAAK,OAAO,QAAQ,YAAY;AAChC,eAAK,YAAY,KAAK,KAAK,gBAAgB,CAAC;AAC5C,eAAK,OAAO,QAAQ,MAAM;AAC1B,eAAK,OAAO,KAAK,SAAS,KAAK,qBAAqB,EAAC,SAAkB,CAAC,CAAC;AAAA,QAC3E;AACA,aAAK,KAAK;AACV,eAAO,KAAK,WAAW,MAAM,iBAAiB;AAAA,MAChD;AAEA,WAAK,cAAc,SAAS,MAAM;AAChC,eAAO,CAAC,KAAK,YAAY,KAAK,IAAI,SAAS,gBAAgB,KAAK,IAAI,SAAS,YAC1E,KAAK,SAAS,QAAQ,QAAQ,KAAK,SAAS,QAAQ,OAAO,KAAK,SAAS,QAAQ,UAAU,KAAK,SAAS,QAAQ,YAAY,KAAK,KAAK,WAAY,KAAK,QAAQ,eAAe,KAAK,KAAK,SAAS,QAAQ,SAC3M,CAAC,UAAU,KAAK,KAAK,MAAM,MAAM,KAAK,YAAY,KAAK,KAAK,CAAC;AAAA,MACjE;AAIA,WAAK,WAAW,SAAS,WAAW,wBAAwB;AAC1D,YAAI,OAAO,KAAK,UAAU,GAAG,QAAQ,MAAM,WAAW,CAAC;AACvD,aAAK,aAAa,CAAC;AACnB,aAAK,KAAK;AACV,eAAO,CAAC,KAAK,IAAI,QAAQ,MAAM,GAAG;AAChC,cAAI,CAAC,OAAO;AACV,iBAAK,OAAO,QAAQ,KAAK;AACzB,gBAAI,KAAK,QAAQ,eAAe,KAAK,KAAK,mBAAmB,QAAQ,MAAM,GAAG;AAAE;AAAA,YAAM;AAAA,UACxF,OAAO;AAAE,oBAAQ;AAAA,UAAO;AAExB,cAAI,OAAO,KAAK,cAAc,WAAW,sBAAsB;AAC/D,cAAI,CAAC,WAAW;AAAE,iBAAK,eAAe,MAAM,UAAU,sBAAsB;AAAA,UAAG;AAC/E,eAAK,WAAW,KAAK,IAAI;AAAA,QAC3B;AACA,eAAO,KAAK,WAAW,MAAM,YAAY,kBAAkB,kBAAkB;AAAA,MAC/E;AAEA,WAAK,gBAAgB,SAAS,WAAW,wBAAwB;AAC/D,YAAI,OAAO,KAAK,UAAU,GAAG,aAAa,SAAS,UAAU;AAC7D,YAAI,KAAK,QAAQ,eAAe,KAAK,KAAK,IAAI,QAAQ,QAAQ,GAAG;AAC/D,cAAI,WAAW;AACb,iBAAK,WAAW,KAAK,WAAW,KAAK;AACrC,gBAAI,KAAK,SAAS,QAAQ,OAAO;AAC/B,mBAAK,iBAAiB,KAAK,OAAO,+CAA+C;AAAA,YACnF;AACA,mBAAO,KAAK,WAAW,MAAM,aAAa;AAAA,UAC5C;AAEA,eAAK,WAAW,KAAK,iBAAiB,OAAO,sBAAsB;AAEnE,cAAI,KAAK,SAAS,QAAQ,SAAS,0BAA0B,uBAAuB,gBAAgB,GAAG;AACrG,mCAAuB,gBAAgB,KAAK;AAAA,UAC9C;AAEA,iBAAO,KAAK,WAAW,MAAM,eAAe;AAAA,QAC9C;AACA,YAAI,KAAK,QAAQ,eAAe,GAAG;AACjC,eAAK,SAAS;AACd,eAAK,YAAY;AACjB,cAAI,aAAa,wBAAwB;AACvC,uBAAW,KAAK;AAChB,uBAAW,KAAK;AAAA,UAClB;AACA,cAAI,CAAC,WACH;AAAE,0BAAc,KAAK,IAAI,QAAQ,IAAI;AAAA,UAAG;AAAA,QAC5C;AACA,YAAI,cAAc,KAAK;AACvB,aAAK,kBAAkB,IAAI;AAC3B,YAAI,CAAC,aAAa,CAAC,eAAe,KAAK,QAAQ,eAAe,KAAK,CAAC,eAAe,KAAK,YAAY,IAAI,GAAG;AACzG,oBAAU;AACV,wBAAc,KAAK,QAAQ,eAAe,KAAK,KAAK,IAAI,QAAQ,IAAI;AACpE,eAAK,kBAAkB,IAAI;AAAA,QAC7B,OAAO;AACL,oBAAU;AAAA,QACZ;AACA,aAAK,mBAAmB,MAAM,WAAW,aAAa,SAAS,UAAU,UAAU,wBAAwB,WAAW;AACtH,eAAO,KAAK,WAAW,MAAM,UAAU;AAAA,MACzC;AAEA,WAAK,oBAAoB,SAAS,MAAM;AACtC,aAAK,OAAO,KAAK,IAAI;AACrB,aAAK,kBAAkB,IAAI;AAC3B,aAAK,QAAQ,KAAK,YAAY,KAAK;AACnC,YAAI,aAAa,KAAK,SAAS,QAAQ,IAAI;AAC3C,YAAI,KAAK,MAAM,OAAO,WAAW,YAAY;AAC3C,cAAI,QAAQ,KAAK,MAAM;AACvB,cAAI,KAAK,SAAS,OAChB;AAAE,iBAAK,iBAAiB,OAAO,8BAA8B;AAAA,UAAG,OAEhE;AAAE,iBAAK,iBAAiB,OAAO,sCAAsC;AAAA,UAAG;AAAA,QAC5E,OAAO;AACL,cAAI,KAAK,SAAS,SAAS,KAAK,MAAM,OAAO,CAAC,EAAE,SAAS,eACvD;AAAE,iBAAK,iBAAiB,KAAK,MAAM,OAAO,CAAC,EAAE,OAAO,+BAA+B;AAAA,UAAG;AAAA,QAC1F;AAAA,MACF;AAEA,WAAK,qBAAqB,SAAS,MAAM,WAAW,aAAa,SAAS,UAAU,UAAU,wBAAwB,aAAa;AACjI,aAAK,eAAe,YAAY,KAAK,SAAS,QAAQ,OACpD;AAAE,eAAK,WAAW;AAAA,QAAG;AAEvB,YAAI,KAAK,IAAI,QAAQ,KAAK,GAAG;AAC3B,eAAK,QAAQ,YAAY,KAAK,kBAAkB,KAAK,OAAO,KAAK,QAAQ,IAAI,KAAK,iBAAiB,OAAO,sBAAsB;AAChI,eAAK,OAAO;AAAA,QACd,WAAW,KAAK,QAAQ,eAAe,KAAK,KAAK,SAAS,QAAQ,QAAQ;AACxE,cAAI,WAAW;AAAE,iBAAK,WAAW;AAAA,UAAG;AACpC,eAAK,OAAO;AACZ,eAAK,SAAS;AACd,eAAK,QAAQ,KAAK,YAAY,aAAa,OAAO;AAAA,QACpD,WAAW,CAAC,aAAa,CAAC,eACf,KAAK,QAAQ,eAAe,KAAK,CAAC,KAAK,YAAY,KAAK,IAAI,SAAS,iBACpE,KAAK,IAAI,SAAS,SAAS,KAAK,IAAI,SAAS,WAC7C,KAAK,SAAS,QAAQ,SAAS,KAAK,SAAS,QAAQ,UAAU,KAAK,SAAS,QAAQ,KAAK;AACpG,cAAI,eAAe,SAAS;AAAE,iBAAK,WAAW;AAAA,UAAG;AACjD,eAAK,kBAAkB,IAAI;AAAA,QAC7B,WAAW,KAAK,QAAQ,eAAe,KAAK,CAAC,KAAK,YAAY,KAAK,IAAI,SAAS,cAAc;AAC5F,cAAI,eAAe,SAAS;AAAE,iBAAK,WAAW;AAAA,UAAG;AACjD,eAAK,gBAAgB,KAAK,GAAG;AAC7B,cAAI,KAAK,IAAI,SAAS,WAAW,CAAC,KAAK,eACrC;AAAE,iBAAK,gBAAgB;AAAA,UAAU;AACnC,eAAK,OAAO;AACZ,cAAI,WAAW;AACb,iBAAK,QAAQ,KAAK,kBAAkB,UAAU,UAAU,KAAK,SAAS,KAAK,GAAG,CAAC;AAAA,UACjF,WAAW,KAAK,SAAS,QAAQ,MAAM,wBAAwB;AAC7D,gBAAI,uBAAuB,kBAAkB,GAC3C;AAAE,qCAAuB,kBAAkB,KAAK;AAAA,YAAO;AACzD,iBAAK,QAAQ,KAAK,kBAAkB,UAAU,UAAU,KAAK,SAAS,KAAK,GAAG,CAAC;AAAA,UACjF,OAAO;AACL,iBAAK,QAAQ,KAAK,SAAS,KAAK,GAAG;AAAA,UACrC;AACA,eAAK,YAAY;AAAA,QACnB,OAAO;AAAE,eAAK,WAAW;AAAA,QAAG;AAAA,MAC9B;AAEA,WAAK,oBAAoB,SAAS,MAAM;AACtC,YAAI,KAAK,QAAQ,eAAe,GAAG;AACjC,cAAI,KAAK,IAAI,QAAQ,QAAQ,GAAG;AAC9B,iBAAK,WAAW;AAChB,iBAAK,MAAM,KAAK,iBAAiB;AACjC,iBAAK,OAAO,QAAQ,QAAQ;AAC5B,mBAAO,KAAK;AAAA,UACd,OAAO;AACL,iBAAK,WAAW;AAAA,UAClB;AAAA,QACF;AACA,eAAO,KAAK,MAAM,KAAK,SAAS,QAAQ,OAAO,KAAK,SAAS,QAAQ,SAAS,KAAK,cAAc,IAAI,KAAK,WAAW,KAAK,QAAQ,kBAAkB,OAAO;AAAA,MAC7J;AAIA,WAAK,eAAe,SAAS,MAAM;AACjC,aAAK,KAAK;AACV,YAAI,KAAK,QAAQ,eAAe,GAAG;AAAE,eAAK,YAAY,KAAK,aAAa;AAAA,QAAO;AAC/E,YAAI,KAAK,QAAQ,eAAe,GAAG;AAAE,eAAK,QAAQ;AAAA,QAAO;AAAA,MAC3D;AAIA,WAAK,cAAc,SAAS,aAAa,SAAS,kBAAkB;AAClE,YAAI,OAAO,KAAK,UAAU,GAAG,cAAc,KAAK,UAAU,cAAc,KAAK,UAAU,mBAAmB,KAAK;AAE/G,aAAK,aAAa,IAAI;AACtB,YAAI,KAAK,QAAQ,eAAe,GAC9B;AAAE,eAAK,YAAY;AAAA,QAAa;AAClC,YAAI,KAAK,QAAQ,eAAe,GAC9B;AAAE,eAAK,QAAQ,CAAC,CAAC;AAAA,QAAS;AAE5B,aAAK,WAAW;AAChB,aAAK,WAAW;AAChB,aAAK,gBAAgB;AACrB,aAAK,WAAW,cAAc,SAAS,KAAK,SAAS,IAAI,eAAe,mBAAmB,qBAAqB,EAAE;AAElH,aAAK,OAAO,QAAQ,MAAM;AAC1B,aAAK,SAAS,KAAK,iBAAiB,QAAQ,QAAQ,OAAO,KAAK,QAAQ,eAAe,CAAC;AACxF,aAAK,+BAA+B;AACpC,aAAK,kBAAkB,MAAM,OAAO,MAAM,KAAK;AAE/C,aAAK,WAAW;AAChB,aAAK,WAAW;AAChB,aAAK,gBAAgB;AACrB,eAAO,KAAK,WAAW,MAAM,oBAAoB;AAAA,MACnD;AAIA,WAAK,uBAAuB,SAAS,MAAM,QAAQ,SAAS,SAAS;AACnE,YAAI,cAAc,KAAK,UAAU,cAAc,KAAK,UAAU,mBAAmB,KAAK;AAEtF,aAAK,WAAW,cAAc,SAAS,KAAK,IAAI,WAAW;AAC3D,aAAK,aAAa,IAAI;AACtB,YAAI,KAAK,QAAQ,eAAe,GAAG;AAAE,eAAK,QAAQ,CAAC,CAAC;AAAA,QAAS;AAE7D,aAAK,WAAW;AAChB,aAAK,WAAW;AAChB,aAAK,gBAAgB;AAErB,aAAK,SAAS,KAAK,iBAAiB,QAAQ,IAAI;AAChD,aAAK,kBAAkB,MAAM,MAAM,OAAO,OAAO;AAEjD,aAAK,WAAW;AAChB,aAAK,WAAW;AAChB,aAAK,gBAAgB;AACrB,eAAO,KAAK,WAAW,MAAM,yBAAyB;AAAA,MACxD;AAIA,WAAK,oBAAoB,SAAS,MAAM,iBAAiB,UAAU,SAAS;AAC1E,YAAI,eAAe,mBAAmB,KAAK,SAAS,QAAQ;AAC5D,YAAI,YAAY,KAAK,QAAQ,YAAY;AAEzC,YAAI,cAAc;AAChB,eAAK,OAAO,KAAK,iBAAiB,OAAO;AACzC,eAAK,aAAa;AAClB,eAAK,YAAY,MAAM,KAAK;AAAA,QAC9B,OAAO;AACL,cAAI,YAAY,KAAK,QAAQ,eAAe,KAAK,CAAC,KAAK,kBAAkB,KAAK,MAAM;AACpF,cAAI,CAAC,aAAa,WAAW;AAC3B,wBAAY,KAAK,gBAAgB,KAAK,GAAG;AAIzC,gBAAI,aAAa,WACf;AAAE,mBAAK,iBAAiB,KAAK,OAAO,2EAA2E;AAAA,YAAG;AAAA,UACtH;AAGA,cAAI,YAAY,KAAK;AACrB,eAAK,SAAS,CAAC;AACf,cAAI,WAAW;AAAE,iBAAK,SAAS;AAAA,UAAM;AAIrC,eAAK,YAAY,MAAM,CAAC,aAAa,CAAC,aAAa,CAAC,mBAAmB,CAAC,YAAY,KAAK,kBAAkB,KAAK,MAAM,CAAC;AAEvH,cAAI,KAAK,UAAU,KAAK,IAAI;AAAE,iBAAK,gBAAgB,KAAK,IAAI,YAAY;AAAA,UAAG;AAC3E,eAAK,OAAO,KAAK,WAAW,OAAO,QAAW,aAAa,CAAC,SAAS;AACrE,eAAK,aAAa;AAClB,eAAK,uBAAuB,KAAK,KAAK,IAAI;AAC1C,eAAK,SAAS;AAAA,QAChB;AACA,aAAK,UAAU;AAAA,MACjB;AAEA,WAAK,oBAAoB,SAAS,QAAQ;AACxC,iBAASN,KAAI,GAAGU,QAAO,QAAQV,KAAIU,MAAK,QAAQV,MAAK,GACnD;AACA,cAAI,QAAQU,MAAKV,EAAC;AAElB,cAAI,MAAM,SAAS,cAAc;AAAE,mBAAO;AAAA,UAC5C;AAAA,QAAE;AACF,eAAO;AAAA,MACT;AAKA,WAAK,cAAc,SAAS,MAAM,iBAAiB;AACjD,YAAI,WAAW,uBAAO,OAAO,IAAI;AACjC,iBAASA,KAAI,GAAGU,QAAO,KAAK,QAAQV,KAAIU,MAAK,QAAQV,MAAK,GACxD;AACA,cAAI,QAAQU,MAAKV,EAAC;AAElB,eAAK,sBAAsB,OAAO,UAAU,kBAAkB,OAAO,QAAQ;AAAA,QAC/E;AAAA,MACF;AAQA,WAAK,gBAAgB,SAAS,OAAO,oBAAoB,YAAY,wBAAwB;AAC3F,YAAI,OAAO,CAAC,GAAG,QAAQ;AACvB,eAAO,CAAC,KAAK,IAAI,KAAK,GAAG;AACvB,cAAI,CAAC,OAAO;AACV,iBAAK,OAAO,QAAQ,KAAK;AACzB,gBAAI,sBAAsB,KAAK,mBAAmB,KAAK,GAAG;AAAE;AAAA,YAAM;AAAA,UACpE,OAAO;AAAE,oBAAQ;AAAA,UAAO;AAExB,cAAI,MAAO;AACX,cAAI,cAAc,KAAK,SAAS,QAAQ,OACtC;AAAE,kBAAM;AAAA,UAAM,WACP,KAAK,SAAS,QAAQ,UAAU;AACvC,kBAAM,KAAK,YAAY,sBAAsB;AAC7C,gBAAI,0BAA0B,KAAK,SAAS,QAAQ,SAAS,uBAAuB,gBAAgB,GAClG;AAAE,qCAAuB,gBAAgB,KAAK;AAAA,YAAO;AAAA,UACzD,OAAO;AACL,kBAAM,KAAK,iBAAiB,OAAO,sBAAsB;AAAA,UAC3D;AACA,eAAK,KAAK,GAAG;AAAA,QACf;AACA,eAAO;AAAA,MACT;AAEA,WAAK,kBAAkB,SAASM,MAAK;AACnC,YAAI,QAAQA,KAAI;AAChB,YAAI,MAAMA,KAAI;AACd,YAAI,OAAOA,KAAI;AAEf,YAAI,KAAK,eAAe,SAAS,SAC/B;AAAE,eAAK,iBAAiB,OAAO,qDAAqD;AAAA,QAAG;AACzF,YAAI,KAAK,WAAW,SAAS,SAC3B;AAAE,eAAK,iBAAiB,OAAO,2DAA2D;AAAA,QAAG;AAC/F,YAAI,KAAK,iBAAiB,EAAE,oBAAoB,SAAS,aACvD;AAAE,eAAK,iBAAiB,OAAO,mDAAmD;AAAA,QAAG;AACvF,YAAI,KAAK,uBAAuB,SAAS,eAAe,SAAS,UAC/D;AAAE,eAAK,MAAM,OAAQ,gBAAgB,OAAO,uCAAwC;AAAA,QAAG;AACzF,YAAI,KAAK,SAAS,KAAK,IAAI,GACzB;AAAE,eAAK,MAAM,OAAQ,yBAAyB,OAAO,GAAI;AAAA,QAAG;AAC9D,YAAI,KAAK,QAAQ,cAAc,KAC7B,KAAK,MAAM,MAAM,OAAO,GAAG,EAAE,QAAQ,IAAI,MAAM,IAAI;AAAE;AAAA,QAAO;AAC9D,YAAI,KAAK,KAAK,SAAS,KAAK,sBAAsB,KAAK;AACvD,YAAI,GAAG,KAAK,IAAI,GAAG;AACjB,cAAI,CAAC,KAAK,WAAW,SAAS,SAC5B;AAAE,iBAAK,iBAAiB,OAAO,sDAAsD;AAAA,UAAG;AAC1F,eAAK,iBAAiB,OAAQ,kBAAkB,OAAO,eAAgB;AAAA,QACzE;AAAA,MACF;AAMA,WAAK,aAAa,SAAS,SAAS;AAClC,YAAI,OAAO,KAAK,eAAe;AAC/B,aAAK,KAAK,CAAC,CAAC,OAAO;AACnB,aAAK,WAAW,MAAM,YAAY;AAClC,YAAI,CAAC,SAAS;AACZ,eAAK,gBAAgB,IAAI;AACzB,cAAI,KAAK,SAAS,WAAW,CAAC,KAAK,eACjC;AAAE,iBAAK,gBAAgB,KAAK;AAAA,UAAO;AAAA,QACvC;AACA,eAAO;AAAA,MACT;AAEA,WAAK,iBAAiB,WAAW;AAC/B,YAAI,OAAO,KAAK,UAAU;AAC1B,YAAI,KAAK,SAAS,QAAQ,MAAM;AAC9B,eAAK,OAAO,KAAK;AAAA,QACnB,WAAW,KAAK,KAAK,SAAS;AAC5B,eAAK,OAAO,KAAK,KAAK;AAMtB,eAAK,KAAK,SAAS,WAAW,KAAK,SAAS,gBACzC,KAAK,eAAe,KAAK,eAAe,KAAK,KAAK,MAAM,WAAW,KAAK,YAAY,MAAM,KAAK;AAChG,iBAAK,QAAQ,IAAI;AAAA,UACnB;AACA,eAAK,OAAO,QAAQ;AAAA,QACtB,OAAO;AACL,eAAK,WAAW;AAAA,QAClB;AACA,eAAO;AAAA,MACT;AAEA,WAAK,oBAAoB,WAAW;AAClC,YAAI,OAAO,KAAK,UAAU;AAC1B,YAAI,KAAK,SAAS,QAAQ,WAAW;AACnC,eAAK,OAAO,KAAK;AAAA,QACnB,OAAO;AACL,eAAK,WAAW;AAAA,QAClB;AACA,aAAK,KAAK;AACV,aAAK,WAAW,MAAM,mBAAmB;AAGzC,YAAI,KAAK,QAAQ,oBAAoB;AACnC,cAAI,KAAK,iBAAiB,WAAW,GAAG;AACtC,iBAAK,MAAM,KAAK,OAAQ,qBAAsB,KAAK,OAAQ,0CAA2C;AAAA,UACxG,OAAO;AACL,iBAAK,iBAAiB,KAAK,iBAAiB,SAAS,CAAC,EAAE,KAAK,KAAK,IAAI;AAAA,UACxE;AAAA,QACF;AAEA,eAAO;AAAA,MACT;AAIA,WAAK,aAAa,SAAS,SAAS;AAClC,YAAI,CAAC,KAAK,UAAU;AAAE,eAAK,WAAW,KAAK;AAAA,QAAO;AAElD,YAAI,OAAO,KAAK,UAAU;AAC1B,aAAK,KAAK;AACV,YAAI,KAAK,SAAS,QAAQ,QAAQ,KAAK,mBAAmB,KAAM,KAAK,SAAS,QAAQ,QAAQ,CAAC,KAAK,KAAK,YAAa;AACpH,eAAK,WAAW;AAChB,eAAK,WAAW;AAAA,QAClB,OAAO;AACL,eAAK,WAAW,KAAK,IAAI,QAAQ,IAAI;AACrC,eAAK,WAAW,KAAK,iBAAiB,OAAO;AAAA,QAC/C;AACA,eAAO,KAAK,WAAW,MAAM,iBAAiB;AAAA,MAChD;AAEA,WAAK,aAAa,SAAS,SAAS;AAClC,YAAI,CAAC,KAAK,UAAU;AAAE,eAAK,WAAW,KAAK;AAAA,QAAO;AAElD,YAAI,OAAO,KAAK,UAAU;AAC1B,aAAK,KAAK;AACV,aAAK,WAAW,KAAK,gBAAgB,MAAM,MAAM,OAAO,OAAO;AAC/D,eAAO,KAAK,WAAW,MAAM,iBAAiB;AAAA,MAChD;AAEA,UAAI,OAAO,OAAO;AAQlB,WAAK,QAAQ,SAAS,KAAK,SAAS;AAClC,YAAI,MAAM,YAAY,KAAK,OAAO,GAAG;AACrC,mBAAW,OAAO,IAAI,OAAO,MAAM,IAAI,SAAS;AAChD,YAAI,MAAM,IAAI,YAAY,OAAO;AACjC,YAAI,MAAM;AAAK,YAAI,MAAM;AAAK,YAAI,WAAW,KAAK;AAClD,cAAM;AAAA,MACR;AAEA,WAAK,mBAAmB,KAAK;AAE7B,WAAK,cAAc,WAAW;AAC5B,YAAI,KAAK,QAAQ,WAAW;AAC1B,iBAAO,IAAI,SAAS,KAAK,SAAS,KAAK,MAAM,KAAK,SAAS;AAAA,QAC7D;AAAA,MACF;AAEA,UAAI,OAAO,OAAO;AAElB,UAAI,QAAQ,SAASQ,OAAM,OAAO;AAChC,aAAK,QAAQ;AAEb,aAAK,MAAM,CAAC;AAEZ,aAAK,UAAU,CAAC;AAEhB,aAAK,YAAY,CAAC;AAElB,aAAK,mBAAmB;AAAA,MAC1B;AAIA,WAAK,aAAa,SAAS,OAAO;AAChC,aAAK,WAAW,KAAK,IAAI,MAAM,KAAK,CAAC;AAAA,MACvC;AAEA,WAAK,YAAY,WAAW;AAC1B,aAAK,WAAW,IAAI;AAAA,MACtB;AAKA,WAAK,6BAA6B,SAAS,OAAO;AAChD,eAAQ,MAAM,QAAQ,kBAAmB,CAAC,KAAK,YAAa,MAAM,QAAQ;AAAA,MAC5E;AAEA,WAAK,cAAc,SAAS,MAAM,aAAa,KAAK;AAClD,YAAI,aAAa;AACjB,YAAI,gBAAgB,cAAc;AAChC,cAAI,QAAQ,KAAK,aAAa;AAC9B,uBAAa,MAAM,QAAQ,QAAQ,IAAI,IAAI,MAAM,MAAM,UAAU,QAAQ,IAAI,IAAI,MAAM,MAAM,IAAI,QAAQ,IAAI,IAAI;AACjH,gBAAM,QAAQ,KAAK,IAAI;AACvB,cAAI,KAAK,YAAa,MAAM,QAAQ,WAClC;AAAE,mBAAO,KAAK,iBAAiB,IAAI;AAAA,UAAG;AAAA,QAC1C,WAAW,gBAAgB,mBAAmB;AAC5C,cAAI,UAAU,KAAK,aAAa;AAChC,kBAAQ,QAAQ,KAAK,IAAI;AAAA,QAC3B,WAAW,gBAAgB,eAAe;AACxC,cAAI,UAAU,KAAK,aAAa;AAChC,cAAI,KAAK,qBACP;AAAE,yBAAa,QAAQ,QAAQ,QAAQ,IAAI,IAAI;AAAA,UAAI,OAEnD;AAAE,yBAAa,QAAQ,QAAQ,QAAQ,IAAI,IAAI,MAAM,QAAQ,IAAI,QAAQ,IAAI,IAAI;AAAA,UAAI;AACvF,kBAAQ,UAAU,KAAK,IAAI;AAAA,QAC7B,OAAO;AACL,mBAASd,KAAI,KAAK,WAAW,SAAS,GAAGA,MAAK,GAAG,EAAEA,IAAG;AACpD,gBAAI,UAAU,KAAK,WAAWA,EAAC;AAC/B,gBAAI,QAAQ,QAAQ,QAAQ,IAAI,IAAI,MAAM,EAAG,QAAQ,QAAQ,sBAAuB,QAAQ,QAAQ,CAAC,MAAM,SACvG,CAAC,KAAK,2BAA2B,OAAO,KAAK,QAAQ,UAAU,QAAQ,IAAI,IAAI,IAAI;AACrF,2BAAa;AACb;AAAA,YACF;AACA,oBAAQ,IAAI,KAAK,IAAI;AACrB,gBAAI,KAAK,YAAa,QAAQ,QAAQ,WACpC;AAAE,qBAAO,KAAK,iBAAiB,IAAI;AAAA,YAAG;AACxC,gBAAI,QAAQ,QAAQ,WAAW;AAAE;AAAA,YAAM;AAAA,UACzC;AAAA,QACF;AACA,YAAI,YAAY;AAAE,eAAK,iBAAiB,KAAM,iBAAiB,OAAO,6BAA8B;AAAA,QAAG;AAAA,MACzG;AAEA,WAAK,mBAAmB,SAAS,IAAI;AAEnC,YAAI,KAAK,WAAW,CAAC,EAAE,QAAQ,QAAQ,GAAG,IAAI,MAAM,MAChD,KAAK,WAAW,CAAC,EAAE,IAAI,QAAQ,GAAG,IAAI,MAAM,IAAI;AAClD,eAAK,iBAAiB,GAAG,IAAI,IAAI;AAAA,QACnC;AAAA,MACF;AAEA,WAAK,eAAe,WAAW;AAC7B,eAAO,KAAK,WAAW,KAAK,WAAW,SAAS,CAAC;AAAA,MACnD;AAEA,WAAK,kBAAkB,WAAW;AAChC,iBAASA,KAAI,KAAK,WAAW,SAAS,KAAIA,MAAK;AAC7C,cAAI,QAAQ,KAAK,WAAWA,EAAC;AAC7B,cAAI,MAAM,QAAQ,WAAW;AAAE,mBAAO;AAAA,UAAM;AAAA,QAC9C;AAAA,MACF;AAGA,WAAK,mBAAmB,WAAW;AACjC,iBAASA,KAAI,KAAK,WAAW,SAAS,KAAIA,MAAK;AAC7C,cAAI,QAAQ,KAAK,WAAWA,EAAC;AAC7B,cAAI,MAAM,QAAQ,aAAa,EAAE,MAAM,QAAQ,cAAc;AAAE,mBAAO;AAAA,UAAM;AAAA,QAC9E;AAAA,MACF;AAEA,UAAI,OAAO,SAASe,MAAK,QAAQ,KAAK,KAAK;AACzC,aAAK,OAAO;AACZ,aAAK,QAAQ;AACb,aAAK,MAAM;AACX,YAAI,OAAO,QAAQ,WACjB;AAAE,eAAK,MAAM,IAAI,eAAe,QAAQ,GAAG;AAAA,QAAG;AAChD,YAAI,OAAO,QAAQ,kBACjB;AAAE,eAAK,aAAa,OAAO,QAAQ;AAAA,QAAkB;AACvD,YAAI,OAAO,QAAQ,QACjB;AAAE,eAAK,QAAQ,CAAC,KAAK,CAAC;AAAA,QAAG;AAAA,MAC7B;AAIA,UAAI,OAAO,OAAO;AAElB,WAAK,YAAY,WAAW;AAC1B,eAAO,IAAI,KAAK,MAAM,KAAK,OAAO,KAAK,QAAQ;AAAA,MACjD;AAEA,WAAK,cAAc,SAAS,KAAK,KAAK;AACpC,eAAO,IAAI,KAAK,MAAM,KAAK,GAAG;AAAA,MAChC;AAIA,eAAS,aAAa,MAAM,MAAM,KAAK,KAAK;AAC1C,aAAK,OAAO;AACZ,aAAK,MAAM;AACX,YAAI,KAAK,QAAQ,WACf;AAAE,eAAK,IAAI,MAAM;AAAA,QAAK;AACxB,YAAI,KAAK,QAAQ,QACf;AAAE,eAAK,MAAM,CAAC,IAAI;AAAA,QAAK;AACzB,eAAO;AAAA,MACT;AAEA,WAAK,aAAa,SAAS,MAAM,MAAM;AACrC,eAAO,aAAa,KAAK,MAAM,MAAM,MAAM,KAAK,YAAY,KAAK,aAAa;AAAA,MAChF;AAIA,WAAK,eAAe,SAAS,MAAM,MAAM,KAAK,KAAK;AACjD,eAAO,aAAa,KAAK,MAAM,MAAM,MAAM,KAAK,GAAG;AAAA,MACrD;AAEA,WAAK,WAAW,SAAS,MAAM;AAC7B,YAAI,UAAU,IAAI,KAAK,MAAM,KAAK,OAAO,KAAK,QAAQ;AACtD,iBAAS,QAAQ,MAAM;AAAE,kBAAQ,IAAI,IAAI,KAAK,IAAI;AAAA,QAAG;AACrD,eAAO;AAAA,MACT;AAGA,UAAI,6BAA6B;AAOjC,UAAI,wBAAwB;AAC5B,UAAI,yBAAyB,wBAAwB;AACrD,UAAI,yBAAyB;AAC7B,UAAI,yBAAyB,yBAAyB;AACtD,UAAI,yBAAyB;AAC7B,UAAI,yBAAyB;AAE7B,UAAI,0BAA0B;AAAA,QAC5B,GAAG;AAAA,QACH,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,MACN;AAGA,UAAI,kCAAkC;AAEtC,UAAI,mCAAmC;AAAA,QACrC,GAAG;AAAA,QACH,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,MACN;AAGA,UAAI,+BAA+B;AAGnC,UAAI,oBAAoB;AACxB,UAAI,qBAAqB,oBAAoB;AAC7C,UAAI,qBAAqB,qBAAqB;AAC9C,UAAI,qBAAqB,qBAAqB;AAC9C,UAAI,qBAAqB,qBAAqB;AAC9C,UAAI,qBAAqB,qBAAqB,MAAM;AAEpD,UAAI,sBAAsB;AAAA,QACxB,GAAG;AAAA,QACH,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,MACN;AAEA,UAAI,OAAO,CAAC;AACZ,eAAS,iBAAiBJ,cAAa;AACrC,YAAI,IAAI,KAAKA,YAAW,IAAI;AAAA,UAC1B,QAAQ,YAAY,wBAAwBA,YAAW,IAAI,MAAM,4BAA4B;AAAA,UAC7F,iBAAiB,YAAY,iCAAiCA,YAAW,CAAC;AAAA,UAC1E,WAAW;AAAA,YACT,kBAAkB,YAAY,4BAA4B;AAAA,YAC1D,QAAQ,YAAY,oBAAoBA,YAAW,CAAC;AAAA,UACtD;AAAA,QACF;AACA,UAAE,UAAU,oBAAoB,EAAE,UAAU;AAE5C,UAAE,UAAU,KAAK,EAAE,UAAU;AAC7B,UAAE,UAAU,KAAK,EAAE,UAAU;AAC7B,UAAE,UAAU,MAAM,EAAE,UAAU;AAAA,MAChC;AAEA,eAAS,IAAI,GAAG,OAAO,CAAC,GAAG,IAAI,IAAI,IAAI,IAAI,EAAE,GAAG,IAAI,KAAK,QAAQ,KAAK,GAAG;AACvE,YAAI,cAAc,KAAK,CAAC;AAExB,yBAAiB,WAAW;AAAA,MAC9B;AAEA,UAAI,OAAO,OAAO;AAIlB,UAAI,WAAW,SAASK,UAAS,QAAQ,MAAM;AAE7C,aAAK,SAAS;AAEd,aAAK,OAAO,QAAQ;AAAA,MACtB;AAEA,eAAS,UAAU,gBAAgB,SAAS,cAAe,KAAK;AAG9D,iBAASC,QAAO,MAAMA,OAAMA,QAAOA,MAAK,QAAQ;AAC9C,mBAAS,QAAQ,KAAK,OAAO,QAAQ,MAAM,QAAQ;AACjD,gBAAIA,MAAK,SAAS,MAAM,QAAQA,UAAS,OAAO;AAAE,qBAAO;AAAA,YAAK;AAAA,UAChE;AAAA,QACF;AACA,eAAO;AAAA,MACT;AAEA,eAAS,UAAU,UAAU,SAAS,UAAW;AAC/C,eAAO,IAAI,SAAS,KAAK,QAAQ,KAAK,IAAI;AAAA,MAC5C;AAEA,UAAI,wBAAwB,SAASC,uBAAsB,QAAQ;AACjE,aAAK,SAAS;AACd,aAAK,aAAa,SAAS,OAAO,QAAQ,eAAe,IAAI,OAAO,OAAO,OAAO,QAAQ,eAAe,IAAI,MAAM,OAAO,OAAO,QAAQ,eAAe,KAAK,MAAM,OAAO,OAAO,QAAQ,eAAe,KAAK,MAAM;AACnN,aAAK,oBAAoB,KAAK,OAAO,QAAQ,eAAe,KAAK,KAAK,OAAO,QAAQ,WAAW;AAChG,aAAK,SAAS;AACd,aAAK,QAAQ;AACb,aAAK,QAAQ;AACb,aAAK,UAAU;AACf,aAAK,UAAU;AACf,aAAK,UAAU;AACf,aAAK,MAAM;AACX,aAAK,eAAe;AACpB,aAAK,kBAAkB;AACvB,aAAK,8BAA8B;AACnC,aAAK,qBAAqB;AAC1B,aAAK,mBAAmB;AACxB,aAAK,aAAa,uBAAO,OAAO,IAAI;AACpC,aAAK,qBAAqB,CAAC;AAC3B,aAAK,WAAW;AAAA,MAClB;AAEA,4BAAsB,UAAU,QAAQ,SAAS,MAAO,OAAO,SAAS,OAAO;AAC7E,YAAI,cAAc,MAAM,QAAQ,GAAG,MAAM;AACzC,YAAI,UAAU,MAAM,QAAQ,GAAG,MAAM;AACrC,aAAK,QAAQ,QAAQ;AACrB,aAAK,SAAS,UAAU;AACxB,aAAK,QAAQ;AACb,YAAI,eAAe,KAAK,OAAO,QAAQ,eAAe,IAAI;AACxD,eAAK,UAAU;AACf,eAAK,UAAU;AACf,eAAK,UAAU;AAAA,QACjB,OAAO;AACL,eAAK,UAAU,WAAW,KAAK,OAAO,QAAQ,eAAe;AAC7D,eAAK,UAAU;AACf,eAAK,UAAU,WAAW,KAAK,OAAO,QAAQ,eAAe;AAAA,QAC/D;AAAA,MACF;AAEA,4BAAsB,UAAU,QAAQ,SAAS,MAAO,SAAS;AAC/D,aAAK,OAAO,iBAAiB,KAAK,OAAQ,kCAAmC,KAAK,SAAU,QAAQ,OAAQ;AAAA,MAC9G;AAIA,4BAAsB,UAAU,KAAK,SAAS,GAAIlB,IAAG,QAAQ;AACzD,YAAK,WAAW,OAAS,UAAS;AAEpC,YAAI,IAAI,KAAK;AACb,YAAI,IAAI,EAAE;AACV,YAAIA,MAAK,GAAG;AACV,iBAAO;AAAA,QACT;AACA,YAAI,IAAI,EAAE,WAAWA,EAAC;AACtB,YAAI,EAAE,UAAU,KAAK,YAAY,KAAK,SAAU,KAAK,SAAUA,KAAI,KAAK,GAAG;AACzE,iBAAO;AAAA,QACT;AACA,YAAI,OAAO,EAAE,WAAWA,KAAI,CAAC;AAC7B,eAAO,QAAQ,SAAU,QAAQ,SAAU,KAAK,MAAM,OAAO,WAAY;AAAA,MAC3E;AAEA,4BAAsB,UAAU,YAAY,SAAS,UAAWA,IAAG,QAAQ;AACvE,YAAK,WAAW,OAAS,UAAS;AAEpC,YAAI,IAAI,KAAK;AACb,YAAI,IAAI,EAAE;AACV,YAAIA,MAAK,GAAG;AACV,iBAAO;AAAA,QACT;AACA,YAAI,IAAI,EAAE,WAAWA,EAAC,GAAG;AACzB,YAAI,EAAE,UAAU,KAAK,YAAY,KAAK,SAAU,KAAK,SAAUA,KAAI,KAAK,MACnE,OAAO,EAAE,WAAWA,KAAI,CAAC,KAAK,SAAU,OAAO,OAAQ;AAC1D,iBAAOA,KAAI;AAAA,QACb;AACA,eAAOA,KAAI;AAAA,MACb;AAEA,4BAAsB,UAAU,UAAU,SAAS,QAAS,QAAQ;AAChE,YAAK,WAAW,OAAS,UAAS;AAEpC,eAAO,KAAK,GAAG,KAAK,KAAK,MAAM;AAAA,MACjC;AAEA,4BAAsB,UAAU,YAAY,SAAS,UAAW,QAAQ;AACpE,YAAK,WAAW,OAAS,UAAS;AAEpC,eAAO,KAAK,GAAG,KAAK,UAAU,KAAK,KAAK,MAAM,GAAG,MAAM;AAAA,MACzD;AAEA,4BAAsB,UAAU,UAAU,SAAS,QAAS,QAAQ;AAChE,YAAK,WAAW,OAAS,UAAS;AAEpC,aAAK,MAAM,KAAK,UAAU,KAAK,KAAK,MAAM;AAAA,MAC5C;AAEA,4BAAsB,UAAU,MAAM,SAAS,IAAK,IAAI,QAAQ;AAC5D,YAAK,WAAW,OAAS,UAAS;AAEpC,YAAI,KAAK,QAAQ,MAAM,MAAM,IAAI;AAC/B,eAAK,QAAQ,MAAM;AACnB,iBAAO;AAAA,QACT;AACA,eAAO;AAAA,MACT;AAEA,4BAAsB,UAAU,WAAW,SAAS,SAAU,KAAK,QAAQ;AACvE,YAAK,WAAW,OAAS,UAAS;AAEpC,YAAI,MAAM,KAAK;AACf,iBAASA,KAAI,GAAGU,QAAO,KAAKV,KAAIU,MAAK,QAAQV,MAAK,GAAG;AACnD,cAAI,KAAKU,MAAKV,EAAC;AAEb,cAAI,UAAU,KAAK,GAAG,KAAK,MAAM;AACnC,cAAI,YAAY,MAAM,YAAY,IAAI;AACpC,mBAAO;AAAA,UACT;AACA,gBAAM,KAAK,UAAU,KAAK,MAAM;AAAA,QAClC;AACA,aAAK,MAAM;AACX,eAAO;AAAA,MACT;AAQA,WAAK,sBAAsB,SAAS,OAAO;AACzC,YAAI,aAAa,MAAM;AACvB,YAAI,QAAQ,MAAM;AAElB,YAAI,IAAI;AACR,YAAI,IAAI;AAER,iBAASA,KAAI,GAAGA,KAAI,MAAM,QAAQA,MAAK;AACrC,cAAI,OAAO,MAAM,OAAOA,EAAC;AACzB,cAAI,WAAW,QAAQ,IAAI,MAAM,IAAI;AACnC,iBAAK,MAAM,MAAM,OAAO,iCAAiC;AAAA,UAC3D;AACA,cAAI,MAAM,QAAQ,MAAMA,KAAI,CAAC,IAAI,IAAI;AACnC,iBAAK,MAAM,MAAM,OAAO,mCAAmC;AAAA,UAC7D;AACA,cAAI,SAAS,KAAK;AAAE,gBAAI;AAAA,UAAM;AAC9B,cAAI,SAAS,KAAK;AAAE,gBAAI;AAAA,UAAM;AAAA,QAChC;AACA,YAAI,KAAK,QAAQ,eAAe,MAAM,KAAK,GAAG;AAC5C,eAAK,MAAM,MAAM,OAAO,iCAAiC;AAAA,QAC3D;AAAA,MACF;AAEA,eAAS,QAAQ,KAAK;AACpB,iBAAS,KAAK,KAAK;AAAE,iBAAO;AAAA,QAAK;AACjC,eAAO;AAAA,MACT;AAQA,WAAK,wBAAwB,SAAS,OAAO;AAC3C,aAAK,eAAe,KAAK;AAOzB,YAAI,CAAC,MAAM,WAAW,KAAK,QAAQ,eAAe,KAAK,QAAQ,MAAM,UAAU,GAAG;AAChF,gBAAM,UAAU;AAChB,eAAK,eAAe,KAAK;AAAA,QAC3B;AAAA,MACF;AAGA,WAAK,iBAAiB,SAAS,OAAO;AACpC,cAAM,MAAM;AACZ,cAAM,eAAe;AACrB,cAAM,kBAAkB;AACxB,cAAM,8BAA8B;AACpC,cAAM,qBAAqB;AAC3B,cAAM,mBAAmB;AACzB,cAAM,aAAa,uBAAO,OAAO,IAAI;AACrC,cAAM,mBAAmB,SAAS;AAClC,cAAM,WAAW;AAEjB,aAAK,mBAAmB,KAAK;AAE7B,YAAI,MAAM,QAAQ,MAAM,OAAO,QAAQ;AAErC,cAAI,MAAM;AAAA,YAAI;AAAA;AAAA,UAAY,GAAG;AAC3B,kBAAM,MAAM,eAAe;AAAA,UAC7B;AACA,cAAI,MAAM;AAAA,YAAI;AAAA;AAAA,UAAY,KAAK,MAAM;AAAA,YAAI;AAAA;AAAA,UAAY,GAAG;AACtD,kBAAM,MAAM,0BAA0B;AAAA,UACxC;AAAA,QACF;AACA,YAAI,MAAM,mBAAmB,MAAM,oBAAoB;AACrD,gBAAM,MAAM,gBAAgB;AAAA,QAC9B;AACA,iBAASA,KAAI,GAAGU,QAAO,MAAM,oBAAoBV,KAAIU,MAAK,QAAQV,MAAK,GAAG;AACxE,cAAI,OAAOU,MAAKV,EAAC;AAEjB,cAAI,CAAC,MAAM,WAAW,IAAI,GAAG;AAC3B,kBAAM,MAAM,kCAAkC;AAAA,UAChD;AAAA,QACF;AAAA,MACF;AAGA,WAAK,qBAAqB,SAAS,OAAO;AACxC,YAAI,mBAAmB,KAAK,QAAQ,eAAe;AACnD,YAAI,kBAAkB;AAAE,gBAAM,WAAW,IAAI,SAAS,MAAM,UAAU,IAAI;AAAA,QAAG;AAC7E,aAAK,mBAAmB,KAAK;AAC7B,eAAO,MAAM;AAAA,UAAI;AAAA;AAAA,QAAY,GAAG;AAC9B,cAAI,kBAAkB;AAAE,kBAAM,WAAW,MAAM,SAAS,QAAQ;AAAA,UAAG;AACnE,eAAK,mBAAmB,KAAK;AAAA,QAC/B;AACA,YAAI,kBAAkB;AAAE,gBAAM,WAAW,MAAM,SAAS;AAAA,QAAQ;AAGhE,YAAI,KAAK,qBAAqB,OAAO,IAAI,GAAG;AAC1C,gBAAM,MAAM,mBAAmB;AAAA,QACjC;AACA,YAAI,MAAM;AAAA,UAAI;AAAA;AAAA,QAAY,GAAG;AAC3B,gBAAM,MAAM,0BAA0B;AAAA,QACxC;AAAA,MACF;AAGA,WAAK,qBAAqB,SAAS,OAAO;AACxC,eAAO,MAAM,MAAM,MAAM,OAAO,UAAU,KAAK,eAAe,KAAK,GAAG;AAAA,QAAC;AAAA,MACzE;AAGA,WAAK,iBAAiB,SAAS,OAAO;AACpC,YAAI,KAAK,oBAAoB,KAAK,GAAG;AAInC,cAAI,MAAM,+BAA+B,KAAK,qBAAqB,KAAK,GAAG;AAEzE,gBAAI,MAAM,SAAS;AACjB,oBAAM,MAAM,oBAAoB;AAAA,YAClC;AAAA,UACF;AACA,iBAAO;AAAA,QACT;AAEA,YAAI,MAAM,UAAU,KAAK,eAAe,KAAK,IAAI,KAAK,uBAAuB,KAAK,GAAG;AACnF,eAAK,qBAAqB,KAAK;AAC/B,iBAAO;AAAA,QACT;AAEA,eAAO;AAAA,MACT;AAGA,WAAK,sBAAsB,SAAS,OAAO;AACzC,YAAI,QAAQ,MAAM;AAClB,cAAM,8BAA8B;AAGpC,YAAI,MAAM;AAAA,UAAI;AAAA;AAAA,QAAY,KAAK,MAAM;AAAA,UAAI;AAAA;AAAA,QAAY,GAAG;AACtD,iBAAO;AAAA,QACT;AAGA,YAAI,MAAM;AAAA,UAAI;AAAA;AAAA,QAAY,GAAG;AAC3B,cAAI,MAAM;AAAA,YAAI;AAAA;AAAA,UAAY,KAAK,MAAM;AAAA,YAAI;AAAA;AAAA,UAAY,GAAG;AACtD,mBAAO;AAAA,UACT;AACA,gBAAM,MAAM;AAAA,QACd;AAGA,YAAI,MAAM;AAAA,UAAI;AAAA;AAAA,QAAY,KAAK,MAAM;AAAA,UAAI;AAAA;AAAA,QAAY,GAAG;AACtD,cAAI,aAAa;AACjB,cAAI,KAAK,QAAQ,eAAe,GAAG;AACjC,yBAAa,MAAM;AAAA,cAAI;AAAA;AAAA,YAAY;AAAA,UACrC;AACA,cAAI,MAAM;AAAA,YAAI;AAAA;AAAA,UAAY,KAAK,MAAM;AAAA,YAAI;AAAA;AAAA,UAAY,GAAG;AACtD,iBAAK,mBAAmB,KAAK;AAC7B,gBAAI,CAAC,MAAM;AAAA,cAAI;AAAA;AAAA,YAAY,GAAG;AAC5B,oBAAM,MAAM,oBAAoB;AAAA,YAClC;AACA,kBAAM,8BAA8B,CAAC;AACrC,mBAAO;AAAA,UACT;AAAA,QACF;AAEA,cAAM,MAAM;AACZ,eAAO;AAAA,MACT;AAGA,WAAK,uBAAuB,SAAS,OAAO,SAAS;AACnD,YAAK,YAAY,OAAS,WAAU;AAEpC,YAAI,KAAK,2BAA2B,OAAO,OAAO,GAAG;AACnD,gBAAM;AAAA,YAAI;AAAA;AAAA,UAAY;AACtB,iBAAO;AAAA,QACT;AACA,eAAO;AAAA,MACT;AAGA,WAAK,6BAA6B,SAAS,OAAO,SAAS;AACzD,eACE,MAAM;AAAA,UAAI;AAAA;AAAA,QAAY,KACtB,MAAM;AAAA,UAAI;AAAA;AAAA,QAAY,KACtB,MAAM;AAAA,UAAI;AAAA;AAAA,QAAY,KACtB,KAAK,2BAA2B,OAAO,OAAO;AAAA,MAElD;AACA,WAAK,6BAA6B,SAAS,OAAO,SAAS;AACzD,YAAI,QAAQ,MAAM;AAClB,YAAI,MAAM;AAAA,UAAI;AAAA;AAAA,QAAY,GAAG;AAC3B,cAAI,MAAM,GAAG,MAAM;AACnB,cAAI,KAAK,wBAAwB,KAAK,GAAG;AACvC,kBAAM,MAAM;AACZ,gBAAI,MAAM;AAAA,cAAI;AAAA;AAAA,YAAY,KAAK,KAAK,wBAAwB,KAAK,GAAG;AAClE,oBAAM,MAAM;AAAA,YACd;AACA,gBAAI,MAAM;AAAA,cAAI;AAAA;AAAA,YAAY,GAAG;AAE3B,kBAAI,QAAQ,MAAM,MAAM,OAAO,CAAC,SAAS;AACvC,sBAAM,MAAM,uCAAuC;AAAA,cACrD;AACA,qBAAO;AAAA,YACT;AAAA,UACF;AACA,cAAI,MAAM,WAAW,CAAC,SAAS;AAC7B,kBAAM,MAAM,uBAAuB;AAAA,UACrC;AACA,gBAAM,MAAM;AAAA,QACd;AACA,eAAO;AAAA,MACT;AAGA,WAAK,iBAAiB,SAAS,OAAO;AACpC,eACE,KAAK,4BAA4B,KAAK,KACtC,MAAM;AAAA,UAAI;AAAA;AAAA,QAAY,KACtB,KAAK,mCAAmC,KAAK,KAC7C,KAAK,yBAAyB,KAAK,KACnC,KAAK,2BAA2B,KAAK,KACrC,KAAK,yBAAyB,KAAK;AAAA,MAEvC;AACA,WAAK,qCAAqC,SAAS,OAAO;AACxD,YAAI,QAAQ,MAAM;AAClB,YAAI,MAAM;AAAA,UAAI;AAAA;AAAA,QAAY,GAAG;AAC3B,cAAI,KAAK,qBAAqB,KAAK,GAAG;AACpC,mBAAO;AAAA,UACT;AACA,gBAAM,MAAM;AAAA,QACd;AACA,eAAO;AAAA,MACT;AACA,WAAK,6BAA6B,SAAS,OAAO;AAChD,YAAI,QAAQ,MAAM;AAClB,YAAI,MAAM;AAAA,UAAI;AAAA;AAAA,QAAY,GAAG;AAC3B,cAAI,MAAM;AAAA,YAAI;AAAA;AAAA,UAAY,GAAG;AAC3B,gBAAI,KAAK,QAAQ,eAAe,IAAI;AAClC,kBAAI,eAAe,KAAK,oBAAoB,KAAK;AACjD,kBAAI,YAAY,MAAM;AAAA,gBAAI;AAAA;AAAA,cAAY;AACtC,kBAAI,gBAAgB,WAAW;AAC7B,yBAASA,KAAI,GAAGA,KAAI,aAAa,QAAQA,MAAK;AAC5C,sBAAI,WAAW,aAAa,OAAOA,EAAC;AACpC,sBAAI,aAAa,QAAQ,UAAUA,KAAI,CAAC,IAAI,IAAI;AAC9C,0BAAM,MAAM,wCAAwC;AAAA,kBACtD;AAAA,gBACF;AACA,oBAAI,WAAW;AACb,sBAAI,kBAAkB,KAAK,oBAAoB,KAAK;AACpD,sBAAI,CAAC,gBAAgB,CAAC,mBAAmB,MAAM,QAAQ,MAAM,IAAc;AACzE,0BAAM,MAAM,sCAAsC;AAAA,kBACpD;AACA,2BAAS,MAAM,GAAG,MAAM,gBAAgB,QAAQ,OAAO;AACrD,wBAAI,aAAa,gBAAgB,OAAO,GAAG;AAC3C,wBACE,gBAAgB,QAAQ,YAAY,MAAM,CAAC,IAAI,MAC/C,aAAa,QAAQ,UAAU,IAAI,IACnC;AACA,4BAAM,MAAM,wCAAwC;AAAA,oBACtD;AAAA,kBACF;AAAA,gBACF;AAAA,cACF;AAAA,YACF;AACA,gBAAI,MAAM;AAAA,cAAI;AAAA;AAAA,YAAY,GAAG;AAC3B,mBAAK,mBAAmB,KAAK;AAC7B,kBAAI,MAAM;AAAA,gBAAI;AAAA;AAAA,cAAY,GAAG;AAC3B,uBAAO;AAAA,cACT;AACA,oBAAM,MAAM,oBAAoB;AAAA,YAClC;AAAA,UACF;AACA,gBAAM,MAAM;AAAA,QACd;AACA,eAAO;AAAA,MACT;AACA,WAAK,2BAA2B,SAAS,OAAO;AAC9C,YAAI,MAAM;AAAA,UAAI;AAAA;AAAA,QAAY,GAAG;AAC3B,cAAI,KAAK,QAAQ,eAAe,GAAG;AACjC,iBAAK,sBAAsB,KAAK;AAAA,UAClC,WAAW,MAAM,QAAQ,MAAM,IAAc;AAC3C,kBAAM,MAAM,eAAe;AAAA,UAC7B;AACA,eAAK,mBAAmB,KAAK;AAC7B,cAAI,MAAM;AAAA,YAAI;AAAA;AAAA,UAAY,GAAG;AAC3B,kBAAM,sBAAsB;AAC5B,mBAAO;AAAA,UACT;AACA,gBAAM,MAAM,oBAAoB;AAAA,QAClC;AACA,eAAO;AAAA,MACT;AAIA,WAAK,sBAAsB,SAAS,OAAO;AACzC,YAAI,YAAY;AAChB,YAAI,KAAK;AACT,gBAAQ,KAAK,MAAM,QAAQ,OAAO,MAAM,4BAA4B,EAAE,GAAG;AACvE,uBAAa,kBAAkB,EAAE;AACjC,gBAAM,QAAQ;AAAA,QAChB;AACA,eAAO;AAAA,MACT;AAGA,eAAS,4BAA4B,IAAI;AACvC,eAAO,OAAO,OAAgB,OAAO,OAAgB,OAAO;AAAA,MAC9D;AAGA,WAAK,yBAAyB,SAAS,OAAO;AAC5C,eACE,MAAM;AAAA,UAAI;AAAA;AAAA,QAAY,KACtB,KAAK,mCAAmC,KAAK,KAC7C,KAAK,yBAAyB,KAAK,KACnC,KAAK,2BAA2B,KAAK,KACrC,KAAK,yBAAyB,KAAK,KACnC,KAAK,kCAAkC,KAAK,KAC5C,KAAK,mCAAmC,KAAK;AAAA,MAEjD;AAGA,WAAK,oCAAoC,SAAS,OAAO;AACvD,YAAI,KAAK,2BAA2B,OAAO,IAAI,GAAG;AAChD,gBAAM,MAAM,mBAAmB;AAAA,QACjC;AACA,eAAO;AAAA,MACT;AAGA,WAAK,4BAA4B,SAAS,OAAO;AAC/C,YAAI,KAAK,MAAM,QAAQ;AACvB,YAAI,kBAAkB,EAAE,GAAG;AACzB,gBAAM,eAAe;AACrB,gBAAM,QAAQ;AACd,iBAAO;AAAA,QACT;AACA,eAAO;AAAA,MACT;AACA,eAAS,kBAAkB,IAAI;AAC7B,eACE,OAAO,MACP,MAAM,MAAgB,MAAM,MAC5B,OAAO,MACP,OAAO,MACP,MAAM,MAAgB,MAAM,MAC5B,MAAM,OAAgB,MAAM;AAAA,MAEhC;AAIA,WAAK,8BAA8B,SAAS,OAAO;AACjD,YAAI,QAAQ,MAAM;AAClB,YAAI,KAAK;AACT,gBAAQ,KAAK,MAAM,QAAQ,OAAO,MAAM,CAAC,kBAAkB,EAAE,GAAG;AAC9D,gBAAM,QAAQ;AAAA,QAChB;AACA,eAAO,MAAM,QAAQ;AAAA,MACvB;AAGA,WAAK,qCAAqC,SAAS,OAAO;AACxD,YAAI,KAAK,MAAM,QAAQ;AACvB,YACE,OAAO,MACP,OAAO,MACP,EAAE,MAAM,MAAgB,MAAM,OAC9B,OAAO,MACP,OAAO,MACP,OAAO,MACP,OAAO,MACP,OAAO,KACP;AACA,gBAAM,QAAQ;AACd,iBAAO;AAAA,QACT;AACA,eAAO;AAAA,MACT;AAKA,WAAK,wBAAwB,SAAS,OAAO;AAC3C,YAAI,MAAM;AAAA,UAAI;AAAA;AAAA,QAAY,GAAG;AAC3B,cAAI,CAAC,KAAK,oBAAoB,KAAK,GAAG;AAAE,kBAAM,MAAM,eAAe;AAAA,UAAG;AACtE,cAAI,mBAAmB,KAAK,QAAQ,eAAe;AACnD,cAAI,QAAQ,MAAM,WAAW,MAAM,eAAe;AAClD,cAAI,OAAO;AACT,gBAAI,kBAAkB;AACpB,uBAASA,KAAI,GAAGU,QAAO,OAAOV,KAAIU,MAAK,QAAQV,MAAK,GAAG;AACrD,oBAAI,QAAQU,MAAKV,EAAC;AAElB,oBAAI,CAAC,MAAM,cAAc,MAAM,QAAQ,GACrC;AAAE,wBAAM,MAAM,8BAA8B;AAAA,gBAAG;AAAA,cACnD;AAAA,YACF,OAAO;AACL,oBAAM,MAAM,8BAA8B;AAAA,YAC5C;AAAA,UACF;AACA,cAAI,kBAAkB;AACpB,aAAC,UAAU,MAAM,WAAW,MAAM,eAAe,IAAI,CAAC,IAAI,KAAK,MAAM,QAAQ;AAAA,UAC/E,OAAO;AACL,kBAAM,WAAW,MAAM,eAAe,IAAI;AAAA,UAC5C;AAAA,QACF;AAAA,MACF;AAKA,WAAK,sBAAsB,SAAS,OAAO;AACzC,cAAM,kBAAkB;AACxB,YAAI,MAAM;AAAA,UAAI;AAAA;AAAA,QAAY,GAAG;AAC3B,cAAI,KAAK,+BAA+B,KAAK,KAAK,MAAM;AAAA,YAAI;AAAA;AAAA,UAAY,GAAG;AACzE,mBAAO;AAAA,UACT;AACA,gBAAM,MAAM,4BAA4B;AAAA,QAC1C;AACA,eAAO;AAAA,MACT;AAMA,WAAK,iCAAiC,SAAS,OAAO;AACpD,cAAM,kBAAkB;AACxB,YAAI,KAAK,gCAAgC,KAAK,GAAG;AAC/C,gBAAM,mBAAmB,kBAAkB,MAAM,YAAY;AAC7D,iBAAO,KAAK,+BAA+B,KAAK,GAAG;AACjD,kBAAM,mBAAmB,kBAAkB,MAAM,YAAY;AAAA,UAC/D;AACA,iBAAO;AAAA,QACT;AACA,eAAO;AAAA,MACT;AAOA,WAAK,kCAAkC,SAAS,OAAO;AACrD,YAAI,QAAQ,MAAM;AAClB,YAAI,SAAS,KAAK,QAAQ,eAAe;AACzC,YAAI,KAAK,MAAM,QAAQ,MAAM;AAC7B,cAAM,QAAQ,MAAM;AAEpB,YAAI,OAAO,MAAgB,KAAK,sCAAsC,OAAO,MAAM,GAAG;AACpF,eAAK,MAAM;AAAA,QACb;AACA,YAAI,wBAAwB,EAAE,GAAG;AAC/B,gBAAM,eAAe;AACrB,iBAAO;AAAA,QACT;AAEA,cAAM,MAAM;AACZ,eAAO;AAAA,MACT;AACA,eAAS,wBAAwB,IAAI;AACnC,eAAO,kBAAkB,IAAI,IAAI,KAAK,OAAO,MAAgB,OAAO;AAAA,MACtE;AASA,WAAK,iCAAiC,SAAS,OAAO;AACpD,YAAI,QAAQ,MAAM;AAClB,YAAI,SAAS,KAAK,QAAQ,eAAe;AACzC,YAAI,KAAK,MAAM,QAAQ,MAAM;AAC7B,cAAM,QAAQ,MAAM;AAEpB,YAAI,OAAO,MAAgB,KAAK,sCAAsC,OAAO,MAAM,GAAG;AACpF,eAAK,MAAM;AAAA,QACb;AACA,YAAI,uBAAuB,EAAE,GAAG;AAC9B,gBAAM,eAAe;AACrB,iBAAO;AAAA,QACT;AAEA,cAAM,MAAM;AACZ,eAAO;AAAA,MACT;AACA,eAAS,uBAAuB,IAAI;AAClC,eAAO,iBAAiB,IAAI,IAAI,KAAK,OAAO,MAAgB,OAAO,MAAgB,OAAO,QAAuB,OAAO;AAAA,MAC1H;AAGA,WAAK,uBAAuB,SAAS,OAAO;AAC1C,YACE,KAAK,wBAAwB,KAAK,KAClC,KAAK,+BAA+B,KAAK,KACzC,KAAK,0BAA0B,KAAK,KACnC,MAAM,WAAW,KAAK,qBAAqB,KAAK,GACjD;AACA,iBAAO;AAAA,QACT;AACA,YAAI,MAAM,SAAS;AAEjB,cAAI,MAAM,QAAQ,MAAM,IAAc;AACpC,kBAAM,MAAM,wBAAwB;AAAA,UACtC;AACA,gBAAM,MAAM,gBAAgB;AAAA,QAC9B;AACA,eAAO;AAAA,MACT;AACA,WAAK,0BAA0B,SAAS,OAAO;AAC7C,YAAI,QAAQ,MAAM;AAClB,YAAI,KAAK,wBAAwB,KAAK,GAAG;AACvC,cAAI,IAAI,MAAM;AACd,cAAI,MAAM,SAAS;AAEjB,gBAAI,IAAI,MAAM,kBAAkB;AAC9B,oBAAM,mBAAmB;AAAA,YAC3B;AACA,mBAAO;AAAA,UACT;AACA,cAAI,KAAK,MAAM,oBAAoB;AACjC,mBAAO;AAAA,UACT;AACA,gBAAM,MAAM;AAAA,QACd;AACA,eAAO;AAAA,MACT;AACA,WAAK,uBAAuB,SAAS,OAAO;AAC1C,YAAI,MAAM;AAAA,UAAI;AAAA;AAAA,QAAY,GAAG;AAC3B,cAAI,KAAK,oBAAoB,KAAK,GAAG;AACnC,kBAAM,mBAAmB,KAAK,MAAM,eAAe;AACnD,mBAAO;AAAA,UACT;AACA,gBAAM,MAAM,yBAAyB;AAAA,QACvC;AACA,eAAO;AAAA,MACT;AAGA,WAAK,4BAA4B,SAAS,OAAO;AAC/C,eACE,KAAK,wBAAwB,KAAK,KAClC,KAAK,yBAAyB,KAAK,KACnC,KAAK,eAAe,KAAK,KACzB,KAAK,4BAA4B,KAAK,KACtC,KAAK,sCAAsC,OAAO,KAAK,KACtD,CAAC,MAAM,WAAW,KAAK,oCAAoC,KAAK,KACjE,KAAK,yBAAyB,KAAK;AAAA,MAEvC;AACA,WAAK,2BAA2B,SAAS,OAAO;AAC9C,YAAI,QAAQ,MAAM;AAClB,YAAI,MAAM;AAAA,UAAI;AAAA;AAAA,QAAY,GAAG;AAC3B,cAAI,KAAK,wBAAwB,KAAK,GAAG;AACvC,mBAAO;AAAA,UACT;AACA,gBAAM,MAAM;AAAA,QACd;AACA,eAAO;AAAA,MACT;AACA,WAAK,iBAAiB,SAAS,OAAO;AACpC,YAAI,MAAM,QAAQ,MAAM,MAAgB,CAAC,eAAe,MAAM,UAAU,CAAC,GAAG;AAC1E,gBAAM,eAAe;AACrB,gBAAM,QAAQ;AACd,iBAAO;AAAA,QACT;AACA,eAAO;AAAA,MACT;AAGA,WAAK,0BAA0B,SAAS,OAAO;AAC7C,YAAI,KAAK,MAAM,QAAQ;AACvB,YAAI,OAAO,KAAc;AACvB,gBAAM,eAAe;AACrB,gBAAM,QAAQ;AACd,iBAAO;AAAA,QACT;AACA,YAAI,OAAO,KAAc;AACvB,gBAAM,eAAe;AACrB,gBAAM,QAAQ;AACd,iBAAO;AAAA,QACT;AACA,YAAI,OAAO,KAAc;AACvB,gBAAM,eAAe;AACrB,gBAAM,QAAQ;AACd,iBAAO;AAAA,QACT;AACA,YAAI,OAAO,KAAc;AACvB,gBAAM,eAAe;AACrB,gBAAM,QAAQ;AACd,iBAAO;AAAA,QACT;AACA,YAAI,OAAO,KAAc;AACvB,gBAAM,eAAe;AACrB,gBAAM,QAAQ;AACd,iBAAO;AAAA,QACT;AACA,eAAO;AAAA,MACT;AAGA,WAAK,0BAA0B,SAAS,OAAO;AAC7C,YAAI,KAAK,MAAM,QAAQ;AACvB,YAAI,gBAAgB,EAAE,GAAG;AACvB,gBAAM,eAAe,KAAK;AAC1B,gBAAM,QAAQ;AACd,iBAAO;AAAA,QACT;AACA,eAAO;AAAA,MACT;AACA,eAAS,gBAAgB,IAAI;AAC3B,eACG,MAAM,MAAgB,MAAM,MAC5B,MAAM,MAAgB,MAAM;AAAA,MAEjC;AAGA,WAAK,wCAAwC,SAAS,OAAO,QAAQ;AACnE,YAAK,WAAW,OAAS,UAAS;AAElC,YAAI,QAAQ,MAAM;AAClB,YAAI,UAAU,UAAU,MAAM;AAE9B,YAAI,MAAM;AAAA,UAAI;AAAA;AAAA,QAAY,GAAG;AAC3B,cAAI,KAAK,yBAAyB,OAAO,CAAC,GAAG;AAC3C,gBAAI,OAAO,MAAM;AACjB,gBAAI,WAAW,QAAQ,SAAU,QAAQ,OAAQ;AAC/C,kBAAI,mBAAmB,MAAM;AAC7B,kBAAI,MAAM;AAAA,gBAAI;AAAA;AAAA,cAAY,KAAK,MAAM;AAAA,gBAAI;AAAA;AAAA,cAAY,KAAK,KAAK,yBAAyB,OAAO,CAAC,GAAG;AACjG,oBAAI,QAAQ,MAAM;AAClB,oBAAI,SAAS,SAAU,SAAS,OAAQ;AACtC,wBAAM,gBAAgB,OAAO,SAAU,QAAS,QAAQ,SAAU;AAClE,yBAAO;AAAA,gBACT;AAAA,cACF;AACA,oBAAM,MAAM;AACZ,oBAAM,eAAe;AAAA,YACvB;AACA,mBAAO;AAAA,UACT;AACA,cACE,WACA,MAAM;AAAA,YAAI;AAAA;AAAA,UAAY,KACtB,KAAK,oBAAoB,KAAK,KAC9B,MAAM;AAAA,YAAI;AAAA;AAAA,UAAY,KACtB,eAAe,MAAM,YAAY,GACjC;AACA,mBAAO;AAAA,UACT;AACA,cAAI,SAAS;AACX,kBAAM,MAAM,wBAAwB;AAAA,UACtC;AACA,gBAAM,MAAM;AAAA,QACd;AAEA,eAAO;AAAA,MACT;AACA,eAAS,eAAe,IAAI;AAC1B,eAAO,MAAM,KAAK,MAAM;AAAA,MAC1B;AAGA,WAAK,2BAA2B,SAAS,OAAO;AAC9C,YAAI,MAAM,SAAS;AACjB,cAAI,KAAK,0BAA0B,KAAK,GAAG;AACzC,mBAAO;AAAA,UACT;AACA,cAAI,MAAM;AAAA,YAAI;AAAA;AAAA,UAAY,GAAG;AAC3B,kBAAM,eAAe;AACrB,mBAAO;AAAA,UACT;AACA,iBAAO;AAAA,QACT;AAEA,YAAI,KAAK,MAAM,QAAQ;AACvB,YAAI,OAAO,OAAiB,CAAC,MAAM,WAAW,OAAO,MAAe;AAClE,gBAAM,eAAe;AACrB,gBAAM,QAAQ;AACd,iBAAO;AAAA,QACT;AAEA,eAAO;AAAA,MACT;AAGA,WAAK,0BAA0B,SAAS,OAAO;AAC7C,cAAM,eAAe;AACrB,YAAI,KAAK,MAAM,QAAQ;AACvB,YAAI,MAAM,MAAgB,MAAM,IAAc;AAC5C,aAAG;AACD,kBAAM,eAAe,KAAK,MAAM,gBAAgB,KAAK;AACrD,kBAAM,QAAQ;AAAA,UAChB,UAAU,KAAK,MAAM,QAAQ,MAAM,MAAgB,MAAM;AACzD,iBAAO;AAAA,QACT;AACA,eAAO;AAAA,MACT;AAIA,UAAI,cAAc;AAClB,UAAI,YAAY;AAChB,UAAI,gBAAgB;AAGpB,WAAK,iCAAiC,SAAS,OAAO;AACpD,YAAI,KAAK,MAAM,QAAQ;AAEvB,YAAI,uBAAuB,EAAE,GAAG;AAC9B,gBAAM,eAAe;AACrB,gBAAM,QAAQ;AACd,iBAAO;AAAA,QACT;AAEA,YAAI,SAAS;AACb,YACE,MAAM,WACN,KAAK,QAAQ,eAAe,OAC1B,SAAS,OAAO,OAAiB,OAAO,MAC1C;AACA,gBAAM,eAAe;AACrB,gBAAM,QAAQ;AACd,cAAI;AACJ,cACE,MAAM;AAAA,YAAI;AAAA;AAAA,UAAY,MACrB,SAAS,KAAK,yCAAyC,KAAK,MAC7D,MAAM;AAAA,YAAI;AAAA;AAAA,UAAY,GACtB;AACA,gBAAI,UAAU,WAAW,eAAe;AAAE,oBAAM,MAAM,uBAAuB;AAAA,YAAG;AAChF,mBAAO;AAAA,UACT;AACA,gBAAM,MAAM,uBAAuB;AAAA,QACrC;AAEA,eAAO;AAAA,MACT;AAEA,eAAS,uBAAuB,IAAI;AAClC,eACE,OAAO,OACP,OAAO,MACP,OAAO,OACP,OAAO,MACP,OAAO,OACP,OAAO;AAAA,MAEX;AAKA,WAAK,2CAA2C,SAAS,OAAO;AAC9D,YAAI,QAAQ,MAAM;AAGlB,YAAI,KAAK,8BAA8B,KAAK,KAAK,MAAM;AAAA,UAAI;AAAA;AAAA,QAAY,GAAG;AACxE,cAAI,OAAO,MAAM;AACjB,cAAI,KAAK,+BAA+B,KAAK,GAAG;AAC9C,gBAAIY,SAAQ,MAAM;AAClB,iBAAK,2CAA2C,OAAO,MAAMA,MAAK;AAClE,mBAAO;AAAA,UACT;AAAA,QACF;AACA,cAAM,MAAM;AAGZ,YAAI,KAAK,yCAAyC,KAAK,GAAG;AACxD,cAAI,cAAc,MAAM;AACxB,iBAAO,KAAK,0CAA0C,OAAO,WAAW;AAAA,QAC1E;AACA,eAAO;AAAA,MACT;AAEA,WAAK,6CAA6C,SAAS,OAAO,MAAMA,QAAO;AAC7E,YAAI,CAAC,OAAO,MAAM,kBAAkB,WAAW,IAAI,GACjD;AAAE,gBAAM,MAAM,uBAAuB;AAAA,QAAG;AAC1C,YAAI,CAAC,MAAM,kBAAkB,UAAU,IAAI,EAAE,KAAKA,MAAK,GACrD;AAAE,gBAAM,MAAM,wBAAwB;AAAA,QAAG;AAAA,MAC7C;AAEA,WAAK,4CAA4C,SAAS,OAAO,aAAa;AAC5E,YAAI,MAAM,kBAAkB,OAAO,KAAK,WAAW,GAAG;AAAE,iBAAO;AAAA,QAAU;AACzE,YAAI,MAAM,WAAW,MAAM,kBAAkB,gBAAgB,KAAK,WAAW,GAAG;AAAE,iBAAO;AAAA,QAAc;AACvG,cAAM,MAAM,uBAAuB;AAAA,MACrC;AAIA,WAAK,gCAAgC,SAAS,OAAO;AACnD,YAAI,KAAK;AACT,cAAM,kBAAkB;AACxB,eAAO,+BAA+B,KAAK,MAAM,QAAQ,CAAC,GAAG;AAC3D,gBAAM,mBAAmB,kBAAkB,EAAE;AAC7C,gBAAM,QAAQ;AAAA,QAChB;AACA,eAAO,MAAM,oBAAoB;AAAA,MACnC;AAEA,eAAS,+BAA+B,IAAI;AAC1C,eAAO,gBAAgB,EAAE,KAAK,OAAO;AAAA,MACvC;AAIA,WAAK,iCAAiC,SAAS,OAAO;AACpD,YAAI,KAAK;AACT,cAAM,kBAAkB;AACxB,eAAO,gCAAgC,KAAK,MAAM,QAAQ,CAAC,GAAG;AAC5D,gBAAM,mBAAmB,kBAAkB,EAAE;AAC7C,gBAAM,QAAQ;AAAA,QAChB;AACA,eAAO,MAAM,oBAAoB;AAAA,MACnC;AACA,eAAS,gCAAgC,IAAI;AAC3C,eAAO,+BAA+B,EAAE,KAAK,eAAe,EAAE;AAAA,MAChE;AAIA,WAAK,2CAA2C,SAAS,OAAO;AAC9D,eAAO,KAAK,+BAA+B,KAAK;AAAA,MAClD;AAGA,WAAK,2BAA2B,SAAS,OAAO;AAC9C,YAAI,MAAM;AAAA,UAAI;AAAA;AAAA,QAAY,GAAG;AAC3B,cAAI,SAAS,MAAM;AAAA,YAAI;AAAA;AAAA,UAAY;AACnC,cAAI,SAAS,KAAK,qBAAqB,KAAK;AAC5C,cAAI,CAAC,MAAM;AAAA,YAAI;AAAA;AAAA,UAAY,GACzB;AAAE,kBAAM,MAAM,8BAA8B;AAAA,UAAG;AACjD,cAAI,UAAU,WAAW,eACvB;AAAE,kBAAM,MAAM,6CAA6C;AAAA,UAAG;AAChE,iBAAO;AAAA,QACT;AACA,eAAO;AAAA,MACT;AAIA,WAAK,uBAAuB,SAAS,OAAO;AAC1C,YAAI,MAAM,QAAQ,MAAM,IAAc;AAAE,iBAAO;AAAA,QAAU;AACzD,YAAI,MAAM,SAAS;AAAE,iBAAO,KAAK,0BAA0B,KAAK;AAAA,QAAE;AAClE,aAAK,2BAA2B,KAAK;AACrC,eAAO;AAAA,MACT;AAIA,WAAK,6BAA6B,SAAS,OAAO;AAChD,eAAO,KAAK,oBAAoB,KAAK,GAAG;AACtC,cAAI,OAAO,MAAM;AACjB,cAAI,MAAM;AAAA,YAAI;AAAA;AAAA,UAAY,KAAK,KAAK,oBAAoB,KAAK,GAAG;AAC9D,gBAAI,QAAQ,MAAM;AAClB,gBAAI,MAAM,YAAY,SAAS,MAAM,UAAU,KAAK;AAClD,oBAAM,MAAM,yBAAyB;AAAA,YACvC;AACA,gBAAI,SAAS,MAAM,UAAU,MAAM,OAAO,OAAO;AAC/C,oBAAM,MAAM,uCAAuC;AAAA,YACrD;AAAA,UACF;AAAA,QACF;AAAA,MACF;AAIA,WAAK,sBAAsB,SAAS,OAAO;AACzC,YAAI,QAAQ,MAAM;AAElB,YAAI,MAAM;AAAA,UAAI;AAAA;AAAA,QAAY,GAAG;AAC3B,cAAI,KAAK,sBAAsB,KAAK,GAAG;AACrC,mBAAO;AAAA,UACT;AACA,cAAI,MAAM,SAAS;AAEjB,gBAAI,OAAO,MAAM,QAAQ;AACzB,gBAAI,SAAS,MAAgB,aAAa,IAAI,GAAG;AAC/C,oBAAM,MAAM,sBAAsB;AAAA,YACpC;AACA,kBAAM,MAAM,gBAAgB;AAAA,UAC9B;AACA,gBAAM,MAAM;AAAA,QACd;AAEA,YAAI,KAAK,MAAM,QAAQ;AACvB,YAAI,OAAO,IAAc;AACvB,gBAAM,eAAe;AACrB,gBAAM,QAAQ;AACd,iBAAO;AAAA,QACT;AAEA,eAAO;AAAA,MACT;AAGA,WAAK,wBAAwB,SAAS,OAAO;AAC3C,YAAI,QAAQ,MAAM;AAElB,YAAI,MAAM;AAAA,UAAI;AAAA;AAAA,QAAY,GAAG;AAC3B,gBAAM,eAAe;AACrB,iBAAO;AAAA,QACT;AAEA,YAAI,MAAM,WAAW,MAAM;AAAA,UAAI;AAAA;AAAA,QAAY,GAAG;AAC5C,gBAAM,eAAe;AACrB,iBAAO;AAAA,QACT;AAEA,YAAI,CAAC,MAAM,WAAW,MAAM;AAAA,UAAI;AAAA;AAAA,QAAY,GAAG;AAC7C,cAAI,KAAK,6BAA6B,KAAK,GAAG;AAC5C,mBAAO;AAAA,UACT;AACA,gBAAM,MAAM;AAAA,QACd;AAEA,eACE,KAAK,+BAA+B,KAAK,KACzC,KAAK,0BAA0B,KAAK;AAAA,MAExC;AAMA,WAAK,4BAA4B,SAAS,OAAO;AAC/C,YAAI,SAAS,WAAW;AACxB,YAAI,KAAK,wBAAwB,KAAK,EAAG;AAAA,iBAAW,YAAY,KAAK,0BAA0B,KAAK,GAAG;AACrG,cAAI,cAAc,eAAe;AAAE,qBAAS;AAAA,UAAe;AAE3D,cAAI,QAAQ,MAAM;AAClB,iBAAO,MAAM;AAAA,YAAS,CAAC,IAAM,EAAI;AAAA;AAAA,UAAU,GAAG;AAC5C,gBACE,MAAM,QAAQ,MAAM,OACnB,YAAY,KAAK,0BAA0B,KAAK,IACjD;AACA,kBAAI,cAAc,eAAe;AAAE,yBAAS;AAAA,cAAW;AACvD;AAAA,YACF;AACA,kBAAM,MAAM,sCAAsC;AAAA,UACpD;AACA,cAAI,UAAU,MAAM,KAAK;AAAE,mBAAO;AAAA,UAAO;AAEzC,iBAAO,MAAM;AAAA,YAAS,CAAC,IAAM,EAAI;AAAA;AAAA,UAAU,GAAG;AAC5C,gBAAI,KAAK,0BAA0B,KAAK,GAAG;AAAE;AAAA,YAAS;AACtD,kBAAM,MAAM,sCAAsC;AAAA,UACpD;AACA,cAAI,UAAU,MAAM,KAAK;AAAE,mBAAO;AAAA,UAAO;AAAA,QAC3C,OAAO;AACL,gBAAM,MAAM,sCAAsC;AAAA,QACpD;AAEA,mBAAS;AACP,cAAI,KAAK,wBAAwB,KAAK,GAAG;AAAE;AAAA,UAAS;AACpD,sBAAY,KAAK,0BAA0B,KAAK;AAChD,cAAI,CAAC,WAAW;AAAE,mBAAO;AAAA,UAAO;AAChC,cAAI,cAAc,eAAe;AAAE,qBAAS;AAAA,UAAe;AAAA,QAC7D;AAAA,MACF;AAGA,WAAK,0BAA0B,SAAS,OAAO;AAC7C,YAAI,QAAQ,MAAM;AAClB,YAAI,KAAK,4BAA4B,KAAK,GAAG;AAC3C,cAAI,OAAO,MAAM;AACjB,cAAI,MAAM;AAAA,YAAI;AAAA;AAAA,UAAY,KAAK,KAAK,4BAA4B,KAAK,GAAG;AACtE,gBAAI,QAAQ,MAAM;AAClB,gBAAI,SAAS,MAAM,UAAU,MAAM,OAAO,OAAO;AAC/C,oBAAM,MAAM,uCAAuC;AAAA,YACrD;AACA,mBAAO;AAAA,UACT;AACA,gBAAM,MAAM;AAAA,QACd;AACA,eAAO;AAAA,MACT;AAGA,WAAK,4BAA4B,SAAS,OAAO;AAC/C,YAAI,KAAK,4BAA4B,KAAK,GAAG;AAAE,iBAAO;AAAA,QAAU;AAChE,eAAO,KAAK,iCAAiC,KAAK,KAAK,KAAK,sBAAsB,KAAK;AAAA,MACzF;AAGA,WAAK,wBAAwB,SAAS,OAAO;AAC3C,YAAI,QAAQ,MAAM;AAClB,YAAI,MAAM;AAAA,UAAI;AAAA;AAAA,QAAY,GAAG;AAC3B,cAAI,SAAS,MAAM;AAAA,YAAI;AAAA;AAAA,UAAY;AACnC,cAAI,SAAS,KAAK,qBAAqB,KAAK;AAC5C,cAAI,MAAM;AAAA,YAAI;AAAA;AAAA,UAAY,GAAG;AAC3B,gBAAI,UAAU,WAAW,eAAe;AACtC,oBAAM,MAAM,6CAA6C;AAAA,YAC3D;AACA,mBAAO;AAAA,UACT;AACA,gBAAM,MAAM;AAAA,QACd;AACA,YAAI,MAAM;AAAA,UAAI;AAAA;AAAA,QAAY,GAAG;AAC3B,cAAI,WAAW,KAAK,+BAA+B,KAAK;AACxD,cAAI,UAAU;AACZ,mBAAO;AAAA,UACT;AACA,gBAAM,MAAM;AAAA,QACd;AACA,eAAO;AAAA,MACT;AAGA,WAAK,mCAAmC,SAAS,OAAO;AACtD,YAAI,QAAQ,MAAM;AAClB,YAAI,MAAM;AAAA,UAAS,CAAC,IAAM,GAAI;AAAA;AAAA,QAAU,GAAG;AACzC,cAAI,MAAM;AAAA,YAAI;AAAA;AAAA,UAAY,GAAG;AAC3B,gBAAI,SAAS,KAAK,sCAAsC,KAAK;AAC7D,gBAAI,MAAM;AAAA,cAAI;AAAA;AAAA,YAAY,GAAG;AAC3B,qBAAO;AAAA,YACT;AAAA,UACF,OAAO;AAEL,kBAAM,MAAM,gBAAgB;AAAA,UAC9B;AACA,gBAAM,MAAM;AAAA,QACd;AACA,eAAO;AAAA,MACT;AAGA,WAAK,wCAAwC,SAAS,OAAO;AAC3D,YAAI,SAAS,KAAK,mBAAmB,KAAK;AAC1C,eAAO,MAAM;AAAA,UAAI;AAAA;AAAA,QAAY,GAAG;AAC9B,cAAI,KAAK,mBAAmB,KAAK,MAAM,eAAe;AAAE,qBAAS;AAAA,UAAe;AAAA,QAClF;AACA,eAAO;AAAA,MACT;AAIA,WAAK,qBAAqB,SAAS,OAAO;AACxC,YAAI,QAAQ;AACZ,eAAO,KAAK,4BAA4B,KAAK,GAAG;AAAE;AAAA,QAAS;AAC3D,eAAO,UAAU,IAAI,YAAY;AAAA,MACnC;AAGA,WAAK,8BAA8B,SAAS,OAAO;AACjD,YAAI,QAAQ,MAAM;AAClB,YAAI,MAAM;AAAA,UAAI;AAAA;AAAA,QAAY,GAAG;AAC3B,cACE,KAAK,0BAA0B,KAAK,KACpC,KAAK,qCAAqC,KAAK,GAC/C;AACA,mBAAO;AAAA,UACT;AACA,cAAI,MAAM;AAAA,YAAI;AAAA;AAAA,UAAY,GAAG;AAC3B,kBAAM,eAAe;AACrB,mBAAO;AAAA,UACT;AACA,gBAAM,MAAM;AACZ,iBAAO;AAAA,QACT;AACA,YAAI,KAAK,MAAM,QAAQ;AACvB,YAAI,KAAK,KAAK,OAAO,MAAM,UAAU,KAAK,4CAA4C,EAAE,GAAG;AAAE,iBAAO;AAAA,QAAM;AAC1G,YAAI,0BAA0B,EAAE,GAAG;AAAE,iBAAO;AAAA,QAAM;AAClD,cAAM,QAAQ;AACd,cAAM,eAAe;AACrB,eAAO;AAAA,MACT;AAGA,eAAS,4CAA4C,IAAI;AACvD,eACE,OAAO,MACP,MAAM,MAAgB,MAAM,MAC5B,MAAM,MAAgB,MAAM,MAC5B,OAAO,MACP,MAAM,MAAgB,MAAM,MAC5B,OAAO,MACP,OAAO,MACP,OAAO;AAAA,MAEX;AAGA,eAAS,0BAA0B,IAAI;AACrC,eACE,OAAO,MACP,OAAO,MACP,OAAO,MACP,OAAO,MACP,MAAM,MAAgB,MAAM,MAC5B,MAAM,OAAgB,MAAM;AAAA,MAEhC;AAGA,WAAK,uCAAuC,SAAS,OAAO;AAC1D,YAAI,KAAK,MAAM,QAAQ;AACvB,YAAI,6BAA6B,EAAE,GAAG;AACpC,gBAAM,eAAe;AACrB,gBAAM,QAAQ;AACd,iBAAO;AAAA,QACT;AACA,eAAO;AAAA,MACT;AAGA,eAAS,6BAA6B,IAAI;AACxC,eACE,OAAO,MACP,OAAO,MACP,OAAO,MACP,OAAO,MACP,OAAO,MACP,OAAO,MACP,MAAM,MAAgB,MAAM,MAC5B,OAAO,MACP,OAAO,MACP,OAAO;AAAA,MAEX;AAGA,WAAK,+BAA+B,SAAS,OAAO;AAClD,YAAI,KAAK,MAAM,QAAQ;AACvB,YAAI,eAAe,EAAE,KAAK,OAAO,IAAc;AAC7C,gBAAM,eAAe,KAAK;AAC1B,gBAAM,QAAQ;AACd,iBAAO;AAAA,QACT;AACA,eAAO;AAAA,MACT;AAGA,WAAK,8BAA8B,SAAS,OAAO;AACjD,YAAI,QAAQ,MAAM;AAClB,YAAI,MAAM;AAAA,UAAI;AAAA;AAAA,QAAY,GAAG;AAC3B,cAAI,KAAK,yBAAyB,OAAO,CAAC,GAAG;AAC3C,mBAAO;AAAA,UACT;AACA,cAAI,MAAM,SAAS;AACjB,kBAAM,MAAM,gBAAgB;AAAA,UAC9B;AACA,gBAAM,MAAM;AAAA,QACd;AACA,eAAO;AAAA,MACT;AAGA,WAAK,0BAA0B,SAAS,OAAO;AAC7C,YAAI,QAAQ,MAAM;AAClB,YAAI,KAAK;AACT,cAAM,eAAe;AACrB,eAAO,eAAe,KAAK,MAAM,QAAQ,CAAC,GAAG;AAC3C,gBAAM,eAAe,KAAK,MAAM,gBAAgB,KAAK;AACrD,gBAAM,QAAQ;AAAA,QAChB;AACA,eAAO,MAAM,QAAQ;AAAA,MACvB;AACA,eAAS,eAAe,IAAI;AAC1B,eAAO,MAAM,MAAgB,MAAM;AAAA,MACrC;AAGA,WAAK,sBAAsB,SAAS,OAAO;AACzC,YAAI,QAAQ,MAAM;AAClB,YAAI,KAAK;AACT,cAAM,eAAe;AACrB,eAAO,WAAW,KAAK,MAAM,QAAQ,CAAC,GAAG;AACvC,gBAAM,eAAe,KAAK,MAAM,eAAe,SAAS,EAAE;AAC1D,gBAAM,QAAQ;AAAA,QAChB;AACA,eAAO,MAAM,QAAQ;AAAA,MACvB;AACA,eAAS,WAAW,IAAI;AACtB,eACG,MAAM,MAAgB,MAAM,MAC5B,MAAM,MAAgB,MAAM,MAC5B,MAAM,MAAgB,MAAM;AAAA,MAEjC;AACA,eAAS,SAAS,IAAI;AACpB,YAAI,MAAM,MAAgB,MAAM,IAAc;AAC5C,iBAAO,MAAM,KAAK;AAAA,QACpB;AACA,YAAI,MAAM,MAAgB,MAAM,KAAc;AAC5C,iBAAO,MAAM,KAAK;AAAA,QACpB;AACA,eAAO,KAAK;AAAA,MACd;AAIA,WAAK,sCAAsC,SAAS,OAAO;AACzD,YAAI,KAAK,qBAAqB,KAAK,GAAG;AACpC,cAAI,KAAK,MAAM;AACf,cAAI,KAAK,qBAAqB,KAAK,GAAG;AACpC,gBAAI,KAAK,MAAM;AACf,gBAAI,MAAM,KAAK,KAAK,qBAAqB,KAAK,GAAG;AAC/C,oBAAM,eAAe,KAAK,KAAK,KAAK,IAAI,MAAM;AAAA,YAChD,OAAO;AACL,oBAAM,eAAe,KAAK,IAAI;AAAA,YAChC;AAAA,UACF,OAAO;AACL,kBAAM,eAAe;AAAA,UACvB;AACA,iBAAO;AAAA,QACT;AACA,eAAO;AAAA,MACT;AAGA,WAAK,uBAAuB,SAAS,OAAO;AAC1C,YAAI,KAAK,MAAM,QAAQ;AACvB,YAAI,aAAa,EAAE,GAAG;AACpB,gBAAM,eAAe,KAAK;AAC1B,gBAAM,QAAQ;AACd,iBAAO;AAAA,QACT;AACA,cAAM,eAAe;AACrB,eAAO;AAAA,MACT;AACA,eAAS,aAAa,IAAI;AACxB,eAAO,MAAM,MAAgB,MAAM;AAAA,MACrC;AAKA,WAAK,2BAA2B,SAAS,OAAO,QAAQ;AACtD,YAAI,QAAQ,MAAM;AAClB,cAAM,eAAe;AACrB,iBAASZ,KAAI,GAAGA,KAAI,QAAQ,EAAEA,IAAG;AAC/B,cAAI,KAAK,MAAM,QAAQ;AACvB,cAAI,CAAC,WAAW,EAAE,GAAG;AACnB,kBAAM,MAAM;AACZ,mBAAO;AAAA,UACT;AACA,gBAAM,eAAe,KAAK,MAAM,eAAe,SAAS,EAAE;AAC1D,gBAAM,QAAQ;AAAA,QAChB;AACA,eAAO;AAAA,MACT;AAMA,UAAI,QAAQ,SAASmB,OAAM,GAAG;AAC5B,aAAK,OAAO,EAAE;AACd,aAAK,QAAQ,EAAE;AACf,aAAK,QAAQ,EAAE;AACf,aAAK,MAAM,EAAE;AACb,YAAI,EAAE,QAAQ,WACZ;AAAE,eAAK,MAAM,IAAI,eAAe,GAAG,EAAE,UAAU,EAAE,MAAM;AAAA,QAAG;AAC5D,YAAI,EAAE,QAAQ,QACZ;AAAE,eAAK,QAAQ,CAAC,EAAE,OAAO,EAAE,GAAG;AAAA,QAAG;AAAA,MACrC;AAIA,UAAI,KAAK,OAAO;AAIhB,SAAG,OAAO,SAAS,+BAA+B;AAChD,YAAI,CAAC,iCAAiC,KAAK,KAAK,WAAW,KAAK,aAC9D;AAAE,eAAK,iBAAiB,KAAK,OAAO,gCAAgC,KAAK,KAAK,OAAO;AAAA,QAAG;AAC1F,YAAI,KAAK,QAAQ,SACf;AAAE,eAAK,QAAQ,QAAQ,IAAI,MAAM,IAAI,CAAC;AAAA,QAAG;AAE3C,aAAK,aAAa,KAAK;AACvB,aAAK,eAAe,KAAK;AACzB,aAAK,gBAAgB,KAAK;AAC1B,aAAK,kBAAkB,KAAK;AAC5B,aAAK,UAAU;AAAA,MACjB;AAEA,SAAG,WAAW,WAAW;AACvB,aAAK,KAAK;AACV,eAAO,IAAI,MAAM,IAAI;AAAA,MACvB;AAGA,UAAI,OAAO,WAAW,aACpB;AAAE,WAAG,OAAO,QAAQ,IAAI,WAAW;AACjC,cAAI,WAAW;AAEf,iBAAO;AAAA,YACL,MAAM,WAAY;AAChB,kBAAI,QAAQ,SAAS,SAAS;AAC9B,qBAAO;AAAA,gBACL,MAAM,MAAM,SAAS,QAAQ;AAAA,gBAC7B,OAAO;AAAA,cACT;AAAA,YACF;AAAA,UACF;AAAA,QACF;AAAA,MAAG;AAQL,SAAG,YAAY,WAAW;AACxB,YAAI,aAAa,KAAK,WAAW;AACjC,YAAI,CAAC,cAAc,CAAC,WAAW,eAAe;AAAE,eAAK,UAAU;AAAA,QAAG;AAElE,aAAK,QAAQ,KAAK;AAClB,YAAI,KAAK,QAAQ,WAAW;AAAE,eAAK,WAAW,KAAK,YAAY;AAAA,QAAG;AAClE,YAAI,KAAK,OAAO,KAAK,MAAM,QAAQ;AAAE,iBAAO,KAAK,YAAY,QAAQ,GAAG;AAAA,QAAE;AAE1E,YAAI,WAAW,UAAU;AAAE,iBAAO,WAAW,SAAS,IAAI;AAAA,QAAE,OACvD;AAAE,eAAK,UAAU,KAAK,kBAAkB,CAAC;AAAA,QAAG;AAAA,MACnD;AAEA,SAAG,YAAY,SAAS,MAAM;AAG5B,YAAI,kBAAkB,MAAM,KAAK,QAAQ,eAAe,CAAC,KAAK,SAAS,IACrE;AAAE,iBAAO,KAAK,SAAS;AAAA,QAAE;AAE3B,eAAO,KAAK,iBAAiB,IAAI;AAAA,MACnC;AAEA,SAAG,oBAAoB,WAAW;AAChC,YAAI,OAAO,KAAK,MAAM,WAAW,KAAK,GAAG;AACzC,YAAI,QAAQ,SAAU,QAAQ,OAAQ;AAAE,iBAAO;AAAA,QAAK;AACpD,YAAI,OAAO,KAAK,MAAM,WAAW,KAAK,MAAM,CAAC;AAC7C,eAAO,QAAQ,SAAU,QAAQ,QAAS,QAAQ,QAAQ,MAAM,OAAO;AAAA,MACzE;AAEA,SAAG,mBAAmB,WAAW;AAC/B,YAAI,WAAW,KAAK,QAAQ,aAAa,KAAK,YAAY;AAC1D,YAAI,QAAQ,KAAK,KAAK,MAAM,KAAK,MAAM,QAAQ,MAAM,KAAK,OAAO,CAAC;AAClE,YAAI,QAAQ,IAAI;AAAE,eAAK,MAAM,KAAK,MAAM,GAAG,sBAAsB;AAAA,QAAG;AACpE,aAAK,MAAM,MAAM;AACjB,YAAI,KAAK,QAAQ,WAAW;AAC1B,mBAAS,YAAa,QAAS,MAAM,QAAQ,YAAY,cAAc,KAAK,OAAO,KAAK,KAAK,GAAG,KAAK,MAAK;AACxG,cAAE,KAAK;AACP,kBAAM,KAAK,YAAY;AAAA,UACzB;AAAA,QACF;AACA,YAAI,KAAK,QAAQ,WACf;AAAE,eAAK,QAAQ;AAAA,YAAU;AAAA,YAAM,KAAK,MAAM,MAAM,QAAQ,GAAG,GAAG;AAAA,YAAG;AAAA,YAAO,KAAK;AAAA,YACtD;AAAA,YAAU,KAAK,YAAY;AAAA,UAAC;AAAA,QAAG;AAAA,MAC1D;AAEA,SAAG,kBAAkB,SAAS,WAAW;AACvC,YAAI,QAAQ,KAAK;AACjB,YAAI,WAAW,KAAK,QAAQ,aAAa,KAAK,YAAY;AAC1D,YAAI,KAAK,KAAK,MAAM,WAAW,KAAK,OAAO,SAAS;AACpD,eAAO,KAAK,MAAM,KAAK,MAAM,UAAU,CAAC,UAAU,EAAE,GAAG;AACrD,eAAK,KAAK,MAAM,WAAW,EAAE,KAAK,GAAG;AAAA,QACvC;AACA,YAAI,KAAK,QAAQ,WACf;AAAE,eAAK,QAAQ;AAAA,YAAU;AAAA,YAAO,KAAK,MAAM,MAAM,QAAQ,WAAW,KAAK,GAAG;AAAA,YAAG;AAAA,YAAO,KAAK;AAAA,YACpE;AAAA,YAAU,KAAK,YAAY;AAAA,UAAC;AAAA,QAAG;AAAA,MAC1D;AAKA,SAAG,YAAY,WAAW;AACxB,aAAM,QAAO,KAAK,MAAM,KAAK,MAAM,QAAQ;AACzC,cAAI,KAAK,KAAK,MAAM,WAAW,KAAK,GAAG;AACvC,kBAAQ,IAAI;AAAA,YACZ,KAAK;AAAA,YAAI,KAAK;AACZ,gBAAE,KAAK;AACP;AAAA,YACF,KAAK;AACH,kBAAI,KAAK,MAAM,WAAW,KAAK,MAAM,CAAC,MAAM,IAAI;AAC9C,kBAAE,KAAK;AAAA,cACT;AAAA,YACF,KAAK;AAAA,YAAI,KAAK;AAAA,YAAM,KAAK;AACvB,gBAAE,KAAK;AACP,kBAAI,KAAK,QAAQ,WAAW;AAC1B,kBAAE,KAAK;AACP,qBAAK,YAAY,KAAK;AAAA,cACxB;AACA;AAAA,YACF,KAAK;AACH,sBAAQ,KAAK,MAAM,WAAW,KAAK,MAAM,CAAC,GAAG;AAAA,gBAC7C,KAAK;AACH,uBAAK,iBAAiB;AACtB;AAAA,gBACF,KAAK;AACH,uBAAK,gBAAgB,CAAC;AACtB;AAAA,gBACF;AACE,wBAAM;AAAA,cACR;AACA;AAAA,YACF;AACE,kBAAI,KAAK,KAAK,KAAK,MAAM,MAAM,QAAQ,mBAAmB,KAAK,OAAO,aAAa,EAAE,CAAC,GAAG;AACvF,kBAAE,KAAK;AAAA,cACT,OAAO;AACL,sBAAM;AAAA,cACR;AAAA,UACF;AAAA,QACF;AAAA,MACF;AAOA,SAAG,cAAc,SAAS,MAAM,KAAK;AACnC,aAAK,MAAM,KAAK;AAChB,YAAI,KAAK,QAAQ,WAAW;AAAE,eAAK,SAAS,KAAK,YAAY;AAAA,QAAG;AAChE,YAAI,WAAW,KAAK;AACpB,aAAK,OAAO;AACZ,aAAK,QAAQ;AAEb,aAAK,cAAc,QAAQ;AAAA,MAC7B;AAWA,SAAG,gBAAgB,WAAW;AAC5B,YAAI,OAAO,KAAK,MAAM,WAAW,KAAK,MAAM,CAAC;AAC7C,YAAI,QAAQ,MAAM,QAAQ,IAAI;AAAE,iBAAO,KAAK,WAAW,IAAI;AAAA,QAAE;AAC7D,YAAI,QAAQ,KAAK,MAAM,WAAW,KAAK,MAAM,CAAC;AAC9C,YAAI,KAAK,QAAQ,eAAe,KAAK,SAAS,MAAM,UAAU,IAAI;AAChE,eAAK,OAAO;AACZ,iBAAO,KAAK,YAAY,QAAQ,QAAQ;AAAA,QAC1C,OAAO;AACL,YAAE,KAAK;AACP,iBAAO,KAAK,YAAY,QAAQ,GAAG;AAAA,QACrC;AAAA,MACF;AAEA,SAAG,kBAAkB,WAAW;AAC9B,YAAI,OAAO,KAAK,MAAM,WAAW,KAAK,MAAM,CAAC;AAC7C,YAAI,KAAK,aAAa;AAAE,YAAE,KAAK;AAAK,iBAAO,KAAK,WAAW;AAAA,QAAE;AAC7D,YAAI,SAAS,IAAI;AAAE,iBAAO,KAAK,SAAS,QAAQ,QAAQ,CAAC;AAAA,QAAE;AAC3D,eAAO,KAAK,SAAS,QAAQ,OAAO,CAAC;AAAA,MACvC;AAEA,SAAG,4BAA4B,SAAS,MAAM;AAC5C,YAAI,OAAO,KAAK,MAAM,WAAW,KAAK,MAAM,CAAC;AAC7C,YAAI,OAAO;AACX,YAAI,YAAY,SAAS,KAAK,QAAQ,OAAO,QAAQ;AAGrD,YAAI,KAAK,QAAQ,eAAe,KAAK,SAAS,MAAM,SAAS,IAAI;AAC/D,YAAE;AACF,sBAAY,QAAQ;AACpB,iBAAO,KAAK,MAAM,WAAW,KAAK,MAAM,CAAC;AAAA,QAC3C;AAEA,YAAI,SAAS,IAAI;AAAE,iBAAO,KAAK,SAAS,QAAQ,QAAQ,OAAO,CAAC;AAAA,QAAE;AAClE,eAAO,KAAK,SAAS,WAAW,IAAI;AAAA,MACtC;AAEA,SAAG,qBAAqB,SAAS,MAAM;AACrC,YAAI,OAAO,KAAK,MAAM,WAAW,KAAK,MAAM,CAAC;AAC7C,YAAI,SAAS,MAAM;AACjB,cAAI,KAAK,QAAQ,eAAe,IAAI;AAClC,gBAAI,QAAQ,KAAK,MAAM,WAAW,KAAK,MAAM,CAAC;AAC9C,gBAAI,UAAU,IAAI;AAAE,qBAAO,KAAK,SAAS,QAAQ,QAAQ,CAAC;AAAA,YAAE;AAAA,UAC9D;AACA,iBAAO,KAAK,SAAS,SAAS,MAAM,QAAQ,YAAY,QAAQ,YAAY,CAAC;AAAA,QAC/E;AACA,YAAI,SAAS,IAAI;AAAE,iBAAO,KAAK,SAAS,QAAQ,QAAQ,CAAC;AAAA,QAAE;AAC3D,eAAO,KAAK,SAAS,SAAS,MAAM,QAAQ,YAAY,QAAQ,YAAY,CAAC;AAAA,MAC/E;AAEA,SAAG,kBAAkB,WAAW;AAC9B,YAAI,OAAO,KAAK,MAAM,WAAW,KAAK,MAAM,CAAC;AAC7C,YAAI,SAAS,IAAI;AAAE,iBAAO,KAAK,SAAS,QAAQ,QAAQ,CAAC;AAAA,QAAE;AAC3D,eAAO,KAAK,SAAS,QAAQ,YAAY,CAAC;AAAA,MAC5C;AAEA,SAAG,qBAAqB,SAAS,MAAM;AACrC,YAAI,OAAO,KAAK,MAAM,WAAW,KAAK,MAAM,CAAC;AAC7C,YAAI,SAAS,MAAM;AACjB,cAAI,SAAS,MAAM,CAAC,KAAK,YAAY,KAAK,MAAM,WAAW,KAAK,MAAM,CAAC,MAAM,OACxE,KAAK,eAAe,KAAK,UAAU,KAAK,KAAK,MAAM,MAAM,KAAK,YAAY,KAAK,GAAG,CAAC,IAAI;AAE1F,iBAAK,gBAAgB,CAAC;AACtB,iBAAK,UAAU;AACf,mBAAO,KAAK,UAAU;AAAA,UACxB;AACA,iBAAO,KAAK,SAAS,QAAQ,QAAQ,CAAC;AAAA,QACxC;AACA,YAAI,SAAS,IAAI;AAAE,iBAAO,KAAK,SAAS,QAAQ,QAAQ,CAAC;AAAA,QAAE;AAC3D,eAAO,KAAK,SAAS,QAAQ,SAAS,CAAC;AAAA,MACzC;AAEA,SAAG,kBAAkB,SAAS,MAAM;AAClC,YAAI,OAAO,KAAK,MAAM,WAAW,KAAK,MAAM,CAAC;AAC7C,YAAI,OAAO;AACX,YAAI,SAAS,MAAM;AACjB,iBAAO,SAAS,MAAM,KAAK,MAAM,WAAW,KAAK,MAAM,CAAC,MAAM,KAAK,IAAI;AACvE,cAAI,KAAK,MAAM,WAAW,KAAK,MAAM,IAAI,MAAM,IAAI;AAAE,mBAAO,KAAK,SAAS,QAAQ,QAAQ,OAAO,CAAC;AAAA,UAAE;AACpG,iBAAO,KAAK,SAAS,QAAQ,UAAU,IAAI;AAAA,QAC7C;AACA,YAAI,SAAS,MAAM,SAAS,MAAM,CAAC,KAAK,YAAY,KAAK,MAAM,WAAW,KAAK,MAAM,CAAC,MAAM,MACxF,KAAK,MAAM,WAAW,KAAK,MAAM,CAAC,MAAM,IAAI;AAE9C,eAAK,gBAAgB,CAAC;AACtB,eAAK,UAAU;AACf,iBAAO,KAAK,UAAU;AAAA,QACxB;AACA,YAAI,SAAS,IAAI;AAAE,iBAAO;AAAA,QAAG;AAC7B,eAAO,KAAK,SAAS,QAAQ,YAAY,IAAI;AAAA,MAC/C;AAEA,SAAG,oBAAoB,SAAS,MAAM;AACpC,YAAI,OAAO,KAAK,MAAM,WAAW,KAAK,MAAM,CAAC;AAC7C,YAAI,SAAS,IAAI;AAAE,iBAAO,KAAK,SAAS,QAAQ,UAAU,KAAK,MAAM,WAAW,KAAK,MAAM,CAAC,MAAM,KAAK,IAAI,CAAC;AAAA,QAAE;AAC9G,YAAI,SAAS,MAAM,SAAS,MAAM,KAAK,QAAQ,eAAe,GAAG;AAC/D,eAAK,OAAO;AACZ,iBAAO,KAAK,YAAY,QAAQ,KAAK;AAAA,QACvC;AACA,eAAO,KAAK,SAAS,SAAS,KAAK,QAAQ,KAAK,QAAQ,QAAQ,CAAC;AAAA,MACnE;AAEA,SAAG,qBAAqB,WAAW;AACjC,YAAIR,eAAc,KAAK,QAAQ;AAC/B,YAAIA,gBAAe,IAAI;AACrB,cAAI,OAAO,KAAK,MAAM,WAAW,KAAK,MAAM,CAAC;AAC7C,cAAI,SAAS,IAAI;AACf,gBAAI,QAAQ,KAAK,MAAM,WAAW,KAAK,MAAM,CAAC;AAC9C,gBAAI,QAAQ,MAAM,QAAQ,IAAI;AAAE,qBAAO,KAAK,SAAS,QAAQ,aAAa,CAAC;AAAA,YAAE;AAAA,UAC/E;AACA,cAAI,SAAS,IAAI;AACf,gBAAIA,gBAAe,IAAI;AACrB,kBAAI,UAAU,KAAK,MAAM,WAAW,KAAK,MAAM,CAAC;AAChD,kBAAI,YAAY,IAAI;AAAE,uBAAO,KAAK,SAAS,QAAQ,QAAQ,CAAC;AAAA,cAAE;AAAA,YAChE;AACA,mBAAO,KAAK,SAAS,QAAQ,UAAU,CAAC;AAAA,UAC1C;AAAA,QACF;AACA,eAAO,KAAK,SAAS,QAAQ,UAAU,CAAC;AAAA,MAC1C;AAEA,SAAG,uBAAuB,WAAW;AACnC,YAAIA,eAAc,KAAK,QAAQ;AAC/B,YAAI,OAAO;AACX,YAAIA,gBAAe,IAAI;AACrB,YAAE,KAAK;AACP,iBAAO,KAAK,kBAAkB;AAC9B,cAAI,kBAAkB,MAAM,IAAI,KAAK,SAAS,IAAc;AAC1D,mBAAO,KAAK,YAAY,QAAQ,WAAW,KAAK,UAAU,CAAC;AAAA,UAC7D;AAAA,QACF;AAEA,aAAK,MAAM,KAAK,KAAK,2BAA2B,kBAAkB,IAAI,IAAI,GAAG;AAAA,MAC/E;AAEA,SAAG,mBAAmB,SAAS,MAAM;AACnC,gBAAQ,MAAM;AAAA;AAAA;AAAA,UAGd,KAAK;AACH,mBAAO,KAAK,cAAc;AAAA;AAAA,UAG5B,KAAK;AAAI,cAAE,KAAK;AAAK,mBAAO,KAAK,YAAY,QAAQ,MAAM;AAAA,UAC3D,KAAK;AAAI,cAAE,KAAK;AAAK,mBAAO,KAAK,YAAY,QAAQ,MAAM;AAAA,UAC3D,KAAK;AAAI,cAAE,KAAK;AAAK,mBAAO,KAAK,YAAY,QAAQ,IAAI;AAAA,UACzD,KAAK;AAAI,cAAE,KAAK;AAAK,mBAAO,KAAK,YAAY,QAAQ,KAAK;AAAA,UAC1D,KAAK;AAAI,cAAE,KAAK;AAAK,mBAAO,KAAK,YAAY,QAAQ,QAAQ;AAAA,UAC7D,KAAK;AAAI,cAAE,KAAK;AAAK,mBAAO,KAAK,YAAY,QAAQ,QAAQ;AAAA,UAC7D,KAAK;AAAK,cAAE,KAAK;AAAK,mBAAO,KAAK,YAAY,QAAQ,MAAM;AAAA,UAC5D,KAAK;AAAK,cAAE,KAAK;AAAK,mBAAO,KAAK,YAAY,QAAQ,MAAM;AAAA,UAC5D,KAAK;AAAI,cAAE,KAAK;AAAK,mBAAO,KAAK,YAAY,QAAQ,KAAK;AAAA,UAE1D,KAAK;AACH,gBAAI,KAAK,QAAQ,cAAc,GAAG;AAAE;AAAA,YAAM;AAC1C,cAAE,KAAK;AACP,mBAAO,KAAK,YAAY,QAAQ,SAAS;AAAA,UAE3C,KAAK;AACH,gBAAI,OAAO,KAAK,MAAM,WAAW,KAAK,MAAM,CAAC;AAC7C,gBAAI,SAAS,OAAO,SAAS,IAAI;AAAE,qBAAO,KAAK,gBAAgB,EAAE;AAAA,YAAE;AACnE,gBAAI,KAAK,QAAQ,eAAe,GAAG;AACjC,kBAAI,SAAS,OAAO,SAAS,IAAI;AAAE,uBAAO,KAAK,gBAAgB,CAAC;AAAA,cAAE;AAClE,kBAAI,SAAS,MAAM,SAAS,IAAI;AAAE,uBAAO,KAAK,gBAAgB,CAAC;AAAA,cAAE;AAAA,YACnE;AAAA;AAAA;AAAA,UAIF,KAAK;AAAA,UAAI,KAAK;AAAA,UAAI,KAAK;AAAA,UAAI,KAAK;AAAA,UAAI,KAAK;AAAA,UAAI,KAAK;AAAA,UAAI,KAAK;AAAA,UAAI,KAAK;AAAA,UAAI,KAAK;AAC3E,mBAAO,KAAK,WAAW,KAAK;AAAA;AAAA,UAG9B,KAAK;AAAA,UAAI,KAAK;AACZ,mBAAO,KAAK,WAAW,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA,UAM7B,KAAK;AACH,mBAAO,KAAK,gBAAgB;AAAA,UAE9B,KAAK;AAAA,UAAI,KAAK;AACZ,mBAAO,KAAK,0BAA0B,IAAI;AAAA,UAE5C,KAAK;AAAA,UAAK,KAAK;AACb,mBAAO,KAAK,mBAAmB,IAAI;AAAA,UAErC,KAAK;AACH,mBAAO,KAAK,gBAAgB;AAAA,UAE9B,KAAK;AAAA,UAAI,KAAK;AACZ,mBAAO,KAAK,mBAAmB,IAAI;AAAA,UAErC,KAAK;AAAA,UAAI,KAAK;AACZ,mBAAO,KAAK,gBAAgB,IAAI;AAAA,UAElC,KAAK;AAAA,UAAI,KAAK;AACZ,mBAAO,KAAK,kBAAkB,IAAI;AAAA,UAEpC,KAAK;AACH,mBAAO,KAAK,mBAAmB;AAAA,UAEjC,KAAK;AACH,mBAAO,KAAK,SAAS,QAAQ,QAAQ,CAAC;AAAA,UAExC,KAAK;AACH,mBAAO,KAAK,qBAAqB;AAAA,QACnC;AAEA,aAAK,MAAM,KAAK,KAAK,2BAA2B,kBAAkB,IAAI,IAAI,GAAG;AAAA,MAC/E;AAEA,SAAG,WAAW,SAAS,MAAM,MAAM;AACjC,YAAI,MAAM,KAAK,MAAM,MAAM,KAAK,KAAK,KAAK,MAAM,IAAI;AACpD,aAAK,OAAO;AACZ,eAAO,KAAK,YAAY,MAAM,GAAG;AAAA,MACnC;AAEA,SAAG,aAAa,WAAW;AACzB,YAAI,SAAS,SAAS,QAAQ,KAAK;AACnC,mBAAS;AACP,cAAI,KAAK,OAAO,KAAK,MAAM,QAAQ;AAAE,iBAAK,MAAM,OAAO,iCAAiC;AAAA,UAAG;AAC3F,cAAI,KAAK,KAAK,MAAM,OAAO,KAAK,GAAG;AACnC,cAAI,UAAU,KAAK,EAAE,GAAG;AAAE,iBAAK,MAAM,OAAO,iCAAiC;AAAA,UAAG;AAChF,cAAI,CAAC,SAAS;AACZ,gBAAI,OAAO,KAAK;AAAE,wBAAU;AAAA,YAAM,WACzB,OAAO,OAAO,SAAS;AAAE,wBAAU;AAAA,YAAO,WAC1C,OAAO,OAAO,CAAC,SAAS;AAAE;AAAA,YAAM;AACzC,sBAAU,OAAO;AAAA,UACnB,OAAO;AAAE,sBAAU;AAAA,UAAO;AAC1B,YAAE,KAAK;AAAA,QACT;AACA,YAAI,UAAU,KAAK,MAAM,MAAM,OAAO,KAAK,GAAG;AAC9C,UAAE,KAAK;AACP,YAAI,aAAa,KAAK;AACtB,YAAI,QAAQ,KAAK,UAAU;AAC3B,YAAI,KAAK,aAAa;AAAE,eAAK,WAAW,UAAU;AAAA,QAAG;AAGrD,YAAI,QAAQ,KAAK,gBAAgB,KAAK,cAAc,IAAI,sBAAsB,IAAI;AAClF,cAAM,MAAM,OAAO,SAAS,KAAK;AACjC,aAAK,oBAAoB,KAAK;AAC9B,aAAK,sBAAsB,KAAK;AAGhC,YAAIC,SAAQ;AACZ,YAAI;AACF,UAAAA,SAAQ,IAAI,OAAO,SAAS,KAAK;AAAA,QACnC,SAAS,GAAG;AAAA,QAGZ;AAEA,eAAO,KAAK,YAAY,QAAQ,QAAQ,EAAC,SAAkB,OAAc,OAAOA,OAAK,CAAC;AAAA,MACxF;AAMA,SAAG,UAAU,SAAS,OAAO,KAAK,gCAAgC;AAEhE,YAAI,kBAAkB,KAAK,QAAQ,eAAe,MAAM,QAAQ;AAKhE,YAAI,8BAA8B,kCAAkC,KAAK,MAAM,WAAW,KAAK,GAAG,MAAM;AAExG,YAAI,QAAQ,KAAK,KAAK,QAAQ,GAAG,WAAW;AAC5C,iBAASZ,KAAI,GAAG,IAAI,OAAO,OAAO,WAAW,KAAKA,KAAI,GAAG,EAAEA,IAAG,EAAE,KAAK,KAAK;AACxE,cAAI,OAAO,KAAK,MAAM,WAAW,KAAK,GAAG,GAAG,MAAO;AAEnD,cAAI,mBAAmB,SAAS,IAAI;AAClC,gBAAI,6BAA6B;AAAE,mBAAK,iBAAiB,KAAK,KAAK,mEAAmE;AAAA,YAAG;AACzI,gBAAI,aAAa,IAAI;AAAE,mBAAK,iBAAiB,KAAK,KAAK,kDAAkD;AAAA,YAAG;AAC5G,gBAAIA,OAAM,GAAG;AAAE,mBAAK,iBAAiB,KAAK,KAAK,yDAAyD;AAAA,YAAG;AAC3G,uBAAW;AACX;AAAA,UACF;AAEA,cAAI,QAAQ,IAAI;AAAE,kBAAM,OAAO,KAAK;AAAA,UAAI,WAC/B,QAAQ,IAAI;AAAE,kBAAM,OAAO,KAAK;AAAA,UAAI,WACpC,QAAQ,MAAM,QAAQ,IAAI;AAAE,kBAAM,OAAO;AAAA,UAAI,OACjD;AAAE,kBAAM;AAAA,UAAU;AACvB,cAAI,OAAO,OAAO;AAAE;AAAA,UAAM;AAC1B,qBAAW;AACX,kBAAQ,QAAQ,QAAQ;AAAA,QAC1B;AAEA,YAAI,mBAAmB,aAAa,IAAI;AAAE,eAAK,iBAAiB,KAAK,MAAM,GAAG,wDAAwD;AAAA,QAAG;AACzI,YAAI,KAAK,QAAQ,SAAS,OAAO,QAAQ,KAAK,MAAM,UAAU,KAAK;AAAE,iBAAO;AAAA,QAAK;AAEjF,eAAO;AAAA,MACT;AAEA,eAAS,eAAe,KAAK,6BAA6B;AACxD,YAAI,6BAA6B;AAC/B,iBAAO,SAAS,KAAK,CAAC;AAAA,QACxB;AAGA,eAAO,WAAW,IAAI,QAAQ,MAAM,EAAE,CAAC;AAAA,MACzC;AAEA,eAAS,eAAe,KAAK;AAC3B,YAAI,OAAO,WAAW,YAAY;AAChC,iBAAO;AAAA,QACT;AAGA,eAAO,OAAO,IAAI,QAAQ,MAAM,EAAE,CAAC;AAAA,MACrC;AAEA,SAAG,kBAAkB,SAAS,OAAO;AACnC,YAAI,QAAQ,KAAK;AACjB,aAAK,OAAO;AACZ,YAAI,MAAM,KAAK,QAAQ,KAAK;AAC5B,YAAI,OAAO,MAAM;AAAE,eAAK,MAAM,KAAK,QAAQ,GAAG,8BAA8B,KAAK;AAAA,QAAG;AACpF,YAAI,KAAK,QAAQ,eAAe,MAAM,KAAK,MAAM,WAAW,KAAK,GAAG,MAAM,KAAK;AAC7E,gBAAM,eAAe,KAAK,MAAM,MAAM,OAAO,KAAK,GAAG,CAAC;AACtD,YAAE,KAAK;AAAA,QACT,WAAW,kBAAkB,KAAK,kBAAkB,CAAC,GAAG;AAAE,eAAK,MAAM,KAAK,KAAK,kCAAkC;AAAA,QAAG;AACpH,eAAO,KAAK,YAAY,QAAQ,KAAK,GAAG;AAAA,MAC1C;AAIA,SAAG,aAAa,SAAS,eAAe;AACtC,YAAI,QAAQ,KAAK;AACjB,YAAI,CAAC,iBAAiB,KAAK,QAAQ,IAAI,QAAW,IAAI,MAAM,MAAM;AAAE,eAAK,MAAM,OAAO,gBAAgB;AAAA,QAAG;AACzG,YAAI,QAAQ,KAAK,MAAM,SAAS,KAAK,KAAK,MAAM,WAAW,KAAK,MAAM;AACtE,YAAI,SAAS,KAAK,QAAQ;AAAE,eAAK,MAAM,OAAO,gBAAgB;AAAA,QAAG;AACjE,YAAI,OAAO,KAAK,MAAM,WAAW,KAAK,GAAG;AACzC,YAAI,CAAC,SAAS,CAAC,iBAAiB,KAAK,QAAQ,eAAe,MAAM,SAAS,KAAK;AAC9E,cAAI,QAAQ,eAAe,KAAK,MAAM,MAAM,OAAO,KAAK,GAAG,CAAC;AAC5D,YAAE,KAAK;AACP,cAAI,kBAAkB,KAAK,kBAAkB,CAAC,GAAG;AAAE,iBAAK,MAAM,KAAK,KAAK,kCAAkC;AAAA,UAAG;AAC7G,iBAAO,KAAK,YAAY,QAAQ,KAAK,KAAK;AAAA,QAC5C;AACA,YAAI,SAAS,OAAO,KAAK,KAAK,MAAM,MAAM,OAAO,KAAK,GAAG,CAAC,GAAG;AAAE,kBAAQ;AAAA,QAAO;AAC9E,YAAI,SAAS,MAAM,CAAC,OAAO;AACzB,YAAE,KAAK;AACP,eAAK,QAAQ,EAAE;AACf,iBAAO,KAAK,MAAM,WAAW,KAAK,GAAG;AAAA,QACvC;AACA,aAAK,SAAS,MAAM,SAAS,QAAQ,CAAC,OAAO;AAC3C,iBAAO,KAAK,MAAM,WAAW,EAAE,KAAK,GAAG;AACvC,cAAI,SAAS,MAAM,SAAS,IAAI;AAAE,cAAE,KAAK;AAAA,UAAK;AAC9C,cAAI,KAAK,QAAQ,EAAE,MAAM,MAAM;AAAE,iBAAK,MAAM,OAAO,gBAAgB;AAAA,UAAG;AAAA,QACxE;AACA,YAAI,kBAAkB,KAAK,kBAAkB,CAAC,GAAG;AAAE,eAAK,MAAM,KAAK,KAAK,kCAAkC;AAAA,QAAG;AAE7G,YAAI,MAAM,eAAe,KAAK,MAAM,MAAM,OAAO,KAAK,GAAG,GAAG,KAAK;AACjE,eAAO,KAAK,YAAY,QAAQ,KAAK,GAAG;AAAA,MAC1C;AAIA,SAAG,gBAAgB,WAAW;AAC5B,YAAI,KAAK,KAAK,MAAM,WAAW,KAAK,GAAG,GAAG;AAE1C,YAAI,OAAO,KAAK;AACd,cAAI,KAAK,QAAQ,cAAc,GAAG;AAAE,iBAAK,WAAW;AAAA,UAAG;AACvD,cAAI,UAAU,EAAE,KAAK;AACrB,iBAAO,KAAK,YAAY,KAAK,MAAM,QAAQ,KAAK,KAAK,GAAG,IAAI,KAAK,GAAG;AACpE,YAAE,KAAK;AACP,cAAI,OAAO,SAAU;AAAE,iBAAK,mBAAmB,SAAS,0BAA0B;AAAA,UAAG;AAAA,QACvF,OAAO;AACL,iBAAO,KAAK,YAAY,CAAC;AAAA,QAC3B;AACA,eAAO;AAAA,MACT;AAEA,SAAG,aAAa,SAAS,OAAO;AAC9B,YAAI,MAAM,IAAI,aAAa,EAAE,KAAK;AAClC,mBAAS;AACP,cAAI,KAAK,OAAO,KAAK,MAAM,QAAQ;AAAE,iBAAK,MAAM,KAAK,OAAO,8BAA8B;AAAA,UAAG;AAC7F,cAAI,KAAK,KAAK,MAAM,WAAW,KAAK,GAAG;AACvC,cAAI,OAAO,OAAO;AAAE;AAAA,UAAM;AAC1B,cAAI,OAAO,IAAI;AACb,mBAAO,KAAK,MAAM,MAAM,YAAY,KAAK,GAAG;AAC5C,mBAAO,KAAK,gBAAgB,KAAK;AACjC,yBAAa,KAAK;AAAA,UACpB,WAAW,OAAO,QAAU,OAAO,MAAQ;AACzC,gBAAI,KAAK,QAAQ,cAAc,IAAI;AAAE,mBAAK,MAAM,KAAK,OAAO,8BAA8B;AAAA,YAAG;AAC7F,cAAE,KAAK;AACP,gBAAI,KAAK,QAAQ,WAAW;AAC1B,mBAAK;AACL,mBAAK,YAAY,KAAK;AAAA,YACxB;AAAA,UACF,OAAO;AACL,gBAAI,UAAU,EAAE,GAAG;AAAE,mBAAK,MAAM,KAAK,OAAO,8BAA8B;AAAA,YAAG;AAC7E,cAAE,KAAK;AAAA,UACT;AAAA,QACF;AACA,eAAO,KAAK,MAAM,MAAM,YAAY,KAAK,KAAK;AAC9C,eAAO,KAAK,YAAY,QAAQ,QAAQ,GAAG;AAAA,MAC7C;AAIA,UAAI,gCAAgC,CAAC;AAErC,SAAG,uBAAuB,WAAW;AACnC,aAAK,oBAAoB;AACzB,YAAI;AACF,eAAK,cAAc;AAAA,QACrB,SAAS,KAAK;AACZ,cAAI,QAAQ,+BAA+B;AACzC,iBAAK,yBAAyB;AAAA,UAChC,OAAO;AACL,kBAAM;AAAA,UACR;AAAA,QACF;AAEA,aAAK,oBAAoB;AAAA,MAC3B;AAEA,SAAG,qBAAqB,SAAS,UAAU,SAAS;AAClD,YAAI,KAAK,qBAAqB,KAAK,QAAQ,eAAe,GAAG;AAC3D,gBAAM;AAAA,QACR,OAAO;AACL,eAAK,MAAM,UAAU,OAAO;AAAA,QAC9B;AAAA,MACF;AAEA,SAAG,gBAAgB,WAAW;AAC5B,YAAI,MAAM,IAAI,aAAa,KAAK;AAChC,mBAAS;AACP,cAAI,KAAK,OAAO,KAAK,MAAM,QAAQ;AAAE,iBAAK,MAAM,KAAK,OAAO,uBAAuB;AAAA,UAAG;AACtF,cAAI,KAAK,KAAK,MAAM,WAAW,KAAK,GAAG;AACvC,cAAI,OAAO,MAAM,OAAO,MAAM,KAAK,MAAM,WAAW,KAAK,MAAM,CAAC,MAAM,KAAK;AACzE,gBAAI,KAAK,QAAQ,KAAK,UAAU,KAAK,SAAS,QAAQ,YAAY,KAAK,SAAS,QAAQ,kBAAkB;AACxG,kBAAI,OAAO,IAAI;AACb,qBAAK,OAAO;AACZ,uBAAO,KAAK,YAAY,QAAQ,YAAY;AAAA,cAC9C,OAAO;AACL,kBAAE,KAAK;AACP,uBAAO,KAAK,YAAY,QAAQ,SAAS;AAAA,cAC3C;AAAA,YACF;AACA,mBAAO,KAAK,MAAM,MAAM,YAAY,KAAK,GAAG;AAC5C,mBAAO,KAAK,YAAY,QAAQ,UAAU,GAAG;AAAA,UAC/C;AACA,cAAI,OAAO,IAAI;AACb,mBAAO,KAAK,MAAM,MAAM,YAAY,KAAK,GAAG;AAC5C,mBAAO,KAAK,gBAAgB,IAAI;AAChC,yBAAa,KAAK;AAAA,UACpB,WAAW,UAAU,EAAE,GAAG;AACxB,mBAAO,KAAK,MAAM,MAAM,YAAY,KAAK,GAAG;AAC5C,cAAE,KAAK;AACP,oBAAQ,IAAI;AAAA,cACZ,KAAK;AACH,oBAAI,KAAK,MAAM,WAAW,KAAK,GAAG,MAAM,IAAI;AAAE,oBAAE,KAAK;AAAA,gBAAK;AAAA,cAC5D,KAAK;AACH,uBAAO;AACP;AAAA,cACF;AACE,uBAAO,OAAO,aAAa,EAAE;AAC7B;AAAA,YACF;AACA,gBAAI,KAAK,QAAQ,WAAW;AAC1B,gBAAE,KAAK;AACP,mBAAK,YAAY,KAAK;AAAA,YACxB;AACA,yBAAa,KAAK;AAAA,UACpB,OAAO;AACL,cAAE,KAAK;AAAA,UACT;AAAA,QACF;AAAA,MACF;AAGA,SAAG,2BAA2B,WAAW;AACvC,eAAO,KAAK,MAAM,KAAK,MAAM,QAAQ,KAAK,OAAO;AAC/C,kBAAQ,KAAK,MAAM,KAAK,GAAG,GAAG;AAAA,YAC9B,KAAK;AACH,gBAAE,KAAK;AACP;AAAA,YAEF,KAAK;AACH,kBAAI,KAAK,MAAM,KAAK,MAAM,CAAC,MAAM,KAAK;AAAE;AAAA,cAAM;AAAA;AAAA,YAEhD,KAAK;AACH,qBAAO,KAAK,YAAY,QAAQ,iBAAiB,KAAK,MAAM,MAAM,KAAK,OAAO,KAAK,GAAG,CAAC;AAAA,YAEzF,KAAK;AACH,kBAAI,KAAK,MAAM,KAAK,MAAM,CAAC,MAAM,MAAM;AAAE,kBAAE,KAAK;AAAA,cAAK;AAAA;AAAA,YAEvD,KAAK;AAAA,YAAM,KAAK;AAAA,YAAU,KAAK;AAC7B,gBAAE,KAAK;AACP,mBAAK,YAAY,KAAK,MAAM;AAC5B;AAAA,UACF;AAAA,QACF;AACA,aAAK,MAAM,KAAK,OAAO,uBAAuB;AAAA,MAChD;AAIA,SAAG,kBAAkB,SAAS,YAAY;AACxC,YAAI,KAAK,KAAK,MAAM,WAAW,EAAE,KAAK,GAAG;AACzC,UAAE,KAAK;AACP,gBAAQ,IAAI;AAAA,UACZ,KAAK;AAAK,mBAAO;AAAA;AAAA,UACjB,KAAK;AAAK,mBAAO;AAAA;AAAA,UACjB,KAAK;AAAK,mBAAO,OAAO,aAAa,KAAK,YAAY,CAAC,CAAC;AAAA;AAAA,UACxD,KAAK;AAAK,mBAAO,kBAAkB,KAAK,cAAc,CAAC;AAAA;AAAA,UACvD,KAAK;AAAK,mBAAO;AAAA;AAAA,UACjB,KAAK;AAAI,mBAAO;AAAA;AAAA,UAChB,KAAK;AAAK,mBAAO;AAAA;AAAA,UACjB,KAAK;AAAK,mBAAO;AAAA;AAAA,UACjB,KAAK;AAAI,gBAAI,KAAK,MAAM,WAAW,KAAK,GAAG,MAAM,IAAI;AAAE,gBAAE,KAAK;AAAA,YAAK;AAAA;AAAA,UACnE,KAAK;AACH,gBAAI,KAAK,QAAQ,WAAW;AAAE,mBAAK,YAAY,KAAK;AAAK,gBAAE,KAAK;AAAA,YAAS;AACzE,mBAAO;AAAA,UACT,KAAK;AAAA,UACL,KAAK;AACH,gBAAI,KAAK,QAAQ;AACf,mBAAK;AAAA,gBACH,KAAK,MAAM;AAAA,gBACX;AAAA,cACF;AAAA,YACF;AACA,gBAAI,YAAY;AACd,kBAAI,UAAU,KAAK,MAAM;AAEzB,mBAAK;AAAA,gBACH;AAAA,gBACA;AAAA,cACF;AAAA,YACF;AAAA,UACF;AACE,gBAAI,MAAM,MAAM,MAAM,IAAI;AACxB,kBAAI,WAAW,KAAK,MAAM,OAAO,KAAK,MAAM,GAAG,CAAC,EAAE,MAAM,SAAS,EAAE,CAAC;AACpE,kBAAI,QAAQ,SAAS,UAAU,CAAC;AAChC,kBAAI,QAAQ,KAAK;AACf,2BAAW,SAAS,MAAM,GAAG,EAAE;AAC/B,wBAAQ,SAAS,UAAU,CAAC;AAAA,cAC9B;AACA,mBAAK,OAAO,SAAS,SAAS;AAC9B,mBAAK,KAAK,MAAM,WAAW,KAAK,GAAG;AACnC,mBAAK,aAAa,OAAO,OAAO,MAAM,OAAO,QAAQ,KAAK,UAAU,aAAa;AAC/E,qBAAK;AAAA,kBACH,KAAK,MAAM,IAAI,SAAS;AAAA,kBACxB,aACI,qCACA;AAAA,gBACN;AAAA,cACF;AACA,qBAAO,OAAO,aAAa,KAAK;AAAA,YAClC;AACA,gBAAI,UAAU,EAAE,GAAG;AAGjB,kBAAI,KAAK,QAAQ,WAAW;AAAE,qBAAK,YAAY,KAAK;AAAK,kBAAE,KAAK;AAAA,cAAS;AACzE,qBAAO;AAAA,YACT;AACA,mBAAO,OAAO,aAAa,EAAE;AAAA,QAC/B;AAAA,MACF;AAIA,SAAG,cAAc,SAAS,KAAK;AAC7B,YAAI,UAAU,KAAK;AACnB,YAAI,IAAI,KAAK,QAAQ,IAAI,GAAG;AAC5B,YAAI,MAAM,MAAM;AAAE,eAAK,mBAAmB,SAAS,+BAA+B;AAAA,QAAG;AACrF,eAAO;AAAA,MACT;AAQA,SAAG,YAAY,WAAW;AACxB,aAAK,cAAc;AACnB,YAAI,OAAO,IAAI,QAAQ,MAAM,aAAa,KAAK;AAC/C,YAAI,SAAS,KAAK,QAAQ,eAAe;AACzC,eAAO,KAAK,MAAM,KAAK,MAAM,QAAQ;AACnC,cAAI,KAAK,KAAK,kBAAkB;AAChC,cAAI,iBAAiB,IAAI,MAAM,GAAG;AAChC,iBAAK,OAAO,MAAM,QAAS,IAAI;AAAA,UACjC,WAAW,OAAO,IAAI;AACpB,iBAAK,cAAc;AACnB,oBAAQ,KAAK,MAAM,MAAM,YAAY,KAAK,GAAG;AAC7C,gBAAI,WAAW,KAAK;AACpB,gBAAI,KAAK,MAAM,WAAW,EAAE,KAAK,GAAG,MAAM,KACxC;AAAE,mBAAK,mBAAmB,KAAK,KAAK,2CAA2C;AAAA,YAAG;AACpF,cAAE,KAAK;AACP,gBAAI,MAAM,KAAK,cAAc;AAC7B,gBAAI,EAAE,QAAQ,oBAAoB,kBAAkB,KAAK,MAAM,GAC7D;AAAE,mBAAK,mBAAmB,UAAU,wBAAwB;AAAA,YAAG;AACjE,oBAAQ,kBAAkB,GAAG;AAC7B,yBAAa,KAAK;AAAA,UACpB,OAAO;AACL;AAAA,UACF;AACA,kBAAQ;AAAA,QACV;AACA,eAAO,OAAO,KAAK,MAAM,MAAM,YAAY,KAAK,GAAG;AAAA,MACrD;AAKA,SAAG,WAAW,WAAW;AACvB,YAAI,OAAO,KAAK,UAAU;AAC1B,YAAI,OAAO,QAAQ;AACnB,YAAI,KAAK,SAAS,KAAK,IAAI,GAAG;AAC5B,iBAAO,SAAS,IAAI;AAAA,QACtB;AACA,eAAO,KAAK,YAAY,MAAM,IAAI;AAAA,MACpC;AAmBA,UAAI,UAAU;AAEd,aAAO,QAAQ;AAAA,QACb;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA,UAAU;AAAA,QACV,cAAc;AAAA,QACd;AAAA,QACA,aAAa;AAAA,QACb;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACF;AAQA,eAAS,MAAM,OAAO,SAAS;AAC7B,eAAO,OAAO,MAAM,OAAO,OAAO;AAAA,MACpC;AAMA,eAAS,kBAAkB,OAAO,KAAK,SAAS;AAC9C,eAAO,OAAO,kBAAkB,OAAO,KAAK,OAAO;AAAA,MACrD;AAKA,eAAS,UAAU,OAAO,SAAS;AACjC,eAAO,OAAO,UAAU,OAAO,OAAO;AAAA,MACxC;AAEA,MAAAD,SAAQ,OAAO;AACf,MAAAA,SAAQ,SAAS;AACjB,MAAAA,SAAQ,WAAW;AACnB,MAAAA,SAAQ,iBAAiB;AACzB,MAAAA,SAAQ,aAAa;AACrB,MAAAA,SAAQ,QAAQ;AAChB,MAAAA,SAAQ,YAAY;AACpB,MAAAA,SAAQ,iBAAiB;AACzB,MAAAA,SAAQ,cAAc;AACtB,MAAAA,SAAQ,mBAAmB;AAC3B,MAAAA,SAAQ,oBAAoB;AAC5B,MAAAA,SAAQ,YAAY;AACpB,MAAAA,SAAQ,eAAe;AACvB,MAAAA,SAAQ,YAAY;AACpB,MAAAA,SAAQ,aAAa;AACrB,MAAAA,SAAQ,qBAAqB;AAC7B,MAAAA,SAAQ,QAAQ;AAChB,MAAAA,SAAQ,oBAAoB;AAC5B,MAAAA,SAAQ,cAAc;AACtB,MAAAA,SAAQ,WAAW;AACnB,MAAAA,SAAQ,YAAY;AACpB,MAAAA,SAAQ,UAAU;AAAA,IAEpB,CAAE;AAAA;AAAA;;;AC7hMF;AAAA;AAAA;AAAA;AAAA,KAAC,SAAUqB,SAAQ,SAAS;AAC1B,aAAO,YAAY,YAAY,OAAO,WAAW,cAAc,QAAQ,OAAO,IAC9E,OAAO,WAAW,cAAc,OAAO,MAAM,OAAO,CAAC,SAAS,GAAG,OAAO,KACvEA,UAAS,OAAO,eAAe,cAAc,aAAaA,WAAU,MAAM,SAASA,QAAO,QAAQA,QAAO,SAAS,CAAC,GAAGA,QAAO,MAAM,OAAO,CAAC,EAAE;AAAA,IAChJ,GAAG,SAAO,SAAUC,UAAS;AAAE;AAoB7B,eAAS,OAAO,MAAM,UAAU,aAAa,OAAO,UAAU;AAC5D,YAAI,CAAC,aAAa;AAAE,wBAAc;AAAA,QAChC;AAAC,SAAC,SAAS,EAAEC,OAAM,IAAIC,WAAU;AACjC,cAAI,OAAOA,aAAYD,MAAK;AAC5B,sBAAY,IAAI,EAAEA,OAAM,IAAI,CAAC;AAC7B,cAAI,SAAS,IAAI,GAAG;AAAE,qBAAS,IAAI,EAAEA,OAAM,EAAE;AAAA,UAAG;AAAA,QAClD,GAAG,MAAM,OAAO,QAAQ;AAAA,MAC1B;AAKA,eAAS,SAAS,MAAM,UAAU,aAAa,OAAO,UAAU;AAC9D,YAAI,YAAY,CAAC;AACjB,YAAI,CAAC,aAAa;AAAE,wBAAc;AAAA,QAChC;AAAC,SAAC,SAAS,EAAEA,OAAM,IAAIC,WAAU;AACjC,cAAI,OAAOA,aAAYD,MAAK;AAC5B,cAAI,QAAQA,UAAS,UAAU,UAAU,SAAS,CAAC;AACnD,cAAI,OAAO;AAAE,sBAAU,KAAKA,KAAI;AAAA,UAAG;AACnC,sBAAY,IAAI,EAAEA,OAAM,IAAI,CAAC;AAC7B,cAAI,SAAS,IAAI,GAAG;AAAE,qBAAS,IAAI,EAAEA,OAAM,MAAM,WAAW,SAAS;AAAA,UAAG;AACxE,cAAI,OAAO;AAAE,sBAAU,IAAI;AAAA,UAAG;AAAA,QAChC,GAAG,MAAM,OAAO,QAAQ;AAAA,MAC1B;AAOA,eAAS,UAAU,MAAM,OAAO,OAAO,aAAa,UAAU;AAC5D,YAAI,UAAU,QAAQ,KAAK,OAAO,eAAe,MAAS,IAAI;AAC7D,SAAC,SAAS,EAAEA,OAAM,IAAIC,WAAU;AAC/B,kBAAQA,aAAYD,MAAK,IAAI,EAAEA,OAAM,IAAI,CAAC;AAAA,QAC5C,GAAG,MAAM,OAAO,QAAQ;AAAA,MAC1B;AAEA,eAAS,SAAS,MAAM;AACtB,YAAI,OAAO,SAAS,UAClB;AAAE,iBAAO,SAAU,MAAM;AAAE,mBAAO,SAAS;AAAA,UAAM;AAAA,QAAE,WAC5C,CAAC,MACR;AAAE,iBAAO,WAAY;AAAE,mBAAO;AAAA,UAAM;AAAA,QAAE,OAEtC;AAAE,iBAAO;AAAA,QAAK;AAAA,MAClB;AAEA,UAAI,QAAQ,SAASE,OAAM,MAAM,OAAO;AAAE,aAAK,OAAO;AAAM,aAAK,QAAQ;AAAA,MAAO;AAGhF,eAAS,KAAK,MAAM,UAAU,aAAa,OAAO,UAAU;AAC1D,YAAI,CAAC,aAAa;AAAE,wBAAc;AAAA,QAAM;AACxC,YAAI;AACH,SAAC,SAAS,EAAEF,OAAM,IAAIC,WAAU;AAC/B,cAAI,OAAOA,aAAYD,MAAK;AAC5B,sBAAY,IAAI,EAAEA,OAAM,IAAI,CAAC;AAC7B,cAAI,SAASA,OAAM;AACjB,qBAASA,OAAM,IAAI,IAAI;AACvB,mBAAOA;AAAA,UACT;AAAA,QACF,GAAG,MAAM,OAAO,QAAQ;AAAA,MAC1B;AAIA,eAAS,aAAa,MAAM,UAAU,aAAa,OAAO;AACxD,YAAI,CAAC,aAAa;AAAE,wBAAc;AAAA,QAAM;AACxC,YAAI,YAAY,CAAC,GAAG;AACnB,SAAC,SAAS,EAAEA,OAAM,IAAI,UAAU;AAC/B,cAAI,OAAO,YAAYA,MAAK;AAC5B,cAAI,QAAQA,UAAS,UAAU,UAAU,SAAS,CAAC;AACnD,cAAI,OAAO;AAAE,sBAAU,KAAKA,KAAI;AAAA,UAAG;AACnC,sBAAY,IAAI,EAAEA,OAAM,IAAI,CAAC;AAC7B,cAAI,SAASA,OAAM;AACjB,qBAASA,OAAM,MAAM,WAAW,WAAW,IAAI;AAC/C,mBAAOA;AAAA,UACT;AACA,cAAI,OAAO;AAAE,sBAAU,IAAI;AAAA,UAAG;AAAA,QAChC,GAAG,MAAM,KAAK;AAAA,MAChB;AAKA,eAAS,WAAW,MAAM,OAAO,KAAK,MAAM,aAAa,OAAO;AAC9D,YAAI,CAAC,aAAa;AAAE,wBAAc;AAAA,QAAM;AACxC,eAAO,SAAS,IAAI;AACpB,YAAI;AACF,WAAC,SAAS,EAAEA,OAAM,IAAI,UAAU;AAC9B,gBAAI,OAAO,YAAYA,MAAK;AAC5B,iBAAK,SAAS,QAAQA,MAAK,SAAS,WAC/B,OAAO,QAAQA,MAAK,OAAO,MAC9B;AAAE,0BAAY,IAAI,EAAEA,OAAM,IAAI,CAAC;AAAA,YAAG;AACpC,iBAAK,SAAS,QAAQA,MAAK,UAAU,WAChC,OAAO,QAAQA,MAAK,QAAQ,QAC7B,KAAK,MAAMA,KAAI,GACjB;AAAE,oBAAM,IAAI,MAAMA,OAAM,EAAE;AAAA,YAAE;AAAA,UAChC,GAAG,MAAM,KAAK;AAAA,QAChB,SAAS,GAAG;AACV,cAAI,aAAa,OAAO;AAAE,mBAAO;AAAA,UAAE;AACnC,gBAAM;AAAA,QACR;AAAA,MACF;AAIA,eAAS,eAAe,MAAM,KAAK,MAAM,aAAa,OAAO;AAC3D,eAAO,SAAS,IAAI;AACpB,YAAI,CAAC,aAAa;AAAE,wBAAc;AAAA,QAAM;AACxC,YAAI;AACF,WAAC,SAAS,EAAEA,OAAM,IAAI,UAAU;AAC9B,gBAAI,OAAO,YAAYA,MAAK;AAC5B,gBAAIA,MAAK,QAAQ,OAAOA,MAAK,MAAM,KAAK;AAAE;AAAA,YAAO;AACjD,wBAAY,IAAI,EAAEA,OAAM,IAAI,CAAC;AAC7B,gBAAI,KAAK,MAAMA,KAAI,GAAG;AAAE,oBAAM,IAAI,MAAMA,OAAM,EAAE;AAAA,YAAE;AAAA,UACpD,GAAG,MAAM,KAAK;AAAA,QAChB,SAAS,GAAG;AACV,cAAI,aAAa,OAAO;AAAE,mBAAO;AAAA,UAAE;AACnC,gBAAM;AAAA,QACR;AAAA,MACF;AAGA,eAAS,cAAc,MAAM,KAAK,MAAM,aAAa,OAAO;AAC1D,eAAO,SAAS,IAAI;AACpB,YAAI,CAAC,aAAa;AAAE,wBAAc;AAAA,QAAM;AACxC,YAAI;AACF,WAAC,SAAS,EAAEA,OAAM,IAAI,UAAU;AAC9B,gBAAIA,MAAK,MAAM,KAAK;AAAE;AAAA,YAAO;AAC7B,gBAAI,OAAO,YAAYA,MAAK;AAC5B,gBAAIA,MAAK,SAAS,OAAO,KAAK,MAAMA,KAAI,GAAG;AAAE,oBAAM,IAAI,MAAMA,OAAM,EAAE;AAAA,YAAE;AACvE,wBAAY,IAAI,EAAEA,OAAM,IAAI,CAAC;AAAA,UAC/B,GAAG,MAAM,KAAK;AAAA,QAChB,SAAS,GAAG;AACV,cAAI,aAAa,OAAO;AAAE,mBAAO;AAAA,UAAE;AACnC,gBAAM;AAAA,QACR;AAAA,MACF;AAGA,eAAS,eAAe,MAAM,KAAK,MAAM,aAAa,OAAO;AAC3D,eAAO,SAAS,IAAI;AACpB,YAAI,CAAC,aAAa;AAAE,wBAAc;AAAA,QAAM;AACxC,YAAI;AACH,SAAC,SAAS,EAAEA,OAAM,IAAI,UAAU;AAC/B,cAAIA,MAAK,QAAQ,KAAK;AAAE;AAAA,UAAO;AAC/B,cAAI,OAAO,YAAYA,MAAK;AAC5B,cAAIA,MAAK,OAAO,QAAQ,CAAC,OAAO,IAAI,KAAK,MAAMA,MAAK,QAAQ,KAAK,MAAMA,KAAI,GACzE;AAAE,kBAAM,IAAI,MAAMA,OAAM,EAAE;AAAA,UAAG;AAC/B,sBAAY,IAAI,EAAEA,OAAM,IAAI,CAAC;AAAA,QAC/B,GAAG,MAAM,KAAK;AACd,eAAO;AAAA,MACT;AAIA,eAAS,KAAK,OAAO,aAAa;AAChC,YAAI,UAAU,OAAO,OAAO,eAAe,IAAI;AAC/C,iBAAS,QAAQ,OAAO;AAAE,kBAAQ,IAAI,IAAI,MAAM,IAAI;AAAA,QAAG;AACvD,eAAO;AAAA,MACT;AAEA,eAAS,YAAY,MAAM,IAAI,GAAG;AAAE,UAAE,MAAM,EAAE;AAAA,MAAG;AACjD,eAAS,OAAO,OAAO,KAAK,IAAI;AAAA,MAAC;AAIjC,UAAI,OAAO,CAAC;AAEZ,WAAK,UAAU,KAAK,iBAAiB,KAAK,cAAc,SAAU,MAAM,IAAI,GAAG;AAC7E,iBAAS,IAAI,GAAG,OAAO,KAAK,MAAM,IAAI,KAAK,QAAQ,KAAK,GACtD;AACA,cAAI,OAAO,KAAK,CAAC;AAEjB,YAAE,MAAM,IAAI,WAAW;AAAA,QACzB;AAAA,MACF;AACA,WAAK,YAAY;AACjB,WAAK,iBAAiB;AACtB,WAAK,sBAAsB,KAAK,0BAA0B,KAAK,kBAC7D,SAAU,MAAM,IAAI,GAAG;AAAE,eAAO,EAAE,KAAK,YAAY,IAAI,YAAY;AAAA,MAAG;AACxE,WAAK,cAAc,SAAU,MAAM,IAAI,GAAG;AACxC,UAAE,KAAK,MAAM,IAAI,YAAY;AAC7B,UAAE,KAAK,YAAY,IAAI,WAAW;AAClC,YAAI,KAAK,WAAW;AAAE,YAAE,KAAK,WAAW,IAAI,WAAW;AAAA,QAAG;AAAA,MAC5D;AACA,WAAK,mBAAmB,SAAU,MAAM,IAAI,GAAG;AAAE,eAAO,EAAE,KAAK,MAAM,IAAI,WAAW;AAAA,MAAG;AACvF,WAAK,iBAAiB,KAAK,oBAAoB;AAC/C,WAAK,gBAAgB,SAAU,MAAM,IAAI,GAAG;AAC1C,UAAE,KAAK,QAAQ,IAAI,YAAY;AAC/B,UAAE,KAAK,MAAM,IAAI,WAAW;AAAA,MAC9B;AACA,WAAK,kBAAkB,SAAU,MAAM,IAAI,GAAG;AAC5C,UAAE,KAAK,cAAc,IAAI,YAAY;AACrC,iBAAS,IAAI,GAAG,OAAO,KAAK,OAAO,IAAI,KAAK,QAAQ,KAAK,GAAG;AAC1D,cAAI,KAAK,KAAK,CAAC;AAEf,YAAE,IAAI,EAAE;AAAA,QACV;AAAA,MACF;AACA,WAAK,aAAa,SAAU,MAAM,IAAI,GAAG;AACvC,YAAI,KAAK,MAAM;AAAE,YAAE,KAAK,MAAM,IAAI,YAAY;AAAA,QAAG;AACjD,iBAAS,IAAI,GAAG,OAAO,KAAK,YAAY,IAAI,KAAK,QAAQ,KAAK,GAC5D;AACA,cAAI,OAAO,KAAK,CAAC;AAEjB,YAAE,MAAM,IAAI,WAAW;AAAA,QACzB;AAAA,MACF;AACA,WAAK,kBAAkB,KAAK,kBAAkB,KAAK,kBAAkB,SAAU,MAAM,IAAI,GAAG;AAC1F,YAAI,KAAK,UAAU;AAAE,YAAE,KAAK,UAAU,IAAI,YAAY;AAAA,QAAG;AAAA,MAC3D;AACA,WAAK,iBAAiB,KAAK,gBACzB,SAAU,MAAM,IAAI,GAAG;AAAE,eAAO,EAAE,KAAK,UAAU,IAAI,YAAY;AAAA,MAAG;AACtE,WAAK,eAAe,SAAU,MAAM,IAAI,GAAG;AACzC,UAAE,KAAK,OAAO,IAAI,WAAW;AAC7B,YAAI,KAAK,SAAS;AAAE,YAAE,KAAK,SAAS,EAAE;AAAA,QAAG;AACzC,YAAI,KAAK,WAAW;AAAE,YAAE,KAAK,WAAW,IAAI,WAAW;AAAA,QAAG;AAAA,MAC5D;AACA,WAAK,cAAc,SAAU,MAAM,IAAI,GAAG;AACxC,YAAI,KAAK,OAAO;AAAE,YAAE,KAAK,OAAO,IAAI,SAAS;AAAA,QAAG;AAChD,UAAE,KAAK,MAAM,IAAI,WAAW;AAAA,MAC9B;AACA,WAAK,iBAAiB,KAAK,mBAAmB,SAAU,MAAM,IAAI,GAAG;AACnE,UAAE,KAAK,MAAM,IAAI,YAAY;AAC7B,UAAE,KAAK,MAAM,IAAI,WAAW;AAAA,MAC9B;AACA,WAAK,eAAe,SAAU,MAAM,IAAI,GAAG;AACzC,YAAI,KAAK,MAAM;AAAE,YAAE,KAAK,MAAM,IAAI,SAAS;AAAA,QAAG;AAC9C,YAAI,KAAK,MAAM;AAAE,YAAE,KAAK,MAAM,IAAI,YAAY;AAAA,QAAG;AACjD,YAAI,KAAK,QAAQ;AAAE,YAAE,KAAK,QAAQ,IAAI,YAAY;AAAA,QAAG;AACrD,UAAE,KAAK,MAAM,IAAI,WAAW;AAAA,MAC9B;AACA,WAAK,iBAAiB,KAAK,iBAAiB,SAAU,MAAM,IAAI,GAAG;AACjE,UAAE,KAAK,MAAM,IAAI,SAAS;AAC1B,UAAE,KAAK,OAAO,IAAI,YAAY;AAC9B,UAAE,KAAK,MAAM,IAAI,WAAW;AAAA,MAC9B;AACA,WAAK,UAAU,SAAU,MAAM,IAAI,GAAG;AACpC,YAAI,KAAK,SAAS,uBAAuB;AAAE,YAAE,MAAM,EAAE;AAAA,QAAG,OACnD;AAAE,YAAE,MAAM,IAAI,YAAY;AAAA,QAAG;AAAA,MACpC;AACA,WAAK,oBAAoB;AAEzB,WAAK,sBAAsB,SAAU,MAAM,IAAI,GAAG;AAAE,eAAO,EAAE,MAAM,IAAI,UAAU;AAAA,MAAG;AACpF,WAAK,sBAAsB,SAAU,MAAM,IAAI,GAAG;AAChD,iBAAS,IAAI,GAAG,OAAO,KAAK,cAAc,IAAI,KAAK,QAAQ,KAAK,GAC9D;AACA,cAAI,OAAO,KAAK,CAAC;AAEjB,YAAE,MAAM,EAAE;AAAA,QACZ;AAAA,MACF;AACA,WAAK,qBAAqB,SAAU,MAAM,IAAI,GAAG;AAC/C,UAAE,KAAK,IAAI,IAAI,SAAS;AACxB,YAAI,KAAK,MAAM;AAAE,YAAE,KAAK,MAAM,IAAI,YAAY;AAAA,QAAG;AAAA,MACnD;AAEA,WAAK,WAAW,SAAU,MAAM,IAAI,GAAG;AACrC,YAAI,KAAK,IAAI;AAAE,YAAE,KAAK,IAAI,IAAI,SAAS;AAAA,QAAG;AAC1C,iBAAS,IAAI,GAAG,OAAO,KAAK,QAAQ,IAAI,KAAK,QAAQ,KAAK,GACxD;AACA,cAAI,QAAQ,KAAK,CAAC;AAElB,YAAE,OAAO,IAAI,SAAS;AAAA,QACxB;AACA,UAAE,KAAK,MAAM,IAAI,KAAK,aAAa,eAAe,WAAW;AAAA,MAC/D;AAEA,WAAK,UAAU,SAAU,MAAM,IAAI,GAAG;AACpC,YAAI,KAAK,SAAS,cAChB;AAAE,YAAE,MAAM,IAAI,iBAAiB;AAAA,QAAG,WAC3B,KAAK,SAAS,oBACrB;AAAE,YAAE,MAAM,IAAI,eAAe;AAAA,QAAG,OAEhC;AAAE,YAAE,MAAM,EAAE;AAAA,QAAG;AAAA,MACnB;AACA,WAAK,kBAAkB;AACvB,WAAK,gBAAgB;AACrB,WAAK,cAAc,SAAU,MAAM,IAAI,GAAG;AAAE,eAAO,EAAE,KAAK,UAAU,IAAI,SAAS;AAAA,MAAG;AACpF,WAAK,eAAe,SAAU,MAAM,IAAI,GAAG;AACzC,iBAAS,IAAI,GAAG,OAAO,KAAK,UAAU,IAAI,KAAK,QAAQ,KAAK,GAAG;AAC7D,cAAI,MAAM,KAAK,CAAC;AAEhB,cAAI,KAAK;AAAE,cAAE,KAAK,IAAI,SAAS;AAAA,UAAG;AAAA,QACpC;AAAA,MACF;AACA,WAAK,gBAAgB,SAAU,MAAM,IAAI,GAAG;AAC1C,iBAAS,IAAI,GAAG,OAAO,KAAK,YAAY,IAAI,KAAK,QAAQ,KAAK,GAAG;AAC/D,cAAI,OAAO,KAAK,CAAC;AAEjB,cAAI,KAAK,SAAS,YAAY;AAC5B,gBAAI,KAAK,UAAU;AAAE,gBAAE,KAAK,KAAK,IAAI,YAAY;AAAA,YAAG;AACpD,cAAE,KAAK,OAAO,IAAI,SAAS;AAAA,UAC7B,WAAW,KAAK,SAAS,eAAe;AACtC,cAAE,KAAK,UAAU,IAAI,SAAS;AAAA,UAChC;AAAA,QACF;AAAA,MACF;AAEA,WAAK,aAAa;AAClB,WAAK,iBAAiB,KAAK,QAAQ,KAAK,eAAe;AACvD,WAAK,kBAAkB,SAAU,MAAM,IAAI,GAAG;AAC5C,iBAAS,IAAI,GAAG,OAAO,KAAK,UAAU,IAAI,KAAK,QAAQ,KAAK,GAAG;AAC7D,cAAI,MAAM,KAAK,CAAC;AAEhB,cAAI,KAAK;AAAE,cAAE,KAAK,IAAI,YAAY;AAAA,UAAG;AAAA,QACvC;AAAA,MACF;AACA,WAAK,mBAAmB,SAAU,MAAM,IAAI,GAAG;AAC7C,iBAAS,IAAI,GAAG,OAAO,KAAK,YAAY,IAAI,KAAK,QAAQ,KAAK,GAC5D;AACA,cAAI,OAAO,KAAK,CAAC;AAEjB,YAAE,MAAM,EAAE;AAAA,QACZ;AAAA,MACF;AACA,WAAK,qBAAqB,KAAK,0BAA0B,KAAK;AAC9D,WAAK,qBAAqB,SAAU,MAAM,IAAI,GAAG;AAC/C,iBAAS,IAAI,GAAG,OAAO,KAAK,aAAa,IAAI,KAAK,QAAQ,KAAK,GAC7D;AACA,cAAI,OAAO,KAAK,CAAC;AAEjB,YAAE,MAAM,IAAI,YAAY;AAAA,QAC1B;AAAA,MACF;AACA,WAAK,kBAAkB,SAAU,MAAM,IAAI,GAAG;AAC5C,iBAAS,IAAI,GAAG,OAAO,KAAK,QAAQ,IAAI,KAAK,QAAQ,KAAK,GACxD;AACA,cAAI,QAAQ,KAAK,CAAC;AAElB,YAAE,OAAO,EAAE;AAAA,QACb;AAEA,iBAAS,MAAM,GAAG,SAAS,KAAK,aAAa,MAAM,OAAO,QAAQ,OAAO,GACvE;AACA,cAAI,OAAO,OAAO,GAAG;AAErB,YAAE,MAAM,IAAI,YAAY;AAAA,QAC1B;AAAA,MACF;AACA,WAAK,kBAAkB;AACvB,WAAK,kBAAkB,KAAK,mBAAmB,SAAU,MAAM,IAAI,GAAG;AACpE,UAAE,KAAK,UAAU,IAAI,YAAY;AAAA,MACnC;AACA,WAAK,mBAAmB,KAAK,oBAAoB,SAAU,MAAM,IAAI,GAAG;AACtE,UAAE,KAAK,MAAM,IAAI,YAAY;AAC7B,UAAE,KAAK,OAAO,IAAI,YAAY;AAAA,MAChC;AACA,WAAK,uBAAuB,KAAK,oBAAoB,SAAU,MAAM,IAAI,GAAG;AAC1E,UAAE,KAAK,MAAM,IAAI,SAAS;AAC1B,UAAE,KAAK,OAAO,IAAI,YAAY;AAAA,MAChC;AACA,WAAK,wBAAwB,SAAU,MAAM,IAAI,GAAG;AAClD,UAAE,KAAK,MAAM,IAAI,YAAY;AAC7B,UAAE,KAAK,YAAY,IAAI,YAAY;AACnC,UAAE,KAAK,WAAW,IAAI,YAAY;AAAA,MACpC;AACA,WAAK,gBAAgB,KAAK,iBAAiB,SAAU,MAAM,IAAI,GAAG;AAChE,UAAE,KAAK,QAAQ,IAAI,YAAY;AAC/B,YAAI,KAAK,WACP;AAAE,mBAAS,IAAI,GAAG,OAAO,KAAK,WAAW,IAAI,KAAK,QAAQ,KAAK,GAC7D;AACE,gBAAI,MAAM,KAAK,CAAC;AAEhB,cAAE,KAAK,IAAI,YAAY;AAAA,UACzB;AAAA,QAAE;AAAA,MACR;AACA,WAAK,mBAAmB,SAAU,MAAM,IAAI,GAAG;AAC7C,UAAE,KAAK,QAAQ,IAAI,YAAY;AAC/B,YAAI,KAAK,UAAU;AAAE,YAAE,KAAK,UAAU,IAAI,YAAY;AAAA,QAAG;AAAA,MAC3D;AACA,WAAK,yBAAyB,KAAK,2BAA2B,SAAU,MAAM,IAAI,GAAG;AACnF,YAAI,KAAK,aACP;AAAE,YAAE,KAAK,aAAa,IAAI,KAAK,SAAS,4BAA4B,KAAK,YAAY,KAAK,cAAc,YAAY;AAAA,QAAG;AACzH,YAAI,KAAK,QAAQ;AAAE,YAAE,KAAK,QAAQ,IAAI,YAAY;AAAA,QAAG;AAAA,MACvD;AACA,WAAK,uBAAuB,SAAU,MAAM,IAAI,GAAG;AACjD,YAAI,KAAK,UACP;AAAE,YAAE,KAAK,UAAU,EAAE;AAAA,QAAG;AAC1B,UAAE,KAAK,QAAQ,IAAI,YAAY;AAAA,MACjC;AACA,WAAK,oBAAoB,SAAU,MAAM,IAAI,GAAG;AAC9C,iBAAS,IAAI,GAAG,OAAO,KAAK,YAAY,IAAI,KAAK,QAAQ,KAAK,GAC5D;AACA,cAAI,OAAO,KAAK,CAAC;AAEjB,YAAE,MAAM,EAAE;AAAA,QACZ;AACA,UAAE,KAAK,QAAQ,IAAI,YAAY;AAAA,MACjC;AACA,WAAK,mBAAmB,SAAU,MAAM,IAAI,GAAG;AAC7C,UAAE,KAAK,QAAQ,IAAI,YAAY;AAAA,MACjC;AACA,WAAK,kBAAkB,KAAK,yBAAyB,KAAK,2BAA2B,KAAK,aAAa,KAAK,oBAAoB,KAAK,UAAU;AAE/I,WAAK,2BAA2B,SAAU,MAAM,IAAI,GAAG;AACrD,UAAE,KAAK,KAAK,IAAI,YAAY;AAC5B,UAAE,KAAK,OAAO,IAAI,YAAY;AAAA,MAChC;AACA,WAAK,mBAAmB,KAAK,kBAAkB,SAAU,MAAM,IAAI,GAAG;AAAE,eAAO,EAAE,MAAM,IAAI,OAAO;AAAA,MAAG;AACrG,WAAK,QAAQ,SAAU,MAAM,IAAI,GAAG;AAClC,YAAI,KAAK,IAAI;AAAE,YAAE,KAAK,IAAI,IAAI,SAAS;AAAA,QAAG;AAC1C,YAAI,KAAK,YAAY;AAAE,YAAE,KAAK,YAAY,IAAI,YAAY;AAAA,QAAG;AAC7D,UAAE,KAAK,MAAM,EAAE;AAAA,MACjB;AACA,WAAK,YAAY,SAAU,MAAM,IAAI,GAAG;AACtC,iBAAS,IAAI,GAAG,OAAO,KAAK,MAAM,IAAI,KAAK,QAAQ,KAAK,GACtD;AACA,cAAI,MAAM,KAAK,CAAC;AAEhB,YAAE,KAAK,EAAE;AAAA,QACX;AAAA,MACF;AACA,WAAK,mBAAmB,KAAK,qBAAqB,KAAK,WAAW,SAAU,MAAM,IAAI,GAAG;AACvF,YAAI,KAAK,UAAU;AAAE,YAAE,KAAK,KAAK,IAAI,YAAY;AAAA,QAAG;AACpD,YAAI,KAAK,OAAO;AAAE,YAAE,KAAK,OAAO,IAAI,YAAY;AAAA,QAAG;AAAA,MACrD;AAEA,MAAAD,SAAQ,WAAW;AACnB,MAAAA,SAAQ,OAAO;AACf,MAAAA,SAAQ,gBAAgB;AACxB,MAAAA,SAAQ,iBAAiB;AACzB,MAAAA,SAAQ,aAAa;AACrB,MAAAA,SAAQ,iBAAiB;AACzB,MAAAA,SAAQ,OAAO;AACf,MAAAA,SAAQ,eAAe;AACvB,MAAAA,SAAQ,OAAO;AACf,MAAAA,SAAQ,YAAY;AACpB,MAAAA,SAAQ,SAAS;AAAA,IAEnB,CAAE;AAAA;AAAA;;;ACtcF;AAAA;AAAA;AAAA;AAGA,QAAM;AAAA,MACJ;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA,aAAAI;AAAA,IACF,IAAI;AAEJ,QAAM,SAAS,gBAAiB;AAChC,QAAM,OAAO;AACb,QAAM,EAAE,YAAY,IAAI,UAAQ,MAAM;AAEtC,aAAS,sBAAsB,OAAO;AACpC,aAAO,MAAM,UAAU,MAAM,UAAU,SAAS,CAAC,MAAM,MAAM;AAAA,IAC/D;AAEA,QAAM,OAAO;AACb,QAAM,2BAA2B;AAAA,MAC/B,iBAAiB,MAAM,OAAO,GAAG;AAC/B,YAAI,sBAAsB,KAAK,GAAG;AAChC,gBAAM,QAAQ,MAAM,GAAG,KAAK,GAAG,IAAI,GAAG;AACtC;AAAA,YACE,MAAM;AAAA,YACN,OAAO,KAAK,GAAG,IAAI;AAAA,UACrB;AAAA,QACF;AAEA,aAAK,KAAK,iBAAiB,MAAM,OAAO,CAAC;AAAA,MAC3C;AAAA,MACA,eAAe,MAAM,OAAO,GAAG;AAC7B,YAAI,KAAK,UAAU,MAAM;AACvB,gBAAM,gBAAgB;AAAA,QACxB;AACA,aAAK,KAAK,eAAe,MAAM,OAAO,CAAC;AAAA,MACzC;AAAA,MACA,oBAAoB,MAAM,OAAO,GAAG;AAClC,cAAM,QAAQ,MAAM,GAAG,KAAK,GAAG,IAAI,GAAG;AACtC;AAAA,UACE,MAAM;AAAA,UACN,OAAO,KAAK,GAAG,IAAI;AAAA,QACrB;AAAA,MACF;AAAA,MACA,oBAAoB;AAAA,MACpB,yBAAyB;AAAA,MACzB,kBAAkB;AAAA,MAClB,gBAAgB,MAAM,OAAO,GAAG;AAC9B,cAAM,gBAAgB;AACtB,aAAK,KAAK,gBAAgB,MAAM,OAAO,CAAC;AAAA,MAC1C;AAAA,MACA,gBAAgB,MAAM,OAAO,GAAG;AAC9B,cAAM,iBAAiB;AACvB,aAAK,KAAK,gBAAgB,MAAM,OAAO,CAAC;AAAA,MAC1C;AAAA,MACA,oBAAoB,MAAM,OAAO,GAAG;AAClC,cAAM,eAAe,KAAK;AAC1B,cAAM,2BAA2B;AAAA,UAC/B,CAAC,kBAAkB,gBAAgB;AAAA,UACnC,MAAM,UAAU,MAAM,UAAU,SAAS,CAAC,EAAE;AAAA,QAC9C;AAEA,YAAI,iBAAiB,SAAS,sBAAsB,KAAK,GAAG;AAwB1D,cAAS,yCAAT,SAAgDC,OAAM;AACpD,oBAAQA,MAAK,MAAM;AAAA,cACjB,KAAK;AACH;AAAA,kBACE,2BAA2B,iBAAiB,QAAQ,IAAI,CAAC,EAAE,CAAC;AAAA,kBAC5DA,MAAK;AAAA,gBACP;AACA;AAAA,cACF,KAAK;AACH,sCAAsBA,MAAK,YAAY,CAAC,aAAa;AACnD,yDAAuC,SAAS,KAAK;AAAA,gBACvD,CAAC;AACD;AAAA,cACF,KAAK;AACH,sCAAsBA,MAAK,UAAU,CAAC,YAAY;AAChD,yDAAuC,OAAO;AAAA,gBAChD,CAAC;AACD;AAAA,YACJ;AAAA,UACF;AA1CA,gBAAM;AAAA,YACJ,KAAK;AAAA,YACL,KAAK,QAAQ,aAAa,UAAU,2BAA2B,IAAI;AAAA,YACnE,iBAAiB,SAAS,2BACxB,KACA,UAAU,KAAK,aAAa,WAAW,IAAI,KAAK;AAAA,UACpD;AAEA,cAAI,CAAC,0BAA0B;AAC7B,kCAAsB,KAAK,cAAc,CAAC,SAAS;AACjD,oBAAM,QAAQ,MAAM,GAAG;AACvB,oBAAM,OAAO,MAAM,KAAK,OAAO,MAAM,aAAa;AAAA,YACpD,CAAC;AAED,gBAAI,KAAK,aAAa,WAAW,GAAG;AAClC,oBAAM,OAAO,KAAK,aAAa,KAAK,aAAa,SAAS,CAAC,GAAG,GAAG;AAAA,YACnE;AAAA,UACF;AAEA,gBAAM,6BAA6B;AAAA,YACjC,CAAC,OAAO,CAAC,CAAC;AAAA,YACV,CAAC,OAAO,CAAC,CAAC;AAAA,UACZ;AAsBA,gCAAsB,KAAK,cAAc,CAAC,SAAS;AACjD,mDAAuC,KAAK,EAAE;AAAA,UAChD,CAAC;AAED;AAAA,YACE;AAAA,YACA,CAAC,EAAE,GAAG,MAAM,GAAG,YAAY,MAAM;AAC/B,kBAAI,YAAY,SAAS,GAAG;AAC1B;AAAA,kBACE,MAAM;AAAA,kBACN,GAAG,IAAI,IAAI,mBAAmB,aAAa,IAAI,CAAC;AAAA,gBAClD;AAAA,cACF;AAAA,YACF;AAAA,UACF;AAAA,QACF;AAEA,aAAK,KAAK,oBAAoB,MAAM,OAAO,CAAC;AAAA,MAC9C;AAAA,IACF;AAEA,QAAM,WAAW,CAAC;AAClB,eAAW,YAAY,WAAW,KAAK,IAAI,GAAG;AAC5C,YAAM,WAAW,yBAAyB,QAAQ,KAAK,KAAK,KAAK,QAAQ;AACzE,eAAS,QAAQ,IAAI,CAAC,MAAM,OAAO,MAAM;AACvC,cAAM,QAAQ,SAAS,MAAM,UAAU,MAAM,UAAU,SAAS,CAAC;AACjE,YAAI,OAAO;AACT,6BAAmB,MAAM,WAAW,IAAI;AAAA,QAC1C;AACA,iBAAS,MAAM,OAAO,CAAC;AACvB,YAAI,OAAO;AACT,4BAAkB,MAAM,SAAS;AAAA,QACnC;AAAA,MACF;AAAA,IACF;AAEA,aAAS,qBAAqB,KAAK;AACjC,YAAM,aAAa;AACnB,YAAM,UAAU,GAAG,UAAU,GAAG,GAAG;AACnC,YAAM,eAAe,UAAU,OAAO;AACtC,UAAI;AACJ,UAAI;AACF,eAAO,OAAO,MAAM,SAAS,EAAE,aAAa,SAAS,CAAC;AAAA,MACxD,SAAS,GAAG;AACV,YAAI,0BAA0B,EAAE,SAAS,eAAe;AACtD,gBAAM,IAAI,YAAY,CAAC;AAIzB,cAAM,WAAW,uBAAuB,KAAK,OAAO;AACpD,cAAM,SAAS,EAAE,MAAM,WAAW;AAClC,YAAI,WAAW;AACb,iBAAO;AAGT,YAAI,WAAW,WAAW,KACtB,wBAAwB,EAAE,SAAS,mCAAmC;AACxE,iBAAO;AACT,YAAI,WAAW,WAAW,KACtB,wBAAwB,EAAE,SAAS,kBAAkB;AACvD,iBAAO;AACT,cAAM,OAAO,EAAE,IAAI;AACnB,cAAMC,UAAS,SAAS,IAAI,EAAE,IAAI,SAAS,WAAW,SAAS,EAAE,IAAI;AACrE,YAAI,UAAU,OAAO,qBAAqB,KAAK,IAAI,EAAE,OAAO,CAAC,IAAI,OAC7D,sBAAsB,KAAKA,OAAM,IACjC,UAAU,6BAA6B,cAAc,EAAE,SAAS,EAAE;AAEtE,YAAI,wBAAwB,SAAS,kBAAkB;AACrD,qBAAW;AAAA,WAEP,IAAI,SAAS,KAAO,EAAE,MAAM,WAAW,SACrC,IAAI,EAAE,MAAM,WAAW,MAAM,IAC7B,IAAI,IAAI,SAAS,CAAC,KACtB;AAEJ,cAAM,IAAIF,aAAY,OAAO;AAAA,MAC/B;AACA,YAAM,OAAO,KAAK,KAAK,CAAC,EAAE,WAAW,OAAO;AAC5C,YAAM,QAAQ;AAAA,QACZ;AAAA,QACA,WAAW,CAAC;AAAA,QACZ,8BAA8B,CAAC;AAAA,QAC/B,QAAQ,MAAM,IAAI,KAAK;AACrB,mBAAS,IAAI,MAAM,IAAI,IAAI,KAAK;AAC9B,yBAAa,CAAC,IAAI;AAAA,UACpB;AACA,cAAI,SAAS,GAAI,QAAO,aAAa,IAAI;AACzC,uBAAa,IAAI,IAAI;AAAA,QACvB;AAAA,QACA,QAAQ,MAAM,KAAK;AACjB,uBAAa,KAAK,KAAK,IAAI,MAAM,aAAa,KAAK,KAAK;AAAA,QAC1D;AAAA,QACA,OAAO,MAAM,KAAK;AAChB,uBAAa,KAAK,MAAM,CAAC,KAAK;AAAA,QAChC;AAAA,QACA,eAAe;AAAA,QACf,gBAAgB;AAAA,MAClB;AAEA,WAAK,UAAU,MAAM,OAAO,QAAQ;AAKpC,UAAI,CAAC,MAAM,iBAAiB,MAAM,gBAAgB;AAChD,eAAO;AAAA,MACT;AAEA,YAAM,OAAO,KAAK,KAAK,KAAK,KAAK,SAAS,CAAC;AAC3C,UAAI,KAAK,SAAS,uBAAuB;AAavC,cAAM,QAAQ,MAAM,UAAU;AAC9B,cAAM,OAAO,KAAK,YAAY,GAAG;AAAA,MACnC;AAEA,aACE,mBAAmB,MAAM,8BAA8B,EAAE,IACzD,mBAAmB,cAAc,EAAE;AAAA,IAEvC;AAEA,WAAO,UAAU;AAAA,MACf;AAAA,IACF;AAAA;AAAA;;;AC7PA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAS,OAAO;AAAC;AAoMjB,SAAS,YAAYG,OAAM,YAAY,WAAW,WAAW,iBAAiB;AAC5E,MAAI,eAAe,GACf,eAAe,WAAW,QAC1B,SAAS,GACT,SAAS;AAEb,SAAO,eAAe,cAAc,gBAAgB;AAClD,QAAI,YAAY,WAAW,YAAY;AAEvC,QAAI,CAAC,UAAU,SAAS;AACtB,UAAI,CAAC,UAAU,SAAS,iBAAiB;AACvC,YAAIC,SAAQ,UAAU,MAAM,QAAQ,SAAS,UAAU,KAAK;AAC5D,QAAAA,SAAQA,OAAM,IAAI,SAAUA,QAAO,GAAG;AACpC,cAAI,WAAW,UAAU,SAAS,CAAC;AACnC,iBAAO,SAAS,SAASA,OAAM,SAAS,WAAWA;AAAA,QACrD,CAAC;AACD,kBAAU,QAAQD,MAAK,KAAKC,MAAK;AAAA,MACnC,OAAO;AACL,kBAAU,QAAQD,MAAK,KAAK,UAAU,MAAM,QAAQ,SAAS,UAAU,KAAK,CAAC;AAAA,MAC/E;AAEA,gBAAU,UAAU;AAEpB,UAAI,CAAC,UAAU,OAAO;AACpB,kBAAU,UAAU;AAAA,MACtB;AAAA,IACF,OAAO;AACL,gBAAU,QAAQA,MAAK,KAAK,UAAU,MAAM,QAAQ,SAAS,UAAU,KAAK,CAAC;AAC7E,gBAAU,UAAU;AAIpB,UAAI,gBAAgB,WAAW,eAAe,CAAC,EAAE,OAAO;AACtD,YAAI,MAAM,WAAW,eAAe,CAAC;AACrC,mBAAW,eAAe,CAAC,IAAI,WAAW,YAAY;AACtD,mBAAW,YAAY,IAAI;AAAA,MAC7B;AAAA,IACF;AAAA,EACF;AAKA,MAAI,gBAAgB,WAAW,eAAe,CAAC;AAE/C,MAAI,eAAe,KAAK,OAAO,cAAc,UAAU,aAAa,cAAc,SAAS,cAAc,YAAYA,MAAK,OAAO,IAAI,cAAc,KAAK,GAAG;AACzJ,eAAW,eAAe,CAAC,EAAE,SAAS,cAAc;AACpD,eAAW,IAAI;AAAA,EACjB;AAEA,SAAO;AACT;AAEA,SAAS,UAAUE,OAAM;AACvB,SAAO;AAAA,IACL,QAAQA,MAAK;AAAA,IACb,YAAYA,MAAK,WAAW,MAAM,CAAC;AAAA,EACrC;AACF;AAGA,SAAS,UAAU,QAAQ,QAAQ,SAAS;AAC1C,SAAO,cAAc,KAAK,QAAQ,QAAQ,OAAO;AACnD;AAEA,SAAS,gBAAgB,SAAS,UAAU;AAC1C,MAAI,OAAO,YAAY,YAAY;AACjC,aAAS,WAAW;AAAA,EACtB,WAAW,SAAS;AAClB,aAAS,QAAQ,SAAS;AAExB,UAAI,QAAQ,eAAe,IAAI,GAAG;AAChC,iBAAS,IAAI,IAAI,QAAQ,IAAI;AAAA,MAC/B;AAAA,IACF;AAAA,EACF;AAEA,SAAO;AACT;AAgDA,SAAS,UAAU,QAAQ,QAAQ,SAAS;AAC1C,YAAU,gBAAgB,SAAS;AAAA,IACjC,kBAAkB;AAAA,EACpB,CAAC;AACD,SAAO,SAAS,KAAK,QAAQ,QAAQ,OAAO;AAC9C;AACA,SAAS,mBAAmB,QAAQ,QAAQ,SAAS;AACnD,SAAO,SAAS,KAAK,QAAQ,QAAQ,OAAO;AAC9C;AA8BA,SAAS,UAAU,QAAQ,QAAQ,UAAU;AAC3C,SAAO,SAAS,KAAK,QAAQ,QAAQ,QAAQ;AAC/C;AACA,SAAS,iBAAiB,QAAQ,QAAQ,UAAU;AAClD,MAAI,UAAU,gBAAgB,UAAU;AAAA,IACtC,kBAAkB;AAAA,EACpB,CAAC;AACD,SAAO,SAAS,KAAK,QAAQ,QAAQ,OAAO;AAC9C;AAQA,SAAS,cAAc,QAAQ,QAAQ,UAAU;AAC/C,SAAO,aAAa,KAAK,QAAQ,QAAQ,QAAQ;AACnD;AAQA,SAAS,QAAQ,QAAQ,QAAQ,UAAU;AACzC,SAAO,QAAQ,KAAK,QAAQ,QAAQ,QAAQ;AAC9C;AAEA,SAAS,QAAQ,KAAK;AACpB,MAAI,OAAO,WAAW,cAAc,OAAO,OAAO,aAAa,UAAU;AACvE,cAAU,SAAUC,MAAK;AACvB,aAAO,OAAOA;AAAA,IAChB;AAAA,EACF,OAAO;AACL,cAAU,SAAUA,MAAK;AACvB,aAAOA,QAAO,OAAO,WAAW,cAAcA,KAAI,gBAAgB,UAAUA,SAAQ,OAAO,YAAY,WAAW,OAAOA;AAAA,IAC3H;AAAA,EACF;AAEA,SAAO,QAAQ,GAAG;AACpB;AAEA,SAAS,mBAAmB,KAAK;AAC/B,SAAO,mBAAmB,GAAG,KAAK,iBAAiB,GAAG,KAAK,mBAAmB;AAChF;AAEA,SAAS,mBAAmB,KAAK;AAC/B,MAAI,MAAM,QAAQ,GAAG,GAAG;AACtB,aAAS,IAAI,GAAG,OAAO,IAAI,MAAM,IAAI,MAAM,GAAG,IAAI,IAAI,QAAQ,IAAK,MAAK,CAAC,IAAI,IAAI,CAAC;AAElF,WAAO;AAAA,EACT;AACF;AAEA,SAAS,iBAAiB,MAAM;AAC9B,MAAI,OAAO,YAAY,OAAO,IAAI,KAAK,OAAO,UAAU,SAAS,KAAK,IAAI,MAAM,qBAAsB,QAAO,MAAM,KAAK,IAAI;AAC9H;AAEA,SAAS,qBAAqB;AAC5B,QAAM,IAAI,UAAU,iDAAiD;AACvE;AAuBA,SAAS,SAAS,QAAQ,QAAQ,SAAS;AACzC,SAAO,SAAS,KAAK,QAAQ,QAAQ,OAAO;AAC9C;AAGA,SAAS,aAAa,KAAK,OAAO,kBAAkB,UAAU,KAAK;AACjE,UAAQ,SAAS,CAAC;AAClB,qBAAmB,oBAAoB,CAAC;AAExC,MAAI,UAAU;AACZ,UAAM,SAAS,KAAK,GAAG;AAAA,EACzB;AAEA,MAAI;AAEJ,OAAK,IAAI,GAAG,IAAI,MAAM,QAAQ,KAAK,GAAG;AACpC,QAAI,MAAM,CAAC,MAAM,KAAK;AACpB,aAAO,iBAAiB,CAAC;AAAA,IAC3B;AAAA,EACF;AAEA,MAAI;AAEJ,MAAI,qBAAqB,wBAAwB,KAAK,GAAG,GAAG;AAC1D,UAAM,KAAK,GAAG;AACd,uBAAmB,IAAI,MAAM,IAAI,MAAM;AACvC,qBAAiB,KAAK,gBAAgB;AAEtC,SAAK,IAAI,GAAG,IAAI,IAAI,QAAQ,KAAK,GAAG;AAClC,uBAAiB,CAAC,IAAI,aAAa,IAAI,CAAC,GAAG,OAAO,kBAAkB,UAAU,GAAG;AAAA,IACnF;AAEA,UAAM,IAAI;AACV,qBAAiB,IAAI;AACrB,WAAO;AAAA,EACT;AAEA,MAAI,OAAO,IAAI,QAAQ;AACrB,UAAM,IAAI,OAAO;AAAA,EACnB;AAEA,MAAI,QAAQ,GAAG,MAAM,YAAY,QAAQ,MAAM;AAC7C,UAAM,KAAK,GAAG;AACd,uBAAmB,CAAC;AACpB,qBAAiB,KAAK,gBAAgB;AAEtC,QAAI,aAAa,CAAC,GACd;AAEJ,SAAK,QAAQ,KAAK;AAEhB,UAAI,IAAI,eAAe,IAAI,GAAG;AAC5B,mBAAW,KAAK,IAAI;AAAA,MACtB;AAAA,IACF;AAEA,eAAW,KAAK;AAEhB,SAAK,IAAI,GAAG,IAAI,WAAW,QAAQ,KAAK,GAAG;AACzC,aAAO,WAAW,CAAC;AACnB,uBAAiB,IAAI,IAAI,aAAa,IAAI,IAAI,GAAG,OAAO,kBAAkB,UAAU,IAAI;AAAA,IAC1F;AAEA,UAAM,IAAI;AACV,qBAAiB,IAAI;AAAA,EACvB,OAAO;AACL,uBAAmB;AAAA,EACrB;AAEA,SAAO;AACT;AAYA,SAAS,WAAW,QAAQ,QAAQ,UAAU;AAC5C,SAAO,UAAU,KAAK,QAAQ,QAAQ,QAAQ;AAChD;AAEA,SAAS,WAAW,SAAS;AAC3B,MAAI,UAAU,UAAU,SAAS,KAAK,UAAU,CAAC,MAAM,SAAY,UAAU,CAAC,IAAI,CAAC;AACnF,MAAI,UAAU,QAAQ,MAAM,qBAAqB,GAC7C,aAAa,QAAQ,MAAM,sBAAsB,KAAK,CAAC,GACvD,OAAO,CAAC,GACR,IAAI;AAER,WAAS,aAAa;AACpB,QAAI,QAAQ,CAAC;AACb,SAAK,KAAK,KAAK;AAEf,WAAO,IAAI,QAAQ,QAAQ;AACzB,UAAI,OAAO,QAAQ,CAAC;AAEpB,UAAI,wBAAwB,KAAK,IAAI,GAAG;AACtC;AAAA,MACF;AAGA,UAAI,SAAS,2CAA2C,KAAK,IAAI;AAEjE,UAAI,QAAQ;AACV,cAAM,QAAQ,OAAO,CAAC;AAAA,MACxB;AAEA;AAAA,IACF;AAIA,oBAAgB,KAAK;AACrB,oBAAgB,KAAK;AAErB,UAAM,QAAQ,CAAC;AAEf,WAAO,IAAI,QAAQ,QAAQ;AACzB,UAAI,QAAQ,QAAQ,CAAC;AAErB,UAAI,iCAAiC,KAAK,KAAK,GAAG;AAChD;AAAA,MACF,WAAW,MAAM,KAAK,KAAK,GAAG;AAC5B,cAAM,MAAM,KAAK,UAAU,CAAC;AAAA,MAC9B,WAAW,SAAS,QAAQ,QAAQ;AAElC,cAAM,IAAI,MAAM,mBAAmB,IAAI,KAAK,MAAM,KAAK,UAAU,KAAK,CAAC;AAAA,MACzE,OAAO;AACL;AAAA,MACF;AAAA,IACF;AAAA,EACF;AAIA,WAAS,gBAAgB,OAAO;AAC9B,QAAI,aAAa,wBAAwB,KAAK,QAAQ,CAAC,CAAC;AAExD,QAAI,YAAY;AACd,UAAI,YAAY,WAAW,CAAC,MAAM,QAAQ,QAAQ;AAClD,UAAI,OAAO,WAAW,CAAC,EAAE,MAAM,KAAM,CAAC;AACtC,UAAI,WAAW,KAAK,CAAC,EAAE,QAAQ,SAAS,IAAI;AAE5C,UAAI,SAAS,KAAK,QAAQ,GAAG;AAC3B,mBAAW,SAAS,OAAO,GAAG,SAAS,SAAS,CAAC;AAAA,MACnD;AAEA,YAAM,YAAY,UAAU,IAAI;AAChC,YAAM,YAAY,QAAQ,KAAK,KAAK,CAAC,KAAK,IAAI,KAAK;AACnD;AAAA,IACF;AAAA,EACF;AAIA,WAAS,YAAY;AACnB,QAAI,mBAAmB,GACnB,kBAAkB,QAAQ,GAAG,GAC7B,cAAc,gBAAgB,MAAM,4CAA4C;AACpF,QAAI,OAAO;AAAA,MACT,UAAU,CAAC,YAAY,CAAC;AAAA,MACxB,UAAU,CAAC,YAAY,CAAC,KAAK;AAAA,MAC7B,UAAU,CAAC,YAAY,CAAC;AAAA,MACxB,UAAU,CAAC,YAAY,CAAC,KAAK;AAAA,MAC7B,OAAO,CAAC;AAAA,MACR,gBAAgB,CAAC;AAAA,IACnB;AACA,QAAI,WAAW,GACX,cAAc;AAElB,WAAO,IAAI,QAAQ,QAAQ,KAAK;AAG9B,UAAI,QAAQ,CAAC,EAAE,QAAQ,MAAM,MAAM,KAAK,IAAI,IAAI,QAAQ,UAAU,QAAQ,IAAI,CAAC,EAAE,QAAQ,MAAM,MAAM,KAAK,QAAQ,IAAI,CAAC,EAAE,QAAQ,IAAI,MAAM,GAAG;AAC5I;AAAA,MACF;AAEA,UAAI,YAAY,QAAQ,CAAC,EAAE,UAAU,KAAK,KAAK,QAAQ,SAAS,IAAI,MAAM,QAAQ,CAAC,EAAE,CAAC;AAEtF,UAAI,cAAc,OAAO,cAAc,OAAO,cAAc,OAAO,cAAc,MAAM;AACrF,aAAK,MAAM,KAAK,QAAQ,CAAC,CAAC;AAC1B,aAAK,eAAe,KAAK,WAAW,CAAC,KAAK,IAAI;AAE9C,YAAI,cAAc,KAAK;AACrB;AAAA,QACF,WAAW,cAAc,KAAK;AAC5B;AAAA,QACF,WAAW,cAAc,KAAK;AAC5B;AACA;AAAA,QACF;AAAA,MACF,OAAO;AACL;AAAA,MACF;AAAA,IACF;AAGA,QAAI,CAAC,YAAY,KAAK,aAAa,GAAG;AACpC,WAAK,WAAW;AAAA,IAClB;AAEA,QAAI,CAAC,eAAe,KAAK,aAAa,GAAG;AACvC,WAAK,WAAW;AAAA,IAClB;AAGA,QAAI,QAAQ,QAAQ;AAClB,UAAI,aAAa,KAAK,UAAU;AAC9B,cAAM,IAAI,MAAM,sDAAsD,mBAAmB,EAAE;AAAA,MAC7F;AAEA,UAAI,gBAAgB,KAAK,UAAU;AACjC,cAAM,IAAI,MAAM,wDAAwD,mBAAmB,EAAE;AAAA,MAC/F;AAAA,IACF;AAEA,WAAO;AAAA,EACT;AAEA,SAAO,IAAI,QAAQ,QAAQ;AACzB,eAAW;AAAA,EACb;AAEA,SAAO;AACT;AAKA,SAAS,iBAAkB,OAAO,SAAS,SAAS;AAClD,MAAI,cAAc,MACd,oBAAoB,OACpB,mBAAmB,OACnB,cAAc;AAClB,SAAO,SAAS,WAAW;AACzB,QAAI,eAAe,CAAC,kBAAkB;AACpC,UAAI,mBAAmB;AACrB;AAAA,MACF,OAAO;AACL,sBAAc;AAAA,MAChB;AAIA,UAAI,QAAQ,eAAe,SAAS;AAClC,eAAO;AAAA,MACT;AAEA,yBAAmB;AAAA,IACrB;AAEA,QAAI,CAAC,mBAAmB;AACtB,UAAI,CAAC,kBAAkB;AACrB,sBAAc;AAAA,MAChB;AAIA,UAAI,WAAW,QAAQ,aAAa;AAClC,eAAO,CAAC;AAAA,MACV;AAEA,0BAAoB;AACpB,aAAO,SAAS;AAAA,IAClB;AAAA,EAGF;AACF;AAEA,SAAS,WAAW,QAAQ,SAAS;AACnC,MAAI,UAAU,UAAU,SAAS,KAAK,UAAU,CAAC,MAAM,SAAY,UAAU,CAAC,IAAI,CAAC;AAEnF,MAAI,OAAO,YAAY,UAAU;AAC/B,cAAU,WAAW,OAAO;AAAA,EAC9B;AAEA,MAAI,MAAM,QAAQ,OAAO,GAAG;AAC1B,QAAI,QAAQ,SAAS,GAAG;AACtB,YAAM,IAAI,MAAM,4CAA4C;AAAA,IAC9D;AAEA,cAAU,QAAQ,CAAC;AAAA,EACrB;AAGA,MAAI,QAAQ,OAAO,MAAM,qBAAqB,GAC1C,aAAa,OAAO,MAAM,sBAAsB,KAAK,CAAC,GACtD,QAAQ,QAAQ,OAChB,cAAc,QAAQ,eAAe,SAAU,YAAYC,OAAMC,YAAW,cAAc;AAC5F,WAAOD,UAAS;AAAA,EAClB,GACI,aAAa,GACb,aAAa,QAAQ,cAAc,GACnC,UAAU,GACV,SAAS,GACT,aACA;AAMJ,WAAS,SAASE,OAAMC,QAAO;AAC7B,aAASC,KAAI,GAAGA,KAAIF,MAAK,MAAM,QAAQE,MAAK;AAC1C,UAAIJ,QAAOE,MAAK,MAAME,EAAC,GACnBH,aAAYD,MAAK,SAAS,IAAIA,MAAK,CAAC,IAAI,KACxCK,WAAUL,MAAK,SAAS,IAAIA,MAAK,OAAO,CAAC,IAAIA;AAEjD,UAAIC,eAAc,OAAOA,eAAc,KAAK;AAE1C,YAAI,CAAC,YAAYE,SAAQ,GAAG,MAAMA,MAAK,GAAGF,YAAWI,QAAO,GAAG;AAC7D;AAEA,cAAI,aAAa,YAAY;AAC3B,mBAAO;AAAA,UACT;AAAA,QACF;AAEA,QAAAF;AAAA,MACF;AAAA,IACF;AAEA,WAAO;AAAA,EACT;AAGA,WAAS,IAAI,GAAG,IAAI,MAAM,QAAQ,KAAK;AACrC,QAAI,OAAO,MAAM,CAAC,GACd,UAAU,MAAM,SAAS,KAAK,UAC9B,cAAc,GACd,QAAQ,SAAS,KAAK,WAAW;AACrC,QAAI,WAAW,iBAAiB,OAAO,SAAS,OAAO;AAEvD,WAAO,gBAAgB,QAAW,cAAc,SAAS,GAAG;AAC1D,UAAI,SAAS,MAAM,QAAQ,WAAW,GAAG;AACvC,aAAK,SAAS,UAAU;AACxB;AAAA,MACF;AAAA,IACF;AAEA,QAAI,gBAAgB,QAAW;AAC7B,aAAO;AAAA,IACT;AAIA,cAAU,KAAK,SAAS,KAAK,WAAW,KAAK;AAAA,EAC/C;AAGA,MAAI,aAAa;AAEjB,WAAS,KAAK,GAAG,KAAK,MAAM,QAAQ,MAAM;AACxC,QAAI,QAAQ,MAAM,EAAE,GAChB,SAAS,MAAM,WAAW,MAAM,SAAS,aAAa;AAE1D,kBAAc,MAAM,WAAW,MAAM;AAErC,QAAI,SAAS,GAAG;AAEd,eAAS;AAAA,IACX;AAEA,aAAS,IAAI,GAAG,IAAI,MAAM,MAAM,QAAQ,KAAK;AAC3C,UAAI,OAAO,MAAM,MAAM,CAAC,GACpB,YAAY,KAAK,SAAS,IAAI,KAAK,CAAC,IAAI,KACxC,UAAU,KAAK,SAAS,IAAI,KAAK,OAAO,CAAC,IAAI,MAC7C,YAAY,MAAM,eAAe,CAAC;AAEtC,UAAI,cAAc,KAAK;AACrB;AAAA,MACF,WAAW,cAAc,KAAK;AAC5B,cAAM,OAAO,QAAQ,CAAC;AACtB,mBAAW,OAAO,QAAQ,CAAC;AAAA,MAE7B,WAAW,cAAc,KAAK;AAC5B,cAAM,OAAO,QAAQ,GAAG,OAAO;AAC/B,mBAAW,OAAO,QAAQ,GAAG,SAAS;AACtC;AAAA,MACF,WAAW,cAAc,MAAM;AAC7B,YAAI,oBAAoB,MAAM,MAAM,IAAI,CAAC,IAAI,MAAM,MAAM,IAAI,CAAC,EAAE,CAAC,IAAI;AAErE,YAAI,sBAAsB,KAAK;AAC7B,wBAAc;AAAA,QAChB,WAAW,sBAAsB,KAAK;AACpC,qBAAW;AAAA,QACb;AAAA,MACF;AAAA,IACF;AAAA,EACF;AAGA,MAAI,aAAa;AACf,WAAO,CAAC,MAAM,MAAM,SAAS,CAAC,GAAG;AAC/B,YAAM,IAAI;AACV,iBAAW,IAAI;AAAA,IACjB;AAAA,EACF,WAAW,UAAU;AACnB,UAAM,KAAK,EAAE;AACb,eAAW,KAAK,IAAI;AAAA,EACtB;AAEA,WAAS,KAAK,GAAG,KAAK,MAAM,SAAS,GAAG,MAAM;AAC5C,UAAM,EAAE,IAAI,MAAM,EAAE,IAAI,WAAW,EAAE;AAAA,EACvC;AAEA,SAAO,MAAM,KAAK,EAAE;AACtB;AAEA,SAAS,aAAa,SAAS,SAAS;AACtC,MAAI,OAAO,YAAY,UAAU;AAC/B,cAAU,WAAW,OAAO;AAAA,EAC9B;AAEA,MAAI,eAAe;AAEnB,WAAS,eAAe;AACtB,QAAI,QAAQ,QAAQ,cAAc;AAElC,QAAI,CAAC,OAAO;AACV,aAAO,QAAQ,SAAS;AAAA,IAC1B;AAEA,YAAQ,SAAS,OAAO,SAAU,KAAK,MAAM;AAC3C,UAAI,KAAK;AACP,eAAO,QAAQ,SAAS,GAAG;AAAA,MAC7B;AAEA,UAAI,iBAAiB,WAAW,MAAM,OAAO,OAAO;AACpD,cAAQ,QAAQ,OAAO,gBAAgB,SAAUG,MAAK;AACpD,YAAIA,MAAK;AACP,iBAAO,QAAQ,SAASA,IAAG;AAAA,QAC7B;AAEA,qBAAa;AAAA,MACf,CAAC;AAAA,IACH,CAAC;AAAA,EACH;AAEA,eAAa;AACf;AAEA,SAAS,gBAAgB,aAAa,aAAa,QAAQ,QAAQ,WAAW,WAAW,SAAS;AAChG,MAAI,CAAC,SAAS;AACZ,cAAU,CAAC;AAAA,EACb;AAEA,MAAI,OAAO,QAAQ,YAAY,aAAa;AAC1C,YAAQ,UAAU;AAAA,EACpB;AAEA,MAAIV,QAAO,UAAU,QAAQ,QAAQ,OAAO;AAC5C,EAAAA,MAAK,KAAK;AAAA,IACR,OAAO;AAAA,IACP,OAAO,CAAC;AAAA,EACV,CAAC;AAED,WAAS,aAAa,OAAO;AAC3B,WAAO,MAAM,IAAI,SAAU,OAAO;AAChC,aAAO,MAAM;AAAA,IACf,CAAC;AAAA,EACH;AAEA,MAAI,QAAQ,CAAC;AACb,MAAI,gBAAgB,GAChB,gBAAgB,GAChB,WAAW,CAAC,GACZ,UAAU,GACV,UAAU;AAEd,MAAI,QAAQ,SAASW,OAAMC,IAAG;AAC5B,QAAI,UAAUZ,MAAKY,EAAC,GAChB,QAAQ,QAAQ,SAAS,QAAQ,MAAM,QAAQ,OAAO,EAAE,EAAE,MAAM,IAAI;AACxE,YAAQ,QAAQ;AAEhB,QAAI,QAAQ,SAAS,QAAQ,SAAS;AACpC,UAAI;AAGJ,UAAI,CAAC,eAAe;AAClB,YAAI,OAAOZ,MAAKY,KAAI,CAAC;AACrB,wBAAgB;AAChB,wBAAgB;AAEhB,YAAI,MAAM;AACR,qBAAW,QAAQ,UAAU,IAAI,aAAa,KAAK,MAAM,MAAM,CAAC,QAAQ,OAAO,CAAC,IAAI,CAAC;AACrF,2BAAiB,SAAS;AAC1B,2BAAiB,SAAS;AAAA,QAC5B;AAAA,MACF;AAGA,OAAC,YAAY,UAAU,KAAK,MAAM,WAAW,mBAAmB,MAAM,IAAI,SAAU,OAAO;AACzF,gBAAQ,QAAQ,QAAQ,MAAM,OAAO;AAAA,MACvC,CAAC,CAAC,CAAC;AAGH,UAAI,QAAQ,OAAO;AACjB,mBAAW,MAAM;AAAA,MACnB,OAAO;AACL,mBAAW,MAAM;AAAA,MACnB;AAAA,IACF,OAAO;AAEL,UAAI,eAAe;AAEjB,YAAI,MAAM,UAAU,QAAQ,UAAU,KAAKA,KAAIZ,MAAK,SAAS,GAAG;AAC9D,cAAI;AAGJ,WAAC,aAAa,UAAU,KAAK,MAAM,YAAY,mBAAmB,aAAa,KAAK,CAAC,CAAC;AAAA,QACxF,OAAO;AACL,cAAI;AAGJ,cAAI,cAAc,KAAK,IAAI,MAAM,QAAQ,QAAQ,OAAO;AAExD,WAAC,aAAa,UAAU,KAAK,MAAM,YAAY,mBAAmB,aAAa,MAAM,MAAM,GAAG,WAAW,CAAC,CAAC,CAAC;AAE5G,cAAI,OAAO;AAAA,YACT,UAAU;AAAA,YACV,UAAU,UAAU,gBAAgB;AAAA,YACpC,UAAU;AAAA,YACV,UAAU,UAAU,gBAAgB;AAAA,YACpC,OAAO;AAAA,UACT;AAEA,cAAIY,MAAKZ,MAAK,SAAS,KAAK,MAAM,UAAU,QAAQ,SAAS;AAE3D,gBAAI,gBAAgB,MAAM,KAAK,MAAM;AACrC,gBAAI,gBAAgB,MAAM,KAAK,MAAM;AACrC,gBAAI,iBAAiB,MAAM,UAAU,KAAK,SAAS,SAAS,KAAK;AAEjE,gBAAI,CAAC,iBAAiB,gBAAgB;AAEpC,uBAAS,OAAO,KAAK,UAAU,GAAG,8BAA8B;AAAA,YAClE;AAEA,gBAAI,CAAC,iBAAiB,CAAC,kBAAkB,CAAC,eAAe;AACvD,uBAAS,KAAK,8BAA8B;AAAA,YAC9C;AAAA,UACF;AAEA,gBAAM,KAAK,IAAI;AACf,0BAAgB;AAChB,0BAAgB;AAChB,qBAAW,CAAC;AAAA,QACd;AAAA,MACF;AAEA,iBAAW,MAAM;AACjB,iBAAW,MAAM;AAAA,IACnB;AAAA,EACF;AAEA,WAAS,IAAI,GAAG,IAAIA,MAAK,QAAQ,KAAK;AACpC,UAAM,CAAC;AAAA,EACT;AAEA,SAAO;AAAA,IACL;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF;AACF;AACA,SAAS,oBAAoB,aAAa,aAAa,QAAQ,QAAQ,WAAW,WAAW,SAAS;AACpG,MAAIA,QAAO,gBAAgB,aAAa,aAAa,QAAQ,QAAQ,WAAW,WAAW,OAAO;AAClG,MAAI,MAAM,CAAC;AAEX,MAAI,eAAe,aAAa;AAC9B,QAAI,KAAK,YAAY,WAAW;AAAA,EAClC;AAEA,MAAI,KAAK,qEAAqE;AAC9E,MAAI,KAAK,SAASA,MAAK,eAAe,OAAOA,MAAK,cAAc,cAAc,KAAK,MAAOA,MAAK,UAAU;AACzG,MAAI,KAAK,SAASA,MAAK,eAAe,OAAOA,MAAK,cAAc,cAAc,KAAK,MAAOA,MAAK,UAAU;AAEzG,WAAS,IAAI,GAAG,IAAIA,MAAK,MAAM,QAAQ,KAAK;AAC1C,QAAI,OAAOA,MAAK,MAAM,CAAC;AACvB,QAAI,KAAK,SAAS,KAAK,WAAW,MAAM,KAAK,WAAW,OAAO,KAAK,WAAW,MAAM,KAAK,WAAW,KAAK;AAC1G,QAAI,KAAK,MAAM,KAAK,KAAK,KAAK;AAAA,EAChC;AAEA,SAAO,IAAI,KAAK,IAAI,IAAI;AAC1B;AACA,SAAS,YAAY,UAAU,QAAQ,QAAQ,WAAW,WAAW,SAAS;AAC5E,SAAO,oBAAoB,UAAU,UAAU,QAAQ,QAAQ,WAAW,WAAW,OAAO;AAC9F;AAEA,SAAS,WAAW,GAAG,GAAG;AACxB,MAAI,EAAE,WAAW,EAAE,QAAQ;AACzB,WAAO;AAAA,EACT;AAEA,SAAO,gBAAgB,GAAG,CAAC;AAC7B;AACA,SAAS,gBAAgB,OAAO,OAAO;AACrC,MAAI,MAAM,SAAS,MAAM,QAAQ;AAC/B,WAAO;AAAA,EACT;AAEA,WAAS,IAAI,GAAG,IAAI,MAAM,QAAQ,KAAK;AACrC,QAAI,MAAM,CAAC,MAAM,MAAM,CAAC,GAAG;AACzB,aAAO;AAAA,IACT;AAAA,EACF;AAEA,SAAO;AACT;AAEA,SAAS,cAAc,MAAM;AAC3B,MAAI,uBAAuB,oBAAoB,KAAK,KAAK,GACrD,WAAW,qBAAqB,UAChC,WAAW,qBAAqB;AAEpC,MAAI,aAAa,QAAW;AAC1B,SAAK,WAAW;AAAA,EAClB,OAAO;AACL,WAAO,KAAK;AAAA,EACd;AAEA,MAAI,aAAa,QAAW;AAC1B,SAAK,WAAW;AAAA,EAClB,OAAO;AACL,WAAO,KAAK;AAAA,EACd;AACF;AACA,SAAS,MAAM,MAAM,QAAQ,MAAM;AACjC,SAAO,UAAU,MAAM,IAAI;AAC3B,WAAS,UAAU,QAAQ,IAAI;AAC/B,MAAI,MAAM,CAAC;AAIX,MAAI,KAAK,SAAS,OAAO,OAAO;AAC9B,QAAI,QAAQ,KAAK,SAAS,OAAO;AAAA,EACnC;AAEA,MAAI,KAAK,eAAe,OAAO,aAAa;AAC1C,QAAI,CAAC,gBAAgB,IAAI,GAAG;AAE1B,UAAI,cAAc,OAAO,eAAe,KAAK;AAC7C,UAAI,cAAc,OAAO,eAAe,KAAK;AAC7C,UAAI,YAAY,OAAO,aAAa,KAAK;AACzC,UAAI,YAAY,OAAO,aAAa,KAAK;AAAA,IAC3C,WAAW,CAAC,gBAAgB,MAAM,GAAG;AAEnC,UAAI,cAAc,KAAK;AACvB,UAAI,cAAc,KAAK;AACvB,UAAI,YAAY,KAAK;AACrB,UAAI,YAAY,KAAK;AAAA,IACvB,OAAO;AAEL,UAAI,cAAc,YAAY,KAAK,KAAK,aAAa,OAAO,WAAW;AACvE,UAAI,cAAc,YAAY,KAAK,KAAK,aAAa,OAAO,WAAW;AACvE,UAAI,YAAY,YAAY,KAAK,KAAK,WAAW,OAAO,SAAS;AACjE,UAAI,YAAY,YAAY,KAAK,KAAK,WAAW,OAAO,SAAS;AAAA,IACnE;AAAA,EACF;AAEA,MAAI,QAAQ,CAAC;AACb,MAAI,YAAY,GACZ,cAAc,GACd,aAAa,GACb,eAAe;AAEnB,SAAO,YAAY,KAAK,MAAM,UAAU,cAAc,OAAO,MAAM,QAAQ;AACzE,QAAI,cAAc,KAAK,MAAM,SAAS,KAAK;AAAA,MACzC,UAAU;AAAA,IACZ,GACI,gBAAgB,OAAO,MAAM,WAAW,KAAK;AAAA,MAC/C,UAAU;AAAA,IACZ;AAEA,QAAI,WAAW,aAAa,aAAa,GAAG;AAE1C,UAAI,MAAM,KAAK,UAAU,aAAa,UAAU,CAAC;AACjD;AACA,sBAAgB,YAAY,WAAW,YAAY;AAAA,IACrD,WAAW,WAAW,eAAe,WAAW,GAAG;AAEjD,UAAI,MAAM,KAAK,UAAU,eAAe,YAAY,CAAC;AACrD;AACA,oBAAc,cAAc,WAAW,cAAc;AAAA,IACvD,OAAO;AAEL,UAAI,aAAa;AAAA,QACf,UAAU,KAAK,IAAI,YAAY,UAAU,cAAc,QAAQ;AAAA,QAC/D,UAAU;AAAA,QACV,UAAU,KAAK,IAAI,YAAY,WAAW,YAAY,cAAc,WAAW,YAAY;AAAA,QAC3F,UAAU;AAAA,QACV,OAAO,CAAC;AAAA,MACV;AACA,iBAAW,YAAY,YAAY,UAAU,YAAY,OAAO,cAAc,UAAU,cAAc,KAAK;AAC3G;AACA;AACA,UAAI,MAAM,KAAK,UAAU;AAAA,IAC3B;AAAA,EACF;AAEA,SAAO;AACT;AAEA,SAAS,UAAU,OAAO,MAAM;AAC9B,MAAI,OAAO,UAAU,UAAU;AAC7B,QAAI,OAAO,KAAK,KAAK,KAAK,WAAW,KAAK,KAAK,GAAG;AAChD,aAAO,WAAW,KAAK,EAAE,CAAC;AAAA,IAC5B;AAEA,QAAI,CAAC,MAAM;AACT,YAAM,IAAI,MAAM,kDAAkD;AAAA,IACpE;AAEA,WAAO,gBAAgB,QAAW,QAAW,MAAM,KAAK;AAAA,EAC1D;AAEA,SAAO;AACT;AAEA,SAAS,gBAAgB,OAAO;AAC9B,SAAO,MAAM,eAAe,MAAM,gBAAgB,MAAM;AAC1D;AAEA,SAAS,YAAY,OAAO,MAAM,QAAQ;AACxC,MAAI,SAAS,QAAQ;AACnB,WAAO;AAAA,EACT,OAAO;AACL,UAAM,WAAW;AACjB,WAAO;AAAA,MACL;AAAA,MACA;AAAA,IACF;AAAA,EACF;AACF;AAEA,SAAS,WAAW,MAAM,OAAO;AAC/B,SAAO,KAAK,WAAW,MAAM,YAAY,KAAK,WAAW,KAAK,WAAW,MAAM;AACjF;AAEA,SAAS,UAAU,MAAM,QAAQ;AAC/B,SAAO;AAAA,IACL,UAAU,KAAK;AAAA,IACf,UAAU,KAAK;AAAA,IACf,UAAU,KAAK,WAAW;AAAA,IAC1B,UAAU,KAAK;AAAA,IACf,OAAO,KAAK;AAAA,EACd;AACF;AAEA,SAAS,WAAW,MAAM,YAAY,WAAW,aAAa,YAAY;AAGxE,MAAI,OAAO;AAAA,IACT,QAAQ;AAAA,IACR,OAAO;AAAA,IACP,OAAO;AAAA,EACT,GACI,QAAQ;AAAA,IACV,QAAQ;AAAA,IACR,OAAO;AAAA,IACP,OAAO;AAAA,EACT;AAEA,gBAAc,MAAM,MAAM,KAAK;AAC/B,gBAAc,MAAM,OAAO,IAAI;AAE/B,SAAO,KAAK,QAAQ,KAAK,MAAM,UAAU,MAAM,QAAQ,MAAM,MAAM,QAAQ;AACzE,QAAI,cAAc,KAAK,MAAM,KAAK,KAAK,GACnC,eAAe,MAAM,MAAM,MAAM,KAAK;AAE1C,SAAK,YAAY,CAAC,MAAM,OAAO,YAAY,CAAC,MAAM,SAAS,aAAa,CAAC,MAAM,OAAO,aAAa,CAAC,MAAM,MAAM;AAE9G,mBAAa,MAAM,MAAM,KAAK;AAAA,IAChC,WAAW,YAAY,CAAC,MAAM,OAAO,aAAa,CAAC,MAAM,KAAK;AAC5D,UAAI;AAGJ,OAAC,cAAc,KAAK,OAAO,KAAK,MAAM,aAAa,mBAAmB,cAAc,IAAI,CAAC,CAAC;AAAA,IAC5F,WAAW,aAAa,CAAC,MAAM,OAAO,YAAY,CAAC,MAAM,KAAK;AAC5D,UAAI;AAGJ,OAAC,eAAe,KAAK,OAAO,KAAK,MAAM,cAAc,mBAAmB,cAAc,KAAK,CAAC,CAAC;AAAA,IAC/F,WAAW,YAAY,CAAC,MAAM,OAAO,aAAa,CAAC,MAAM,KAAK;AAE5D,cAAQ,MAAM,MAAM,KAAK;AAAA,IAC3B,WAAW,aAAa,CAAC,MAAM,OAAO,YAAY,CAAC,MAAM,KAAK;AAE5D,cAAQ,MAAM,OAAO,MAAM,IAAI;AAAA,IACjC,WAAW,gBAAgB,cAAc;AAEvC,WAAK,MAAM,KAAK,WAAW;AAC3B,WAAK;AACL,YAAM;AAAA,IACR,OAAO;AAEL,eAAS,MAAM,cAAc,IAAI,GAAG,cAAc,KAAK,CAAC;AAAA,IAC1D;AAAA,EACF;AAGA,iBAAe,MAAM,IAAI;AACzB,iBAAe,MAAM,KAAK;AAC1B,gBAAc,IAAI;AACpB;AAEA,SAAS,aAAa,MAAM,MAAM,OAAO;AACvC,MAAI,YAAY,cAAc,IAAI,GAC9B,eAAe,cAAc,KAAK;AAEtC,MAAI,WAAW,SAAS,KAAK,WAAW,YAAY,GAAG;AAErD,QAAI,gBAAgB,WAAW,YAAY,KAAK,mBAAmB,OAAO,WAAW,UAAU,SAAS,aAAa,MAAM,GAAG;AAC5H,UAAI;AAEJ,OAAC,eAAe,KAAK,OAAO,KAAK,MAAM,cAAc,mBAAmB,SAAS,CAAC;AAElF;AAAA,IACF,WAAW,gBAAgB,cAAc,SAAS,KAAK,mBAAmB,MAAM,cAAc,aAAa,SAAS,UAAU,MAAM,GAAG;AACrI,UAAI;AAEJ,OAAC,eAAe,KAAK,OAAO,KAAK,MAAM,cAAc,mBAAmB,YAAY,CAAC;AAErF;AAAA,IACF;AAAA,EACF,WAAW,WAAW,WAAW,YAAY,GAAG;AAC9C,QAAI;AAEJ,KAAC,eAAe,KAAK,OAAO,KAAK,MAAM,cAAc,mBAAmB,SAAS,CAAC;AAElF;AAAA,EACF;AAEA,WAAS,MAAM,WAAW,YAAY;AACxC;AAEA,SAAS,QAAQ,MAAM,MAAM,OAAO,MAAM;AACxC,MAAI,YAAY,cAAc,IAAI,GAC9B,eAAe,eAAe,OAAO,SAAS;AAElD,MAAI,aAAa,QAAQ;AACvB,QAAI;AAEJ,KAAC,eAAe,KAAK,OAAO,KAAK,MAAM,cAAc,mBAAmB,aAAa,MAAM,CAAC;AAAA,EAC9F,OAAO;AACL,aAAS,MAAM,OAAO,eAAe,WAAW,OAAO,YAAY,YAAY;AAAA,EACjF;AACF;AAEA,SAAS,SAAS,MAAM,MAAM,OAAO;AACnC,OAAK,WAAW;AAChB,OAAK,MAAM,KAAK;AAAA,IACd,UAAU;AAAA,IACV;AAAA,IACA,QAAQ;AAAA,EACV,CAAC;AACH;AAEA,SAAS,cAAc,MAAM,QAAQ,OAAO;AAC1C,SAAO,OAAO,SAAS,MAAM,UAAU,OAAO,QAAQ,OAAO,MAAM,QAAQ;AACzE,QAAI,OAAO,OAAO,MAAM,OAAO,OAAO;AACtC,SAAK,MAAM,KAAK,IAAI;AACpB,WAAO;AAAA,EACT;AACF;AAEA,SAAS,eAAe,MAAM,QAAQ;AACpC,SAAO,OAAO,QAAQ,OAAO,MAAM,QAAQ;AACzC,QAAI,OAAO,OAAO,MAAM,OAAO,OAAO;AACtC,SAAK,MAAM,KAAK,IAAI;AAAA,EACtB;AACF;AAEA,SAAS,cAAc,OAAO;AAC5B,MAAI,MAAM,CAAC,GACP,YAAY,MAAM,MAAM,MAAM,KAAK,EAAE,CAAC;AAE1C,SAAO,MAAM,QAAQ,MAAM,MAAM,QAAQ;AACvC,QAAI,OAAO,MAAM,MAAM,MAAM,KAAK;AAElC,QAAI,cAAc,OAAO,KAAK,CAAC,MAAM,KAAK;AACxC,kBAAY;AAAA,IACd;AAEA,QAAI,cAAc,KAAK,CAAC,GAAG;AACzB,UAAI,KAAK,IAAI;AACb,YAAM;AAAA,IACR,OAAO;AACL;AAAA,IACF;AAAA,EACF;AAEA,SAAO;AACT;AAEA,SAAS,eAAe,OAAO,cAAc;AAC3C,MAAI,UAAU,CAAC,GACX,SAAS,CAAC,GACV,aAAa,GACb,iBAAiB,OACjB,aAAa;AAEjB,SAAO,aAAa,aAAa,UAAU,MAAM,QAAQ,MAAM,MAAM,QAAQ;AAC3E,QAAI,SAAS,MAAM,MAAM,MAAM,KAAK,GAChC,QAAQ,aAAa,UAAU;AAEnC,QAAI,MAAM,CAAC,MAAM,KAAK;AACpB;AAAA,IACF;AAEA,qBAAiB,kBAAkB,OAAO,CAAC,MAAM;AACjD,WAAO,KAAK,KAAK;AACjB;AAGA,QAAI,OAAO,CAAC,MAAM,KAAK;AACrB,mBAAa;AAEb,aAAO,OAAO,CAAC,MAAM,KAAK;AACxB,gBAAQ,KAAK,MAAM;AACnB,iBAAS,MAAM,MAAM,EAAE,MAAM,KAAK;AAAA,MACpC;AAAA,IACF;AAEA,QAAI,MAAM,OAAO,CAAC,MAAM,OAAO,OAAO,CAAC,GAAG;AACxC,cAAQ,KAAK,MAAM;AACnB,YAAM;AAAA,IACR,OAAO;AACL,mBAAa;AAAA,IACf;AAAA,EACF;AAEA,OAAK,aAAa,UAAU,KAAK,IAAI,CAAC,MAAM,OAAO,gBAAgB;AACjE,iBAAa;AAAA,EACf;AAEA,MAAI,YAAY;AACd,WAAO;AAAA,EACT;AAEA,SAAO,aAAa,aAAa,QAAQ;AACvC,WAAO,KAAK,aAAa,YAAY,CAAC;AAAA,EACxC;AAEA,SAAO;AAAA,IACL;AAAA,IACA;AAAA,EACF;AACF;AAEA,SAAS,WAAW,SAAS;AAC3B,SAAO,QAAQ,OAAO,SAAU,MAAM,QAAQ;AAC5C,WAAO,QAAQ,OAAO,CAAC,MAAM;AAAA,EAC/B,GAAG,IAAI;AACT;AAEA,SAAS,mBAAmB,OAAO,eAAe,OAAO;AACvD,WAAS,IAAI,GAAG,IAAI,OAAO,KAAK;AAC9B,QAAI,gBAAgB,cAAc,cAAc,SAAS,QAAQ,CAAC,EAAE,OAAO,CAAC;AAE5E,QAAI,MAAM,MAAM,MAAM,QAAQ,CAAC,MAAM,MAAM,eAAe;AACxD,aAAO;AAAA,IACT;AAAA,EACF;AAEA,QAAM,SAAS;AACf,SAAO;AACT;AAEA,SAAS,oBAAoB,OAAO;AAClC,MAAI,WAAW;AACf,MAAI,WAAW;AACf,QAAM,QAAQ,SAAU,MAAM;AAC5B,QAAI,OAAO,SAAS,UAAU;AAC5B,UAAI,UAAU,oBAAoB,KAAK,IAAI;AAC3C,UAAI,aAAa,oBAAoB,KAAK,MAAM;AAEhD,UAAI,aAAa,QAAW;AAC1B,YAAI,QAAQ,aAAa,WAAW,UAAU;AAC5C,sBAAY,QAAQ;AAAA,QACtB,OAAO;AACL,qBAAW;AAAA,QACb;AAAA,MACF;AAEA,UAAI,aAAa,QAAW;AAC1B,YAAI,QAAQ,aAAa,WAAW,UAAU;AAC5C,sBAAY,QAAQ;AAAA,QACtB,OAAO;AACL,qBAAW;AAAA,QACb;AAAA,MACF;AAAA,IACF,OAAO;AACL,UAAI,aAAa,WAAc,KAAK,CAAC,MAAM,OAAO,KAAK,CAAC,MAAM,MAAM;AAClE;AAAA,MACF;AAEA,UAAI,aAAa,WAAc,KAAK,CAAC,MAAM,OAAO,KAAK,CAAC,MAAM,MAAM;AAClE;AAAA,MACF;AAAA,IACF;AAAA,EACF,CAAC;AACD,SAAO;AAAA,IACL;AAAA,IACA;AAAA,EACF;AACF;AAGA,SAAS,oBAAoB,SAAS;AACpC,MAAI,MAAM,CAAC,GACP,QACA;AAEJ,WAAS,IAAI,GAAG,IAAI,QAAQ,QAAQ,KAAK;AACvC,aAAS,QAAQ,CAAC;AAElB,QAAI,OAAO,OAAO;AAChB,kBAAY;AAAA,IACd,WAAW,OAAO,SAAS;AACzB,kBAAY;AAAA,IACd,OAAO;AACL,kBAAY;AAAA,IACd;AAEA,QAAI,KAAK,CAAC,WAAW,OAAO,KAAK,CAAC;AAAA,EACpC;AAEA,SAAO;AACT;AAEA,SAAS,oBAAoB,SAAS;AACpC,MAAI,MAAM,CAAC;AAEX,WAAS,IAAI,GAAG,IAAI,QAAQ,QAAQ,KAAK;AACvC,QAAI,SAAS,QAAQ,CAAC;AAEtB,QAAI,OAAO,OAAO;AAChB,UAAI,KAAK,OAAO;AAAA,IAClB,WAAW,OAAO,SAAS;AACzB,UAAI,KAAK,OAAO;AAAA,IAClB;AAEA,QAAI,KAAK,WAAW,OAAO,KAAK,CAAC;AAEjC,QAAI,OAAO,OAAO;AAChB,UAAI,KAAK,QAAQ;AAAA,IACnB,WAAW,OAAO,SAAS;AACzB,UAAI,KAAK,QAAQ;AAAA,IACnB;AAAA,EACF;AAEA,SAAO,IAAI,KAAK,EAAE;AACpB;AAEA,SAAS,WAAW,GAAG;AACrB,MAAI,IAAI;AACR,MAAI,EAAE,QAAQ,MAAM,OAAO;AAC3B,MAAI,EAAE,QAAQ,MAAM,MAAM;AAC1B,MAAI,EAAE,QAAQ,MAAM,MAAM;AAC1B,MAAI,EAAE,QAAQ,MAAM,QAAQ;AAC5B,SAAO;AACT;AA1+CA,IAgQI,eAsCA,mBACA,cACA,UAoCA,UAsCA,cAUA,SA4CA,yBACA,UA4FA;AArgBJ;AAAA;AAAA;AAAA;AACA,SAAK,YAAY;AAAA,MACf,MAAM,SAAS,KAAK,WAAW,WAAW;AACxC,YAAI,UAAU,UAAU,SAAS,KAAK,UAAU,CAAC,MAAM,SAAY,UAAU,CAAC,IAAI,CAAC;AACnF,YAAI,WAAW,QAAQ;AAEvB,YAAI,OAAO,YAAY,YAAY;AACjC,qBAAW;AACX,oBAAU,CAAC;AAAA,QACb;AAEA,aAAK,UAAU;AACf,YAAIa,QAAO;AAEX,iBAAS,KAAKZ,QAAO;AACnB,cAAI,UAAU;AACZ,uBAAW,WAAY;AACrB,uBAAS,QAAWA,MAAK;AAAA,YAC3B,GAAG,CAAC;AACJ,mBAAO;AAAA,UACT,OAAO;AACL,mBAAOA;AAAA,UACT;AAAA,QACF;AAGA,oBAAY,KAAK,UAAU,SAAS;AACpC,oBAAY,KAAK,UAAU,SAAS;AACpC,oBAAY,KAAK,YAAY,KAAK,SAAS,SAAS,CAAC;AACrD,oBAAY,KAAK,YAAY,KAAK,SAAS,SAAS,CAAC;AACrD,YAAI,SAAS,UAAU,QACnB,SAAS,UAAU;AACvB,YAAI,aAAa;AACjB,YAAI,gBAAgB,SAAS;AAC7B,YAAI,WAAW,CAAC;AAAA,UACd,QAAQ;AAAA,UACR,YAAY,CAAC;AAAA,QACf,CAAC;AAED,YAAI,SAAS,KAAK,cAAc,SAAS,CAAC,GAAG,WAAW,WAAW,CAAC;AAEpE,YAAI,SAAS,CAAC,EAAE,SAAS,KAAK,UAAU,SAAS,KAAK,QAAQ;AAE5D,iBAAO,KAAK,CAAC;AAAA,YACX,OAAO,KAAK,KAAK,SAAS;AAAA,YAC1B,OAAO,UAAU;AAAA,UACnB,CAAC,CAAC;AAAA,QACJ;AAGA,iBAAS,iBAAiB;AACxB,mBAAS,eAAe,KAAK,YAAY,gBAAgB,YAAY,gBAAgB,GAAG;AACtF,gBAAI,WAAW;AAEf,gBAAI,UAAU,SAAS,eAAe,CAAC,GACnC,aAAa,SAAS,eAAe,CAAC,GACtC,WAAW,aAAa,WAAW,SAAS,KAAK;AAErD,gBAAI,SAAS;AAEX,uBAAS,eAAe,CAAC,IAAI;AAAA,YAC/B;AAEA,gBAAI,SAAS,WAAW,QAAQ,SAAS,IAAI,QACzC,YAAY,cAAc,KAAK,WAAW,UAAU;AAExD,gBAAI,CAAC,UAAU,CAAC,WAAW;AAEzB,uBAAS,YAAY,IAAI;AACzB;AAAA,YACF;AAKA,gBAAI,CAAC,UAAU,aAAa,QAAQ,SAAS,WAAW,QAAQ;AAC9D,yBAAW,UAAU,UAAU;AAC/B,cAAAY,MAAK,cAAc,SAAS,YAAY,QAAW,IAAI;AAAA,YACzD,OAAO;AACL,yBAAW;AAEX,uBAAS;AACT,cAAAA,MAAK,cAAc,SAAS,YAAY,MAAM,MAAS;AAAA,YACzD;AAEA,sBAAUA,MAAK,cAAc,UAAU,WAAW,WAAW,YAAY;AAEzE,gBAAI,SAAS,SAAS,KAAK,UAAU,UAAU,KAAK,QAAQ;AAC1D,qBAAO,KAAK,YAAYA,OAAM,SAAS,YAAY,WAAW,WAAWA,MAAK,eAAe,CAAC;AAAA,YAChG,OAAO;AAEL,uBAAS,YAAY,IAAI;AAAA,YAC3B;AAAA,UACF;AAEA;AAAA,QACF;AAKA,YAAI,UAAU;AACZ,WAAC,SAAS,OAAO;AACf,uBAAW,WAAY;AAIrB,kBAAI,aAAa,eAAe;AAC9B,uBAAO,SAAS;AAAA,cAClB;AAEA,kBAAI,CAAC,eAAe,GAAG;AACrB,qBAAK;AAAA,cACP;AAAA,YACF,GAAG,CAAC;AAAA,UACN,GAAG;AAAA,QACL,OAAO;AACL,iBAAO,cAAc,eAAe;AAClC,gBAAI,MAAM,eAAe;AAEzB,gBAAI,KAAK;AACP,qBAAO;AAAA,YACT;AAAA,UACF;AAAA,QACF;AAAA,MACF;AAAA,MACA,eAAe,SAAS,cAAc,YAAY,OAAO,SAAS;AAChE,YAAI,OAAO,WAAW,WAAW,SAAS,CAAC;AAE3C,YAAI,QAAQ,KAAK,UAAU,SAAS,KAAK,YAAY,SAAS;AAG5D,qBAAW,WAAW,SAAS,CAAC,IAAI;AAAA,YAClC,OAAO,KAAK,QAAQ;AAAA,YACpB;AAAA,YACA;AAAA,UACF;AAAA,QACF,OAAO;AACL,qBAAW,KAAK;AAAA,YACd,OAAO;AAAA,YACP;AAAA,YACA;AAAA,UACF,CAAC;AAAA,QACH;AAAA,MACF;AAAA,MACA,eAAe,SAAS,cAAc,UAAU,WAAW,WAAW,cAAc;AAClF,YAAI,SAAS,UAAU,QACnB,SAAS,UAAU,QACnB,SAAS,SAAS,QAClB,SAAS,SAAS,cAClB,cAAc;AAElB,eAAO,SAAS,IAAI,UAAU,SAAS,IAAI,UAAU,KAAK,OAAO,UAAU,SAAS,CAAC,GAAG,UAAU,SAAS,CAAC,CAAC,GAAG;AAC9G;AACA;AACA;AAAA,QACF;AAEA,YAAI,aAAa;AACf,mBAAS,WAAW,KAAK;AAAA,YACvB,OAAO;AAAA,UACT,CAAC;AAAA,QACH;AAEA,iBAAS,SAAS;AAClB,eAAO;AAAA,MACT;AAAA,MACA,QAAQ,SAAS,OAAO,MAAM,OAAO;AACnC,YAAI,KAAK,QAAQ,YAAY;AAC3B,iBAAO,KAAK,QAAQ,WAAW,MAAM,KAAK;AAAA,QAC5C,OAAO;AACL,iBAAO,SAAS,SAAS,KAAK,QAAQ,cAAc,KAAK,YAAY,MAAM,MAAM,YAAY;AAAA,QAC/F;AAAA,MACF;AAAA,MACA,aAAa,SAAS,YAAY,OAAO;AACvC,YAAI,MAAM,CAAC;AAEX,iBAAS,IAAI,GAAG,IAAI,MAAM,QAAQ,KAAK;AACrC,cAAI,MAAM,CAAC,GAAG;AACZ,gBAAI,KAAK,MAAM,CAAC,CAAC;AAAA,UACnB;AAAA,QACF;AAEA,eAAO;AAAA,MACT;AAAA,MACA,WAAW,SAAS,UAAUZ,QAAO;AACnC,eAAOA;AAAA,MACT;AAAA,MACA,UAAU,SAAS,SAASA,QAAO;AACjC,eAAOA,OAAM,MAAM,EAAE;AAAA,MACvB;AAAA,MACA,MAAM,SAAS,KAAK,OAAO;AACzB,eAAO,MAAM,KAAK,EAAE;AAAA,MACtB;AAAA,IACF;AA8DA,IAAI,gBAAgB,IAAI,KAAK;AAsC7B,IAAI,oBAAoB;AACxB,IAAI,eAAe;AACnB,IAAI,WAAW,IAAI,KAAK;AAExB,aAAS,SAAS,SAAU,MAAM,OAAO;AACvC,UAAI,KAAK,QAAQ,YAAY;AAC3B,eAAO,KAAK,YAAY;AACxB,gBAAQ,MAAM,YAAY;AAAA,MAC5B;AAEA,aAAO,SAAS,SAAS,KAAK,QAAQ,oBAAoB,CAAC,aAAa,KAAK,IAAI,KAAK,CAAC,aAAa,KAAK,KAAK;AAAA,IAChH;AAEA,aAAS,WAAW,SAAUA,QAAO;AACnC,UAAI,SAASA,OAAM,MAAM,sBAAsB;AAE/C,eAAS,IAAI,GAAG,IAAI,OAAO,SAAS,GAAG,KAAK;AAE1C,YAAI,CAAC,OAAO,IAAI,CAAC,KAAK,OAAO,IAAI,CAAC,KAAK,kBAAkB,KAAK,OAAO,CAAC,CAAC,KAAK,kBAAkB,KAAK,OAAO,IAAI,CAAC,CAAC,GAAG;AACjH,iBAAO,CAAC,KAAK,OAAO,IAAI,CAAC;AACzB,iBAAO,OAAO,IAAI,GAAG,CAAC;AACtB;AAAA,QACF;AAAA,MACF;AAEA,aAAO;AAAA,IACT;AAYA,IAAI,WAAW,IAAI,KAAK;AAExB,aAAS,WAAW,SAAUA,QAAO;AACnC,UAAI,WAAW,CAAC,GACZ,mBAAmBA,OAAM,MAAM,WAAW;AAE9C,UAAI,CAAC,iBAAiB,iBAAiB,SAAS,CAAC,GAAG;AAClD,yBAAiB,IAAI;AAAA,MACvB;AAGA,eAAS,IAAI,GAAG,IAAI,iBAAiB,QAAQ,KAAK;AAChD,YAAI,OAAO,iBAAiB,CAAC;AAE7B,YAAI,IAAI,KAAK,CAAC,KAAK,QAAQ,gBAAgB;AACzC,mBAAS,SAAS,SAAS,CAAC,KAAK;AAAA,QACnC,OAAO;AACL,cAAI,KAAK,QAAQ,kBAAkB;AACjC,mBAAO,KAAK,KAAK;AAAA,UACnB;AAEA,mBAAS,KAAK,IAAI;AAAA,QACpB;AAAA,MACF;AAEA,aAAO;AAAA,IACT;AAYA,IAAI,eAAe,IAAI,KAAK;AAE5B,iBAAa,WAAW,SAAUA,QAAO;AACvC,aAAOA,OAAM,MAAM,uBAAuB;AAAA,IAC5C;AAMA,IAAI,UAAU,IAAI,KAAK;AAEvB,YAAQ,WAAW,SAAUA,QAAO;AAClC,aAAOA,OAAM,MAAM,eAAe;AAAA,IACpC;AAwCA,IAAI,0BAA0B,OAAO,UAAU;AAC/C,IAAI,WAAW,IAAI,KAAK;AAGxB,aAAS,kBAAkB;AAC3B,aAAS,WAAW,SAAS;AAE7B,aAAS,YAAY,SAAUA,QAAO;AACpC,UAAI,gBAAgB,KAAK,SACrB,uBAAuB,cAAc,sBACrC,wBAAwB,cAAc,mBACtC,oBAAoB,0BAA0B,SAAS,SAAU,GAAG,GAAG;AACzE,eAAO,OAAO,MAAM,cAAc,uBAAuB;AAAA,MAC3D,IAAI;AACJ,aAAO,OAAOA,WAAU,WAAWA,SAAQ,KAAK,UAAU,aAAaA,QAAO,MAAM,MAAM,iBAAiB,GAAG,mBAAmB,IAAI;AAAA,IACvI;AAEA,aAAS,SAAS,SAAU,MAAM,OAAO;AACvC,aAAO,KAAK,UAAU,OAAO,KAAK,UAAU,KAAK,QAAQ,cAAc,IAAI,GAAG,MAAM,QAAQ,cAAc,IAAI,CAAC;AAAA,IACjH;AA0EA,IAAI,YAAY,IAAI,KAAK;AAEzB,cAAU,WAAW,SAAUA,QAAO;AACpC,aAAOA,OAAM,MAAM;AAAA,IACrB;AAEA,cAAU,OAAO,UAAU,cAAc,SAAUA,QAAO;AACxD,aAAOA;AAAA,IACT;AAAA;AAAA;;;;;;;;;AC5gBA,QAAA,OAAA,UAAA,IAAA;AACA,QAAA,SAAA,UAAA,MAAA;AACA,QAAA,SAAA,UAAA,MAAA;AAMA,QAAA,OAAA,UAAA,IAAA;AACA,QAAA,UAAA;AACA,QAAA,OAAA,UAAA,IAAA;AACA,QAAA,YAAA,UAAA,SAAA;AACA,QAAA,SAAA,UAAA,QAAA;AAGA,QAAA,WAAA,UAAA,QAAA;AAGA,QAAI;AACJ,aAAS,0BAAuB;AAC9B,UAAI,0BAA0B,QAAW;AACvC,SAAC;UACC,sBAAsB;YACpB;;AAEN,aAAO;IACT;AACA,QAAIa;AACJ,aAAS,eAAY;AACnB,UAAIA,UAAS,QAAW;AACtB,QAAAA,QAAO;;AAET,aAAOA,MAAK;IACd;AAGa,YAAA,gBAAgB;AAEhB,YAAA,YAAY;AAEZ,YAAA,iBAAiB;AAEjB,YAAA,aAAa;AAEb,YAAA,gBAAgB;AAEhB,YAAA,YAAY;AAsGzB,aAAgB,WAAW,UAA6B,CAAA,GAAE;;AACxD,YAAM,EAAE,oDAAoD,KAAI,IAAK;AACrE,UAAI,UAAU,QAAQ;AACtB,UAAI;AAGJ,UAAI;AACJ,YAAM,SACJ,KAAA,QAAQ,WAAK,QAAA,OAAA,SAAA,KAAI,IAAI,WAAU,GAAA,OAAA,MAAK,QAAQ,IAAG,GAAI,QAAA,aAAa,CAAC;AACnE,YAAM,uBAAuB,2BAC3B,OACA,QAAQ,+BAA+B;AAEzC,YAAM,SAAQ,KAAA,QAAQ,WAAK,QAAA,OAAA,SAAA,KAAI,QAAQ;AACvC,YAAM,UAAS,KAAA,QAAQ,YAAM,QAAA,OAAA,SAAA,KAAI,QAAQ;AACzC,YAAM,UAAS,KAAA,QAAQ,YAAM,QAAA,OAAA,SAAA,KAAI,QAAQ;AACzC,YAAM,WACJ,WAAW,QAAQ,UAAU,WAAW,QAAQ,SAC5C,UACA,IAAI,UAAA,QAAQ,QAAQ,MAAM;AAEhC,YAAM,cAA2B;QAC/B,QAAO,KAAA,QAAQ,WAAK,QAAA,OAAA,SAAA,KAAI,IAAI,WAAU,GAAA,OAAA,MAAK,QAAQ,IAAG,GAAI,QAAA,aAAa,CAAC;QACxE;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,SAAS;;AAGX,aAAO;AAEP,eAAS,WAAW,UAAiB;AACnC,kBAAU;AACV,YAAI,mDAAmD;AACrD,kBAAQ,oBAAoB;YAC1B,mBAAmB;YACnB,mBAAmB,CAAC,MAAM,IAAI;YAC9B,oBAAoB;cAClB;cACA;cACA;cACA,GAAI,QAAQ,kBAAkB,+BAA+B,CAAA;;WAEhE;;MAEL;AAEA,eAAS,SAAS,MAAY;AAC5B,cAAM,SAAS,0BAA0B;UACvC;UACA;UACA,OAAO;UACP;UACA,sBAAsB;SACvB;AACD,eAAO,OAAO,0BAA0B,KAAK;AAC7C,eAAO,OAAO;MAChB;AAEA,eAAS,iBAAiBC,UAIzB;AACC,cAAM,EAAE,MAAM,qBAAqB,SAAAC,SAAO,IAAKD;AAC/C,eAAO,0BAA0B;UAC/B;UACA;UACA,OAAO;UACP;UACA,SAAAC;SACD;MACH;AAEA,eAAS,SACP,MACAA,UACA,WACA,UAAkD;AAGlD,YAAI,SAAS,UAAU;AACrB,mBAAS,IAAI;AACb;;AAGF,YAAI;AACF,gBAAM,aAAa,iBAAiB;YAClC;YACA,qBAAqB;YACrB,SAAAA;WACD;AAED,cAAI,WAAW,uBAAuB;AACpC,aAAC,YAAW;AACV,kBAAI;AACF,yBAAS,MAAM,MAAM,WAAW,YAAY;uBACrC,cAAc;AACrB,4BAAY,YAAY;;YAE5B,GAAE;iBACG;AACL,qBAAS,MAAM,WAAW,KAAK;;iBAE1B,OAAO;AACd,sBAAY,KAAK;;AAMnB,iBAAS,YAAY,OAAc;;AAEjC,gBAAM,0BACJ,QAAS,QAAQ,0BAA0B,SAC3C,CAAC,QAAS;AACZ,cAAI,iBAAiB,QAAA,SAAS;AAE5B,gBAAI,OAAA,eAAe,cAAc,KAAK,GAAG;AACvC,uBAAS,IAAI,OAAA,YAAY,KAAK,CAAC;AAC/B;mBACK;AACL,uBAAS,MAAM,KAAK;AAEpB,kBACE,2BACA,MAAM,gBAAgB,KAAK,CAAC,OAC1B,6BAA6B,SAAS,EAAE,CAAC,GAE3C;AACA,yBAAS,MAAM,qBAAoB,CAAE;;AAEvC,uBAAS,IAAI;;iBAEV;AACL,gBAAI,SAAS;AACb,gBACE,2BACA,kBAAkB,iBAClBC,MAAA,OAAO,aAAO,QAAAA,QAAA,SAAA,SAAAA,IAAE,SAAS,qBAAqB,IAC9C;AACA,kBAAI;AAEF,uBAAO,WAAW;;EAAO,qBAAoB,CAAE;AAC/C,uBAAO,SAAQC,MAAA,OAAO,WAAK,QAAAA,QAAA,SAAA,SAAAA,IAAE,QAC3B,oBACA,CAAC,GAAG,OAAO,GAAG,EAAE;;EAAO,qBAAoB,CAAE,EAAE;sBAE3C;cAAA;;AAEV,qBAAS,MAAe;;QAE5B;AACA,iBAAS,uBAAoB;AAC3B,iBAAO,8HACL,QAAS,GAAG,OACd,eACE,QAAS,GAAG,aAAa,QAAS,OAAO,QAAQ,MAAO,CAC1D;QACF;MACF;AAGA,eAAS,MAAM,MAAa;AAC1B,sBAAc,EAAE,KAAI,CAAE;MACxB;AAGA,eAAS,cACPH,UAAoE;AAEpE,cAAM,EAAE,MAAM,kBAAkB,MAAM,GAAG,gBAAe,IAAKA,aAAO,QAAPA,aAAO,SAAPA,WAAW,CAAA;AAKxE,YAAI,MAAM;AACR,cAAI;AACF,qBAAS,GAAG,IAAI;CAAI;mBACb,KAAK;AACZ,qBAAS,MAAM,GAAG;AAElB,oBAAQ,KAAK,CAAC;;;AAOlB,oBAAO,QAAP,YAAO,SAAA,SAAP,QAAS,QAAQ,IAAI,MAAM,IAAI;AAE/B,cAAM,QAAO,GAAA,OAAA,OAAc;UACzB,QAAQ;UACR,OAAO,YAAY;UACnB,QAAQ,YAAY;;UAEpB,UACG,OAA2B,SAC5B,CAAC,SAAS,QAAA,IAAI,kBAAmB,EAAE;UACrC,MAAM;UACN,WAAW;UACX,GAAG;SACJ;AAED,yBAAiB;AACjB,kBAAU,KAAK;AAGf,cAAM,YAAY,kBAAkB,OAAO,EAAE;AAE7C,iBAAS,QAAK;AACZ,oBAAS;AAGT,uBAAa,4BAA4B,MAAM,MAAM,OAAO;AAC5D,cAAI,iBAAiB;AACnB,kBAAM,SAAS;;AAWjB,cAAI,EAAC,YAAO,QAAP,YAAO,SAAA,SAAP,QAAS,gBAAe;AAC3B,kBAAM,SAAS;EAAkB,SAAA,eAC9B,OACC,CAAC,SACC,CAAC,KAAK,WAAW,GAAG,KACpB,CAAC,KAAK,SAAS,GAAG,KAClB,CAAC,CAAC,WAAW,UAAU,SAAS,EAAE,SAAS,IAAI,CAAC,EAEnD,IAAI,CAAC,SAAS,kBAAkB,IAAI,eAAe,IAAI,IAAI,EAC3D,KAAK,GAAG,CAAC;;;QAEhB;AAEA,cAAK;AACL,aAAK,GAAG,SAAS,KAAK;AAEtB,aAAK,cAAc,QAAQ;UACzB,MAAM;UACN,QAAQ,SAAU,YAAkB;AAClC,gBAAI,CAAC,YAAY;AACf,mBAAK,cAAa;AAClB;;AAGF,kBAAM,OAAO,kBAAkB,OAAO,UAAU;AAChD,kBAAM,EAAE,MAAM,QAAO,IAAK,QAAS,YACjC,MAAM,OACN,MAAM,MACN,MAAM,MAAM,MAAM;AAGpB,iBAAI;AAEJ,gBAAI;AAAM,mBAAK,aAAa,MAAM,GAAG,IAAI;CAAI;AAC7C,gBAAI;AAAS,mBAAK,aAAa,MAAM,GAAG,OAAO;CAAI;AACnD,iBAAK,cAAa;UACpB;SACD;AAGD,YAAI,KAAK,cAAc;AACrB,gBAAM,cACJ,QAAA,IAAI,oBAAmB,GAAA,OAAA,OAAK,GAAA,KAAA,SAAO,GAAI,uBAAuB;AAEhE,eAAK,aAAa,aAAa,CAAC,QAAO;AACrC,gBAAI,CAAC;AAAK;AAEV,qBAAS,MAAM,GAAG;AAClB,oBAAQ,KAAK,CAAC;UAChB,CAAC;;AAGH,eAAO;MACT;IACF;AAhSA,YAAA,aAAA;AAqSA,QAAa,YAAb,MAAsB;MAYpB,YAAmBI,OAAY;AAAZ,aAAA,OAAAA;AAVnB,aAAA,QAAQ;AAER,aAAA,SAAS;AAET,aAAA,UAAU;AAEV,aAAA,QAAQ;MAI0B;;AAZpC,YAAA,YAAA;AAwBA,aAAgB,2BACd,OACA,aAAkC;AAElC,eAAS,SAASA,OAAY;AAC5B,YAAIA,UAAS,MAAM;AAAM,iBAAO,MAAM;AAEtC,YAAI,gBAAW,QAAX,gBAAW,SAAA,SAAX,YAAa;AAAU,iBAAO,YAAY,SAASA,KAAI;AAE3D,YAAI;AACF,kBAAO,GAAA,KAAA,cAAaA,OAAM,MAAM;iBACzB,KAAK;;MAGhB;AACA,eAAS,WAAWA,OAAY;AAC9B,YAAIA,UAAS,MAAM;AAAM,iBAAO;AAEhC,YAAI,gBAAW,QAAX,gBAAW,SAAA,SAAX,YAAa;AAAY,iBAAO,YAAY,WAAWA,KAAI;AAE/D,YAAI;AACF,gBAAM,SAAQ,GAAA,KAAA,UAASA,KAAI;AAC3B,iBAAO,MAAM,OAAM,KAAM,MAAM,OAAM;iBAC9B,KAAK;AACZ,iBAAO;;MAEX;AACA,aAAO,EAAE,UAAU,WAAU;IAC/B;AA5BA,YAAA,6BAAA;AA8BA,QAAM,qBAAqB;AAW3B,aAAS,0BAA0B,SAclC;AACC,YAAM,EACJ,SACA,OACA,YACA,sBAAsB,OACtB,SACA,qBAAoB,IAClB;AACJ,UAAI,EAAE,MAAK,IAAK;AAMhB,UAAI,aAAa;AACjB,UAAI,CAAC,cAAc,QAAQ,KAAK,KAAK,KAAK,CAAC,QAAQ,KAAK,KAAK,GAAG;AAC9D,gBAAQ,IAAI,MAAM,KAAI,CAAE;;AACxB,qBAAa;;AAGf,YAAM,QAAQ,MAAM;AACpB,YAAM,eAAe,yBAAoB,QAApB,yBAAoB,SAApB,uBAAwB,CAAC,MAAM,KAAK,KAAK;AAC9D,YAAM,OAAO,kBAAkB,OAAO,KAAK;AAC3C,UAAI;AAGJ,eAAS,gBAAgB,MAAY;AAGnC,eAAO,KAAK,QAAQ,kBAAkB,uBAAuB;MAC/D;AAEA,UAAI;AACF,iBAAS,QAAQ,QAAQ,MAAM,OAAO,MAAM,MAAM,CAAC,KAAK;eACjD,KAAK;AACZ,aAAI;AAEJ,YAAI,YAAY;AACd,cAAI,eAAe,QAAA,WAAW,IAAI,gBAAgB,CAAC,MAAM,MAAM;AAE7D,kBAAM;;AAGR,iBAAO,0BAA0B;YAC/B,GAAG;YACH,YAAY;WACb;;AAGH,YAAI;AAAY,gBAAM;AACtB,cAAM;;AAGR,eAAS,gBAAgB,MAAM;AAQ/B,YAAM,gCAAgC,OAAO,QAAQ,oBAAoB,EAAE;AAC3E,YAAM,mCAAmC,MAAM,OAAO,QACpD,oBACA,EAAE;AAIJ,YAAM,UAAU,aAAY,EAC1B,kCACA,6BAA6B;AAG/B,UAAI,cAAc;AAChB,aAAI;aACC;AACL,cAAM,SAAS;AAMf,cAAM,QAAQ,MAAM,MAAM,QACxB,uBACA,CAAC,KAAK,UAAU,eAAc;AAC5B,cAAI,aAAa;AAAK,mBAAO,GAAG,QAAQ,IAAI,UAAU;AACtD,iBAAO;QACT,CAAC;;AAIL,UAAI,WAAgE,CAAA;AACpE,UAAI,wBAAwB;AAG5B,iBAAW,UAAU,SAAS;AAC5B,YAAI,OAAO,OAAO;AAChB,cACE,uBACA,QAAQ,mBACR,OAAO,MAAM,QAAQ,OAAO,IAAI,IAChC;AACA,kBAAM,uBAAuB,wBAAuB;AAGpD,kBAAM,gBAAgB,qBAAqB,OAAO,QAAQ,IAAI;AAC9D,gBAAI,kBAAkB,MAAM;AAC1B,sCAAwB;AACxB,uBAAS,KAAK;gBACZ,WAAW;gBACX,aAAa,MAAM,aAAa,eAAe,MAAM,MAAM,OAAO;eACnE;AACD;;;AAGJ,mBAAS,KAAK;YACZ,aAAa,MAAM,aAAa,OAAO,OAAO,MAAM,MAAM,OAAO;WAClE;;;AAML,UAAI,uBAAuB;AACzB,eAAO;UACL;UACA,eAAe,YAAW;AACxB,gBAAIC;AACJ,uBAAW,WAAW,UAAU;AAC9B,oBAAM,IAAI,QAAQ,YAAW;AAC7B,cAAAA,SAAQ,QAAQ,YAAY,MAAM,IAAI;;AAExC,mBAAOA;UACT,GAAE;;aAEC;AACL,eAAO;UACL,uBAAuB;UACvB,OAAO,SAAS,OAAY,CAAC,GAAG,MAAM,EAAE,YAAW,GAAI,MAAS;;;IAGtE;AAKA,aAAS,aAAa,MAAc,UAAkB,SAAiB;AACrE,YAAM,SAAS,IAAI,KAAA,OAAO,MAAM,EAAE,SAAQ,CAAE;AAE5C,UAAI,YAAY,UAAa,YAAY,QAAQ;AAC/C,eAAO,OAAO,iBAAgB;aACzB;AACL,eAAO,OAAO,aAAa,OAAO;;IAEtC;AAKA,aAAS,kBAAkB,OAAkB,OAAa;AACxD,YAAM,YAAY,MAAM;AACxB,YAAM,cAAc,MAAM;AAC1B,YAAM,aAAa,MAAM;AACzB,YAAM,YAAY,MAAM;AAExB,YAAM,SAAS;AACf,YAAM,SAAS,UAAU,KAAK;AAC9B,YAAM;AAEN,aAAO,WAAA;AACL,cAAM,QAAQ;AACd,cAAM,SAAS;AACf,cAAM,UAAU;AAChB,cAAM,QAAQ;MAChB;IACF;AAKA,aAAS,UAAUA,QAAa;AAC9B,UAAI,QAAQ;AAEZ,iBAAW,QAAQA,QAAO;AACxB,YAAI,SAAS,MAAM;AACjB;;;AAIJ,aAAO;IACT;AAQA,QAAM,iBAAkD,oBAAI,IAAI;MAC9D,CAAC,MAAM,IAAI;MACX,CAAC,MAAM,IAAI;MACX,CAAC,MAAM,IAAI;MACX,CAAC,MAAM,IAAI;MACX;QACE;QACA,oBAAI,IAAI,CAAC,IAAI,CAAC;;;MAEhB,CAAC,MAAM,IAAI;MACX,CAAC,MAAM,IAAI;MACX,CAAC,MAAM,IAAI;MACX,CAAC,MAAM,IAAI;MACX;QACE;QACA,oBAAI,IAAI,CAAC,IAAI,CAAC;;;KAEjB;AAOD,QAAM,+BAA+B;MACnC;MACA;MACA;MACA;;;AAMF,aAAS,cAAc,OAAc;AACnC,aAAO,MAAM,gBAAgB,MAAM,CAAC,SAAQ;AAC1C,cAAM,OAAO,eAAe,IAAI,IAAI;AACpC,eACE,SAAS,QACR,QAAQ,MAAM,gBAAgB,KAAK,CAACC,UAAS,KAAK,IAAIA,KAAI,CAAC;MAEhE,CAAC;IACH;AAMA,aAAgB,aACd,SACAC,SACA,oBAA2C;AAE3C,UAAI,oBAAoB;AACtB,gBAAQ,YAAY;AACpB,gBAAQ,aAAa,IAAI,kBAAkB;;AAE7C,cAAQ,SAASA;AACjB,cAAQ,UAAUA,QAAO;AACzB,cAAQ,UAAUA,QAAO,QAAQ,KAAKA,OAAM;IAC9C;AAZA,YAAA,eAAA;;;;;AChwBA;AAAA;AAAA;AAAA,MACE,MAAQ;AAAA,MACR,SAAW;AAAA,MACX,aAAe;AAAA,MACf,MAAQ;AAAA,MACR,SAAW;AAAA,QACT,KAAK;AAAA,QACL,aAAa;AAAA,QACb,kBAAkB;AAAA,QAClB,cAAc;AAAA,QACd,iBAAiB;AAAA,QACjB,wBAAwB;AAAA,QACxB,2BAA2B;AAAA,QAC3B,qBAAqB;AAAA,QACrB,wBAAwB;AAAA,QACxB,kBAAkB;AAAA,QAClB,qBAAqB;AAAA,QACrB,kBAAkB;AAAA,QAClB,qBAAqB;AAAA,QACrB,cAAc;AAAA,QACd,oBAAoB;AAAA,QACpB,6BAA6B;AAAA,QAC7B,yBAAyB;AAAA,QACzB,SAAS;AAAA,QACT,aAAa;AAAA,QACb,wBAAwB;AAAA,QACxB,4BAA4B;AAAA,QAC5B,sBAAsB;AAAA,QACtB,qBAAqB;AAAA,QACrB,kCAAkC;AAAA,QAClC,0BAA0B;AAAA,QAC1B,0BAA0B;AAAA,QAC1B,0BAA0B;AAAA,QAC1B,0BAA0B;AAAA,MAC5B;AAAA,MACA,OAAS;AAAA,MACT,KAAO;AAAA,QACL,WAAW;AAAA,QACX,eAAe;AAAA,QACf,eAAe;AAAA,QACf,kBAAkB;AAAA,QAClB,0BAA0B;AAAA,QAC1B,aAAa;AAAA,MACf;AAAA,MACA,OAAS;AAAA,QACP;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACF;AAAA,MACA,SAAW;AAAA,QACT,MAAQ;AAAA,QACR,YAAY;AAAA,QACZ,OAAS;AAAA,QACT,SAAW;AAAA,QACX,OAAS;AAAA,QACT,gBAAgB;AAAA,QAChB,aAAa;AAAA,QACb,sBAAsB;AAAA,QACtB,cAAc;AAAA,QACd,aAAa;AAAA,QACb,YAAY;AAAA,QACZ,MAAQ;AAAA,QACR,cAAc;AAAA,QACd,aAAa;AAAA,QACb,mBAAmB;AAAA,QACnB,SAAW;AAAA,QACX,iBAAiB;AAAA,QACjB,qBAAqB;AAAA,QACrB,sBAAsB;AAAA,MACxB;AAAA,MACA,YAAc;AAAA,QACZ,MAAQ;AAAA,QACR,KAAO;AAAA,MACT;AAAA,MACA,UAAY;AAAA,QACV;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACF;AAAA,MACA,QAAU;AAAA,QACR,MAAQ;AAAA,QACR,OAAS;AAAA,QACT,KAAO;AAAA,MACT;AAAA,MACA,cAAgB;AAAA,QACd;AAAA,UACE,MAAQ;AAAA,UACR,OAAS;AAAA,UACT,KAAO;AAAA,QACT;AAAA,MACF;AAAA,MACA,SAAW;AAAA,MACX,MAAQ;AAAA,QACN,KAAO;AAAA,MACT;AAAA,MACA,UAAY;AAAA,MACZ,iBAAmB;AAAA,QACjB,4BAA4B;AAAA,QAC5B,aAAa;AAAA,QACb,aAAa;AAAA,QACb,eAAe;AAAA,QACf,iBAAiB;AAAA,QACjB,eAAe;AAAA,QACf,0BAA0B;AAAA,QAC1B,qBAAqB;AAAA,QACrB,gBAAgB;AAAA,QAChB,iBAAiB;AAAA,QACjB,iBAAiB;AAAA,QACjB,kBAAkB;AAAA,QAClB,KAAO;AAAA,QACP,OAAS;AAAA,QACT,QAAU;AAAA,QACV,QAAU;AAAA,QACV,cAAc;AAAA,QACd,QAAU;AAAA,QACV,aAAe;AAAA,QACf,KAAO;AAAA,QACP,SAAW;AAAA,QACX,mBAAmB;AAAA,QACnB,YAAc;AAAA,QACd,OAAS;AAAA,QACT,QAAU;AAAA,QACV,QAAU;AAAA,QACV,QAAU;AAAA,QACV,SAAW;AAAA,QACX,YAAc;AAAA,QACd,0BAA0B;AAAA,QAC1B,kBAAkB;AAAA,MACpB;AAAA,MACA,kBAAoB;AAAA,QAClB,aAAa;AAAA,QACb,aAAa;AAAA,QACb,eAAe;AAAA,QACf,YAAc;AAAA,MAChB;AAAA,MACA,sBAAwB;AAAA,QACtB,aAAa;AAAA,UACX,UAAY;AAAA,QACd;AAAA,QACA,aAAa;AAAA,UACX,UAAY;AAAA,QACd;AAAA,MACF;AAAA,MACA,cAAgB;AAAA,QACd,iCAAiC;AAAA,QACjC,oBAAoB;AAAA,QACpB,oBAAoB;AAAA,QACpB,oBAAoB;AAAA,QACpB,oBAAoB;AAAA,QACpB,OAAS;AAAA,QACT,cAAc;AAAA,QACd,KAAO;AAAA,QACP,kBAAkB;AAAA,QAClB,MAAQ;AAAA,QACR,cAAc;AAAA,QACd,wBAAwB;AAAA,QACxB,IAAM;AAAA,MACR;AAAA,MACA,UAAY;AAAA,QACV,aAAe;AAAA,MACjB;AAAA,MACA,OAAS;AAAA,QACP,MAAQ;AAAA,QACR,KAAO;AAAA,MACT;AAAA,IACF;AAAA;AAAA;;;;;;;;;;;ACnLO,YAAM,QAAQ,IAAI,WAAW,CAAC;AAC9B,YAAM,YAAY,IAAI,WAAW,CAAC;AAEzC,YAAM,QAAQ;AACd,YAAM,YAAY,IAAI,WAAW,EAAE;AACnC,YAAM,YAAY,IAAI,WAAW,GAAG;AAEpC,eAAS,IAAI,GAAG,IAAI,MAAM,QAAQ,KAAK;AACrC,cAAM,IAAI,MAAM,WAAW,CAAC;AAC5B,kBAAU,CAAC,IAAI;AACf,kBAAU,CAAC,IAAI;;eAGD,cAAc,QAAsB,UAAgB;AAClE,YAAIC,SAAQ;AACZ,YAAI,QAAQ;AACZ,YAAI,UAAU;AAEd,WAAG;AACD,gBAAM,IAAI,OAAO,KAAI;AACrB,oBAAU,UAAU,CAAC;AACrB,UAAAA,WAAU,UAAU,OAAO;AAC3B,mBAAS;iBACF,UAAU;AAEnB,cAAM,eAAeA,SAAQ;AAC7B,QAAAA,YAAW;AAEX,YAAI,cAAc;AAChB,UAAAA,SAAQ,cAAc,CAACA;;AAGzB,eAAO,WAAWA;MACpB;eAEgB,cAAc,SAAuB,KAAa,UAAgB;AAChF,YAAI,QAAQ,MAAM;AAElB,gBAAQ,QAAQ,IAAK,CAAC,SAAS,IAAK,IAAI,SAAS;AACjD,WAAG;AACD,cAAI,UAAU,QAAQ;AACtB,qBAAW;AACX,cAAI,QAAQ;AAAG,uBAAW;AAC1B,kBAAQ,MAAM,UAAU,OAAO,CAAC;iBACzB,QAAQ;AAEjB,eAAO;MACT;eAEgB,WAAW,QAAsB,KAAW;AAC1D,YAAI,OAAO,OAAO;AAAK,iBAAO;AAC9B,eAAO,OAAO,KAAI,MAAO;MAC3B;ACtDA,YAAM,YAAY,OAAO;AAGzB,YAAM,KACJ,OAAO,gBAAgB,cACH,oBAAI,YAAW,IAC/B,OAAO,WAAW,cAClB;QACE,OAAO,KAAe;AACpB,gBAAM,MAAM,OAAO,KAAK,IAAI,QAAQ,IAAI,YAAY,IAAI,UAAU;AAClE,iBAAO,IAAI,SAAQ;;UAGvB;QACE,OAAO,KAAe;AACpB,cAAI,MAAM;AACV,mBAAS,IAAI,GAAG,IAAI,IAAI,QAAQ,KAAK;AACnC,mBAAO,OAAO,aAAa,IAAI,CAAC,CAAC;;AAEnC,iBAAO;;;YAIJ,aAAY;QAAzB,cAAA;AACE,eAAA,MAAM;AACE,eAAA,MAAM;AACN,eAAA,SAAS,IAAI,WAAW,SAAS;;QAEzC,MAAM,GAAS;AACb,gBAAM,EAAE,OAAM,IAAK;AACnB,iBAAO,KAAK,KAAK,IAAI;AACrB,cAAI,KAAK,QAAQ,WAAW;AAC1B,iBAAK,OAAO,GAAG,OAAO,MAAM;AAC5B,iBAAK,MAAM;;;QAIf,QAAK;AACH,gBAAM,EAAE,QAAQ,KAAK,IAAG,IAAK;AAC7B,iBAAO,MAAM,IAAI,MAAM,GAAG,OAAO,OAAO,SAAS,GAAG,GAAG,CAAC,IAAI;;;YAInD,aAAY;QAIvB,YAAY,QAAc;AAH1B,eAAA,MAAM;AAIJ,eAAK,SAAS;;QAGhB,OAAI;AACF,iBAAO,KAAK,OAAO,WAAW,KAAK,KAAK;;QAG1C,OAAI;AACF,iBAAO,KAAK,OAAO,WAAW,KAAK,GAAG;;QAGxC,QAAQ,MAAY;AAClB,gBAAM,EAAE,QAAQ,IAAG,IAAK;AACxB,gBAAM,MAAM,OAAO,QAAQ,MAAM,GAAG;AACpC,iBAAO,QAAQ,KAAK,OAAO,SAAS;;;AC3DxC,YAAM,QAAe,CAAA;eA+BL,qBAAqB,OAAa;AAChD,cAAM,EAAE,OAAM,IAAK;AACnB,cAAM,SAAS,IAAI,aAAa,KAAK;AACrC,cAAM,SAA0B,CAAA;AAChC,cAAM,QAAyB,CAAA;AAC/B,YAAI,OAAO;AAEX,eAAO,OAAO,MAAM,QAAQ,OAAO,OAAO;AACxC,iBAAO,cAAc,QAAQ,IAAI;AACjC,gBAAMC,UAAS,cAAc,QAAQ,CAAC;AAEtC,cAAI,CAAC,WAAW,QAAQ,MAAM,GAAG;AAC/B,kBAAM,OAAO,MAAM,IAAG;AACtB,iBAAK,CAAC,IAAI;AACV,iBAAK,CAAC,IAAIA;AACV;;AAGF,gBAAM,OAAO,cAAc,QAAQ,CAAC;AACpC,gBAAM,SAAS,cAAc,QAAQ,CAAC;AACtC,gBAAM,UAAU,SAAS;AAEzB,gBAAM,QACJ,UAAU,CAAC,MAAMA,SAAQ,GAAG,GAAG,MAAM,cAAc,QAAQ,CAAC,CAAC,IAAI,CAAC,MAAMA,SAAQ,GAAG,GAAG,IAAI;AAG5F,cAAI,OAAc;AAClB,cAAI,WAAW,QAAQ,MAAM,GAAG;AAC9B,mBAAO,CAAA;AACP,eAAG;AACD,oBAAM,YAAY,cAAc,QAAQ,CAAC;AACzC,mBAAK,KAAK,SAAS;qBACZ,WAAW,QAAQ,MAAM;;AAEpC,gBAAM,OAAO;AAEb,iBAAO,KAAK,KAAK;AACjB,gBAAM,KAAK,KAAK;;AAGlB,eAAO;MACT;eAEgB,qBAAqB,QAAuB;AAC1D,cAAM,SAAS,IAAI,aAAY;AAE/B,iBAAS,IAAI,GAAG,IAAI,OAAO,UAAU;AACnC,cAAI,sBAAsB,QAAQ,GAAG,QAAQ,CAAC,CAAC,CAAC;;AAGlD,eAAO,OAAO,MAAK;MACrB;AAEA,eAAS,sBACP,QACA,OACA,QACA,OAEC;AAED,cAAM,QAAQ,OAAO,KAAK;AAC1B,cAAM,EAAE,GAAG,WAAW,GAAG,aAAa,GAAG,SAAS,GAAG,WAAW,GAAG,MAAM,KAAI,IAAK;AAElF,YAAI,QAAQ;AAAG,iBAAO,MAAM,KAAK;AAEjC,cAAM,CAAC,IAAI,cAAc,QAAQ,WAAW,MAAM,CAAC,CAAC;AACpD,sBAAc,QAAQ,aAAa,CAAC;AACpC,sBAAc,QAAQ,MAAM,CAAC;AAE7B,cAAM,SAAS,MAAM,WAAW,IAAI,IAAS;AAC7C,sBAAc,QAAQ,QAAQ,CAAC;AAC/B,YAAI,MAAM,WAAW;AAAG,wBAAc,QAAQ,MAAM,CAAC,GAAG,CAAC;AAEzD,mBAAW,KAAK,MAAM;AACpB,wBAAc,QAAQ,GAAG,CAAC;;AAG5B,aAAK,SAAS,QAAQ,OAAO,UAAU;AACrC,gBAAM,OAAO,OAAO,KAAK;AACzB,gBAAM,EAAE,GAAG,GAAG,GAAG,EAAC,IAAK;AACvB,cAAI,IAAI,WAAY,MAAM,WAAW,KAAK,WAAY;AACpD;;AAEF,kBAAQ,sBAAsB,QAAQ,OAAO,QAAQ,KAAK;;AAG5D,eAAO,MAAM,KAAK;AAClB,cAAM,CAAC,IAAI,cAAc,QAAQ,SAAS,MAAM,CAAC,CAAC;AAClD,sBAAc,QAAQ,WAAW,CAAC;AAElC,eAAO;MACT;eAEgB,sBAAsB,OAAa;AACjD,cAAM,EAAE,OAAM,IAAK;AACnB,cAAM,SAAS,IAAI,aAAa,KAAK;AACrC,cAAM,SAA2B,CAAA;AACjC,cAAM,QAA0B,CAAA;AAEhC,YAAI,UAAU;AACd,YAAI,yBAAyB;AAC7B,YAAI,uBAAuB;AAC3B,YAAI,uBAAuB;AAC3B,YAAI,eAAe;AACnB,YAAI,iBAAiB;AACrB,YAAI,cAAc;AAClB,YAAI,gBAAgB;AAEpB,WAAG;AACD,gBAAM,OAAO,OAAO,QAAQ,GAAG;AAC/B,cAAI,YAAY;AAEhB,iBAAO,OAAO,MAAM,MAAM,OAAO,OAAO;AACtC,wBAAY,cAAc,QAAQ,SAAS;AAE3C,gBAAI,CAAC,WAAW,QAAQ,IAAI,GAAG;AAC7B,oBAAM,OAAO,MAAM,IAAG;AACtB,mBAAK,CAAC,IAAI;AACV,mBAAK,CAAC,IAAI;AACV;;AAGF,kBAAM,SAAS,cAAc,QAAQ,CAAC;AACtC,kBAAM,gBAAgB,SAAS;AAC/B,kBAAM,cAAc,SAAS;AAC7B,kBAAM,WAAW,SAAS;AAE1B,gBAAI,WAA4B;AAChC,gBAAI,WAAsB;AAC1B,gBAAI;AACJ,gBAAI,eAAe;AACjB,oBAAM,kBAAkB,cAAc,QAAQ,sBAAsB;AACpE,qCAAuB,cACrB,QACA,2BAA2B,kBAAkB,uBAAuB,CAAC;AAGvE,uCAAyB;AACzB,sBAAQ,CAAC,SAAS,WAAW,GAAG,GAAG,iBAAiB,oBAAoB;mBACnE;AACL,sBAAQ,CAAC,SAAS,WAAW,GAAG,CAAC;;AAGnC,kBAAM,UAAU,CAAC,CAAC;AAElB,gBAAI,aAAa;AACf,oBAAM,UAAU;AAChB,oBAAM,WAAW;AACjB,qCAAuB,cAAc,QAAQ,oBAAoB;AACjE,oBAAM,aAAa,YAAY;AAC/B,6BAAe,cAAc,QAAQ,aAAa,eAAe,CAAC;AAClE,+BAAiB,cACf,QACA,cAAc,aAAa,eAAe,iBAAiB,CAAC;AAG9D,yBAAW,CAAC,sBAAsB,cAAc,cAAc;;AAEhE,kBAAM,WAAW;AAEjB,gBAAI,WAAW,QAAQ,IAAI,GAAG;AAC5B,yBAAW,CAAA;AACX,iBAAG;AACD,8BAAc;AACd,gCAAgB;AAChB,sBAAM,mBAAmB,cAAc,QAAQ,CAAC;AAChD,oBAAI;AACJ,oBAAI,mBAAmB,IAAI;AACzB,qCAAmB,CAAC,CAAC,cAAc,QAAQ,CAAC,CAAC,CAAC;AAC9C,2BAAS,IAAI,IAAI,IAAI,kBAAkB,KAAK;AAC1C,0BAAM,SAAS;AACf,kCAAc,cAAc,QAAQ,WAAW;AAC/C,oCAAgB,cAAc,QAAQ,gBAAgB,SAAS,gBAAgB,CAAC;AAChF,0BAAM,aAAa,cAAc,QAAQ,CAAC;AAC1C,qCAAiB,KAAK,CAAC,YAAY,aAAa,aAAa,CAAC;;uBAE3D;AACL,qCAAmB,CAAC,CAAC,gBAAgB,CAAC;;AAExC,yBAAS,KAAK,gBAAgB;uBACvB,WAAW,QAAQ,IAAI;;AAElC,kBAAM,WAAW;AAEjB,mBAAO,KAAK,KAAK;AACjB,kBAAM,KAAK,KAAK;;AAGlB;AACA,iBAAO,MAAM,OAAO;iBACb,OAAO,MAAM;AAEtB,eAAO;MACT;eAEgB,sBAAsB,QAAwB;AAC5D,YAAI,OAAO,WAAW;AAAG,iBAAO;AAEhC,cAAM,SAAS,IAAI,aAAY;AAE/B,iBAAS,IAAI,GAAG,IAAI,OAAO,UAAU;AACnC,cAAI,uBAAuB,QAAQ,GAAG,QAAQ,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC;;AAGrE,eAAO,OAAO,MAAK;MACrB;AAEA,eAAS,uBACP,QACA,OACA,QACA,OAQC;AAED,cAAM,QAAQ,OAAO,KAAK;AAC1B,cAAM,EACJ,GAAG,WACH,GAAG,aACH,GAAG,SACH,GAAG,WACH,SACA,UACA,SAAQ,IACN;AAEJ,YAAI,MAAM,CAAC,IAAI,WAAW;AACxB,sBAAY,QAAQ,MAAM,CAAC,GAAG,SAAS;AACvC,gBAAM,CAAC,IAAI;AACX,gBAAM,CAAC,IAAI;mBACF,QAAQ,GAAG;AACpB,iBAAO,MAAM,KAAK;;AAGpB,cAAM,CAAC,IAAI,cAAc,QAAQ,MAAM,CAAC,GAAG,MAAM,CAAC,CAAC;AAEnD,cAAM,UACH,MAAM,WAAW,IAAI,IAAS,MAAM,WAAW,IAAS,MAAM,UAAU,IAAS;AACpF,sBAAc,QAAQ,QAAQ,CAAC;AAE/B,YAAI,MAAM,WAAW,GAAG;AACtB,gBAAM,EAAE,GAAG,cAAc,GAAG,YAAW,IAAK;AAC5C,cAAI,iBAAiB,MAAM,CAAC,GAAG;AAC7B,kBAAM,CAAC,IAAI;;AAEb,gBAAM,CAAC,IAAI,cAAc,QAAQ,cAAc,MAAM,CAAC,CAAC;AACvD,gBAAM,CAAC,IAAI,cAAc,QAAQ,aAAa,MAAM,CAAC,CAAC;;AAGxD,YAAI,UAAU;AACZ,gBAAM,EAAE,GAAG,cAAc,GAAG,UAAU,GAAG,WAAU,IAAK,MAAM;AAC9D,cAAI,iBAAiB,MAAM,CAAC,GAAG;AAC7B,kBAAM,CAAC,IAAI;AACX,kBAAM,CAAC,IAAI;qBACF,aAAa,MAAM,CAAC,GAAG;AAChC,kBAAM,CAAC,IAAI;;AAEb,gBAAM,CAAC,IAAI,cAAc,QAAQ,cAAc,MAAM,CAAC,CAAC;AACvD,gBAAM,CAAC,IAAI,cAAc,QAAQ,UAAU,MAAM,CAAC,CAAC;AACnD,gBAAM,CAAC,IAAI,cAAc,QAAQ,YAAY,MAAM,CAAC,CAAC;;AAGvD,YAAI,UAAU;AACZ,qBAAW,WAAW,UAAU;AAC9B,gBAAI,QAAQ,SAAS;AAAG,4BAAc,QAAQ,CAAC,QAAQ,QAAQ,CAAC;AAChE,kBAAM,aAAa,QAAQ,CAAC,EAAE,CAAC;AAC/B,0BAAc,QAAQ,YAAY,CAAC;AACnC,gBAAI,mBAAmB;AACvB,gBAAI,qBAAqB;AACzB,qBAAS,IAAI,GAAG,IAAI,QAAQ,QAAQ,KAAK;AACvC,oBAAM,WAAW,QAAQ,CAAC;AAC1B,iCAAmB,cAAc,QAAQ,SAAS,CAAC,GAAI,gBAAgB;AACvE,mCAAqB,cAAc,QAAQ,SAAS,CAAC,GAAI,kBAAkB;AAC3E,4BAAc,QAAQ,SAAS,CAAC,GAAI,CAAC;;;;AAK3C,aAAK,SAAS,QAAQ,OAAO,UAAU;AACrC,gBAAM,OAAO,OAAO,KAAK;AACzB,gBAAM,EAAE,GAAG,GAAG,GAAG,EAAC,IAAK;AACvB,cAAI,IAAI,WAAY,MAAM,WAAW,KAAK,WAAY;AACpD;;AAEF,kBAAQ,uBAAuB,QAAQ,OAAO,QAAQ,KAAK;;AAG7D,YAAI,MAAM,CAAC,IAAI,SAAS;AACtB,sBAAY,QAAQ,MAAM,CAAC,GAAG,OAAO;AACrC,gBAAM,CAAC,IAAI;AACX,gBAAM,CAAC,IAAI;eACN;AACL,iBAAO,MAAM,KAAK;;AAEpB,cAAM,CAAC,IAAI,cAAc,QAAQ,WAAW,MAAM,CAAC,CAAC;AAEpD,eAAO;MACT;AAEA,eAAS,YAAY,QAAsB,UAAkB,MAAY;AACvE,WAAG;AACD,iBAAO,MAAM,SAAS;iBACf,EAAE,WAAW;MACxB;eCtUgB,OAAO,UAAgB;AACrC,cAAM,EAAE,OAAM,IAAK;AACnB,cAAM,SAAS,IAAI,aAAa,QAAQ;AACxC,cAAM,UAA6B,CAAA;AACnC,YAAI,YAAY;AAChB,YAAI,eAAe;AACnB,YAAI,aAAa;AACjB,YAAI,eAAe;AACnB,YAAI,aAAa;AAEjB,WAAG;AACD,gBAAM,OAAO,OAAO,QAAQ,GAAG;AAC/B,gBAAM,OAAsB,CAAA;AAC5B,cAAI,SAAS;AACb,cAAI,UAAU;AACd,sBAAY;AAEZ,iBAAO,OAAO,MAAM,MAAM;AACxB,gBAAI;AAEJ,wBAAY,cAAc,QAAQ,SAAS;AAC3C,gBAAI,YAAY;AAAS,uBAAS;AAClC,sBAAU;AAEV,gBAAI,WAAW,QAAQ,IAAI,GAAG;AAC5B,6BAAe,cAAc,QAAQ,YAAY;AACjD,2BAAa,cAAc,QAAQ,UAAU;AAC7C,6BAAe,cAAc,QAAQ,YAAY;AAEjD,kBAAI,WAAW,QAAQ,IAAI,GAAG;AAC5B,6BAAa,cAAc,QAAQ,UAAU;AAC7C,sBAAM,CAAC,WAAW,cAAc,YAAY,cAAc,UAAU;qBAC/D;AACL,sBAAM,CAAC,WAAW,cAAc,YAAY,YAAY;;mBAErD;AACL,oBAAM,CAAC,SAAS;;AAGlB,iBAAK,KAAK,GAAG;AACb,mBAAO;;AAGT,cAAI,CAAC;AAAQ,iBAAK,IAAI;AACtB,kBAAQ,KAAK,IAAI;AACjB,iBAAO,MAAM,OAAO;iBACb,OAAO,OAAO;AAEvB,eAAO;MACT;AAEA,eAAS,KAAK,MAAwB;AACpC,aAAK,KAAK,cAAc;MAC1B;AAEA,eAAS,eAAe,GAAqB,GAAmB;AAC9D,eAAO,EAAE,CAAC,IAAI,EAAE,CAAC;MACnB;eAIgB,OAAO,SAAoC;AACzD,cAAM,SAAS,IAAI,aAAY;AAC/B,YAAI,eAAe;AACnB,YAAI,aAAa;AACjB,YAAI,eAAe;AACnB,YAAI,aAAa;AAEjB,iBAAS,IAAI,GAAG,IAAI,QAAQ,QAAQ,KAAK;AACvC,gBAAM,OAAO,QAAQ,CAAC;AACtB,cAAI,IAAI;AAAG,mBAAO,MAAM,SAAS;AACjC,cAAI,KAAK,WAAW;AAAG;AAEvB,cAAI,YAAY;AAEhB,mBAAS,IAAI,GAAG,IAAI,KAAK,QAAQ,KAAK;AACpC,kBAAM,UAAU,KAAK,CAAC;AACtB,gBAAI,IAAI;AAAG,qBAAO,MAAM,KAAK;AAE7B,wBAAY,cAAc,QAAQ,QAAQ,CAAC,GAAG,SAAS;AAEvD,gBAAI,QAAQ,WAAW;AAAG;AAC1B,2BAAe,cAAc,QAAQ,QAAQ,CAAC,GAAG,YAAY;AAC7D,yBAAa,cAAc,QAAQ,QAAQ,CAAC,GAAG,UAAU;AACzD,2BAAe,cAAc,QAAQ,QAAQ,CAAC,GAAG,YAAY;AAE7D,gBAAI,QAAQ,WAAW;AAAG;AAC1B,yBAAa,cAAc,QAAQ,QAAQ,CAAC,GAAG,UAAU;;;AAI7D,eAAO,OAAO,MAAK;MACrB;;;;;;;;;;;;;;;;;;;;;AC7GA,YAAM,cAAc;AAYpB,YAAM,WAAW;AAWjB,YAAM,YAAY;AAuBlB,eAAS,cAAc,OAAa;AAClC,eAAO,YAAY,KAAK,KAAK;MAC/B;AAEA,eAAS,oBAAoB,OAAa;AACxC,eAAO,MAAM,WAAW,IAAI;MAC9B;AAEA,eAAS,eAAe,OAAa;AACnC,eAAO,MAAM,WAAW,GAAG;MAC7B;AAEA,eAAS,UAAU,OAAa;AAC9B,eAAO,MAAM,WAAW,OAAO;MACjC;AAEA,eAAS,WAAW,OAAa;AAC/B,eAAO,SAAS,KAAK,KAAK;MAC5B;AAEA,eAAS,iBAAiB,OAAa;AACrC,cAAM,QAAQ,SAAS,KAAK,KAAK;AACjC,eAAO,QACL,MAAM,CAAC,GACP,MAAM,CAAC,KAAK,IACZ,MAAM,CAAC,GACP,MAAM,CAAC,KAAK,IACZ,MAAM,CAAC,KAAK,KACZ,MAAM,CAAC,KAAK,IACZ,MAAM,CAAC,KAAK,EAAE;MAElB;AAEA,eAAS,aAAa,OAAa;AACjC,cAAM,QAAQ,UAAU,KAAK,KAAK;AAClC,cAAMC,QAAO,MAAM,CAAC;AACpB,eAAO,QACL,SACA,IACA,MAAM,CAAC,KAAK,IACZ,IACA,eAAeA,KAAI,IAAIA,QAAO,MAAMA,OACpC,MAAM,CAAC,KAAK,IACZ,MAAM,CAAC,KAAK,EAAE;MAElB;AAEA,eAAS,QACP,QACA,MACA,MACA,MACAA,OACA,OACA,MAAY;AAEZ,eAAO;UACL;UACA;UACA;UACA;UACA,MAAAA;UACA;UACA;UACA,MAAI;;MAER;AAEA,eAAS,SAAS,OAAa;AAC7B,YAAI,oBAAoB,KAAK,GAAG;AAC9B,gBAAMC,OAAM,iBAAiB,UAAU,KAAK;AAC5C,UAAAA,KAAI,SAAS;AACb,UAAAA,KAAI,OAAI;AACR,iBAAOA;;AAGT,YAAI,eAAe,KAAK,GAAG;AACzB,gBAAMA,OAAM,iBAAiB,mBAAmB,KAAK;AACrD,UAAAA,KAAI,SAAS;AACb,UAAAA,KAAI,OAAO;AACX,UAAAA,KAAI,OAAI;AACR,iBAAOA;;AAGT,YAAI,UAAU,KAAK;AAAG,iBAAO,aAAa,KAAK;AAE/C,YAAI,cAAc,KAAK;AAAG,iBAAO,iBAAiB,KAAK;AAEvD,cAAM,MAAM,iBAAiB,oBAAoB,KAAK;AACtD,YAAI,SAAS;AACb,YAAI,OAAO;AACX,YAAI,OAAO,QACP,MAAM,WAAW,GAAG,QAElB,MAAM,WAAW,GAAG;AAI1B,eAAO;MACT;AAEA,eAAS,kBAAkBD,OAAY;AAGrC,YAAIA,MAAK,SAAS,KAAK;AAAG,iBAAOA;AACjC,cAAM,QAAQA,MAAK,YAAY,GAAG;AAClC,eAAOA,MAAK,MAAM,GAAG,QAAQ,CAAC;MAChC;AAEA,eAAS,WAAW,KAAU,MAAS;AACrC,sBAAc,MAAM,KAAK,IAAI;AAI7B,YAAI,IAAI,SAAS,KAAK;AACpB,cAAI,OAAO,KAAK;eACX;AAEL,cAAI,OAAO,kBAAkB,KAAK,IAAI,IAAI,IAAI;;MAElD;AAMA,eAAS,cAAc,KAAU,MAAa;AAC5C,cAAM,MAAM,QAAI;AAChB,cAAM,SAAS,IAAI,KAAK,MAAM,GAAG;AAIjC,YAAI,UAAU;AAId,YAAI,WAAW;AAKf,YAAI,mBAAmB;AAEvB,iBAAS,IAAI,GAAG,IAAI,OAAO,QAAQ,KAAK;AACtC,gBAAM,QAAQ,OAAO,CAAC;AAGtB,cAAI,CAAC,OAAO;AACV,+BAAmB;AACnB;;AAIF,6BAAmB;AAGnB,cAAI,UAAU;AAAK;AAInB,cAAI,UAAU,MAAM;AAClB,gBAAI,UAAU;AACZ,iCAAmB;AACnB;AACA;uBACS,KAAK;AAGd,qBAAO,SAAS,IAAI;;AAEtB;;AAKF,iBAAO,SAAS,IAAI;AACpB;;AAGF,YAAIA,QAAO;AACX,iBAAS,IAAI,GAAG,IAAI,SAAS,KAAK;AAChC,UAAAA,SAAQ,MAAM,OAAO,CAAC;;AAExB,YAAI,CAACA,SAAS,oBAAoB,CAACA,MAAK,SAAS,KAAK,GAAI;AACxD,UAAAA,SAAQ;;AAEV,YAAI,OAAOA;MACb;eAKwB,QAAQ,OAAe,MAAwB;AACrE,YAAI,CAAC,SAAS,CAAC;AAAM,iBAAO;AAE5B,cAAM,MAAM,SAAS,KAAK;AAC1B,YAAI,YAAY,IAAI;AAEpB,YAAI,QAAQ,cAAS,GAAuB;AAC1C,gBAAM,UAAU,SAAS,IAAI;AAC7B,gBAAM,WAAW,QAAQ;AAEzB,kBAAQ,WAAS;YACf,KAAA;AACE,kBAAI,OAAO,QAAQ;;YAGrB,KAAA;AACE,kBAAI,QAAQ,QAAQ;;YAGtB,KAAA;YACA,KAAA;AACE,yBAAW,KAAK,OAAO;;YAGzB,KAAA;AAEE,kBAAI,OAAO,QAAQ;AACnB,kBAAI,OAAO,QAAQ;AACnB,kBAAI,OAAO,QAAQ;;YAGrB,KAAA;AAEE,kBAAI,SAAS,QAAQ;;AAEzB,cAAI,WAAW;AAAW,wBAAY;;AAGxC,sBAAc,KAAK,SAAS;AAE5B,cAAM,YAAY,IAAI,QAAQ,IAAI;AAClC,gBAAQ,WAAS;;;UAIf,KAAA;UACA,KAAA;AACE,mBAAO;UAET,KAAA,GAA2B;AAEzB,kBAAMA,QAAO,IAAI,KAAK,MAAM,CAAC;AAE7B,gBAAI,CAACA;AAAM,qBAAO,aAAa;AAE/B,gBAAI,WAAW,QAAQ,KAAK,KAAK,CAAC,WAAWA,KAAI,GAAG;AAIlD,qBAAO,OAAOA,QAAO;;AAGvB,mBAAOA,QAAO;;UAGhB,KAAA;AACE,mBAAO,IAAI,OAAO;UAEpB;AACE,mBAAO,IAAI,SAAS,OAAO,IAAI,OAAO,IAAI,OAAO,IAAI,OAAO,IAAI,OAAO;;MAE7E;;;;;;;;;;;;;;;;;;;eCpTwB,QAAQ,OAAe,MAAwB;AAIrE,YAAI,QAAQ,CAAC,KAAK,SAAS,GAAG;AAAG,kBAAQ;AAEzC,eAAOE,oBAAAA,SAAAA,EAAW,OAAO,IAAI;MAC/B;eCNwB,cAAcC,OAA+B;AACnE,YAAI,CAACA;AAAM,iBAAO;AAClB,cAAM,QAAQA,MAAK,YAAY,GAAG;AAClC,eAAOA,MAAK,MAAM,GAAG,QAAQ,CAAC;MAChC;ACQO,YAAM,SAAS;AACf,YAAM,gBAAgB;AACtB,YAAM,cAAc;AACpB,YAAM,gBAAgB;AACtB,YAAM,cAAc;AAEpB,YAAM,qBAAqB;AAC3B,YAAM,uBAAuB;eClBZ,UACtB,UACA,OAAc;AAEd,cAAM,gBAAgB,wBAAwB,UAAU,CAAC;AACzD,YAAI,kBAAkB,SAAS;AAAQ,iBAAO;AAI9C,YAAI,CAAC;AAAO,qBAAW,SAAS,MAAK;AAErC,iBAAS,IAAI,eAAe,IAAI,SAAS,QAAQ,IAAI,wBAAwB,UAAU,IAAI,CAAC,GAAG;AAC7F,mBAAS,CAAC,IAAI,aAAa,SAAS,CAAC,GAAG,KAAK;;AAE/C,eAAO;MACT;AAEA,eAAS,wBAAwB,UAAgC,OAAa;AAC5E,iBAAS,IAAI,OAAO,IAAI,SAAS,QAAQ,KAAK;AAC5C,cAAI,CAAC,SAAS,SAAS,CAAC,CAAC;AAAG,mBAAO;;AAErC,eAAO,SAAS;MAClB;AAEA,eAAS,SAAS,MAAwB;AACxC,iBAAS,IAAI,GAAG,IAAI,KAAK,QAAQ,KAAK;AACpC,cAAI,KAAK,CAAC,EAAE,MAAM,IAAI,KAAK,IAAI,CAAC,EAAE,MAAM,GAAG;AACzC,mBAAO;;;AAGX,eAAO;MACT;AAEA,eAAS,aAAa,MAA0B,OAAc;AAC5D,YAAI,CAAC;AAAO,iBAAO,KAAK,MAAK;AAC7B,eAAO,KAAK,KAAK,cAAc;MACjC;AAEA,eAAS,eAAe,GAAqB,GAAmB;AAC9D,eAAO,EAAE,MAAM,IAAI,EAAE,MAAM;MAC7B;ACnCO,UAAI,QAAQ;eAkBH,aACd,UACA,QACA,KACA,MAAY;AAEZ,eAAO,OAAO,MAAM;AAClB,gBAAM,MAAM,OAAQ,OAAO,OAAQ;AACnC,gBAAM,MAAM,SAAS,GAAG,EAAE,MAAM,IAAI;AAEpC,cAAI,QAAQ,GAAG;AACb,oBAAQ;AACR,mBAAO;;AAGT,cAAI,MAAM,GAAG;AACX,kBAAM,MAAM;iBACP;AACL,mBAAO,MAAM;;;AAIjB,gBAAQ;AACR,eAAO,MAAM;MACf;eAEgB,WACd,UACA,QACA,OAAa;AAEb,iBAAS,IAAI,QAAQ,GAAG,IAAI,SAAS,QAAQ,KAAK,SAAS;AACzD,cAAI,SAAS,CAAC,EAAE,MAAM,MAAM;AAAQ;;AAEtC,eAAO;MACT;eAEgB,WACd,UACA,QACA,OAAa;AAEb,iBAAS,IAAI,QAAQ,GAAG,KAAK,GAAG,KAAK,SAAS;AAC5C,cAAI,SAAS,CAAC,EAAE,MAAM,MAAM;AAAQ;;AAEtC,eAAO;MACT;eAEgB,gBAAa;AAC3B,eAAO;UACL,SAAS;UACT,YAAY;UACZ,WAAW;;MAEf;eAMgB,qBACd,UACA,QACA,OACA,KAAW;AAEX,cAAM,EAAE,SAAS,YAAY,UAAS,IAAK;AAE3C,YAAI,MAAM;AACV,YAAI,OAAO,SAAS,SAAS;AAC7B,YAAI,QAAQ,SAAS;AACnB,cAAI,WAAW,YAAY;AACzB,oBAAQ,cAAc,MAAM,SAAS,SAAS,EAAE,MAAM,MAAM;AAC5D,mBAAO;;AAGT,cAAI,UAAU,YAAY;AAExB,kBAAM,cAAc,KAAK,IAAI;iBACxB;AACL,mBAAO;;;AAGX,cAAM,UAAU;AAChB,cAAM,aAAa;AAEnB,eAAQ,MAAM,YAAY,aAAa,UAAU,QAAQ,KAAK,IAAI;MACpE;eCrGwB,eACtB,SACA,OAAkB;AAElB,cAAM,UAAoB,MAAM,IAAI,cAAc;AAElD,iBAAS,IAAI,GAAG,IAAI,QAAQ,QAAQ,KAAK;AACvC,gBAAM,OAAO,QAAQ,CAAC;AACtB,mBAAS,IAAI,GAAG,IAAI,KAAK,QAAQ,KAAK;AACpC,kBAAM,MAAM,KAAK,CAAC;AAClB,gBAAI,IAAI,WAAW;AAAG;AAEtB,kBAAM,cAAc,IAAI,aAAa;AACrC,kBAAM,aAAa,IAAI,WAAW;AAClC,kBAAM,eAAe,IAAI,aAAa;AACtC,kBAAM,iBAAiB,QAAQ,WAAW;AAC1C,kBAAM,eAAgB,eAAe,UAAU,MAAzB,eAAe,UAAU,IAAM,CAAA;AACrD,kBAAM,OAAO,MAAM,WAAW;AAM9B,kBAAM,QAAQ,WACZ,cACA,cACA,qBAAqB,cAAc,cAAc,MAAM,UAAU,CAAC;AAGpE,mBAAO,cAAe,KAAK,YAAY,QAAQ,GAAI,CAAC,cAAc,GAAG,IAAI,MAAM,CAAC,CAAC;;;AAIrF,eAAO;MACT;AAEA,eAAS,OAAU,OAAY,OAAeC,QAAQ;AACpD,iBAAS,IAAI,MAAM,QAAQ,IAAI,OAAO,KAAK;AACzC,gBAAM,CAAC,IAAI,MAAM,IAAI,CAAC;;AAExB,cAAM,KAAK,IAAIA;MACjB;AAOA,eAAS,iBAAc;AACrB,eAAO,EAAE,WAAW,KAAI;MAC1B;YC9Ca,SAAiB,SAAU,KAAK,QAAM;AACjD,cAAM,SACJ,OAAO,QAAQ,WAAY,KAAK,MAAM,GAAG,IAAiD;AAE5F,YAAI,EAAE,cAAc;AAAS,iBAAO,IAAI,SAAS,QAAQ,MAAM;AAE/D,cAAM,WAAiC,CAAA;AACvC,cAAM,UAAoB,CAAA;AAC1B,cAAM,iBAAoC,CAAA;AAC1C,cAAM,QAAkB,CAAA;AACxB,cAAM,EAAE,SAAQ,IAAK;AAErB,YAAI,IAAI;AACR,eAAO,IAAI,SAAS,SAAS,GAAG,KAAK;AACnC,gBAAM,KAAK,SAAS,IAAI,CAAC,EAAE;AAC3B,qBAAW,SAAS,CAAC,GAAG,QAAQ,UAAU,SAAS,gBAAgB,OAAO,GAAG,MAAM,GAAG,MAAM;;AAE9F,YAAI,SAAS,SAAS,GAAG;AACvB,qBAAW,SAAS,CAAC,GAAG,QAAQ,UAAU,SAAS,gBAAgB,OAAO,UAAU,QAAQ;;AAG9F,cAAM,SAA2B;UAC/B,SAAS;UACT,MAAM,OAAO;UACb;UACA;UACA;UACA;;AAGF,eAAOC,SAAAA,oBAAoB,MAAM;MACnC;AAEA,eAAS,WACP,SACA,QACA,UACA,SACA,gBACA,OACA,UACA,YAAkB;AAElB,cAAM,MAAM,OAAO,QAAQ,KAAK,MAAM;AACtC,cAAM,EAAE,MAAM,YAAY,QAAQ,aAAY,IAAK,QAAQ;AAE3D,cAAM,gBAAgB,QAAQ;AAC9B,cAAM,cAAc,MAAM;AAC1B,cAAM,UAAUC,SAAAA,gBAAgB,GAAG;AACnC,cAAM,EAAE,gBAAe,IAAK;AAC5B,eAAO,SAAS,eAAe;AAC/B,eAAO,gBAAgB,IAAI,kBAAkB,mBAAmB,gBAAgB,MAAM,CAAC;AACvF,eAAO,OAAO,IAAI,KAAK;AAGvB,iBAAS,IAAI,SAAS,QAAQ,KAAK,YAAY;AAAK,mBAAS,KAAK,CAAA,CAAE;AAKpE,cAAM,QAAQ,WAAW;AACzB,cAAM,MAAM,KAAK,IAAI,QAAQ,QAAQ,QAAQ,CAAC;AAE9C,iBAAS,IAAI,GAAG,IAAI,KAAK,KAAK;AAC5B,gBAAM,OAAO,QAAQ,CAAC;AAGtB,gBAAM,MAAM,MAAM,IAAI,SAAS,UAAU,IAAK,SAAS,aAAa,CAAC,IAAI,CAAA;AAGzE,gBAAM,UAAU,MAAM,IAAI,eAAe;AAEzC,mBAAS,IAAI,GAAG,IAAI,KAAK,QAAQ,KAAK;AACpC,kBAAM,MAAM,KAAK,CAAC;AAClB,kBAAMC,UAAS,UAAU,IAAI,MAAM;AAInC,gBAAI,MAAM,SAASA,WAAU;AAAY;AAEzC,gBAAI,IAAI,WAAW,GAAG;AACpB,kBAAI,KAAK,CAACA,OAAM,CAAC;AACjB;;AAGF,kBAAM,eAAe,gBAAgB,IAAI,aAAa;AACtD,kBAAM,aAAa,IAAI,WAAW;AAClC,kBAAM,eAAe,IAAI,aAAa;AACtC,gBAAI,IAAI,WAAW,GAAG;AACpB,kBAAI,KAAK,CAACA,SAAQ,cAAc,YAAY,YAAY,CAAC;AACzD;;AAGF,gBAAI,KAAK,CAACA,SAAQ,cAAc,YAAY,cAAc,cAAc,IAAI,WAAW,CAAC,CAAC;;;MAG/F;AAEA,eAAS,OAAU,KAAU,OAAU;AACrC,iBAAS,IAAI,GAAG,IAAI,MAAM,QAAQ;AAAK,cAAI,KAAK,MAAM,CAAC,CAAC;MAC1D;AAMA,eAAS,mBAAmB,KAAW;AACrC,cAAM,iBAAiB,CAAA;AACvB,iBAAS,IAAI,GAAG,IAAI,KAAK;AAAK,yBAAe,CAAC,IAAI;AAClD,eAAO;MACT;ACxEA,YAAM,2BAAmD,OAAO,OAAO;QACrE,QAAQ;QACR,MAAM;QACN,QAAQ;QACR,MAAM;OACP;AAED,YAAM,4BAAqD,OAAO,OAAO;QACvE,MAAM;QACN,QAAQ;OACT;AAED,YAAM,gBAAgB;AACtB,YAAM,kBAAkB;YAEX,oBAAoB;YACpB,uBAAuB;AAKzBC,MAAAA,SAAAA,kBAAAA;AAKAF,MAAAA,SAAAA,kBAAAA;AAMAG,MAAAA,SAAAA,eAAAA;AAWAC,MAAAA,SAAAA,sBAAAA;AAYAC,MAAAA,SAAAA,uBAAAA;AAQAC,MAAAA,SAAAA,cAAAA;AAMAP,MAAAA,SAAAA,sBAAAA;AAMAQ,MAAAA,SAAAA,aAAAA;AAQAC,MAAAA,SAAAA,aAAAA;YAIE,SAAQ;QAiBnB,YAAY,KAAqB,QAAsB;AAL/C,eAAA,eAAe,cAAa;AAE5B,eAAA,aAAmC;AACnC,eAAA,iBAA0C;AAGhD,gBAAM,WAAW,OAAO,QAAQ;AAEhC,cAAI,CAAC,YAAY,IAAI,gBAAgB;AAAU,mBAAO;AAEtD,gBAAM,SAAU,WAAW,KAAK,MAAM,GAAG,IAAI;AAE7C,gBAAM,EAAE,SAAS,MAAM,OAAO,YAAY,SAAS,eAAc,IAAK;AACtE,eAAK,UAAU;AACf,eAAK,OAAO;AACZ,eAAK,QAAQ;AACb,eAAK,aAAa;AAClB,eAAK,UAAU;AACf,eAAK,iBAAiB;AAEtB,cAAI,cAAc,QAAQ;AACxB,kBAAM,OAAO,QAAQ,cAAc,IAAI,cAAc,MAAM,CAAC;AAC5D,iBAAK,kBAAkB,QAAQ,IAAI,CAAC,MAAM,QAAQ,KAAK,IAAI,IAAI,CAAC;iBAC3D;AACL,iBAAK,kBAAkB,QAAQ,IAAI,CAAC,MAAM,KAAK,EAAE;;AAGnD,gBAAM,EAAE,SAAQ,IAAK;AACrB,cAAI,OAAO,aAAa,UAAU;AAChC,iBAAK,WAAW;AAChB,iBAAK,WAAW;iBACX;AACL,iBAAK,WAAW;AAChB,iBAAK,WAAW,UAAU,UAAU,QAAQ;;;;AAIhD,OAAA,MAAA;AACEN,QAAAA,SAAAA,kBAAkB,CAAC,QAAG;;AACpB,kBAAA,KAAQ,IAAI,cAAQ,QAAA,OAAA,SAAA,KAAZ,IAAI,WAAaO,eAAAA,OAAO,IAAI,QAAS;;AAG/CT,QAAAA,SAAAA,kBAAkB,CAAC,QAAG;AACpB,iBAAQ,IAAI,aAAJ,IAAI,WAAaU,eAAAA,OAAO,IAAI,QAAS;;AAG/CP,QAAAA,SAAAA,eAAe,CAAC,KAAK,MAAMF,YAAM;AAC/B,gBAAM,UAAUD,SAAAA,gBAAgB,GAAG;AAInC,cAAI,QAAQ,QAAQ;AAAQ,mBAAO;AAEnC,iBAAO,qBACL,QAAQ,IAAI,GACZ,IAAI,cACJ,MACAC,SACA,oBAAoB;;AAIxBG,QAAAA,SAAAA,sBAAsB,CAAC,KAAK,EAAE,MAAM,QAAAH,SAAQ,KAAI,MAAE;AAChD;AACA,cAAI,OAAO;AAAG,kBAAM,IAAI,MAAM,aAAa;AAC3C,cAAIA,UAAS;AAAG,kBAAM,IAAI,MAAM,eAAe;AAE/C,gBAAM,UAAUD,SAAAA,gBAAgB,GAAG;AAInC,cAAI,QAAQ,QAAQ;AAAQ,mBAAO;AAEnC,gBAAM,UAAU,qBACd,QAAQ,IAAI,GACZ,IAAI,cACJ,MACAC,SACA,QAAQ,oBAAoB;AAG9B,cAAI,WAAW;AAAM,mBAAO;AAC5B,cAAI,QAAQ,UAAU;AAAG,mBAAO;AAEhC,gBAAM,EAAE,OAAO,gBAAe,IAAK;AACnC,iBAAO;YACL,QAAQ,gBAAgB,QAAQ,aAAa,CAAC;YAC9C,MAAM,QAAQ,WAAW,IAAI;YAC7B,QAAQ,QAAQ,aAAa;YAC7B,MAAM,QAAQ,WAAW,IAAI,MAAM,QAAQ,WAAW,CAAC,IAAI;;;AAI/DI,QAAAA,SAAAA,uBAAuB,CAAC,KAAK,EAAE,QAAQ,MAAM,QAAAJ,SAAQ,KAAI,MAAE;AACzD;AACA,cAAI,OAAO;AAAG,kBAAM,IAAI,MAAM,aAAa;AAC3C,cAAIA,UAAS;AAAG,kBAAM,IAAI,MAAM,eAAe;AAE/C,gBAAM,EAAE,SAAS,gBAAe,IAAK;AACrC,cAAI,cAAc,QAAQ,QAAQ,MAAM;AACxC,cAAI,gBAAgB;AAAI,0BAAc,gBAAgB,QAAQ,MAAM;AACpE,cAAI,gBAAgB;AAAI,mBAAO;AAE/B,gBAAM,YAAa,IAAI,eAAJ,IAAI,aAAe,eACpCD,SAAAA,gBAAgB,GAAG,GAClB,IAAI,iBAAiB,QAAQ,IAAI,aAAa,CAAC;AAElD,gBAAM,QAAQ,IAAI;AAElB,gBAAM,WAAW,UAAU,WAAW,EAAE,IAAI;AAE5C,cAAI,YAAY;AAAM,mBAAO;AAE7B,gBAAM,UAAU,qBACd,UACA,MAAM,WAAW,GACjB,MACAC,SACA,QAAQ,oBAAoB;AAG9B,cAAI,WAAW;AAAM,mBAAO;AAC5B,iBAAO;YACL,MAAM,QAAQ,kBAAkB,IAAI;YACpC,QAAQ,QAAQ,oBAAoB;;;AAIxCK,QAAAA,SAAAA,cAAc,CAAC,KAAK,OAAE;AACpB,gBAAM,UAAUN,SAAAA,gBAAgB,GAAG;AACnC,gBAAM,EAAE,OAAO,gBAAe,IAAK;AAEnC,mBAAS,IAAI,GAAG,IAAI,QAAQ,QAAQ,KAAK;AACvC,kBAAM,OAAO,QAAQ,CAAC;AACtB,qBAAS,IAAI,GAAG,IAAI,KAAK,QAAQ,KAAK;AACpC,oBAAM,MAAM,KAAK,CAAC;AAElB,oBAAM,gBAAgB,IAAI;AAC1B,oBAAM,kBAAkB,IAAI,CAAC;AAC7B,kBAAI,SAAS;AACb,kBAAI,eAAe;AACnB,kBAAI,iBAAiB;AACrB,kBAAI,OAAO;AACX,kBAAI,IAAI,WAAW,GAAG;AACpB,yBAAS,gBAAgB,IAAI,CAAC,CAAC;AAC/B,+BAAe,IAAI,CAAC,IAAI;AACxB,iCAAiB,IAAI,CAAC;;AAExB,kBAAI,IAAI,WAAW;AAAG,uBAAO,MAAM,IAAI,CAAC,CAAC;AAEzC,iBAAG;gBACD;gBACA;gBACA;gBACA;gBACA;gBACA;eACc;;;;AAKtBD,QAAAA,SAAAA,sBAAsB,CAAC,KAAK,WAAM;AAChC,gBAAM,QAAQ,OAAO,OAAO,CAAA,GAAI,GAAG;AACnC,gBAAM,WAAW,CAAA;AACjB,gBAAM,SAAS,IAAI,SAAS,OAAO,MAAM;AACzC,iBAAO,WAAW,IAAI;AACtB,iBAAO;;AAGTQ,QAAAA,SAAAA,aAAa,CAAC,QAAG;AACf,iBAAO;YACL,SAAS;YACT,MAAM,IAAI;YACV,OAAO,IAAI;YACX,YAAY,IAAI;YAChB,SAAS,IAAI;YACb,gBAAgB,IAAI;YACpB,UAAUP,SAAAA,gBAAgB,GAAG;;;AAIjCQ,QAAAA,SAAAA,aAAa,CAAC,QAAG;AACf,iBAAO;YACL,SAAS;YACT,MAAM,IAAI;YACV,OAAO,IAAI;YACX,YAAY,IAAI;YAChB,SAAS,IAAI;YACb,gBAAgB,IAAI;YACpB,UAAUN,SAAAA,gBAAgB,GAAG;;;MAGnC,GAAC;AAiBH,eAAS,qBACP,UACA,MACA,MACAD,SACA,MAA4D;AAE5D,YAAI,QAAQ,qBAAqB,UAAUA,SAAQ,MAAM,IAAI;AAC7D,YAAIU,OAAS;AACX,mBAAS,SAAS,oBAAoB,aAAa,YAAY,UAAUV,SAAQ,KAAK;mBAC7E,SAAS;AAAmB;AAEvC,YAAI,UAAU,MAAM,UAAU,SAAS;AAAQ,iBAAO;AACtD,eAAO,SAAS,KAAK;MACvB;;;;;;;;;;;AC1XA;AAAA;AAAA;AAAA;AAAA,QAAM,EAAE,UAAU,qBAAqB,OAAO,IAAI;AAClD,QAAIW,QAAO,UAAQ,MAAM;AACzB,QAAM,EAAE,eAAAC,gBAAe,cAAc,IAAI,UAAQ,KAAK;AACtD,QAAI,OAAO,UAAQ,MAAM;AAEzB,QAAIC;AACJ,QAAI;AACF,MAAAA,MAAK,UAAQ,IAAI;AACjB,UAAI,CAACA,IAAG,cAAc,CAACA,IAAG,cAAc;AAEtC,QAAAA,MAAK;AAAA,MACP;AAAA,IACF,SAAS,KAAK;AAAA,IAEd;AAQA,aAAS,eAAe,KAAK,SAAS;AACpC,aAAO,IAAI,QAAQ,OAAO;AAAA,IAC5B;AAYA,QAAI,oBAAoB;AAOxB,aAAS,qBAAqB,UAAU;AACtC,UAAI,gBAAgB;AACpB,UAAI,OAAO,WAAW,aAAa;AACjC,wBAAgB,OAAO,IAAI,aAAa;AAAA,MAC1C;AACA,UAAIC,cAAa,KAAK,aAAa;AACnC,UAAI,CAACA,aAAY;AACf,QAAAA,cAAa,EAAE,SAAS,kBAAkB;AAC1C,YAAI,OAAO,gBAAgB;AACzB,iBAAO,eAAe,MAAM,eAAe,EAAE,OAAOA,YAAW,CAAC;AAAA,QAClE,OAAO;AACL,eAAK,aAAa,IAAIA;AAAA,QACxB;AAAA,MACF;AACA,UAAI,sBAAsBA,YAAW,SAAS;AAC5C,cAAM,IAAI,MAAM,mEAAmE;AAAA,MACrF;AACA,eAAS,OAAO,UAAU;AACxB,YAAI,EAAE,OAAOA,cAAa;AACxB,UAAAA,YAAW,GAAG,IAAI,SAAS,GAAG;AAAA,QAChC;AAAA,MACF;AACA,aAAOA;AAAA,IACT;AAWA,QAAI,aAAa,qBAAqB;AAAA;AAAA;AAAA;AAAA,MAKpC,4BAA4B;AAAA;AAAA,MAE5B,iBAAiB;AAAA;AAAA,MAEjB,2BAA2B;AAAA;AAAA,MAG3B,iCAAiC,CAAC;AAAA;AAAA,MAGlC,6BAA6B;AAAA;AAAA,MAG7B,mBAAmB,uBAAO,OAAO,IAAI;AAAA;AAAA;AAAA,MAIrC,gBAAgB,uBAAO,OAAO,IAAI;AAAA;AAAA,MAGlC,sBAAsB,CAAC;AAAA,MACvB,qBAAqB,CAAC;AAAA;AAAA;AAAA,MAItB,8BAA8B,CAAC;AAAA,MAC/B,6BAA6B,CAAC;AAAA,IAEhC,CAAC;AAGD,QAAI,cAAc;AAGlB,QAAI,cAAc;AAElB,aAAS,cAAc;AACrB,UAAI,gBAAgB;AAClB,eAAO;AACT,UAAI,gBAAgB;AAClB,eAAO;AACT,aAAS,OAAO,WAAW,eAAiB,OAAO,mBAAmB,cAAe,EAAE,OAAO,WAAW,OAAO,UAAU,OAAO,WAAW,OAAO,QAAQ,SAAS;AAAA,IACtK;AAEA,aAAS,+BAA+B;AACtC,aAAS,OAAO,YAAY,YAAc,YAAY,QAAU,OAAO,QAAQ,OAAO;AAAA,IACxF;AAEA,aAAS,iBAAiB,GAAG;AAC3B,UAAG,UAAU,CAAC,GAAG;AACf,eAAOF,eAAc,CAAC;AAAA,MACxB;AACA,aAAO;AAAA,IACT;AAGA,aAAS,UAAU,OAAO;AACxB,aAAO,MAAM,WAAW,OAAO;AAAA,IACjC;AACA,aAAS,cAAc,OAAO;AAC5B,aAAO,YAAY,KAAK,KAAK;AAAA,IAC/B;AAEA,QAAM,cAAc;AACpB,aAAS,oBAAoB,OAAO;AAClC,aAAO,MAAM,WAAW,IAAI;AAAA,IAC9B;AAIA,aAAS,YAAY,eAAe;AAClC,UAAG,cAAc,WAAW,OAAO,EAAG,QAAO;AAC7C,UAAG,UAAU,aAAa,GAAG;AAE3B,eAAO,IAAI,IAAI,aAAa,EAAE,SAAS;AAAA,MACzC,OAAO;AACL,YAAI;AACF,iBAAO,cAAc,aAAa,EAAE,SAAS;AAAA,QAC/C,QAAQ;AACN,iBAAO;AAAA,QACT;AAAA,MACF;AAAA,IACF;AACA,aAAS,qBAAqB,KAAK;AACjC,aAAO,WAAW,kBAAkB,YAAY,GAAG,CAAC;AAAA,IACtD;AACA,aAAS,4BAA4B,KAAK;AACxC,aAAO,OAAO,UAAU,eAAe,KAAK,WAAW,mBAAmB,GAAG;AAAA,IAC/E;AACA,aAAS,4BAA4B,KAAK;AACxC,aAAO,WAAW,kBAAkB,GAAG;AAAA,IACzC;AACA,aAAS,qBAAqB,KAAKG,QAAO;AACxC,aAAO,WAAW,kBAAkB,YAAY,GAAG,CAAC,IAAIA;AAAA,IAC1D;AACA,aAAS,kBAAkB,KAAK;AAC9B,aAAO,WAAW,eAAe,YAAY,GAAG,CAAC;AAAA,IACnD;AACA,aAAS,kBAAkB,KAAKA,QAAO;AACrC,aAAO,WAAW,eAAe,YAAY,GAAG,CAAC,IAAIA;AAAA,IACvD;AACA,aAAS,cAAc;AACrB,iBAAW,oBAAoB,uBAAO,OAAO,IAAI;AACjD,iBAAW,iBAAiB,uBAAO,OAAO,IAAI;AAAA,IAChD;AAGA,aAAS,YAAY,MAAM,cAAc;AACvC,aAAO,SAAS,KAAK;AACnB,iBAAS,IAAI,GAAG,IAAI,KAAK,QAAQ,KAAK;AACpC,cAAI,MAAM,KAAK,CAAC,EAAE,GAAG;AACrB,cAAI,KAAK;AACP,mBAAO;AAAA,UACT;AAAA,QACF;AACA,iBAAS,IAAI,GAAG,IAAI,aAAa,QAAQ,KAAK;AAC5C,cAAI,MAAM,aAAa,CAAC,EAAE,GAAG;AAC7B,cAAI,KAAK;AACP,mBAAO;AAAA,UACT;AAAA,QACF;AACA,eAAO;AAAA,MACT;AAAA,IACF;AAEA,QAAI,eAAe,YAAY,WAAW,sBAAsB,WAAW,4BAA4B;AAEvG,eAAW,6BAA6B,KAAK,SAASJ,OAAM;AAE1D,MAAAA,QAAOA,MAAK,KAAK;AACjB,UAAI,SAAS,KAAKA,KAAI,GAAG;AAEvB,QAAAA,QAAOA,MAAK,QAAQ,qBAAqB,SAAS,UAAU,OAAO;AACjE,iBAAO,QACL;AAAA;AAAA,YACA;AAAA;AAAA,QACJ,CAAC;AAAA,MACH;AACA,YAAM,MAAM,YAAYA,KAAI;AAC5B,UAAG,4BAA4B,GAAG,GAAG;AACnC,eAAO,4BAA4B,GAAG;AAAA,MACxC;AAEA,UAAI,WAAW;AACf,UAAI;AACF,YAAI,CAACE,KAAI;AAEP,cAAI,MAAM,IAAI,eAAe;AAC7B,cAAI;AAAA,YAAK;AAAA,YAAOF;AAAA;AAAA,YAAmB;AAAA,UAAK;AACxC,cAAI,KAAK,IAAI;AACb,cAAI,IAAI,eAAe,KAAK,IAAI,WAAW,KAAK;AAC9C,uBAAW,IAAI;AAAA,UACjB;AAAA,QACF,WAAWE,IAAG,WAAWF,KAAI,GAAG;AAE9B,qBAAWE,IAAG,aAAaF,OAAM,MAAM;AAAA,QACzC;AAAA,MACF,SAAS,IAAI;AAAA,MAEb;AAEA,aAAO,qBAAqBA,OAAM,QAAQ;AAAA,IAC5C,CAAC;AAID,aAAS,mBAAmB,MAAM,KAAK;AACrC,UAAG,CAAC,KAAM,QAAO;AAGjB,UAAI;AAEF,YAAG,cAAc,IAAI,KAAK,oBAAoB,IAAI,GAAG;AACjD,cAAG,cAAc,GAAG,KAAK,oBAAoB,GAAG,GAAG;AAC/C,mBAAO,IAAI,IAAI,KAAK,IAAI,EAAE,SAAS;AAAA,UACvC;AACA,cAAGA,MAAK,WAAW,GAAG,GAAG;AACrB,mBAAO,IAAI,IAAI,cAAc,GAAG,GAAG,IAAI,EAAE,SAAS;AAAA,UACtD;AAEA,iBAAO,IAAI,IAAI,IAAI,QAAQ,OAAO,GAAG,GAAG,IAAI,EAAE,SAAS;AAAA,QAC3D;AAEA,YAAGA,MAAK,WAAW,IAAI,GAAG;AACtB,cAAG,UAAU,GAAG,GAAG;AACf,mBAAOC,eAAc,GAAG;AAAA,UAC5B;AACA,cAAG,oBAAoB,GAAG,GAAG;AACzB,mBAAOA,eAAc,IAAI,IAAI,KAAK,SAAS,CAAC;AAAA,UAChD;AACA,cAAG,cAAc,GAAG,GAAG;AAGnB,mBAAO;AAAA,UACX;AACA,cAAGD,MAAK,WAAW,GAAG,GAAG;AAErB,mBAAOA,MAAK,UAAU,GAAG;AAAA,UAC7B;AAEA,iBAAOA,MAAK,KAAK,MAAM,MAAM,UAAU,GAAG,CAAC;AAAA,QAC/C;AAIA,YAAG,cAAc,GAAG,KAAK,oBAAoB,GAAG,GAAG;AAC/C,iBAAO;AAAA,QACX;AACA,eAAOA,MAAK,KAAK,MAAM,MAAM,GAAG;AAAA,MAClC,SAAQ,GAAG;AACP,eAAO;AAAA,MACX;AAAA,IACF;AAGA,aAAS,sBAAsB,cAAc,WAAW;AACtD,UAAI;AACF,YAAG,cAAc,YAAY,KAAK,oBAAoB,YAAY,GAAG;AACnE,cAAG,cAAc,SAAS,KAAK,oBAAoB,SAAS,EAAG,QAAO;AACtE,cAAGA,MAAK,WAAW,SAAS,EAAG,QAAO,cAAc,SAAS,EAAE,SAAS;AAAA,QAC1E,WAAUA,MAAK,WAAW,YAAY,GAAG;AACvC,cAAG,cAAc,SAAS,KAAK,oBAAoB,SAAS,GAAG;AAC7D,mBAAOC,eAAc,IAAI,IAAI,WAAW,SAAS,CAAC;AAAA,UACpD;AAAA,QACF;AACA,eAAO;AAAA,MACT,SAAQ,GAAG;AACT,eAAO;AAAA,MACT;AAAA,IACF;AAEA,aAAS,qBAAqB,QAAQ;AACpC,UAAI;AAEJ,UAAI,YAAY,GAAG;AAChB,YAAI;AACF,cAAI,MAAM,IAAI,eAAe;AAC7B,cAAI,KAAK,OAAO,QAAQ,KAAK;AAC7B,cAAI,KAAK,IAAI;AACb,qBAAW,IAAI,eAAe,IAAI,IAAI,eAAe;AAGrD,cAAI,kBAAkB,IAAI,kBAAkB,WAAW,KACjC,IAAI,kBAAkB,aAAa;AACzD,cAAI,iBAAiB;AACnB,mBAAO;AAAA,UACT;AAAA,QACF,SAAS,GAAG;AAAA,QACZ;AAAA,MACH;AAGA,iBAAW,aAAa,iBAAiB,MAAM,CAAC;AAChD,UAAI,KAAK;AAGT,UAAI,WAAW;AACf,aAAO,QAAQ,GAAG,KAAK,QAAQ,EAAG,aAAY;AAC9C,UAAI,CAAC,UAAW,QAAO;AACvB,aAAO,UAAU,CAAC;AAAA,IACpB;AAQA,QAAI,oBAAoB,YAAY,WAAW,qBAAqB,WAAW,2BAA2B;AAC1G,eAAW,4BAA4B,KAAK,SAAS,QAAQ;AAC3D,UAAI,mBAAmB,qBAAqB,MAAM;AAClD,UAAI,CAAC,iBAAkB,QAAO;AAG9B,UAAI;AACJ,UAAI,YAAY,KAAK,gBAAgB,GAAG;AAEtC,YAAI,UAAU,iBAAiB,MAAM,iBAAiB,QAAQ,GAAG,IAAI,CAAC;AACtE,wBAAgB,OAAO,KAAK,SAAS,QAAQ,EAAE,SAAS;AACxD,2BAAmB;AAAA,MACrB,OAAO;AAEL,2BAAmB,mBAAmB,QAAQ,gBAAgB;AAC9D,wBAAgB,aAAa,iBAAiB,gBAAgB,CAAC;AAAA,MACjE;AAEA,UAAI,CAAC,eAAe;AAClB,eAAO;AAAA,MACT;AAEA,aAAO;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,MACP;AAAA,IACF,CAAC;AAED,aAAS,kBAAkB,UAAU;AACnC,UAAI,YAAY,kBAAkB,SAAS,MAAM;AACjD,UAAI,CAAC,WAAW;AAEd,YAAI,YAAY,kBAAkB,SAAS,MAAM;AACjD,YAAI,WAAW;AACb,sBAAY,kBAAkB,SAAS,QAAQ;AAAA,YAC7C,KAAK,UAAU;AAAA,YACf,KAAK,IAAI,OAAO,UAAU,KAAK,UAAU,GAAG;AAAA,UAC9C,CAAC;AAKD,oBAAU,IAAI,kBAAkB,UAAU,IAAI,QAAQ,IAAI,OAAK,mBAAmB,UAAU,KAAK,CAAC,CAAC;AAInG,cAAI,UAAU,IAAI,gBAAgB;AAChC,sBAAU,IAAI,gBAAgB,QAAQ,SAAS,gBAAgB,GAAG;AAChE,kBAAI,WAAW,UAAU,IAAI,eAAe,CAAC;AAC7C,kBAAI,UAAU;AACZ,qCAAqB,gBAAgB,QAAQ;AAAA,cAC/C;AAAA,YACF,CAAC;AAAA,UACH;AAAA,QACF,OAAO;AACL,sBAAY,kBAAkB,SAAS,QAAQ;AAAA,YAC7C,KAAK;AAAA,YACL,KAAK;AAAA,UACP,CAAC;AAAA,QACH;AAAA,MACF;AAGA,UAAI,aAAa,UAAU,KAAK;AAC9B,YAAI,mBAAmB,oBAAoB,UAAU,KAAK,QAAQ;AAOlE,YAAI,iBAAiB,WAAW,MAAM;AAIpC,2BAAiB,SAAS;AAAA,YACxB,SAAS;AAAA,YAAQ,iBAAiB;AAAA,UAAM;AAC1C,iBAAO;AAAA,QACT;AAAA,MACF;AAEA,aAAO;AAAA,IACT;AAIA,aAAS,cAAc,QAAQ;AAE7B,UAAI,QAAQ,yCAAyC,KAAK,MAAM;AAChE,UAAI,OAAO;AACT,YAAI,WAAW,kBAAkB;AAAA,UAC/B,QAAQ,MAAM,CAAC;AAAA,UACf,MAAM,CAAC,MAAM,CAAC;AAAA,UACd,QAAQ,MAAM,CAAC,IAAI;AAAA,QACrB,CAAC;AACD,eAAO,aAAa,MAAM,CAAC,IAAI,OAAO,SAAS,SAAS,MACtD,SAAS,OAAO,OAAO,SAAS,SAAS,KAAK;AAAA,MAClD;AAGA,cAAQ,6BAA6B,KAAK,MAAM;AAChD,UAAI,OAAO;AACT,eAAO,aAAa,MAAM,CAAC,IAAI,OAAO,cAAc,MAAM,CAAC,CAAC,IAAI;AAAA,MAClE;AAGA,aAAO;AAAA,IACT;AAYA,aAAS,mBAAmB;AAC1B,UAAI;AACJ,UAAI,eAAe;AACnB,UAAI,KAAK,SAAS,GAAG;AACnB,uBAAe;AAAA,MACjB,OAAO;AACL,mBAAW,KAAK,yBAAyB;AACzC,YAAI,CAAC,YAAY,KAAK,OAAO,GAAG;AAC9B,yBAAe,KAAK,cAAc;AAClC,0BAAgB;AAAA,QAClB;AAEA,YAAI,UAAU;AACZ,0BAAgB;AAAA,QAClB,OAAO;AAIL,0BAAgB;AAAA,QAClB;AACA,YAAI,aAAa,KAAK,cAAc;AACpC,YAAI,cAAc,MAAM;AACtB,0BAAgB,MAAM;AACtB,cAAI,eAAe,KAAK,gBAAgB;AACxC,cAAI,cAAc;AAChB,4BAAgB,MAAM;AAAA,UACxB;AAAA,QACF;AAAA,MACF;AAEA,UAAI,OAAO;AACX,UAAI,UAAU,KAAK,UAAU,KAAK,QAAQ,IAAI;AAC9C,UAAG,SAAS;AACV,gBAAQ;AACR,YAAI,eAAe,KAAK,eAAe,KAAK,aAAa,IAAI;AAC7D,YAAI,eAAe,KAAK,eAAe,KAAK,aAAa,IAAI;AAC7D,YAAG,gBAAgB,cAAc;AAC/B,kBAAQ,eAAe,wBAAwB;AAC/C,cAAI,eAAe,KAAK,gBAAgB;AACxC,kBAAQ,eAAe;AAAA,QACzB;AAAA,MACF;AACA,UAAI,eAAe,KAAK,gBAAgB;AACxC,UAAI,YAAY;AAChB,UAAI,gBAAgB,KAAK,cAAc;AACvC,UAAI,eAAe,EAAE,KAAK,WAAW,KAAK;AAC1C,UAAI,cAAc;AAChB,YAAI,WAAW,KAAK,YAAY;AAEhC,YAAI,aAAa,mBAAmB;AAClC,qBAAW;AAAA,QACb;AACA,YAAI,aAAa,KAAK,cAAc;AACpC,YAAI,cAAc;AAChB,cAAI,YAAY,aAAa,QAAQ,QAAQ,KAAK,GAAG;AACnD,oBAAQ,WAAW;AAAA,UACrB;AACA,kBAAQ;AACR,cAAI,cAAc,aAAa,QAAQ,MAAM,UAAU,KAAK,aAAa,SAAS,WAAW,SAAS,GAAG;AACvG,oBAAQ,UAAU,aAAa;AAAA,UACjC;AAAA,QACF,OAAO;AACL,kBAAQ,WAAW,OAAO,cAAc;AAAA,QAC1C;AAAA,MACF,WAAW,eAAe;AACxB,gBAAQ,UAAU,gBAAgB;AAAA,MACpC,WAAW,cAAc;AACvB,gBAAQ;AAAA,MACV,OAAO;AACL,gBAAQ;AACR,oBAAY;AAAA,MACd;AACA,UAAI,WAAW;AACb,gBAAQ,OAAO,eAAe;AAAA,MAChC;AACA,aAAO;AAAA,IACT;AAEA,aAAS,cAAc,OAAO;AAC5B,UAAI,SAAS,CAAC;AACd,aAAO,oBAAoB,OAAO,eAAe,KAAK,CAAC,EAAE,QAAQ,SAAS,MAAM;AAC9E,eAAO,IAAI,IAAI,cAAc,KAAK,IAAI,IAAI,WAAW;AAAE,iBAAO,MAAM,IAAI,EAAE,KAAK,KAAK;AAAA,QAAG,IAAI,MAAM,IAAI;AAAA,MACvG,CAAC;AACD,aAAO,WAAW;AAClB,aAAO;AAAA,IACT;AAEA,aAAS,aAAa,OAAO,OAAO;AAElC,UAAI,UAAU,QAAW;AACvB,gBAAQ,EAAE,cAAc,MAAM,aAAa,KAAK;AAAA,MAClD;AACA,UAAG,MAAM,SAAS,GAAG;AACnB,cAAM,cAAc;AACpB,eAAO;AAAA,MACT;AAKA,UAAI,SAAS,MAAM,YAAY,KAAK,MAAM,yBAAyB;AACnE,UAAI,QAAQ;AAEV,YAAG,OAAO,WAAW,SAAS,GAAG;AAC/B,gBAAM,cAAc;AACpB,iBAAO;AAAA,QACT;AAEA,YAAI,OAAO,MAAM,cAAc;AAC/B,YAAII,UAAS,MAAM,gBAAgB,IAAI;AAOvC,YAAI,WAAW;AACf,YAAI,eAAe,SAAS,KAAK,QAAQ,OAAO,IAAI,IAAI;AACxD,YAAI,SAAS,KAAKA,UAAS,gBAAgB,CAAC,YAAY,KAAK,CAAC,MAAM,OAAO,GAAG;AAC5E,UAAAA,WAAU;AAAA,QACZ;AAEA,YAAI,WAAW,kBAAkB;AAAA,UAC/B;AAAA,UACA;AAAA,UACA,QAAQA;AAAA,QACV,CAAC;AACD,cAAM,cAAc;AACpB,gBAAQ,cAAc,KAAK;AAC3B,YAAI,uBAAuB,MAAM;AACjC,cAAM,kBAAkB,WAAW;AACjC,cAAI,MAAM,gBAAgB,MAAM;AAC9B,mBAAO,qBAAqB;AAAA,UAC9B;AACA,iBAAO,MAAM,aAAa,QAAQ,qBAAqB;AAAA,QACzD;AACA,cAAM,cAAc,WAAW;AAAE,iBAAO,SAAS;AAAA,QAAQ;AACzD,cAAM,gBAAgB,WAAW;AAAE,iBAAO,SAAS;AAAA,QAAM;AACzD,cAAM,kBAAkB,WAAW;AAAE,iBAAO,SAAS,SAAS;AAAA,QAAG;AACjE,cAAM,2BAA2B,WAAW;AAAE,iBAAO,SAAS;AAAA,QAAQ;AACtE,eAAO;AAAA,MACT;AAGA,UAAI,SAAS,MAAM,OAAO,KAAK,MAAM,cAAc;AACnD,UAAI,QAAQ;AACV,iBAAS,cAAc,MAAM;AAC7B,gBAAQ,cAAc,KAAK;AAC3B,cAAM,gBAAgB,WAAW;AAAE,iBAAO;AAAA,QAAQ;AAClD,eAAO;AAAA,MACT;AAGA,aAAO;AAAA,IACT;AAEA,QAAI,eAAe;AACnB,QAAI;AAGF,MAAAL,MAAK,QAAQ,GAAG;AAAA,IAClB,SAAQ,GAAG;AACT,YAAM,UAAU,OAAO,sBAAsB,CAAC;AAC9C,YAAM,SAAS,QAAQ,KAAK,SAAU,GAAG;AAAC,eAAO,EAAE,SAAS,EAAE,QAAQ,cAAc,KAAK;AAAA,MAAC,CAAC;AAC3F,UAAG,OAAQ,gBAAe;AAAA,IAC5B;AAEA,QAAM,yBAAyB,CAAC,QAAO,MAAM,UAAU,SAAS,KAAK,GAAG;AAGxE,aAAS,wBAAwB,WAAW;AAC1C,aAAO;AAIP,eAAS,kBAAkB,OAAO,OAAO;AACvC,YAAG,CAAC,UAAU,QAAS,QAAO,UAAU,cAAc,MAAM,MAAM,SAAS;AAE3E,YAAI,WAAW,6BAA6B;AAC1C,sBAAY;AAAA,QACd;AAKA,YAAI;AACJ,YAAI,cAAc;AAChB,cAAG,gBAAgB,OAAO;AACxB,0BAAc,GAAG,MAAM,IAAI,KAAK,MAAM,IAAI,MAAM,MAAM,OAAO;AAAA,UAC/D,OAAO;AACL,0BAAc,uBAAuB,KAAK;AAAA,UAC5C;AAAA,QACF,OAAO;AACL,cAAI,OAAO,MAAM,QAAQ;AACzB,cAAI,UAAU,MAAM,WAAW;AAC/B,wBAAc,UAAU,OAAO,OAAO,UAAU;AAAA,QAClD;AAEA,YAAI,QAAQ,EAAE,cAAc,MAAM,aAAa,KAAK;AACpD,YAAI,iBAAiB,CAAC;AACtB,iBAAS,IAAI,MAAM,SAAS,GAAG,KAAK,GAAG,KAAK;AAC1C,yBAAe,KAAK,cAAc,aAAa,MAAM,CAAC,GAAG,KAAK,CAAC;AAC/D,gBAAM,eAAe,MAAM;AAAA,QAC7B;AACA,cAAM,cAAc,MAAM,eAAe;AACzC,eAAO,cAAc,eAAe,QAAQ,EAAE,KAAK,EAAE;AAAA,MACvD;AAAA,IACF;AAGA,aAAS,eAAe,OAAO;AAC7B,UAAI,QAAQ,sCAAsC,KAAK,MAAM,KAAK;AAClE,UAAI,OAAO;AACT,YAAI,SAAS,MAAM,CAAC;AACpB,YAAI,OAAO,CAAC,MAAM,CAAC;AACnB,YAAIK,UAAS,CAAC,MAAM,CAAC;AAGrB,YAAI,WAAW,qBAAqB,MAAM;AAE1C,cAAM,eAAe,iBAAiB,MAAM;AAG5C,YAAI,CAAC,YAAYH,OAAMA,IAAG,WAAW,YAAY,GAAG;AAClD,cAAI;AACF,uBAAWA,IAAG,aAAa,cAAc,MAAM;AAAA,UACjD,SAAS,IAAI;AACX,uBAAW;AAAA,UACb;AAAA,QACF;AAGA,YAAI,UAAU;AACZ,cAAI,OAAO,SAAS,MAAM,gBAAgB,EAAE,OAAO,CAAC;AACpD,cAAI,MAAM;AACR,mBAAO,SAAS,MAAM,OAAO,OAAO,OAAO,OACzC,IAAI,MAAMG,OAAM,EAAE,KAAK,GAAG,IAAI;AAAA,UAClC;AAAA,QACF;AAAA,MACF;AACA,aAAO;AAAA,IACT;AAEA,aAAS,wBAAyB,OAAO;AACvC,UAAI,SAAS,eAAe,KAAK;AAGjC,UAAI,QAAQ,OAAO,WAAW,QAAQ,OAAO,QAAQ,aAAa;AAChE,gBAAQ,OAAO,QAAQ,YAAY,IAAI;AAAA,MACzC;AAEA,UAAI,QAAQ;AACV,gBAAQ,MAAM,MAAM;AAAA,MACtB;AAGA,cAAQ;AAAA,QACN,KAAK,QAAQ,OAAO;AAAA,UAClB,eAAe;AAAA,UACf,QAAQ,QAAQ,OAAO;AAAA,QACzB,CAAC;AAAA,MACH;AAAA,IACF;AAEA,aAAS,4BAA6B;AACpC,YAAM,gBAAgB,QAAQ;AAC9B,UAAI,OAAO,WAAW,kBAAkB;AAAA,QACtC,SAAS;AAAA,QACT;AAAA,QACA,gBAAgB;AAAA,MAClB;AACA,UAAI,mCAAmC;AACvC,UAAI;AAEJ,cAAQ,OAAO,WAAW,gBAAgB,iBAAiB,SAAU,MAAM;AACzE,cAAM,eAAe,cAAc,MAAM,MAAM,SAAS;AACxD,YAAG,KAAK,SAAS;AACf,cAAI,SAAS,uBAAuB,CAAC,cAAc;AACjD,+CAAmC;AACnC,6BAAiB,UAAU,CAAC;AAC5B,oBAAQ,KAAK,CAAC;AAAA,UAChB;AACA,cAAI,SAAS,UAAU,kCAAkC;AACvD,oCAAwB,cAAc;AAAA,UACxC;AAAA,QACF;AACA,eAAO;AAAA,MACT;AAAA,IACF;AAEA,QAAI,+BAA+B,WAAW,qBAAqB,MAAM,CAAC;AAC1E,QAAI,8BAA8B,WAAW,oBAAoB,MAAM,CAAC;AAExE,YAAQ,eAAe;AACvB,YAAQ,iBAAiB;AACzB,YAAQ,oBAAoB;AAC5B,YAAQ,oBAAoB;AAE5B,YAAQ,UAAU,SAAS,SAAS;AAClC,gBAAU,WAAW,CAAC;AAEtB,UAAI,QAAQ,aAAa;AACvB,sBAAc,QAAQ;AACtB,YAAI,CAAC,QAAQ,WAAW,MAAM,EAAE,QAAQ,WAAW,MAAM,IAAI;AAC3D,gBAAM,IAAI,MAAM,iBAAiB,cAAc,2DAA2D;AAAA,QAC5G;AAAA,MACF;AAGA,UAAI,SAAS,eAAe,QAAQ,QAAQ;AAI5C,YAAM,EAAC,6BAA6B,MAAM,6BAA4B,IAAI;AAC1E,UAAG,4BAA4B;AAC7B,YAAI,CAAC,WAAW,2BAA2B;AACzC,gBAAM,gBAAgB,OAAO;AAC7B,gBAAM,4BAA4B,WAAW,4BAA4B;AAAA,YACvE,SAAS;AAAA,YACT;AAAA,YACA,gBAAgB;AAAA,UAClB;AACA,iBAAO,mBAAmB,WAAW,0BAA0B,iBAAiB,SAAU,SAAS,QAAQ,QAAQC,UAAS;AAC1H,gBAAI,0BAA0B,SAAS;AAErC,kBAAI;AACJ,kBAAI,YAAY,sBAAsB;AACpC,kCAAkB;AAAA,cACpB,WAAW,YAAY,+BAA+B;AACpD,kCAAkB;AAAA,cACpB;AAEA,kBAAI,oBAAoB,QAAW;AAC/B,sBAAM,aAAa,UAAQ,QAAQ,eAAe;AAClD,2BAAW,MAAM,WAAW,iCAAiC;AAC3D,qBAAG,SAAS,QAAQ,QAAQA,UAAS,UAAU;AAAA,gBACjD;AACA,0BAAU;AAAA,cACd;AAAA,YACF;AAEA,mBAAO,cAAc,KAAK,MAAM,SAAS,QAAQ,QAAQA,QAAO;AAAA,UAClE;AAAA,QACF;AACA,YAAI,8BAA8B;AAChC,qBAAW,gCAAgC,KAAK,4BAA4B;AAAA,QAC9E;AAAA,MACF;AAIA,UAAI,QAAQ,cAAc;AACxB,YAAI,QAAQ,sBAAsB;AAChC,qBAAW,qBAAqB,SAAS;AAAA,QAC3C;AAEA,mBAAW,qBAAqB,QAAQ,QAAQ,YAAY;AAAA,MAC9D;AAIA,UAAI,QAAQ,mBAAmB;AAC7B,YAAI,QAAQ,2BAA2B;AACrC,qBAAW,oBAAoB,SAAS;AAAA,QAC1C;AAEA,mBAAW,oBAAoB,QAAQ,QAAQ,iBAAiB;AAAA,MAClE;AAGA,UAAI,QAAQ,eAAe,CAAC,YAAY,GAAG;AACzC,YAAI,WAAW,OAAO,UAAU;AAEhC,YAAI,CAAC,SAAS,oBAAoB;AAChC,iBAAO,UAAU,WAAW,SAAS,SAAS,UAAU;AACtD,iCAAqB,UAAU,OAAO;AACtC,8BAAkB,UAAU,MAAS;AACrC,mBAAO,SAAS,KAAK,MAAM,SAAS,QAAQ;AAAA,UAC9C;AAEA,iBAAO,UAAU,SAAS,qBAAqB;AAAA,QACjD;AAAA,MACF;AAGA,UAAI,CAAC,WAAW,6BAA6B;AAC3C,mBAAW,8BAA8B,iCAAiC,UACxE,QAAQ,8BAA8B;AAAA,MAC1C;AAIA,UAAI,CAAC,WAAW,4BAA4B;AAC1C,cAAM,gBAAgB,MAAM;AAC5B,mBAAW,6BAA6B;AAAA,UACtC,SAAS;AAAA,UACT;AAAA,UACA,gBAAgB;AAAA,QAClB;AACA,cAAM,oBAAoB,WAAW,2BAA2B,iBAAiB,wBAAwB,WAAW,0BAA0B;AAAA,MAChJ;AAEA,UAAI,CAAC,WAAW,iBAAiB;AAC/B,YAAI,iBAAiB,8BAA8B,UACjD,QAAQ,2BAA2B;AAKrC,YAAI;AAEF,cAAI,iBAAiB,eAAe,QAAQ,gBAAgB;AAC5D,cAAI,eAAe,iBAAiB,OAAO;AACzC,6BAAiB;AAAA,UACnB;AAAA,QACF,SAAQ,GAAG;AAAA,QAAC;AASZ,YAAI,kBAAkB,6BAA6B,GAAG;AACpD,oCAA0B;AAAA,QAC5B;AAAA,MACF;AAAA,IACF;AAEA,YAAQ,YAAY,WAAW;AAC7B,UAAG,WAAW,iBAAiB;AAE7B,mBAAW,gBAAgB,UAAU;AAErC,YAAG,QAAQ,SAAS,WAAW,gBAAgB,gBAAgB;AAC7D,kBAAQ,OAAO,WAAW,gBAAgB;AAAA,QAC5C;AACA,mBAAW,kBAAkB;AAAA,MAC/B;AACA,UAAG,WAAW,4BAA4B;AAExC,mBAAW,2BAA2B,UAAU;AAKhD,YAAG,MAAM,sBAAsB,WAAW,2BAA2B,kBAAkB,OAAO,WAAW,2BAA2B,kBAAkB,YAAY;AAChK,gBAAM,oBAAoB,WAAW,2BAA2B;AAAA,QAClE;AACA,mBAAW,6BAA6B;AAAA,MAC1C;AACA,UAAI,WAAW,2BAA2B;AAExC,mBAAW,0BAA0B,UAAU;AAE/C,YAAI,SAAS,eAAe,QAAQ,QAAQ;AAC5C,YAAG,OAAO,qBAAqB,WAAW,0BAA0B,gBAAgB;AAClF,iBAAO,mBAAmB,WAAW,0BAA0B;AAAA,QACjE;AACA,mBAAW,4BAA4B;AAAA,MACzC;AACA,iBAAW,gCAAgC,SAAS;AAAA,IACtD;AAEA,YAAQ,wBAAwB,WAAW;AACzC,iBAAW,qBAAqB,SAAS;AACzC,iBAAW,oBAAoB,SAAS;AAAA,IAC1C;AAAA;AAAA;;;ACz6BA;AAAA;AAAA;AAAA;AAIA,QAAM,EAAC,aAAY,IAAI;AAGvB,QAAM,wBACJ,aAAa,QAAQ,SAAS,MAAM,SAAS,KAC7C,aAAa,QAAQ,SAAS,MAAM,WAAW,QAAQ,IACnD,UACA;AAEN,QAAM;AAAA,MACJ;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACF,IAAI;AAGJ,QAAM,SAAS,UAAQ,QAAQ;AAC/B,QAAM,EAAE,aAAa,IAAI;AACzB,QAAM;AAAA,MACJ;AAAA,MACA;AAAA,MACA;AAAA,IACF,IAAI,UAAQ,IAAI;AAEhB,QAAM,EAAE,eAAe,IAAI;AAM3B,QAAM,SAAS;AACf,QAAM,EAAE,KAAK,SAAS,IAAI,UAAQ,MAAM;AACxC,QAAM,mBAAmB,eAAe,qBAAqB;AAC7D,QAAM,uBAAuB,eAAe,0BAA0B;AACtE,QAAM,WAAW,eAAe,cAAc;AAE9C,QAAM,EAAE,KAAAC,MAAK,eAAe,eAAAC,eAAc,IAAI,UAAQ,KAAK;AAC3D,QAAM;AAAA,MACJ;AAAA,MACA,uBAAAC;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA;AAAA,IAEF,IAAI,+BAAkC;AAGtC,QAAM,YAAY;AAGlB,QAAM,oBAAoB;AAC1B,QAAM,iBAAiB,eAAe,cAAc;AACpD,QAAM,qBAAqB,aAAa,CAAC,QAAQ,UAAU,GAAG,cAAc,CAAC;AAC7E,QAAM,yBAAyB,IAAI,QAAQ,kBAAkB;AAE7D,QAAM,qBAAqB,eAAe,uBAAuB;AASjE,aAAS,cAAc,MAAM;AAE7B,YAAM,EAAC,cAAc,uCAAuC,WAAU,IAAI;AAC1E,YAAM,iBAAiB,WAAW;AAClC,YAAM,EAAC,gCAAgC,oBAAoB,mBAAmB,oBAAoB,mBAAkB,IAAI;AAExH,YAAM,kCAAkC,yCAAyC,OAAO,wCAAwC,eAAe,qCAAqC;AAEpL,YAAM,yBAAyB,IAAI,QAAQ;AAC3C,eAAS,yBAAyB,OAAO,UAAU,WAAW,MAAM;AAClE,cAAM,YAAYD,eAAc,QAAQ;AACxC,YAAI,CAAC,oBAAoB;AACvB,gBAAM,mBAAmB;AAAA,YAA2B;AAAA,YACA;AAAA,UAAgB;AACpE,cAAI,qBAAqB,IAAI;AAC3B,kBAAM,uBAAuB;AAAA,cAAqB;AAAA,cACA,mBAAmB;AAAA,cACnB;AAAA,YAAG;AACrD,gBAAI;AACF,oBAAM,EAAE,eAAe,IAAI,iBAAiB,oBAAoB;AAChE,kBAAI,mBAAmB;AACrB;AAAA,YACJ,QAAQ;AAAA,YAAC;AAAA,UACX;AAAA,QACF;AACA,YAAI,uBAAuB,IAAI,YAAY,MAAM,KAAK;AACpD;AACF,+BAAuB,IAAI,YAAY,MAAM,KAAK;AAClD,gBAAQ;AAAA,UACN,qCAAqC,KAAK,YAAY,YACpD,cAAc,WAAW,8CACzB,SAAS,GAAG,OAAO,kBAAkBA,eAAc,IAAI,CAAC,KAAK,EAAE;AAAA,0DACJ,KAAK;AAAA,UAClE;AAAA,UACA;AAAA,QACF;AAAA,MACF;AAEA,eAAS,iBAAiB,YAAY;AACpC,YAAI,eAAe,UAAa,eAAe,oBAAoB;AACjE,cAAI,CAAC,aAAa,UAAU,GAAG;AAC7B,kBAAM,IAAIC;AAAA,cAAsB;AAAA,cAAc;AAAA,cACd;AAAA,YAAmB;AAAA,UACrD;AACA,iBAAO,IAAI,QAAQ,UAAU;AAAA,QAC/B;AACA,eAAO;AAAA,MACT;AAEA,YAAM,gBAAgB,IAAI,QAAQ;AAClC,YAAM,mBAAmB,IAAI,QAAQ;AAErC,YAAM,6BAA6B,aAAa,QAAQ,SAAS,MAAM,QAAQ,KAC7E,aAAa,QAAQ,SAAS,MAAM,WAAW,QAAQ;AACzD,YAAM,cAAc,6BAA6B,2BAA2B;AAC5E,YAAM,kBAAkB,IAAI,MAAM;AAClC,eAAS,yBAAyBC,OAAM;AACtC,cAAM,QAAQ,SAASA,OAAM,EAAE,gBAAgB,MAAM,CAAC;AACtD,YAAG,SAAS,KAAM,QAAO;AACzB,eAAO;AAAA,MACT;AACA,eAAS,sBAAsBA,OAAM;AACnC,YAAI;AACF,iBAAO,SAASA,KAAI;AAAA,QACtB,QAAQ;AACN,iBAAO;AAAA,QACT;AAAA,MACF;AAEA,eAAS,iBAAiBA,OAAM,WAAW,MAAM;AAC/C,cAAM,WAAW,iBAAiB,IAAIA,KAAI;AAC1C,YAAI,aAAa,QAAW;AAC1B,iBAAO;AAAA,QACT;AACA,cAAM,SAAS,kBAAkB,KAAKA,KAAI,EAAE;AAC5C,YAAI,WAAW,QAAW;AACxB,gBAAMC,iBAAgB;AAAA,YACpB,WAAWD;AAAA,YACX,QAAQ;AAAA,YACR,MAAM;AAAA,YACN,MAAM;AAAA,YACN,MAAM;AAAA,YACN,SAAS;AAAA,YACT,SAAS;AAAA,UACX;AACA,2BAAiB,IAAIA,OAAMC,cAAa;AACxC,iBAAOA;AAAA,QACT;AAEA,YAAI;AACJ,YAAI;AACF,wBAAc,UAAU,MAAM;AAAA,QAChC,SAAS,OAAO;AACd,gBAAM,IAAI;AAAA,YACRD;AAAA,aACC,OAAO,IAAI,SAAS,YAAY,MAAMF,eAAc,QAAQ,SAAS;AAAA,YACtE,MAAM;AAAA,UACR;AAAA,QACF;AAEA,YAAI,EAAE,SAAS,MAAM,MAAM,KAAK,IAAI;AACpC,cAAM,EAAE,SAAAI,SAAQ,IAAI;AACpB,YAAI,OAAO,YAAY,YAAY,YAAY,KAAM,WAAU;AAC/D,YAAI,OAAO,SAAS,SAAU,QAAO;AACrC,YAAI,OAAO,SAAS,SAAU,QAAO;AAErC,YAAI,SAAS,YAAY,SAAS,WAAY,QAAO;AAErD,cAAM,gBAAgB;AAAA,UACpB,WAAWF;AAAA,UACX,QAAQ;AAAA,UACR;AAAA,UACA;AAAA,UACA;AAAA,UACA,SAAAE;AAAA,UACA;AAAA,QACF;AACA,yBAAiB,IAAIF,OAAM,aAAa;AACxC,eAAO;AAAA,MACT;AAEA,eAAS,sBAAsB,UAAU;AACvC,YAAI,iBAAiB,IAAIH,KAAI,kBAAkB,QAAQ;AACvD,eAAO,MAAM;AACX,gBAAMM,mBAAkB,eAAe;AACvC,cAAI,wBAAwBA,kBAAiB,2BAA2B;AACtE;AACF,gBAAMF,iBAAgB;AAAA,YAAiBH,eAAc,cAAc;AAAA,YAC5B;AAAA,UAAQ;AAC/C,cAAIG,eAAc,OAAQ,QAAOA;AAEjC,gBAAM,qBAAqB;AAC3B,2BAAiB,IAAIJ,KAAI,mBAAmB,cAAc;AAI1D,cAAI,eAAe,aAAa,mBAAmB,SAAU;AAAA,QAC/D;AACA,cAAM,kBAAkBC,eAAc,cAAc;AACpD,cAAM,gBAAgB;AAAA,UACpB,WAAW;AAAA,UACX,QAAQ;AAAA,UACR,MAAM;AAAA,UACN,MAAM;AAAA,UACN,MAAM;AAAA,UACN,SAAS;AAAA,UACT,SAAS;AAAA,QACX;AACA,yBAAiB,IAAI,iBAAiB,aAAa;AACnD,eAAO;AAAA,MACT;AAUA,eAAS,WAAW,KAAK;AACvB,eAAO,YAAYA,eAAc,GAAG,CAAC,EAAE,OAAO;AAAA,MAChD;AAEA,eAAS,kBAAkB,gBAAgB,eAAe,MAAM;AAC9D,YAAI;AACJ,YAAI,cAAc,SAAS,QAAW;AAEpC,cAAG,QAAQ,6BAA6B,IAAID,KAAI,KAAK,cAAc,IAAI,IAAI,cAAc,CAAC,GAAG;AAC3F,mBAAO;AAAA,UACT;AACA,cAAI,WAAW,QAAQ,IAAIA;AAAA,YAAI,KAAK,cAAc,IAAI;AAAA,YACvB;AAAA,UAAc,CAAC,GAAG;AAC/C,mBAAO;AAAA,UACT;AACA,qBAAU,aAAa,gCAAgC;AACrD,gBAAI,WAAW,QAAQ,IAAIA;AAAA,cAAI,KAAK,cAAc,IAAI,GAAG,SAAS;AAAA,cACpC;AAAA,YAAc,CAAC,GAAG;AAC9C,qBAAO;AAAA,YACT;AAAA,UACF;AACA,qBAAU,aAAa,gCAAgC;AACrD,gBAAI,WAAW,QAAQ,IAAIA;AAAA,cAAI,KAAK,cAAc,IAAI,SAAS,SAAS;AAAA,cAC1C;AAAA,YAAc,CAAC,GAAG;AAC9C,qBAAO;AAAA,YACT;AAAA,UACF;AAAA,QAEF;AACA,mBAAU,aAAa,gCAAgC;AACrD,cAAI,WAAW,QAAQ,IAAIA,KAAI,UAAU,SAAS,IAAI,cAAc,CAAC,GAAG;AACtE,mBAAO;AAAA,UACT;AAAA,QACF;AAEA,cAAM,IAAI;AAAA,UACRC,eAAc,IAAID,KAAI,KAAK,cAAc,CAAC;AAAA,UAAGC,eAAc,IAAI;AAAA,QAAC;AAAA,MACpE;AAGA,eAAS,kCAAkC,QAAQ;AACjD,cAAM,+BAA+B,6BAA6B,MAAM;AACxE,YAAG,6BAA8B,QAAO;AACxC,YAAI,WAAW,MAAM,EAAG,QAAO;AAC/B,eAAO,kBAAkB,MAAM;AAAA,MACjC;AAGA,eAAS,kBAAkB,QAAQ;AACjC,iBAAS,IAAI,GAAG,IAAI,eAAe,QAAQ,KAAK;AAC9C,gBAAM,YAAY,eAAe,CAAC;AAClC,gBAAM,QAAQ,IAAID,KAAI,GAAG,OAAO,QAAQ,GAAG,SAAS,IAAI,MAAM;AAC9D,cAAI,WAAW,KAAK,EAAG,QAAO;AAAA,QAChC;AACA,eAAO;AAAA,MACT;AAGA,eAAS,6BAA6B,QAAQ;AAC5C,cAAM,eAAe,OAAO,SAAS,YAAY,GAAG;AACpD,YAAG,gBAAgB,GAAG;AACpB,gBAAM,MAAM,OAAO,SAAS,MAAM,YAAY;AAC9C,cAAI,QAAQ,SAAS,QAAQ,UAAU,QAAQ,UAAU,QAAQ,QAAQ;AACvE,kBAAM,2BAA2B,OAAO,SAAS,MAAM,GAAG,YAAY;AACtE,kBAAM,kBACJ,QAAQ,QAAQ,oBACd,QAAQ,SAAS,qBACjB,QAAQ,SAAS,qBACjB;AACJ,kBAAM,QAAQ,IAAIA,KAAI,OAAO,SAAS,CAAC;AACvC,qBAAS,IAAI,GAAG,IAAI,gBAAgB,QAAQ,KAAK;AAC/C,oBAAM,YAAY,gBAAgB,CAAC;AACnC,oBAAM,WAAW,GAAG,wBAAwB,GAAG,SAAS;AACxD,kBAAI,WAAW,KAAK,EAAG,QAAO;AAAA,YAChC;AAAA,UACF;AAAA,QACF;AACA,eAAO;AAAA,MACT;AAEA,eAAS,aAAa,QAAQ;AAC5B,eAAO,kBAAkB,IAAIA,KAAI,SAAS,MAAM,CAAC;AAAA,MACnD;AAEA,YAAM,kBAAkB;AACxB,eAAS,mBAAmB,UAAU,MAAM;AAC1C,YAAI,oBAAoB,iBAAiB,SAAS,QAAQ;AACxD,gBAAM,IAAI;AAAA,YACR,SAAS;AAAA,YAAU;AAAA,YACnBC,eAAc,IAAI;AAAA,UAAC;AAEvB,YAAI,oCAAoC,QAAQ;AAC9C,gBAAME,QAAOF,eAAc,QAAQ;AACnC,cAAIM,QAAO,kCAAkC,QAAQ;AACrD,cAAIA,UAAS,OAAW,QAAOA;AAC/B,cAAI,CAAC,wBAAwBJ,OAAM,GAAG,GAAG;AACvC,YAAAI,QAAO,aAAa,IAAIP,KAAI,GAAG,QAAQ,GAAG,CAAC;AAC3C,gBAAIO,UAAS,OAAW,QAAOA;AAAA,UACjC,OAAO;AACL,mBAAO,aAAa,QAAQ,KAAK;AAAA,UACnC;AACA,gBAAM,IAAI;AAAA,YACR,SAAS;AAAA,YAAUN,eAAc,IAAI;AAAA,YAAG;AAAA,UAAQ;AAAA,QACpD;AAEA,cAAM,OAAO,6BAA6B,QAAQ,KAAK;AACvD,cAAME,QAAOF,eAAc,IAAI;AAE/B,cAAM,QAAQ,YAAY,wBAAwBE,OAAM,GAAG,IACzD,qBAAqBA,OAAM,EAAE,IAAIA,KAAI;AACvC,YAAI,MAAM,YAAY,GAAG;AACvB,gBAAM,MAAM,IAAI,2BAA2BA,OAAMF,eAAc,IAAI,CAAC;AACpE,cAAI,MAAM,OAAO,QAAQ;AACzB,gBAAM;AAAA,QACR,WAAW,CAAC,MAAM,OAAO,GAAG;AAC1B,gBAAM,IAAI;AAAA,YACRE,SAAQ,SAAS;AAAA,YAAUF,eAAc,IAAI;AAAA,YAAG;AAAA,UAAQ;AAAA,QAC5D;AAEA,eAAO;AAAA,MACT;AAEA,eAAS,sBAAsB,WAAW,gBAAgB,MAAM;AAC9D,cAAM,IAAI;AAAA,UACR;AAAA,UAAW,kBAAkBA,eAAc,IAAID,KAAI,KAAK,cAAc,CAAC;AAAA,UACvEC,eAAc,IAAI;AAAA,QAAC;AAAA,MACvB;AAEA,eAAS,qBAAqB,SAAS,gBAAgB,MAAM;AAC3D,cAAM,IAAI;AAAA,UACRA,eAAc,IAAID,KAAI,KAAK,cAAc,CAAC;AAAA,UAAG;AAAA,UAC7C,QAAQC,eAAc,IAAI;AAAA,QAAC;AAAA,MAC/B;AAEA,eAAS,oBAAoB,SAAS,gBAAgB,UAAU,MAAM;AACpE,cAAM,SAAS,2CAA2C,WACxD,YAAY,SAAS,mBAAmBA,eAAc,cAAc,CAAC;AACvE,cAAM,IAAI;AAAA,UAA6B;AAAA,UAAS;AAAA,UACT,QAAQA,eAAc,IAAI;AAAA,QAAC;AAAA,MACpE;AAEA,eAAS,0BACP,SAAS,QAAQ,gBAAgB,UAAU,MAAM;AACjD,YAAI,OAAO,WAAW,YAAY,WAAW,MAAM;AACjD,mBAAS,cAAc,QAAQ,MAAM,EAAE;AAAA,QACzC,OAAO;AACL,mBAAS,GAAG,MAAM;AAAA,QACpB;AACA,cAAM,IAAI;AAAA,UACRA,eAAc,IAAID,KAAI,KAAK,cAAc,CAAC;AAAA,UAAG;AAAA,UAAS;AAAA,UACtD;AAAA,UAAU,QAAQC,eAAc,IAAI;AAAA,QAAC;AAAA,MACzC;AAEA,YAAM,sBAAsB;AAC5B,YAAM,eAAe;AAErB,eAAS,2BACP,QAAQ,SAAS,OAAO,gBAAgB,MAAM,SAAS,UAAU,YAAY;AAC7E,YAAI,YAAY,MAAM,CAAC,WAAW,OAAO,OAAO,SAAS,CAAC,MAAM;AAC9D,oCAA0B,OAAO,QAAQ,gBAAgB,UAAU,IAAI;AAEzE,YAAI,CAAC,0BAA0B,QAAQ,IAAI,GAAG;AAC5C,cAAI,YAAY,CAAC,0BAA0B,QAAQ,KAAK,KACpD,CAAC,0BAA0B,QAAQ,GAAG,GAAG;AAC3C,gBAAI,QAAQ;AACZ,gBAAI;AACF,kBAAID,KAAI,MAAM;AACd,sBAAQ;AAAA,YACV,QAAQ;AAAA,YAAC;AACT,gBAAI,CAAC,OAAO;AACV,oBAAM,eAAe,UACnB,uBAAuB,QAAQ,cAAc,OAAO,IACpD,SAAS;AACX,qBAAO,eAAe,cAAc,gBAAgB,UAAU;AAAA,YAChE;AAAA,UACF;AACA,oCAA0B,OAAO,QAAQ,gBAAgB,UAAU,IAAI;AAAA,QACzE;AAEA,YAAI,oBAAoB,qBAAqB,qBAAqB,QAAQ,CAAC,CAAC;AAC1E,oCAA0B,OAAO,QAAQ,gBAAgB,UAAU,IAAI;AAEzE,cAAM,WAAW,IAAIA,KAAI,QAAQ,cAAc;AAC/C,cAAM,eAAe,SAAS;AAC9B,cAAM,cAAc,IAAIA,KAAI,KAAK,cAAc,EAAE;AAEjD,YAAI,CAAC,0BAA0B,cAAc,WAAW;AACtD,oCAA0B,OAAO,QAAQ,gBAAgB,UAAU,IAAI;AAEzE,YAAI,YAAY,GAAI,QAAO;AAE3B,YAAI,oBAAoB,qBAAqB,OAAO;AAClD,8BAAoB,QAAQ,SAAS,gBAAgB,UAAU,IAAI;AAErE,YAAI;AACF,iBAAO,IAAIA,KAAI;AAAA,YAAuB,SAAS;AAAA,YAAM;AAAA,YACf;AAAA,UAAO,CAAC;AAChD,eAAO,IAAIA,KAAI,SAAS,QAAQ;AAAA,MAClC;AAMA,eAAS,aAAa,KAAK;AACzB,cAAM,SAAS,CAAC;AAChB,YAAI,GAAG,MAAM,OAAO,IAAK,QAAO;AAChC,eAAO,UAAU,KAAK,SAAS;AAAA,MACjC;AAEA,eAAS,qBAAqB,gBAAgB,QAAQ,SAAS,gBACjC,MAAM,SAAS,UAAU,YAAY;AACjE,YAAI,OAAO,WAAW,UAAU;AAC9B,iBAAO;AAAA,YACL;AAAA,YAAQ;AAAA,YAAS;AAAA,YAAgB;AAAA,YAAgB;AAAA,YAAM;AAAA,YAAS;AAAA,YAChE;AAAA,UAAU;AAAA,QACd,WAAW,aAAa,MAAM,GAAG;AAC/B,cAAI,OAAO,WAAW;AACpB,mBAAO;AAET,cAAI;AACJ,mBAAS,IAAI,GAAG,IAAI,OAAO,QAAQ,KAAK;AACtC,kBAAM,aAAa,OAAO,CAAC;AAC3B,gBAAI;AACJ,gBAAI;AACF,yBAAW;AAAA,gBACT;AAAA,gBAAgB;AAAA,gBAAY;AAAA,gBAAS;AAAA,gBAAgB;AAAA,gBAAM;AAAA,gBAC3D;AAAA,gBAAU;AAAA,cAAU;AAAA,YACxB,SAAS,GAAG;AACV,8BAAgB;AAChB,kBAAI,EAAE,SAAS;AACb;AACF,oBAAM;AAAA,YACR;AACA,gBAAI,aAAa;AACf;AACF,gBAAI,aAAa,MAAM;AACrB,8BAAgB;AAChB;AAAA,YACF;AACA,mBAAO;AAAA,UACT;AACA,cAAI,kBAAkB,UAAa,kBAAkB;AACnD,mBAAO;AACT,gBAAM;AAAA,QACR,WAAW,OAAO,WAAW,YAAY,WAAW,MAAM;AACxD,gBAAM,OAAO,0BAA0B,MAAM;AAC7C,mBAAS,IAAI,GAAG,IAAI,KAAK,QAAQ,KAAK;AACpC,kBAAM,MAAM,KAAK,CAAC;AAClB,gBAAI,aAAa,GAAG,GAAG;AACrB,oBAAM,IAAI;AAAA,gBACRC,eAAc,cAAc;AAAA,gBAAG;AAAA,gBAC/B;AAAA,cAAiD;AAAA,YACrD;AAAA,UACF;AACA,mBAAS,IAAI,GAAG,IAAI,KAAK,QAAQ,KAAK;AACpC,kBAAM,MAAM,KAAK,CAAC;AAClB,gBAAI,QAAQ,aAAa,WAAW,IAAI,GAAG,GAAG;AAC5C,oBAAM,oBAAoB,OAAO,GAAG;AACpC,oBAAM,WAAW;AAAA,gBACf;AAAA,gBAAgB;AAAA,gBAAmB;AAAA,gBAAS;AAAA,gBAAgB;AAAA,gBAC5D;AAAA,gBAAS;AAAA,gBAAU;AAAA,cAAU;AAC/B,kBAAI,aAAa;AACf;AACF,qBAAO;AAAA,YACT;AAAA,UACF;AACA,iBAAO;AAAA,QACT,WAAW,WAAW,MAAM;AAC1B,iBAAO;AAAA,QACT;AACA;AAAA,UAA0B;AAAA,UAAgB;AAAA,UAAQ;AAAA,UAAgB;AAAA,UACxC;AAAA,QAAI;AAAA,MAChC;AAEA,eAAS,8BAA8BI,UAAS,gBAAgB,MAAM;AACpE,YAAI,OAAOA,aAAY,YAAY,aAAaA,QAAO,EAAG,QAAO;AACjE,YAAI,OAAOA,aAAY,YAAYA,aAAY,KAAM,QAAO;AAE5D,cAAM,OAAO,0BAA0BA,QAAO;AAC9C,YAAI,qBAAqB;AACzB,YAAI,IAAI;AACR,iBAAS,IAAI,GAAG,IAAI,KAAK,QAAQ,KAAK;AACpC,gBAAM,MAAM,KAAK,CAAC;AAClB,gBAAM,wBAAwB,QAAQ,MAAM,IAAI,CAAC,MAAM;AACvD,cAAI,QAAQ,GAAG;AACb,iCAAqB;AAAA,UACvB,WAAW,uBAAuB,uBAAuB;AACvD,kBAAM,IAAI;AAAA,cACRJ,eAAc,cAAc;AAAA,cAAG;AAAA,cAC/B;AAAA,YAEuD;AAAA,UAC3D;AAAA,QACF;AACA,eAAO;AAAA,MACT;AAUA,eAAS,sBACP,gBAAgB,gBAAgB,eAAe,MAAM,YAAY;AACjE,YAAII,WAAU,cAAc;AAC5B,YAAI,8BAA8BA,UAAS,gBAAgB,IAAI;AAC7D,UAAAA,WAAU,EAAE,KAAKA,SAAQ;AAE3B,YAAI,8BAA8BA,UAAS,cAAc,GAAG;AAC1D,gBAAM,SAASA,SAAQ,cAAc;AACrC,gBAAM,WAAW;AAAA,YACf;AAAA,YAAgB;AAAA,YAAQ;AAAA,YAAI;AAAA,YAAgB;AAAA,YAAM;AAAA,YAAO;AAAA,YAAO;AAAA,UAClE;AACA,cAAI,aAAa,QAAQ,aAAa;AACpC,iCAAqB,gBAAgB,gBAAgB,IAAI;AAC3D,iBAAO,EAAE,UAAU,OAAO,KAAK;AAAA,QACjC;AAEA,YAAI,YAAY;AAChB,cAAM,OAAO,0BAA0BA,QAAO;AAC9C,iBAAS,IAAI,GAAG,IAAI,KAAK,QAAQ,KAAK;AACpC,gBAAM,MAAM,KAAK,CAAC;AAClB,cAAI,IAAI,IAAI,SAAS,CAAC,MAAM,OACxB;AAAA,YAA0B;AAAA,YACA,qBAAqB,KAAK,GAAG,EAAE;AAAA,UAAC,KAC1D,eAAe,UAAU,IAAI,UAC7B,IAAI,SAAS,UAAU,QAAQ;AACjC,wBAAY;AAAA,UACd,WAAW,IAAI,IAAI,SAAS,CAAC,MAAM,OACjC,0BAA0B,gBAAgB,GAAG,KAC7C,IAAI,SAAS,UAAU,QAAQ;AAC/B,wBAAY;AAAA,UACd;AAAA,QACF;AAEA,YAAI,WAAW;AACb,gBAAM,SAASA,SAAQ,SAAS;AAChC,gBAAM,UAAU,UAAU,UAAU,SAAS,CAAC,MAAM;AACpD,gBAAM,UAAU,sBAAsB,gBAAgB,UAAU,UAC7D,UAAU,IAAI,EAAE;AACnB,gBAAM,WAAW;AAAA,YAAqB;AAAA,YAAgB;AAAA,YAAQ;AAAA,YACxB;AAAA,YAAW;AAAA,YAAM;AAAA,YAAS;AAAA,YAC1B;AAAA,UAAU;AAChD,cAAI,aAAa,QAAQ,aAAa;AACpC,iCAAqB,gBAAgB,gBAAgB,IAAI;AAC3D,cAAI,CAAC;AACH,qCAAyB,WAAW,gBAAgB,MAAM,IAAI;AAChE,iBAAO,EAAE,UAAU,OAAO,QAAQ;AAAA,QACpC;AAEA,6BAAqB,gBAAgB,gBAAgB,IAAI;AAAA,MAC3D;AAEA,eAAS,sBAAsB,MAAM,MAAM,YAAY;AACrD,YAAI,SAAS,OAAO,0BAA0B,MAAM,IAAI,GAAG;AACzD,gBAAM,SAAS;AACf,gBAAM,IAAI,6BAA6B,MAAM,QAAQJ,eAAc,IAAI,CAAC;AAAA,QAC1E;AACA,YAAI;AACJ,cAAM,gBAAgB,sBAAsB,IAAI;AAChD,YAAI,cAAc,QAAQ;AACxB,2BAAiB,cAAc,cAAc,SAAS;AACtD,gBAAM,UAAU,cAAc;AAC9B,cAAI,SAAS;AACX,gBAAI,8BAA8B,SAAS,IAAI,GAAG;AAChD,oBAAM,WAAW;AAAA,gBACf;AAAA,gBAAgB,QAAQ,IAAI;AAAA,gBAAG;AAAA,gBAAI;AAAA,gBAAM;AAAA,gBAAM;AAAA,gBAAO;AAAA,gBAAM;AAAA,cAC9D;AACA,kBAAI,aAAa;AACf,uBAAO,EAAE,UAAU,OAAO,KAAK;AAAA,YACnC,OAAO;AACL,kBAAI,YAAY;AAChB,oBAAM,OAAO,0BAA0B,OAAO;AAC9C,uBAAS,IAAI,GAAG,IAAI,KAAK,QAAQ,KAAK;AACpC,sBAAM,MAAM,KAAK,CAAC;AAClB,oBAAI,IAAI,IAAI,SAAS,CAAC,MAAM,OACxB;AAAA,kBAA0B;AAAA,kBACA,qBAAqB,KAAK,GAAG,EAAE;AAAA,gBAAC,KAC1D,KAAK,UAAU,IAAI,UACnB,IAAI,SAAS,UAAU,QAAQ;AACjC,8BAAY;AAAA,gBACd,WAAW,IAAI,IAAI,SAAS,CAAC,MAAM,OACjC,0BAA0B,MAAM,GAAG,KACnC,IAAI,SAAS,UAAU,QAAQ;AAC/B,8BAAY;AAAA,gBACd;AAAA,cACF;AAEA,kBAAI,WAAW;AACb,sBAAM,SAAS,QAAQ,SAAS;AAChC,sBAAM,UAAU,UAAU,UAAU,SAAS,CAAC,MAAM;AACpD,sBAAM,UAAU,sBAAsB,MAAM,UAAU,UACnD,UAAU,IAAI,EAAE;AACnB,sBAAM,WAAW;AAAA,kBACf;AAAA,kBAAgB;AAAA,kBAAQ;AAAA,kBAAS;AAAA,kBAAW;AAAA,kBAAM;AAAA,kBAAS;AAAA,kBAC3D;AAAA,gBAAU;AACZ,oBAAI,aAAa,MAAM;AACrB,sBAAI,CAAC;AACH,6CAAyB,WAAW,gBAAgB,OAAO,IAAI;AACjE,yBAAO,EAAE,UAAU,OAAO,QAAQ;AAAA,gBACpC;AAAA,cACF;AAAA,YACF;AAAA,UACF;AAAA,QACF;AACA,8BAAsB,MAAM,gBAAgB,IAAI;AAAA,MAClD;AAEA,eAAS,eAAe,KAAK;AAC3B,cAAM,gBAAgB,sBAAsB,GAAG;AAC/C,eAAO,cAAc;AAAA,MACvB;AAEA,eAAS,iBAAiB,WAAW,MAAM;AACzC,YAAI,iBAAiB,uBAAuB,WAAW,GAAG;AAC1D,YAAI,mBAAmB;AACvB,YAAI,WAAW;AACf,YAAI,UAAU,CAAC,MAAM,KAAK;AACxB,qBAAW;AACX,cAAI,mBAAmB,MAAM,UAAU,WAAW,GAAG;AACnD,+BAAmB;AAAA,UACrB,OAAO;AACL,6BAAiB;AAAA,cACf;AAAA,cAAW;AAAA,cAAK,iBAAiB;AAAA,YAAC;AAAA,UACtC;AAAA,QACF;AAEA,cAAM,cAAc,mBAAmB,KACrC,YAAY,qBAAqB,WAAW,GAAG,cAAc;AAI/D,iBAAS,IAAI,GAAG,IAAI,YAAY,QAAQ,KAAK;AAC3C,cAAI,YAAY,CAAC,MAAM,OAAO,YAAY,CAAC,MAAM,MAAM;AACrD,+BAAmB;AACnB;AAAA,UACF;AAAA,QACF;AAEA,YAAI,CAAC,kBAAkB;AACrB,gBAAM,IAAI;AAAA,YACR;AAAA,YAAW;AAAA,YAA+BA,eAAc,IAAI;AAAA,UAAC;AAAA,QACjE;AAEA,cAAM,iBAAiB,OAAO,mBAAmB,KAAK,KACpD,qBAAqB,WAAW,cAAc;AAEhD,eAAO,EAAE,aAAa,gBAAgB,SAAS;AAAA,MACjD;AAQA,eAAS,eAAe,WAAW,MAAM,YAAY;AACnD,cAAM,EAAE,aAAa,gBAAgB,SAAS,IAC5C,iBAAiB,WAAW,IAAI;AAGlC,cAAM,gBAAgB,sBAAsB,IAAI;AAChD,YAAI,cAAc,QAAQ;AACxB,gBAAMO,kBAAiB,cAAc,cAAc,SAAS;AAC5D,cAAI,cAAc,SAAS,eACvB,cAAc,YAAY,UAAa,cAAc,YAAY,MAAM;AACzE,mBAAO;AAAA,cACLA;AAAA,cAAgB;AAAA,cAAgB;AAAA,cAAe;AAAA,cAAM;AAAA,YACvD,EAAE;AAAA,UACJ;AAAA,QACF;AAEA,YAAI,iBACF,IAAIR,KAAI,oBAAoB,cAAc,iBAAiB,IAAI;AACjE,YAAI,kBAAkBC,eAAc,cAAc;AAClD,YAAI;AACJ,WAAG;AACD,gBAAM,OAAO,YAAY;AAAA,YAAqB;AAAA,YAAiB;AAAA,YACjB,gBAAgB,SAAS;AAAA,UAAE,CAAC;AAC1E,cAAI,CAAC,KAAK,YAAY,GAAG;AACvB,uBAAW;AACX,6BAAiB,IAAID,MAAK,WACxB,8BAA8B,4BAC9B,cAAc,iBAAiB,cAAc;AAC/C,8BAAkBC,eAAc,cAAc;AAC9C;AAAA,UACF;AAGA,gBAAMG,iBAAgB,iBAAiB,iBAAiB,WAAW,IAAI;AACvE,cAAIA,eAAc,YAAY,UAAaA,eAAc,YAAY;AACnE,mBAAO;AAAA,cACL;AAAA,cAAgB;AAAA,cAAgBA;AAAA,cAAe;AAAA,cAAM;AAAA,YACvD,EAAE;AACJ,cAAI,mBAAmB;AACrB,mBAAO,kBAAkB,gBAAgBA,gBAAe,IAAI;AAC9D,iBAAO,IAAIJ,KAAI,gBAAgB,cAAc;AAAA,QAE/C,SAAS,gBAAgB,WAAW,SAAS;AAI7C,cAAM,IAAI,qBAAqB,aAAaC,eAAc,IAAI,CAAC;AAAA,MACjE;AAEA,eAAS,gBAAgB,WAAW;AAClC,eAAO,UAAU,CAAC,KAAK,UAAU,CAAC,MAAM,OAAO,UAAU,CAAC,MAAM;AAAA,MAClE;AAEA,eAAS,oBAAoB,WAAW;AACtC,YAAI,UAAU,CAAC,MAAM,KAAK;AACxB,cAAI,UAAU,WAAW,KAAK,UAAU,CAAC,MAAM,IAAK,QAAO;AAC3D,cAAI,UAAU,CAAC,MAAM,KAAK;AACxB,gBAAI,UAAU,WAAW,KAAK,UAAU,CAAC,MAAM,IAAK,QAAO;AAAA,UAC7D;AAAA,QACF;AACA,eAAO;AAAA,MACT;AAEA,eAAS,wCAAwC,WAAW;AAC1D,YAAI,cAAc,GAAI,QAAO;AAC7B,YAAI,UAAU,CAAC,MAAM,IAAK,QAAO;AACjC,eAAO,oBAAoB,SAAS;AAAA,MACtC;AAQA,eAAS,cAAc,WAAW,MAAM,YAAY;AAGlD,YAAI;AACJ,YAAI,wCAAwC,SAAS,GAAG;AACtD,qBAAW,IAAID,KAAI,WAAW,IAAI;AAAA,QACpC,WAAW,UAAU,CAAC,MAAM,KAAK;AAC/B,WAAC,EAAE,SAAS,IAAI,sBAAsB,WAAW,MAAM,UAAU;AAAA,QACnE,OAAO;AACL,cAAI;AACF,uBAAW,IAAIA,KAAI,SAAS;AAAA,UAC9B,QAAQ;AACN,uBAAW,eAAe,WAAW,MAAM,UAAU;AAAA,UACvD;AAAA,QACF;AACA,eAAO,mBAAmB,UAAU,IAAI;AAAA,MAC1C;AAQA,eAAS,kBAAkB,WAAW,WAAW;AAC/C,YAAI;AACF,gBAAM,SAASC,eAAc,SAAS;AACtC,gBAAM,YAAY,IAAI,UAAU,QAAQ,IAAI;AAC5C,oBAAU,QAAQ,UAAU,iBAAiB,MAAM;AAEnD,cAAI,QAAQ,UAAU,iBAAiB,WAAW,WAAW,KAAK;AAIlE,cAAI,oBAAoB,SAAS,GAAG;AAClC,oBAAQ,SAAS,QAAQ,KAAK;AAK9B,gBAAI,CAAC,0BAA0B,OAAO,KAAK,GAAG,EAAE,GAAG;AACjD,sBAAQ,IAAI,GAAG,GAAG,KAAK;AAAA,YACzB;AAAA,UACF,WAAW,gBAAgB,SAAS,GAAG;AAGrC,kBAAM,MAAM,qBAAqB,WAAW,GAAG,EAAE,CAAC;AAClD,kBAAM,QAAQ,uBAAuB,OAAO,GAAG;AAC/C,gBAAI,UAAU,IAAI;AAChB,sBAAQ,qBAAqB,OAAO,KAAK;AAAA,YAC3C;AAAA,UACF;AAGA,cAAI,QAAQ,aAAa,SAAS;AAChC,oBAAQ,uBAAuB,OAAO,IAAI,OAAO,KAAK,GAAG,IAAI,GAAG,GAAG,GAAG;AAAA,UACxE;AACA,iBAAO;AAAA,QACT,QAAQ;AACN,iBAAO;AAAA,QACT;AAAA,MACF;AAEA,eAAS,eAAe,WAAW,UAAU,CAAC,GAAG,sBAAsB;AACrE,YAAI,EAAE,WAAW,WAAW,IAAI;AAChC,YAAI,aAAa,UAAU,QAAQ,OAAO,UAAU;AAClD,gBAAM,YAAY,OAAO,SAAS,oBAAoB,SAAS;AAC/D,cAAI,WAAW;AACb,kBAAM,EAAE,SAAS,SAAS,IAAI;AAC9B,kBAAM,cAAc,QAAQ,WAAW,IAAI,QAAQ,UAAU,CAAC;AAC9D,gBAAI,UAAU;AACd,gBAAI,gBAAgB,MAAM;AACxB,wBAAU;AAAA,YACZ,WAAW,aAAa;AACtB,oBAAM,OAAO,YAAY;AACzB,qBAAO,EAAE,KAAK,KAAK;AAAA,YACrB;AACA,gBAAI,SAAS;AACX;AAAA,gBAAS,IAAI;AAAA,kBACX;AAAA,kBACA;AAAA,kBACA,mBAAmB,CAAC,GAAG,UAAU,GAAG,IAAI;AAAA,gBAAC;AAAA,cAC3C;AAAA,YACF;AAAA,UACF;AAAA,QACF;AACA,YAAI;AACJ,YAAI;AACF,mBAAS,IAAID,KAAI,SAAS;AAC1B,cAAI,OAAO,aAAa,SAAS;AAC/B,mBAAO;AAAA,cACL,KAAK;AAAA,YACP;AAAA,UACF;AAAA,QACF,QAAQ;AAAA,QAAC;AACT,YAAI,UAAU,OAAO,aAAa;AAChC,iBAAO,EAAE,KAAK,UAAU;AAC1B,YAAI,UAAU,OAAO,aAAa,WAAW,OAAO,aAAa;AAC/D,gBAAM,IAAI,+BAA+B,MAAM;AACjD,YAAI,aAAa,qBAAqB,SAAS,GAAG;AAChD,iBAAO;AAAA,YACL,KAAK,wBAAwB;AAAA,UAC/B;AAAA,QACF;AACA,YAAI,aAAa,0BAA0B,WAAW,OAAO,GAAG;AAE9D,cAAIA,KAAI,WAAW,SAAS;AAAA,QAC9B;AAEA,cAAM,SAAS,cAAc;AAC7B,YAAI,QAAQ;AACV,sBAAY,cAAc,GAAG,QAAQ,IAAI,CAAC,GAAG,EAAE;AAQ/C,cAAI;AACF,kBAAM,IAAI,2BAA2B;AAAA,QACzC;AAEA,qBAAa,iBAAiB,UAAU;AACxC,YAAI;AACJ,YAAI;AACF,gBAAM,cAAc,WAAW,WAAW,UAAU;AAAA,QACtD,SAAS,OAAO;AAGd,cAAI,MAAM,SAAS,0BACf,MAAM,SAAS,8BAA8B;AAC/C,gBAAI,0BAA0B,WAAW,SAAS,GAAG;AACnD,0BAAYC,eAAc,SAAS;AAAA,YACrC;AACA,kBAAM,QAAQ,kBAAkB,WAAW,SAAS;AACpD,gBAAI,OAAO;AAET,oBAAM,QAAQ,qBAAqB,MAAM,OAAO,IAAI;AACpD,oBAAM,OAAO,0BAA0B,KAAK;AAC5C,oBAAM,QACJ,oBAAoB,KAAK,IAAI,OAC7B,OAAO,OACP,mBAAmB,OAAO,IAAI;AAChC,oBAAM,WAAW;AAAA,EAAK,IAAI;AAAA,YAC5B;AAAA,UACF;AACA,gBAAM;AAAA,QACR;AAEA,YAAI,SAAS,CAAC,uBAAuB,CAAC,kBAAkB;AACtD,gBAAM,UAAUA,eAAc,GAAG;AACjC,gBAAM,OAAO,aAAa,SAAS;AAAA;AAAA,UAEnC,CAAC;AACD,gBAAM,MAAM;AACZ,gBAAM;AAAA,YACJ,QAAQ,wBAAwB,SAAS,GAAG,IAAI,MAAM;AAAA,UAAG;AAC3D,cAAI,SAAS,IAAI;AACjB,cAAI,OAAO,IAAI;AAAA,QACjB;AAEA,eAAO,EAAE,KAAK,GAAG,GAAG,GAAG;AAAA,MACzB;AAEA,aAAO;AAAA,QACL;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACF;AAAA,IACA;AACA,WAAO,UAAU;AAAA,MACf;AAAA,IACF;AAAA;AAAA;;;ACj8BA;AAAA;AAAA;AAAA;AAGA,QAAM;AAAA,MACJ;AAAA,MACA;AAAA,IACF,IAAI;AACJ,QAAM,EAAE,QAAQ,IAAI,UAAQ,MAAM;AAClC,QAAM,EAAE,eAAe,IAAI;AAE3B,QAAM,CAAC,WAAW,SAAS,IAAI,QAAQ,SAAS,KAAK,MAAM,GAAG,EAAE,IAAI,OAAK,SAAS,GAAG,EAAE,CAAC;AACxF,QAAM,0BACJ,YAAY,MACR,cAAc,MAAM,aAAa,KACjC,cAAc,MAAM,aAAa,MAClC,eAAe,6BAA6B;AACjD,QAAM,0BAA0B,eAAe,6BAA6B;AAC5E,QAAM,EAAE,KAAAQ,MAAK,eAAAC,eAAc,IAAI,UAAQ,KAAK;AAC5C,QAAM,EAAE,2BAA2B,IAAI,+BAAkC;AAEzE,QAAM,qBAAqB;AAAA,MACzB,aAAa;AAAA,MACb,QAAQ;AAAA,MACR,OAAO;AAAA,MACP,QAAQ;AAAA,IACV;AAEA,QAAM,2BAA2B;AAAA,MAC/B,aAAa;AAAA,MACb,QAAQ;AAAA,MACR,OAAO;AAAA,MACP,SAAS;AAAA,MACT,QAAQ;AAAA,MACR,SAAS;AAAA,IACX;AAEA,QAAI;AACF,yBAAmB,OAAO,IAAI,yBAAyB,OAAO,IAAI;AAEpE,QAAI;AACF,yBAAmB,OAAO,IAAI,yBAAyB,OAAO,IAAI;AASpE,aAAS,gBAAgB,uCAAuC,iBAAiB;AAEjF,UAAI,iCAAiC,yCAAyC,OAAO,wCAAwC,eAAe,qCAAqC;AACjL,YAAM,EAAE,eAAe,IAAI;AAQ3B,eAAS,iBAAiB,KAAK,SAAS,wBAAwB;AAC9D,YAAI,0BAA0B,KAAK,OAAO,GAAG;AAC3C,iBAAO,EAAE,QAAQ,UAAU;AAAA,QAC7B;AACA,cAAM,SAAS,IAAID,KAAI,GAAG;AAC1B,YAAI,OAAO,aAAa,SAAS;AAC/B,gBAAM,CAAE,EAAE,IAAK,IAAI;AAAA,YACjB;AAAA,YACA,OAAO;AAAA,UACT,KAAK,CAAE,MAAM,MAAM,IAAK;AACxB,gBAAM,SAAU;AAAA,YACd,aAAa;AAAA,YACb,mBAAmB;AAAA,YACnB,oBAAoB,0BAA0B,SAAS;AAAA,YACvD,oBAAoB,0BAA0B,SAAS;AAAA,UACzD,EAAG,IAAI,KAAK;AACZ,iBAAO,EAAE,OAAO;AAAA,QAClB,WAAW,OAAO,aAAa,SAAS;AACtC,gBAAM,MAAM,QAAQ,OAAO,QAAQ;AACnC,cAAI;AACJ,cAAI,QAAQ,OAAO;AACjB,qBAAS,eAAe,OAAO,IAAI,MAAM,WAAW,WAAW;AAAA,UACjE,OAAO;AACL,qBAAS,mBAAmB,GAAG;AAAA,UACjC;AACA,cAAI,CAAC,QAAQ;AACX,gBAAI,mCAAmC,QAAQ;AAC7C,sBAAQ;AAAA,gBACN;AAAA,gBACA;AAAA,cAAqB;AACvB,uBAAS,yBAAyB,GAAG;AAAA,YACvC,OAAO;AACL,oBAAM,IAAI,2BAA2B,KAAKC,eAAc,GAAG,CAAC;AAAA,YAC9D;AAAA,UACF;AACA,iBAAO,EAAE,QAAQ,UAAU,KAAK;AAAA,QAClC;AACA,eAAO,EAAE,QAAQ,KAAK;AAAA,MACxB;AAEA,aAAO,EAAC,iBAAgB;AAAA,IACxB;AAEA,WAAO,UAAU;AAAA,MACf;AAAA,IACF;AAAA;AAAA;;;;;;;;;ACzGA,QAAA,UAAA;AACA,QAAA,QAAA,UAAA,KAAA;AAOA,QAAA,SAAA,UAAA,MAAA;AACA,QAAA,SAAA,UAAA,QAAA;AACA,QAAA,SAAA;AACA,QAAA,WAAA,UAAA,QAAA;AAuFA,QAAM,eAAc,GAAA,OAAA,cAAa,QAAQ,SAAS,MAAM,SAAS;AAGjE,aAAgB,wBACd,OAAgD;AAEhD,YAAM,EAAE,WAAW,MAAM,SAAS,gBAAe,IAAK;AAEtD,YAAM,WAAsD,cACxD,EAAE,SAAS,MAAM,WAAW,QAAW,iBAAiB,OAAS,IACjE,EAAE,SAAS,WAAW,iBAAiB,MAAM,OAAS;AAC1D,aAAO;IACT;AATA,YAAA,0BAAA;AAYA,aAAgB,0BAA0B,MAAsB;AAE9D,YAAM,kBAAiB,GAAA,QAAA,UAAS,IAAI;AAEpC,aAAO,eAAe,cAAc;IACtC;AALA,YAAA,4BAAA;AAOA,aAAgB,eAAe,eAAsB;AACnD,oBAAc,mCAAkC;AAGhD,YAAM,4BAA4B,cAAc,mBAAkB;AAClE,YAAM,8BAA8B,cAAc,oBAAmB;AACrE,YAAM,aAAa,cAAc;AAEjC,YAAM,WAAW,wBAAwB;QACvC;QACA;QACA;QACA;OACD;AAED,eAAS,8BAA8B,QAA0B;AAE/D,cAAM,EAAE,SAAQ,IAAK;AACrB,eAAO,aAAa,QAAQ,aAAa;MAC3C;AAMA,eAAS,qBAAqB,WAAmB,WAAiB;AAChE,eAAO,cAAc,UAAa,UAAU,WAAW,SAAS;MAClE;AAEA,YAAM,+BAA+B,oBAAI,IAAG;AAC5C,YAAM,sCAAsC,oBAAI,IAAG;AAEnD,qBAAe,QACb,WACA,SACA,gBAA8B;AAE9B,cAAM,QAAQ,YAAW;AACvB,gBAAM,IAAI,MAAM,eAAe,WAAW,SAAS,cAAc;AACjE,iBAAO;QACT;AAGA,uBAAe,mBACb,IAA0E;AAE1E,cAAI;AACF,kBAAM,aAAa,MAAM,GAAE;AAC3B,iBACE,eAAU,QAAV,eAAU,SAAA,SAAV,WAAY,QACZ,qBAAqB,WAAW,QAAQ,SAAS;AAEjD,2CAA6B,IAAI,WAAW,GAAG;AACjD,mBAAO;mBACA,kBAAkB;AACzB,gBAAI,CAAC,qBAAqB,WAAW,QAAQ,SAAS;AACpD,oBAAM;AACR,gBAAI;AACF,kBAAI,eAAe;AAEnB,kBAAI;AACF,oBAAI,UAAU,WAAW,SAAS;AAChC,kCAAe,GAAA,MAAA,eAAc,SAAS;sBAClC;cAAA;AACR,oBAAM,cAAa,GAAA,MAAA,gBACjB,GAAA,SAAA,eAAc,QAAQ,IAAG,CAAE,EAAE,QAAQ,YAAY,CAAC,EAClD,SAAQ;AACV,2CAA6B,IAAI,UAAU;AAC3C,kDAAoC,IAAI,UAAU;AAClD,qBAAO,EAAE,KAAK,YAAY,QAAQ,WAAU;qBACrC,uBAAuB;AAC9B,oBAAM;;;QAGZ;AAEA,eAAO,oBAAoB,YAAW;AACpC,gBAAM,UAAS,GAAA,MAAA,OAAS,SAAS;AACjC,gBAAM,EAAE,UAAU,UAAU,SAAQ,IAAK;AAEzC,cAAI,CAAC,8BAA8B,MAAM,GAAG;AAC1C,mBAAO,mBAAmB,KAAK;;AAGjC,cAAI,aAAa,QAAQ,aAAa,SAAS;AAC7C,mBAAO,mBAAmB,KAAK;;AAIjC,cAAI,UAAU;AAEZ,mBAAO,mBAAmB,KAAK;;AAKjC,iBAAO,mBAAmB,MACxB,0BAA0B,eACxB,WACA,SACA,cAAc,CACf;QAEL,CAAC;MACH;AAGA,qBAAe,KACb,KACA,SAIA,aAAwB;AAKxB,eAAO,oBAAoB,YAAW;;AAGpC,gBAAM,UACJ,KAAA,QAAQ,YAAM,QAAA,OAAA,SAAA,MAEZ,MAAM,UACJ,KACA,SACA,4BAA4B,gBAAgB,GAE9C;AAEJ,cAAI,SAAS;AACb,cAAI,WAAW,aAAa,WAAW,YAAY;AAEjD,kBAAM,EAAE,QAAQ,UAAS,IAAK,MAAM,YAClC,KACA;cACE,GAAG;cACH;eAEF,WAAW;AAGb,gBAAI,cAAc,UAAa,cAAc,MAAM;AACjD,oBAAM,IAAI,MACR,0CAA0C,MAAM,kBAAkB,GAAG,KAAK;;AAK9E,kBAAM,yBAAiD,OACrDC,SACA,UACA,6BACI,EAAE,QAAAA,QAAM;AAGd,kBAAM,EAAE,QAAQ,kBAAiB,IAAK,MAAM,gBAC1C,WACA,EAAE,KAAK,OAAM,GACb,sBAAsB;AAExB,qBAAS;;AAGX,iBAAO,EAAE,QAAQ,OAAM;QACzB,CAAC;MACH;AAEA,qBAAe,UACb,KACA,SACA,kBAAkC;AAElC,cAAM,QAAQ,CAAC,cAAsB,QACnC,iBAAiB,aAAa,SAAS,gBAAgB;AAIzD,uBAAe,mBACb,IAAsC;AAEtC,cAAI;AACF,mBAAO,MAAM,GAAE;mBACR,gBAAgB;AACvB,gBAAI,CAAC,6BAA6B,IAAI,GAAG;AAAG,oBAAM;AAClD,mBAAO,EAAE,QAAQ,WAAU;;QAE/B;AAEA,cAAM,UAAS,GAAA,MAAA,OAAS,GAAG;AAE3B,YAAI,CAAC,8BAA8B,MAAM,GAAG;AAC1C,iBAAO,mBAAmB,KAAK;;AAGjC,cAAM,EAAE,SAAQ,IAAK;AACrB,eACE,aAAa,MACb,2DAA2D;AAG7D,cAAM,cAAa,GAAA,MAAA,eAAc,GAAG;AAEpC,YAAI;AAIJ,cAAM,OAAM,GAAA,OAAA,SAAQ,UAAU;AAC9B,cAAM,gBAAgB,cAAc,QAAQ,UAAU;AACtD,cAAM,oBAAoB,WAAW,gBAAgB,IAAI,GAAG;AAC5D,YAAI,qBAAqB,CAAC,eAAe;AACvC,qBAAW,MAAM,mBAAmB,MAClC,OAAM,GAAA,MAAA,SAAU,GAAA,MAAA,eAAc,aAAa,iBAAiB,CAAC,CAAC,CAAC;eAE5D;AACL,cAAI;AACF,uBAAW,MAAM,mBAAmB,KAAK;mBAClC,GAAG;AACV,gBACE,aAAa,SACb,iBACA,WAAW,sBAAsB,SAAS,GAAG,GAC7C;AACA,gBAAE,WACA;;;;;;;;AAMJ,kBAAM;;;AAIV,YACE,CAAC,cAAc,QAAQ,UAAU,MAChC,SAAS,WAAW,cAAc,SAAS,WAAW,WACvD;AACA,gBAAM,EAAE,WAAU,IAChB,cAAc,qBAAqB,qCACjC,GAAA,OAAA,kBAAiB,UAAU,CAAC;AAEhC,cAAI,eAAe,OAAO;AACxB,mBAAO,EAAE,QAAQ,WAAU;qBAClB,eAAe,OAAO;AAC/B,mBAAO,EAAE,QAAQ,SAAQ;;;AAG7B,eAAO;MACT;AAEA,qBAAe,gBACb,QACA,SACA,wBAA8C;AAE9C,YAAI,WAAW,QAAQ,WAAW,QAAW;AAC3C,gBAAM,IAAI,MAAM,WAAW;;AAG7B,cAAM,QAAQ,MACZ,uBAAuB,QAAQ,SAAS,sBAAsB;AAEhE,cAAM,iBACJ,OAAO,WAAW,WAAW,SAAS,OAAO,SAAS,MAAM;AAE9D,cAAM,EAAE,IAAG,IAAK;AAChB,cAAM,UAAS,GAAA,MAAA,OAAS,GAAG;AAE3B,YAAI,CAAC,8BAA8B,MAAM,GAAG;AAC1C,iBAAO,MAAK;;AAEd,cAAM,cAAa,GAAA,MAAA,eAAc,GAAG;AAEpC,YAAI,cAAc,QAAQ,UAAU,GAAG;AACrC,iBAAO,MAAK;;AAGd,cAAM,YAAY,cAAc,QAAQ,gBAAgB,UAAU;AAElE,eAAO,EAAE,QAAQ,UAAS;MAC5B;AAEA,aAAO;IACT;AA7RA,YAAA,iBAAA;AA+RA,mBAAe,oBAAuB,IAAoB;AACxD,YAAM,MAAM,MAAM,GAAE;AAEpB,UAAI,OAAO;AAAM,eAAO;AACxB,aAAO;QACL,GAAG;QACH,cAAc;;IAElB;;;;;;;;;;;;;AC/ZA,QAAA,SAAA,UAAA,MAAA;AACA,QAAA,WAAA,UAAA,QAAA;AACA,QAAA,OAAA,UAAA,MAAA;AACA,QAAA,QAAA,UAAA,KAAA;AAGA,QAAA,eAAA;AAIA,QAAA,SAAA;AAYA,QAAA,kBAAA;AAEA,QAAA,2BAAA;AAIA,QAAA,uBAAA;AAEA,QAAA,sBAAA;AAIA,QAAA,gCAAA;AAIA,QAAA,oBAAA;AACA,QAAA,wBAAA;AAGA,QAAA,SAAA;AACE,WAAA,eAAA,SAAA,cAAA,EAAA,YAAA,MAAA,KAAA,WAAA;AAAA,aAAA,OAAA;IAAU,EAAA,CAAA;AAuBZ,QAAM,iCACJ,SAAS,QAAQ,SAAS,KAAK,MAAM,GAAG,EAAE,CAAC,GAAG,EAAE,KAAK;AAQvD,QAAI,2BAIQ,iCAEN,2CACA,+BACF,MAAK;IAEL;AAKS,YAAA,oBAAoB,OAAO,IAAI,2BAA2B;AAc1D,YAAA,MAAM,QAAQ;AAqCd,YAAA,iBAAiB,KAAK,QAAQ,UAAU;AAKrD,QAAM,eAAc,GAAA,OAAA,IAAG,QAAA,IAAI,aAAa;AAE3B,YAAA,QAAQ,cACjB,IAAI,SACF,QAAQ,IAAI,aAAY,oBAAI,KAAI,GAAG,YAAW,CAAE,KAAK,GAAG,IAAI,IAC9D,MAAM;AACV,QAAM,UAAU,cACZ,CAAO,KAAa,OAAqB;AACvC,UAAI,IAAI;AACR,aAAO,CAAC,MAAQ;AACd,SAAA,GAAA,QAAA,OAAM,KAAK,GAAG,EAAE,CAAC;AACjB,eAAO,GAAG,CAAC;MACb;IACF,IACA,CAAO,GAAW,OAAsB;AAK/B,YAAA,UAAU,kBAA2B;AA2RrC,YAAA,WAA4B;MACvC,MAAK,KAAA,QAAA,IAAI,iBAAW,QAAA,OAAA,SAAA,KAAI,QAAA,IAAI;MAC5B,OAAM,GAAA,OAAA,IAAG,QAAA,IAAI,YAAY;MACzB,QAAO,GAAA,OAAA,IAAG,QAAA,IAAI,aAAa;MAC3B,UAAU,QAAA,IAAI;MACd,QAAO,GAAA,OAAA,IAAG,QAAA,IAAI,aAAa;MAC3B,SAAQ,GAAA,OAAA,IAAG,QAAA,IAAI,cAAc;MAC7B,UAAU,QAAA,IAAI;MACd,kBAAiB,GAAA,OAAA,OAAM,QAAA,IAAI,wBAAwB;MACnD,SAAQ,GAAA,OAAA,OAAM,QAAA,IAAI,cAAc;MAChC,SAAS,QAAA,IAAI;MACb,cAAa,GAAA,OAAA,IAAG,QAAA,IAAI,oBAAoB;MACxC,aAAY,GAAA,OAAA,IAAG,QAAA,IAAI,mBAAmB;MACtC,eAAc,GAAA,OAAA,IAAG,QAAA,IAAI,sBAAsB;MAC3C,oBAAmB,GAAA,OAAA,OAAM,QAAA,IAAI,0BAA0B;MACvD,gBAAe,GAAA,OAAA,IAAG,QAAA,IAAI,sBAAsB;MAC5C,YAAW,GAAA,OAAA,IAAG,QAAA,IAAI,kBAAkB;MACpC,eAAc,GAAA,OAAA,IAAG,QAAA,IAAI,qBAAqB;MAC1C,WAAU,GAAA,OAAA,IAAG,QAAA,IAAI,iBAAiB;MAClC,wBAAuB,MAAA,GAAA,OAAA,IAAG,QAAA,IAAI,+BAA+B,OAAC,QAAA,OAAA,SAAA,KAAI;MAClE,SAAS,QAAQ,IAAI,KAAK,OAAO;;AAMnC,QAAa,UAAb,cAA6B,aAAA,UAAS;MAKpC,YACE,gBACO,iBACP,cAA6C,CAAA,GAAE;AAE/C,cAAM;EAAoC,cAAc,EAAE;AAHnD,aAAA,kBAAA;AANT,aAAA,OAAO;AAUL,eAAO,eAAe,MAAM,kBAAkB;UAC5C,cAAc;UACd,UAAU;UACV,OAAO;SACR;AACD,eAAO,eAAe,MAAM,eAAe;UACzC,cAAc;UACd,UAAU;UACV,OAAO;SACR;MACH;;;;MAKA,CAAC,QAAA,cAAc,IAAC;AACd,eAAO,KAAK;MACd;;AA5BF,YAAA,UAAA;AA+BA,QAAM,wBAAwB,OAAO,uBAAuB;AA8E5D,aAAgB,SACd,eAAoD;AAGpD,UAAI,UAAU;AACd,UAAI,EAAE,kBAAyB,QAAzB,kBAAa,SAAA,SAAb,cAA4B,qBAAqB,IAAG;AAExD,kBAAU,OAAQ,kBAAa,QAAb,kBAAa,SAAb,gBAAiB,CAAA,CAAsB;;AAG3D,YAAM,oBAAoB,UAAQ,WAAW,KAAK;AAGlD,cAAQ,QAAA,iBAAiB,IAAI;AAG7B,yBACE,QAAQ,QAAQ,cAChB,QAAQ,WAAW,UACnB,SACA,iBAAiB;AAGnB,OAAA,GAAA,oBAAA,wCAAuC,OAAO;AAG7C,eAAA,OAA0C,gBACzC,QAAQ,QAAQ,OAAO;AAGzB,aAAO;IACT;AA/BA,YAAA,WAAA;AAsCA,aAAgB,OAAO,aAA4B,CAAA,GAAE;AACnD,YAAM,qBAAoB,GAAA,gBAAA,mBAAkB,UAAU;AACtD,aAAO,0BAA0B,iBAAiB;IACpD;AAHA,YAAA,SAAA;AAMA,aAAgB,0BACd,mBAAuD;;AAEvD,YAAM,EACJ,gBACA,KACA,SACA,QACA,UACA,wBACA,gBAAe,IACb;AAEJ,YAAM,6BAA4B,GAAA,OAAA,iCAChC,sBAAsB;AAGxB,YAAM,MAAK,GAAA,gBAAA,cAAa,QAAQ;AAGhC,YAAM,oBAAoB,OAAO,QAAQ,UAAW,GAAG,aAAa;AACpE,UAAI,QAAQ,0BAA0B,QAAQ,CAAC,mBAAmB;AAChE,cAAM,IAAI,MACR,0EAA0E;;AAI9E,YAAM,wBAAuB,GAAA,OAAA,cAAa,GAAG,SAAS,OAAO;AAC7D,UAAI,QAAQ,0BAA0B,QAAQ,CAAC,sBAAsB;AACnE,cAAM,IAAI,MACR,mFAAmF;;AAIvF,YAAM,kBACJ,QAAQ,0BAA0B,SAClC,wBACA;AAKF,UAAI,QAAQ,OAAO,CAAC,QAAQ,WAAW;AACrC,YAAI,QAAQ,kBAAkB,OAAO;AACnC,gBAAM,IAAI,MACR,yFAAyF;;AAG7F,YAAI,QAAQ,YAAY;AACtB,gBAAM,IAAI,MACR,8FAA8F;;;AAKpG,YAAM,WAAW,QAAQ,YAAY,GAAG,IAAI;AAC5C,YAAM,aAAa,QAAQ,cAAc,GAAG,IAAI;AAEhD,YAAM,iBACH,QAAQ,kBAAkB,QAAQ,QAAQ,QAAQ,SACnD,QAAQ,cAAc;AACxB,UAAI,aAAwD;AAC5D,UAAI,qBAAyC;AAC7C,UAAI,QAAQ,YAAY;AACtB,qBAAa,QAAQ;AACrB,6BAAqB,gBAAgB;iBAC5B,QAAQ,KAAK;AACtB,qBAAa,UAAQ,QAAQ,sBAAsB;AACnD,6BAAqB,gBAAgB;;AAEvC,YAAM,eAAe,QAAQ,gBAAgB;AAC7C,YAAM,oBAA6C;QACjD;UACE,mBAAmB;UACnB,mBAAmB,CAAA;UACnB,oBAAoB;YAClB;YACA;YACA;YACA,GAAI,QAAQ,iCACR;cACE;;gBAEF,CAAA;YACJ,GAAI,QAAQ,qBAAqB,CAAA;YACjC,IAAI,MAAM;;;AAIhB,YAAM,uBAAuB,kBAC3B,OAAO,QACP,iBAAiB;AAEnB,YAAM,cAAc,oBAAI,IAAG;AAO3B,YAAM,oBAAoB,kBAAiB,GAAA,OAAA,SAAQ,cAAc,IAAI;AACrE,YAAM,YACJ,MAAAC,OAAAC,MAAA,QAAQ,cAAQ,QAAAA,QAAA,SAAAA,MAAI,OAAO,QAAQ,aAAO,QAAAD,QAAA,SAAAA,MAAI,uBAAiB,QAAA,OAAA,SAAA,KAAI;AACrE,YAAM,gBAAgB,sBAAiB,QAAjB,sBAAiB,SAAjB,oBAAqB;AAC3C,YAAM,WAAW,QAAQ,QACrB,CAAC,cAAqB,GAAA,OAAA,UAAS,UAAU,QAAQ,EAAE,OAAO,CAAC,MAAM,MACjE,MAAM;AACV,YAAM,eAAe,aACnB,eACA,QAAQ,aACJ,CAAA,KACC,QAAQ,UAAU,CAAC,sBAAsB,GAAG,IAC3C,CAAC,QAAQ,IAAI,OAAO,GAAG,CAAC,CACzB;AAGP,YAAM,iBAA4C;QAChD,YAAY,MAAM,GAAG,IAAI;QACzB,qBAAqB,MAAM;;QAE3B,sBAAsB,GAAG,IAAI,4BACzB,CAAC,MAAM,IACP,CAAC,MAAM,EAAE,YAAW;;AAG1B,UAAI,QAAQ,iBAAiB,OAAO,iBAAiB,YAAY;AAC/D,cAAM,IAAI,UACR,4DAA4D;;AAGhE,UAAI,mBAAmB,4BAA2B;AAClD,eAAS,8BAA2B;;AAClC,YAAI,YAAY;AAoBd,cAASE,oBAAT,SACE,iBACA,oBAAuC;AAEvC,mBAAO,sBAAiB,QAAjB,sBAAiB,SAAA,SAAjB,kBAAoB;cACzB,SAAS;gBACP;gBACA,QAAQ;kBACN,GAAG;kBACH,SAAS;;gBAEX;;cAEF;cACA;cACA,GAAG;aACJ;UACH;AApCA,cAAI,CAAC;AACH,kBAAM,IAAI,MACR,mEAAmE;AAEvE,gBAAM,iBACJ,OAAO,eAAe,WAAW,aAAa,WAAW,CAAC;AAC5D,gBAAM,oBACJ,OAAO,eAAe,WAAW,CAAA,KAAKD,MAAA,WAAW,CAAC,OAAC,QAAAA,QAAA,SAAAA,MAAI,CAAA;AACzD,gBAAM,qCAAqC,sBACvC,GAAA,OAAA,iCAAgC,kBAAkB,IAClD;AACJ,gBAAM,iBAAiB,mCACrB,gBACA,IAAI;AAEN,gBAAM,oBAAoB,UAAQ,cAAc,EAC7C;AACH,iBAAOC;;MAqBX;AAMA,UAAI,wBAAwB;AAC5B,eAAS,qCAAkC;AACzC,gCAAwB;MAC1B;AAGA,8BAAuB;AACvB,eAAS,0BAAuB;AAC9B,cAAM,mBACJ;AACF,yBAAiB,QAAQ;UACvB,aAAa;UACb,aAAa,WAAiB;;AAC5B,gBAAIC,QAAO;AAIX,gBAAI,yBAAyBA,MAAK,WAAW,SAAS,GAAG;AACvD,kBAAI;AACF,gBAAAA,SAAO,GAAA,MAAA,eAAcA,KAAI;uBAClB,GAAG;;;AAId,YAAAA,SAAO,GAAA,OAAA,kBAAiBA,KAAI;AAC5B,qBAAOF,MAAA,YAAY,IAAIE,KAAI,OAAC,QAAAF,QAAA,SAAA,SAAAA,IAAE,YAAW;UAC3C;UACA,4BAA4B;UAC5B,6BACE,SACA,QACA,QACAG,UACA,mBAAiB;AAEjB,aAAA,GAAA,QAAA,OACE,2GACG,OAAyB,QAC5B,sCAAsC,OAAO,4BAA4B,iBAAiB,IAAI;UAElG;SACD;MACH;AAEA,YAAM,yBACJ,QAAQ,WAAW,SAAY,QAAQ,OAAO,QAAQ,QAAQ;AAEhE,YAAM,oBAAoB,yBACtB,GAAG,wCAAwC,GAAG,oBAC9C,GAAG;AAEP,eAAS,cAAc,aAA0C;AAC/D,cAAM,iBAAiB,kBAAkB,aAAa,cAAc;AACpE,cAAM,kBAAkB,YAAY,IAAI,CAAC,MAAM,EAAE,IAAI;AACrD,eAAO,IAAI,QAAQ,gBAAgB,iBAAiB,WAAW;MACjE;AAEA,eAAS,cAAcC,uBAAsC;AAC3D,cAAM,QAAQ,cAAcA,qBAAoB;AAChD,YAAI,QAAQ,UAAU;AAEpB,kBAAQ,MAAM,qBAAqB,KAAK;eACnC;AAEL,gBAAM;;MAEV;AAGA,UAAI,qBAAqB;AAAQ,sBAAc,oBAAoB;AAEnE,YAAM,kBAAkB,OAAO,QAAQ,QAAQ,GAAG,QAAQ;AAK1D,eAAS,iBAAiBF,OAAY;AACpC,cAAM,eAAeA,MAAK,YAAY,GAAG;AACzC,YAAI,gBAAgB,GAAG;AACrB,gBAAM,MAAMA,MAAK,MAAM,YAAY;AACnC,kBAAQ,KAAK;YACX,KAAK;YACL,KAAK;AACH,qBAAO;YACT,KAAK;YACL,KAAK;AACH,qBAAO,kBAAkB,SAAS;YACpC,KAAK;YACL,KAAK;AACH,qBAAO;YACT,KAAK;YACL,KAAK;AACH,qBAAO;;;AAGb,eAAO;MACT;AAOA,UAAI;AACJ,UAAI;AAMJ,YAAM,uBACJ,GACA,2BAA2B,GAAG,IAAI,yBAAyB;AAE7D,YAAM,wBAAuB,GAAA,yBAAA,4BAA2B;QACtD,WAAU,KAAA,QAAQ,qBAAe,QAAA,OAAA,SAAA,SAAA,GAAE;QACnC,UAAU,QAAQ;OACnB;AAED,YAAM,cAAa,GAAA,kBAAA,eAAc,QAAQ,SAAS,GAAG,OAAO;AAG5D,UAAI,CAAC,eAAe;AAClB,cAAM,eAAe,oBAAI,IAAG;AAC5B,cAAM,gBAAgB,IAAI,IAAI,OAAO,SAAS;AAC9C,cAAM,kBAAiB,GAAA,OAAA,cAAa,QAAQ,YAAY,QAAQ,CAAC;AAGjE,YAAI,CAAC,QAAQ,cAAc;AACzB,cAAI,iBAAiB;AACrB,gBAAM,eAAe,IAAI,IACvB,MAAM,KAAK,aAAa,EAAE,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC,CAAC;AAG5D,gBAAM,wBAAwB,MAAK;AACjC,gBAAI,OAAO,iBAAiB,YAAY;AACtC,oBAAMG,WAAU,QAAQ,WAAU;AAClC,qBAAOA,WAAU,aAAaA,QAAO,IAAI;;AAG3C,mBAAO;UACT;AAGA,gBAAM,cACiE;YACrE,mBAAmB,MAAM,OAAO,cAAc;YAC9C,oBAAoB,MAAM,MAAM,KAAK,aAAa;YAClD,kBAAkB,CAAC,aAAoB;AACrC,oBAAM,UAAU,aAAa,IAAI,QAAQ;AACzC,qBAAO,UAAU,QAAQ,SAAQ,IAAK;YACxC;YACA,kBAAkB,UAAgB;AAEhC,kBAAI,WAAW,aAAa,IAAI,QAAQ;AAGxC,kBAAI,aAAa,QAAW;AAC1B,2BAAW,eAAe,QAAQ;AAClC,oBAAI,aAAa;AAAW;AAE5B,6BAAa,IAAI,UAAU,CAAC;AAC5B,6BAAa,IAAI,UAAU,QAAQ;AACnC;;AAGF,qBAAO,GAAG,eAAe,WAAW,QAAQ;YAC9C;YACA,UAAU;YACV,eAAe,GAAG,IAAI;YACtB,iBAAgB,GAAA,OAAA,cACd,QAAQ,kBAAkB,GAAG,IAAI,cAAc,CAAC;YAElD,aAAY,GAAA,OAAA,cAAa,QAAQ,cAAc,UAAU,CAAC;YAC1D,kBAAiB,GAAA,OAAA,cACf,QAAQ,mBAAmB,GAAG,IAAI,eAAe,CAAC;YAEpD,UAAU,GAAG,IAAI,YACb,GAAA,OAAA,cAAa,QAAQ,YAAY,GAAG,IAAI,QAAQ,CAAC,IACjD;YACJ,YAAY,MAAM,GAAG,IAAI;YACzB,2BAA2B,MAAM,GAAG,IAAI;YACxC,qBAAqB,MAAM;YAC3B,wBAAwB,MAAM,OAAO;YACrC,uBAAuB,MAAM,GAAG,sBAAsB,OAAO,OAAO;YACpE;YACA,OAAO,QAAQ;;AAEjB,gBAAM,EACJ,oBACA,qDACA,gCACA,yBACA,6BAA4B,KAC1B,GAAA,qBAAA,yBAAwB;YAC1B,MAAM;YACN;YACA;YACA;YACA;YACA;YACA;YACA;WACD;AACD,sBAAY,qBAAqB;AACjC,sBAAY,sDACV;AACF,sBAAY,iCACV;AAEF,gBAAM,WAAW,GAAG,uBAClB,GAAG,IAAI,2BACP,GAAG;AAEL,gBAAM,UAAU,GAAG,sBAAsB,aAAa,QAAQ;AAE9D,gBAAM,oBAAoB,CAAC,UAAkB,aAAoB;AAG/D,gBACE,CAAC,cAAc,IAAI,QAAQ,KAC3B,CAAC,wBAAwB,QAAQ,GACjC;AACA,2CAA6B,QAAQ;AACrC,4BAAc,IAAI,QAAQ;AAE1B;;AAGF,kBAAM,kBAAkB,aAAa,IAAI,QAAQ,KAAK;AACtD,kBAAM,mBAAmB,aAAa,IAAI,QAAQ;AAElD,gBAAI,aAAa,kBAAkB;AACjC,2BAAa,IAAI,UAAU,kBAAkB,CAAC;AAC9C,2BAAa,IAAI,UAAU,QAAQ;AAEnC;;UAEJ;AAEA,cAAI,kBAA2C;AAE/C,sBAAY,CAAC,MAAc,aAAoB;AAC7C,8BAAkB,MAAM,QAAQ;AAEhC,kBAAM,gBAAgB,QAAQ,WAAU;AACxC,gBAAI,kBAAkB,iBAAiB;AACrC,eAAA,GAAA,QAAA,OACE,6DAA6D,QAAQ,EAAE;;AAI3E,kBAAM,SAAS,QAAQ,cAAc,QAAQ;AAG7C,kBAAM,cAAc,QACjB,uBAAuB,QAAQ,EAC/B,OAAO,QAAQ,wBAAwB,QAAQ,CAAC;AAEnD,kBAAM,eAAe,QAAQ,WAAU;AAEvC,aAAA,GAAA,QAAA,OACE,+HACA,kBAAkB,YAAY;AAGhC,8BAAkB;AAElB,kBAAM,iBAAiB,kBACrB,aACA,iBAAiB;AAEnB,gBAAI,eAAe;AAAQ,4BAAc,cAAc;AAEvD,gBAAI,OAAO,aAAa;AACtB,qBAAO,CAAC,QAAW,QAAW,IAAI;;AAIpC,gBAAI,OAAO,YAAY,WAAW,GAAG;AACnC,oBAAM,IAAI,UACR,4BAA2B,GAAA,OAAA,UAAS,KAAK,QAAQ,CAAC;yLAGH;;AAInD,mBAAO,CAAC,OAAO,YAAY,CAAC,EAAE,MAAM,OAAO,YAAY,CAAC,EAAE,MAAM,KAAK;UACvE;AAEA,wBAAc,CAAC,MAAc,UAAkB,aAAoB;AACjE,kBAAM,sBAAqB,GAAA,OAAA,kBAAiB,QAAQ;AACpD,8BAAkB,MAAM,kBAAkB;AAE1C,kBAAM,OAAO,QAAQ,uBACnB,oBACA,QAAQ;AAEV,kBAAM,OAAO,GAAG,qBAAqB,OAAO,KAAK,eAAe,CAAA,CAAE;AAClE,kBAAM,UAAU,GAAG,qBAAqB,OAAO,KAAK,gBAAgB,CAAA,CAAE;AAEtE,mBAAO,EAAE,MAAM,QAAO;UACxB;eACK;AACL,gBAAM,MAA8C;YAClD,GAAG,GAAG;YACN,GAAG;YACH,UAAU,CAAC,aAAoB;AAC7B,oBAAM,gBAAgB,aAAa,IAAI,QAAQ;AAC/C,kBAAI,kBAAkB;AAAW,uBAAO;AACxC,oBAAM,WAAW,eAAe,QAAQ;AACxC,kBAAI;AAAU,6BAAa,IAAI,UAAU,QAAQ;AACjD,qBAAO;YACT;YACA,eAAe,GAAG,IAAI;YACtB,iBAAgB,GAAA,OAAA,cACd,QAAQ,kBAAkB,GAAG,IAAI,cAAc,CAAC;YAElD,aAAY,GAAA,OAAA,cAAa,QAAQ,cAAc,UAAU,CAAC;YAC1D,kBAAiB,GAAA,OAAA,cACf,QAAQ,mBAAmB,GAAG,IAAI,eAAe,CAAC;YAEpD,cAAa,GAAA,OAAA,cAAa,QAAQ,eAAe,GAAG,IAAI,WAAW,CAAC;YACpE,UAAU,GAAG,IAAI,YACb,GAAA,OAAA,cAAa,QAAQ,YAAY,GAAG,IAAI,QAAQ,CAAC,IACjD;;AAGN,gBAAM,OAAyB,GAAG,gCAC9B,GAAG,8BAA8B,OAAO,SAAS,GAAG,IACpD;YACE,GAAG;YACH,eAAe,CAAC,UAAU,oBAAmB;AAC3C,oBAAM,WAAW,IAAI,SAAS,QAAQ;AACtC,kBAAI,aAAa;AAAW;AAC5B,qBAAO,GAAG,iBAAiB,UAAU,UAAU,eAAe;YAChE;YACA,uBAAuB,OAAM,GAAA,OAAA,mBAAiB,GAAA,OAAA,SAAQ,QAAQ,CAAC;YAC/D,uBAAuB,OACrB,GAAA,OAAA,mBACE,GAAA,OAAA,OACE,GAAA,OAAA,SAAQ,QAAQ,GAChB,GAAG,sBAAsB,OAAO,OAAO,CAAC,CACzC;YAEL,2BAA2B,MAAM,IAAI;;AAE3C,eAAK,QAAQ,QAAQ;AACrB,gBAAM,EACJ,oBACA,gCACA,yBACA,6BAA4B,KAC1B,GAAA,qBAAA,yBAAwB;YAC1B;YACA;YACA;YACA;YACA;YACA;YACA;YACA;WACD;AACD,eAAK,qBAAqB;AAC1B,eAAK,iCAAiC;AAGtC,cAAI,iBAAiB,GAAG,2BACpB,GAAG,yBAAyB;YAC1B,WAAW,MAAM,KAAK,aAAa;YACnC,SAAS,OAAO;YAChB;YACA,8BAA8B,OAAO;YACrC,mBAAmB,OAAO;WAC3B,IACD,GAAG,+CACD,MAAM,KAAK,aAAa,GACxB,OAAO,SACP,MACA,QACA,OAAO,QACP,OAAO,iBAAiB;AAI9B,gBAAM,qBACJ,OAAO,iBAAiB,aACpB,aAAa,eAAe,WAAU,CAAE,IACxC;AAGN,gBAAM,oBAAoB,CAAC,UAAkB,aAAoB;AAC/D,kBAAM,mBAAmB,aAAa,IAAI,QAAQ;AAClD,kBAAM,kBAAkB,qBAAqB;AAC7C,gBAAI,iBAAiB;AACnB,2BAAa,IAAI,UAAU,QAAQ;;AAIrC,gBAAI,uBAAuB;AAC3B,gBACE,CAAC,cAAc,IAAI,QAAQ,KAC3B,CAAC,wBAAwB,QAAQ,GACjC;AACA,2CAA6B,QAAQ;AACrC,4BAAc,IAAI,QAAQ;AAC1B,qCAAuB;;AAIzB,gBAAI,wBAAwB,iBAAiB;AAC3C,+BAAiB,GAAG,+CAClB,MAAM,KAAK,aAAa,GACxB,OAAO,SACP,MACA,gBACA,OAAO,QACP,OAAO,iBAAiB;;UAG9B;AAEA,sBAAY,CAAC,MAAc,aAAoB;AAC7C,gBAAI,UAAU;AACd,gBAAI,SAAS;AAEb,8BAAkB,MAAM,QAAQ;AAEhC,kBAAM,aAAa,eAAe,cAAc,QAAQ;AACxD,gBAAI,CAAC;AACH,oBAAM,IAAI,UAAU,wBAAwB,QAAQ,EAAE;AAExD,kBAAMA,WAAU,eAAe,WAAU;AACzC,kBAAM,cAAc,GAAG,sBAAsBA,UAAS,UAAU;AAChE,kBAAM,iBAAiB,kBACrB,aACA,iBAAiB;AAEnB,gBAAI,eAAe;AAAQ,4BAAc,cAAc;AAEvD,kBAAM,SAAS,eAAe,KAC5B,YACA,CAACH,OAAM,MAAM,uBAAsB;AACjC,kBAAIA,MAAK,SAAS,MAAM,GAAG;AACzB,yBAAS;qBACJ;AACL,0BAAU;;AAGZ,kBAAI,QAAQ;AAAM,oBAAI,UAAUA,OAAM,MAAM,kBAAkB;YAChE,GACA,QACA,QACA,kBAAkB;AAGpB,gBAAI,OAAO,aAAa;AACtB,qBAAO,CAAC,QAAW,QAAW,IAAI;;AAIpC,gBAAI,YAAY,IAAI;AAClB,kBAAIG,SAAQ,gCAAgC,UAAU,GAAG;AACvD,sBAAM,IAAI,UACR,kDAAiD,GAAA,OAAA,UAC/C,KACA,QAAQ,CACT,EAAE;;AAIP,oBAAM,IAAI,UACR,4BAA2B,GAAA,OAAA,UAAS,KAAK,QAAQ,CAAC;yLAGH;;AAInD,mBAAO,CAAC,SAAS,QAAQ,KAAK;UAChC;AAEA,wBAAc,CAAC,MAAc,UAAkB,aAAoB;AACjE,kBAAM,sBAAqB,GAAA,OAAA,kBAAiB,QAAQ;AACpD,8BAAkB,MAAM,kBAAkB;AAE1C,kBAAM,aAAa,eAAe,cAAc,kBAAkB;AAClE,gBAAI,CAAC;AACH,oBAAM,IAAI,UAAU,wBAAwB,QAAQ,EAAE;AAExD,kBAAM,OAAO,mBAAmB,IAAI,YAAY,QAAQ;AACxD,kBAAM,UAAU,eAAe,WAAU,EAAG,eAAc;AAC1D,kBAAM,SAAS,QAAQ,oBAAoB,IAAI;AAE/C,gBAAI,CAAC;AAAQ,qBAAO,EAAE,MAAM,IAAI,SAAS,GAAE;AAE3C,kBAAM,OAAO,QAAQ,0BAA0B,QAAQ,IAAI;AAC3D,kBAAM,aAAa;cACjB,GAAG,KAAK,uBAAsB;cAC9B,GAAG,KAAK,kBAAiB;;AAG3B,mBAAO;cACL,MAAM,WAAW,SACb,WAAW,IAAI,CAAC,MAAM,QAAQ,kBAAkB,CAAC,CAAC,EAAE,KAAK,IAAI,IAC7D,QAAQ,aAAa,IAAI;cAC7B,SAAS,GAAG,qBACV,SAAS,OAAO,wBAAwB,OAAO,IAAI,CAAA,CAAE;;UAG3D;AAGA,cAAI,QAAQ,QAAQ,OAAO,QAAQ,aAAa;AAC9C,oBAAQ,GAAG,QAAQ,MAAK;AAErB,6BAAe,WAAU,EAAW,cAAa;YACpD,CAAC;;;aAGA;AACL,sBAAc,MAAK;AACjB,gBAAM,IAAI,UACR,uDAAuD;QAE3D;;AAGF,eAAS,qCACP,oBACA,oBAAuC;AAEvC,cAAM,kBAAkB,EAAE,GAAG,OAAO,QAAO;AAC3C,YAAI,uBAAuB;AACzB,0BAAgB,SAAS;AAC3B,YAAI,mBAAmB,qBAAgB,QAAhB,qBAAgB,SAAA,SAAhB,iBACrB,iBACA,kBAAkB;AAEpB,YAAI,qBAAoB,GAAA,OAAA,cAAa,GAAG,SAAS,OAAO,KACpD,GAAA,sBAAA,yBAAwB,IAAI;UAC1B;UACA,mBAAmB;UACnB;SACD,IACD;AACJ,eAAO,CAAC,MAAc,aAAkC;AACtD,cAAI;AACJ,cAAI,kBAAkB;AACpB,qBAAS,iBAAiB,UAAU,MAAM;cACxC;aACD;qBACQ,mBAAmB;AAC5B,qBAAS,kBACP,MACA;cACE;eAEF,uBAAuB,YAAY,WAAW,UAAU;iBAErD;AACL,qBAAS,GAAG,gBAAgB,MAAM;cAChC;cACA;cACA,mBAAmB;cACnB;aACD;;AAGH,gBAAM,iBAAiB,kBACrB,OAAO,eAAe,CAAA,GACtB,iBAAiB;AAEnB,cAAI,eAAe;AAAQ,0BAAc,cAAc;AAEvD,iBAAO,CAAC,OAAO,YAAY,OAAO,eAAyB,KAAK;QAClE;MACF;AAIA,YAAM,yCACJ,OAAO,QAAQ,WAAW,GAAG,WAAW;AAE1C,YAAM,oCAAoC,EACxC,OAAO,QAAQ,WAAW,GAAG,WAAW,UACvC,GAAG,WAAW,UAAU,OAAO,QAAQ,WAAW,GAAG,WAAW,UAChE,GAAG,WAAW,UAAU,OAAO,QAAQ,WAAW,GAAG,WAAW,UACjE,OAAO,QAAQ,WAAW,GAAG,WAAW;AAM1C,YAAM,mBACH,GAAG,WAAW,UAAU,OAAO,QAAQ,WAAW,GAAG,WAAW,UAChE,GAAG,WAAW,YACb,OAAO,QAAQ,WAAW,GAAG,WAAW;AAC5C,YAAM,yBAAyB,qCAC7B,GAAG,WAAW,QAAQ;AAExB,YAAM,6BAA6B,qCACjC,GAAG,WAAW,UACd,SAAS;AAEX,YAAM,wBAAwB,qCAC5B,GAAG,WAAW,UACd,SAAS;AAGX,YAAM,oBAAoB,qCACxB,GAAG,WAAW,UAAU,GAAG,WAAW,UAAU,GAAG,WAAW,MAAM;AAEtE,YAAM,yBAAyB,qCAAoC;AAGnE,eAAS,QAAQ,MAAc,UAAkB,aAAa,GAAC;AAC7D,cAAM,sBAAqB,GAAA,OAAA,kBAAiB,QAAQ;AACpD,cAAM,iBACJ,qBAAqB,oCACnB,kBAAkB;AAEtB,YAAIC,SAA4B;AAChC,YAAI,YAAgC;AACpC,YAAI,cAAc;AAClB,YAAI,WAAW;AAEb,WAACA,QAAO,WAAW,WAAW,IAAI,UAAU,MAAM,kBAAkB;;AAGtE,YACE,eAAe,eAAe,UAC7B,0CAA0C,cAC3C;AACA,WAACA,QAAO,SAAS,IAAI,uBAAuB,MAAM,kBAAkB;mBAEpE,eAAe,eAAe,UAC7B,qCAAqC,cACtC;AACA,WAACA,QAAO,SAAS,IAAI,kBAAkB,MAAM,kBAAkB;mBACtD,aAAa;AAEtB,gBAAMC,mBAAiB,GAAA,8BAAA,gBAAe,UAAU,gBAAgB;AAChE,WAACD,QAAO,SAAS,IACfC,oBAAmB,YACf,2BAA2B,MAAM,kBAAkB,IACnDA,oBAAmB,YACnB,sBAAsB,MAAM,kBAAkB,IAC9CA,oBAAmB,QACnB,uBAAuB,MAAM,kBAAkB,IAC/CA,oBAAmB,QACnB,kBAAkB,MAAM,kBAAkB,IAC1C,uBAAuB,MAAM,kBAAkB;;AAEvD,cAAM,SAAS,aACbD,QACA,oBACA,WACA,gBAAgB;AAElB,oBAAY,IAAI,oBAAoB,EAAE,SAAS,OAAM,CAAE;AACvD,eAAO;MACT;AAEA,UAAI,SAAS;AACb,YAAM,UAAU,CAACE,aACfA,aAAY,SAAY,SAAU,SAAS,CAAC,CAACA;AAC/C,YAAM,UAAU,CAAC,aAAoB;AACnC,YAAI,CAAC;AAAQ,iBAAO;AACpB,cAAM,OAAM,GAAA,OAAA,SAAQ,QAAQ;AAC5B,YAAI,WAAW,SAAS,SAAS,GAAG,GAAG;AACrC,iBAAO,CAAC,SAAS,QAAQ,KAAK,aAAa,QAAQ;;AAErD,eAAO;MACT;AAEA,eAAS,oBAAoB,QAAwB;AACnD,0BAAkB,KAAK;UACrB,GAAG;UACH,mBAAmB,OAAO,kBAAkB,IAAI,CAAC,OAC/C,GAAA,OAAA,kBAAiB,CAAC,CAAC;SAEtB;MACH;AAEA,YAAM,sBAAqB,GAAA,OAAA,MAAK,MAE5B,4CACA,cAAc;QACd;QACA,cAAc,QAAQ;QACtB,uCACE,QAAQ;OACX,CAAC;AAEJ,YAAM,uBAAsB,GAAA,OAAA,MAAK,MAE7B,+CACA,gBACA,QAAQ,iCACR,mBAAkB,CAAE,CACrB;AAEH,YAAM,oBAAmB,GAAA,OAAA,MAAK,MAE1B,2CACA,gBAAgB;QAChB;QACA,cAAc,QAAQ;QACtB,iBAAiB,mBAAkB;OACpC,CAAC;AAGJ,aAAO;QACL,CAAC,qBAAqB,GAAG;QACzB;QACA,cAAc;QACd;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;IAEJ;AAl5BA,YAAA,4BAAA;AAu5BA,aAAS,aAAa,eAAuB,QAAgB;AAC3D,aAAO,CAAC,aAAoB;AAC1B,cAAM,WAAU,GAAA,OAAA,UAAS,eAAe,QAAQ;AAChD,cAAMN,SAAO,GAAA,OAAA,kBAAiB,OAAO;AAErC,eAAO,OAAO,KAAK,CAAC,MAAM,EAAE,KAAKA,KAAI,CAAC;MACxC;IACF;AAKA,aAAS,mBACP,cACA,YACA,SACA,mBAA2D;AAE3D,YAAM,OAAO,IAAI,IAAI,UAAU;AAI/B,iBAAW,aAAa,CAAC,QAAQ,QAAQ,QAAQ,MAAM,GAAG;AACxD,YAAI,KAAK,IAAI,SAAS,KAAK,EAAC,GAAA,OAAA,gBAAe,UAAQ,YAAY,SAAS,GAAG;AAEzE,eAAK,IAAI,KAAK;AACd,eAAK,OAAO,SAAS;;;AAKzB,iBAAW,OAAO,MAAM;AACtB,0BAAkB,KAAK,SAAS,iBAAiB;;AAGnD,UAAI,cAAc;AAChB,cAAM,sBAAsB,oBAAI,IAAI;UAClC,GAAG;UACH,GAAG,OAAO,KAAK,UAAQ,UAAU;SAClC;AAGD,mBAAW,OAAO,qBAAqB;AACrC,gBAAM,MAAM,OAAO,yBAAyB,UAAQ,YAAY,GAAG;AACnE,iBAAO,UAAQ,WAAW,GAAG;AAC7B,iBAAO,eAAe,UAAQ,YAAY,KAAK,GAAI;;;IAGzD;AAKA,aAAS,kBACP,KACA,SACA,iBAAyD;AAEzD,YAAM,MAAM,UAAQ,WAAW,GAAG,KAAK;AAEvC,gBAAQ,WAAW,GAAG,IAAI,SAAU,GAAQ,UAAQ;AAClD,YAAI,QAAQ,QAAQ,QAAQ;AAAG,iBAAO,IAAI,GAAG,QAAQ;AAErD,iCAAyB,SAAS,GAAG,QAAQ;AAE7C,cAAM,WAAW,EAAE;AAEnB,UAAE,WAAW,SAAU,MAAc,UAAgB;AACnD,WAAA,GAAA,QAAA,OAAM,mBAAmB,QAAQ;AAEjC,gBAAM,SAAS,QAAQ,QAAQ,MAAM,QAAQ;AAC7C,iBAAO,SAAS,KAAK,MAAM,QAAQ,QAAQ;QAC7C;AAEA,eAAO,IAAI,GAAG,QAAQ;MACxB;IACF;AAUA,aAAS,aACP,YACA,UACA,WACA,kBAA8C;AAE9C,YAAM,YAAY,OAAO,KACvB,gBAAgB,WAAW,QAAQ,GACnC,MAAM,EACN,SAAS,QAAQ;AACnB,YAAM,mBAAmB,mEAAmE,SAAS;AAGrG,YAAM,SAAS;AACf,YAAM,eAAe,OAAO;AAC5B,YAAM;;SAAuB,GAAA,OAAA,UAAS,QAAQ;;AAC9C,YAAM;;SAAmB,GAAA,OAAA,SAAQ,QAAQ;;AACzC,YAAM;;QAAoB,iBAAiB,QAAQ;;AACnD,YAAM,oBACJ,SAAS,MAAM,GAAG,CAAC,QAAQ,MAAM,IAAI,YAAY;AACnD,YAAM,wCACJ,eAAe,kBAAkB;AAOnC,UACE,WAAW,OAAO,CAAC,uCAAuC,YAAY,MACtE,QACA;AACA,eACE,WAAW,MAAM,GAAG,CAAC,qCAAqC,IAC1D;;AAIJ,YAAM,qCACJ,eAAe,UAAU,iBAAiB,EAAE;AAC9C,UACE,WAAW,OAAO,CAAC,oCAAoC,YAAY,MACnE,QACA;AACA,eACE,WAAW,MAAM,GAAG,CAAC,kCAAkC,IACvD;;AAIJ,aAAO,GAAG,UAAU;EAAK,gBAAgB;IAC3C;AAKA,aAAS,gBAAgB,eAAuB,UAAgB;AAC9D,YAAM,YAAY,KAAK,MAAM,aAAa;AAC1C,gBAAU,OAAO;AACjB,gBAAU,UAAU,CAAC,QAAQ;AAC7B,aAAO,UAAU;AACjB,aAAO,KAAK,UAAU,SAAS;IACjC;AAKA,aAAS,kBACP,aACA,SAA2B;AAE3B,aAAO,YAAY,OAAO,CAAC,MACzB,QAAQ,MACN,CAAC,MAAK;;AACJ,eAAC,CAAC,EAAE,qBACF,EAAE,kBAAkB,SAAQF,MAAA,EAAE,UAAI,QAAAA,QAAA,SAAA,SAAAA,IAAE,QAAS,MAAM,MACrD,EAAE,mBAAmB,QAAQ,EAAE,IAAI,MAAM;OAAE,CAC9C;IAEL;AAOA,aAAS,mBACP,IACA,YACA,UAAgB;AAEhB,UAAI,UAAoB;AAExB,YAAO,QAAO,MAAM;AAClB,mBAAW,SAAS,QAAQ,YAAY,UAAU,GAAG;AACnD,gBAAM,QAAQ,MAAM,aAAY;AAChC,cAAI,QAAQ;AAAU;AAEtB,gBAAM,MAAM,MAAM,OAAM;AACxB,cAAI,YAAY,KAAK;AACnB,sBAAU;AACV,qBAAS;;;AAIb,eAAO;;IAEX;AAcO,QAAM,iBAA0C,CACrD,kBACI,cAA4C,eAAe,aAAa;AAFjE,YAAA,iBAAc;;;;;ACztD3B;AAAA,SAAS,eAAe;;;ACAxB;AAAA,OAAO,YAAY;AACnB,OAAOS,WAAU;;;ACDjB;AAAA,IAAM,sBAAN,MAA0B;AAAA,EACxB,uBAAuB,KAAc,OAAe;AAClD,QAAI,IAAI;AACN,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAYT;AACA,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAYT;AAAA,EAEA,kCAA0C;AACxC,WAAO;AAAA,EACT;AAAA,EAEA,8BAAsC;AACpC,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOT;AAAA,EAEA,2BAAmC;AACjC,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMT;AAAA,EAEA,+BAAuC;AACrC,UAAM,OAAM,oBAAI,KAAK,GAAE,YAAY;AACnC,WAAO;AAAA;AAAA;AAAA,uCAG4B,GAAG;AAAA;AAAA,EAExC;AACF;AAEA,IAAO,8BAAQ,IAAI,oBAAoB;;;AD5DvC,OAAO,QAAQ;;;AEHf;AAAA,OAAO,aAAa;AASpB,IAAM,SAAoB;AAAA,EACxB,MAAM;AAAA,EACN,MAAM;AAAA,EACN,OAAO;AACT;AAEA,IAAM,YAAY,QAAQ,OAAO;AAAA,EAC/B,QAAQ,OAAO,UAAU,EAAE,QAAQ,sBAAsB,CAAC;AAAA,EAC1D,QAAQ,OAAO,OAAO,CAAC,EAAE,OAAO,SAAS,UAAU,MAAM;AACvD,UAAM,QAAQ,OAAO,KAAK,KAAK;AAC/B,WAAO,GAAG,SAAS,IAAI,KAAK,GAAG,KAAK,YAAY,KAAK,GAAG,OAAO;AAAA,EACjE,CAAC;AACH;AAEA,IAAM,mBAAmB,IAAI,QAAQ,WAAW,QAAQ;AACxD,IAAM,gBAAgB,IAAI,QAAQ,WAAW,KAAK,EAAE,UAAU,cAAc,CAAC;AAE7E,IAAM,SAAS,QAAQ,aAAa;AAAA,EAClC,QAAQ;AAAA,EACR,YAAY,CAAC,kBAAkB,aAAa;AAC9C,CAAC;AAEM,SAAS,IAAI,OAAe,MAAe,QAAgB;AAChE,MAAI,CAAC,MAAM;AACT;AAAA,EACF;AAEA,MAAI,UAAU,OAAO,QAAQ;AAC3B,WAAO,QAAQ,CAAC,OAAO,UAAU;AAC/B,UAAI,iBAAsB;AAE1B,UAAI,OAAO,UAAU,UAAU;AAE7B,yBAAiB,IAAI,KAAK;AAAA,MAC5B,WACE,OAAO,UAAU,YACjB,UAAU,QACV,OAAO,KAAK,KAAK,EAAE,SAAS,GAC5B;AAEA,yBAAiB,IAAI,KAAK,UAAU,KAAK,CAAC;AAAA,MAC5C,OAAO;AAEL,yBAAiB;AAAA,MACnB;AAGA,cAAQ,MAAM,QAAQ,MAAM,cAAc;AAG1C,YAAM,gBAAgB,IAAI,OAAO,MAAM,QAAQ,CAAC,IAAI,GAAG;AACvD,cAAQ,MAAM,QAAQ,eAAe,cAAc;AAAA,IACrD,CAAC;AAAA,EACH;AAEA,SAAO,KAAK,OAAO,KAAK;AAC1B;AAMA,IAAO,iBAAQ;;;AFjEf,OAAO,OAAO;AAEd,SAAS,2BAAmC;AAC1C,MAAI,gBAAgB,QAAQ,IAAI,kBAAkB;AAClD,MAAI,cAAcC,MAAK,QAAQ,QAAQ,IAAI,GAAG,aAAa;AAE3D,MAAI,CAAC,GAAG,WAAW,WAAW,GAAG;AAC/B,OAAG,UAAU,aAAa,EAAE,WAAW,KAAK,CAAC;AAAA,EAC/C;AAEA,SAAO;AACT;AAEe,SAAR,yBACL,MACA,KAAc,OACd;AACA,QAAM,sBAAsB,yBAAyB;AACrD,QAAM,aAAY,oBAAI,KAAK,GAAE,QAAQ;AACrC,QAAM,oBAAoB,CAAC,KACvB,GAAG,SAAS,IAAI,IAAI,QACpB,GAAG,SAAS,IAAI,IAAI;AACxB,QAAM,oBAAoBA,MAAK,KAAK,qBAAqB,iBAAiB;AAE1E,QAAM,oBAAoB,4BAAmB,uBAAuB,EAAE;AACtE,KAAG,cAAc,mBAAmB,iBAAiB;AACrD,iBAAO,KAAK,sCAAsC,iBAAiB,IAAI;AACzE;;;AGjCA;AAAA,OAAOC,aAAY;;;ACAnB;AAEA,OAAOC,aAAY;;;ACFnB;AAWO,IAAM,sBAAN,MAA0B;AAAA,EAK/B,YACE,eACA,eACA,SACA;AACA,SAAK,gBAAgB;AACrB,SAAK,UAAU;AACf,SAAK,gBAAgB;AAAA,EACvB;AAAA,EAEA,MAAM,aAAa,YAAwC;AACzD,QAAI;AACF,iBAAW,aAAa,YAAY;AAClC,cAAM,UAAU,GAAG;AACnB,cAAM,aAAa,UAAU,OAAO;AACpC,mBAAW,aAAa,YAAY;AAClC,cACE,CAAC,aACD,cAAc,MACd,cAAc,OACd,cAAc,KACd;AACA;AAAA,UACF;AACA,gBAAM,KAAK,WAAW,SAAS;AAAA,QACjC;AAEA,cAAM,KAAK,6BAA6B,SAAS;AACjD,YAAI,UAAU,SAAS;AACrB,gBAAM,UAAU,QAAQ,KAAK,aAAa;AAAA,QAC5C;AAAA,MACF;AAAA,IACF,SAAS,OAAY;AACnB,YAAM;AAAA,IACR;AAAA,EACF;AAAA,EAEA,MAAM,eAAe,YAAwC;AAC3D,iBAAa,WAAW,QAAQ;AAChC,QAAI;AACF,iBAAW,aAAa,YAAY;AAClC,cAAM,UAAU,KAAK;AACrB,cAAM,aAAa,UAAU,OAAO;AACpC,mBAAW,aAAa,YAAY;AAClC,cACE,CAAC,aACD,cAAc,MACd,cAAc,OACd,cAAc,KACd;AACA;AAAA,UACF;AACA,gBAAM,KAAK,WAAW,SAAS;AAAA,QACjC;AACA,cAAM,KAAK,kCAAkC,SAAS;AACtD,YAAI,UAAU,WAAW;AACvB,gBAAM,UAAU,UAAU,KAAK,aAAa;AAAA,QAC9C;AAAA,MACF;AAAA,IACF,SAAS,OAAY;AACnB,YAAM,IAAI,MAAM,KAAK;AAAA,IACvB;AAAA,EACF;AAAA,EAEA,MAAc,WAAW,MAAc,SAAgB,CAAC,GAAkB;AACxE,QAAI,KAAK,YAAY,WAAW,KAAK,YAAY,WAAW;AAC1D,aAAO,KAAK,QAAQ,gBAAgB,GAAG;AACvC,UAAI,MAAM,MAAM,MAAM;AACtB,YAAO,KAAK,cAA0C,MAAM,MAAM,MAAM;AACxE;AAAA,IACF,WAAW,KAAK,YAAY,YAAY;AACtC,UAAI,QAAQ;AACZ,aAAO,KAAK,QAAQ,gBAAgB,MAAM,IAAI,OAAO,EAAE;AACvD,UAAI,MAAM,MAAM,MAAM;AACtB,YAAO,KAAK,cAAmC,MAAM,MAAM,MAAM;AACjE;AAAA,IACF,WAAW,KAAK,YAAY,UAAU;AACpC,aAAO,KAAK,QAAQ,gBAAgB,GAAG;AACvC,UAAI,MAAM,MAAM,MAAM;AACtB,YAAM,IAAI,QAAc,CAAC,SAAS,WAAW;AAC3C,QAAC,KAAK,cAA2C;AAAA,UAC/C;AAAA,UACA;AAAA,UACA,CAAC,UAAU;AACT,gBAAI,OAAO;AACT,qBAAO,KAAK;AAAA,YACd,OAAO;AACL,sBAAQ;AAAA,YACV;AAAA,UACF;AAAA,QACF;AAAA,MACF,CAAC;AACD;AAAA,IACF;AAEA,UAAM,IAAI,MAAM,sDAAsD;AAAA,EACxE;AAAA,EAEA,MAAM,6BAA6B,WAAsB;AACvD,UAAM,uBAAuB,oBAAI,KAAK;AACtC,UAAM,YAAY,qBACf,YAAY,EACZ,QAAQ,KAAK,GAAG,EAChB,QAAQ,aAAa,EAAE;AAE1B,UAAM,qBAAqB;AAE3B,UAAM,KAAK,WAAW,oBAAoB;AAAA,MACxC,UAAU;AAAA,MACV;AAAA,IACF,CAAC;AAAA,EACH;AAAA,EAEA,MAAM,kCAAkC,WAAsB;AAC5D,UAAM,qBAAqB;AAE3B,UAAM,KAAK,WAAW,oBAAoB,CAAC,UAAU,aAAa,CAAC;AAAA,EACrE;AAAA,EAEA,MAAM,uBAAuB;AAC3B,UAAM,wBAAwB;AAAA;AAAA;AAI9B,QAAI,uBAAuB,IAAI;AAC/B,UAAM,KAAK,WAAW,qBAAqB;AAAA,EAC7C;AACF;;;AC/IA;AAAO,IAAM,oBAAoB;AAC1B,IAAM,qBAAqB;AAC3B,IAAM,uBAAuB;;;ACFpC;;;ACAA;AAAA,OAAOC,aAAY;AAUnBA,QAAO,OAAO;AAgCP,IAAe,aAAf,MAA0B;AAAA,EAUrB,YAAY,OAAyB;AAC7C,QAAI,KAAK,SAAS,SAAS;AACzB,WAAK,kBAAkB,OAAO,GAAG;AACjC;AAAA,IACF;AAEA,SAAK,gBAAgB,KAAK;AAAA,EAC5B;AAAA,EAEU,kBAAkB,KAAc;AACxC,SAAK,OAAO;AAAA,EACd;AAAA,EAEU,gBAAgB,OAAyB;AACjD,SAAK,OAAQ,OAAO,QAAQ,QAAQ,IAAI;AACxC,SAAK,OAAQ,OAAO,QAAQ,QAAQ,IAAI;AACxC,SAAK,OAAO,CAAE,OAAO,QAAmB,CAAE,QAAQ,IAAI;AACtD,SAAK,WAAY,OAAO,YAAY,QAAQ,IAAI;AAChD,SAAK,WAAY,OAAO,YAAY,QAAQ,IAAI;AAChD,SAAK,WAAY,OAAO,YAAY,QAAQ,IAAI;AAChD,SAAK,OAAO,QAAQ,OAAO,IAAI,KAAK,QAAQ,QAAQ,IAAI,OAAO,KAAK;AAEpE,QAAI,CAAC,KAAK,MAAM;AACd,cAAQ,KAAK,MAAM;AAAA,QACjB,KAAK;AAAA,QACL,KAAK;AACH,eAAK,OAAO;AACZ;AAAA,QACF,KAAK;AACH,eAAK,OAAO;AACZ;AAAA,QACF,KAAK;AACH,eAAK,OAAO;AACZ;AAAA,QACF,KAAK;AACH;AAAA,QACF;AACE,gBAAM,IAAI;AAAA,YACR;AAAA,UACF;AAAA,MACJ;AAAA,IACF;AAAA,EACF;AACF;;;AC/FA;;;ACAA;;;ACAA;AAGO,IAAe,SAAf,MAAsB;AAAA,EAK3B,YAAY,uBAA+C;AACzD,SAAK,UAAU;AAAA,EACjB;AAAA,EAEA,aAAa,aACX,wBACiB;AACjB,UAAM,IAAI,MAAM,kCAAkC;AAAA,EACpD;AACF;;;ACjBA;AAiCO,IAAM,sBAAN,cAAkC,MAAM;AAAA,EAC7C,YAAY,YAAoB;AAC9B,UAAM,UAAU;AAChB,SAAK,OAAO,UAAU,UAAU,kEAAkE,UAAU;AAAA,EAC9G;AACF;;;AF9BO,IAAM,WAAN,MAAM,kBAAiB,OAAO;AAAA,EAInC,YAAY,QAAkB,uBAA+C;AAC3E,UAAM,qBAAqB;AAJ7B,SAAS,OAAiC;AAKxC,SAAK,SAAS;AAAA,EAChB;AAAA,EAEA,aAAa,aACX,uBACiB;AACjB,UAAM,KAAK,MAAM,OAAO,IAAI,EAAE,MAAM,MAAM;AACxC,YAAM,IAAI,oBAAoB,IAAI;AAAA,IACpC,CAAC;AACD,QAAI,CAAC,IAAI;AACP,YAAM,IAAI,oBAAoB,IAAI;AAAA,IACpC;AAEA,WAAO,IAAI,UAAS,GAAG,SAAS,qBAAqB;AAAA,EACvD;AACF;;;AG7BA;AAQO,IAAM,cAAN,MAAM,qBAAoB,OAAO;AAAA,EAItC,YACE,QACA,uBACA;AACA,UAAM,qBAAqB;AAP7B,SAAS,OAAiC;AAQxC,SAAK,SAAS;AAAA,EAChB;AAAA,EAEA,aAAa,aACX,uBACiB;AACjB,UAAM,QAAQ,MAAM,OAAO,SAAS,EAAE,MAAM,MAAM;AAChD,YAAM,IAAI,oBAAoB,SAAS;AAAA,IACzC,CAAC;AACD,QAAI,CAAC,OAAO;AACV,YAAM,IAAI,oBAAoB,SAAS;AAAA,IACzC;AAEA,WAAO,IAAI,aAAY,OAAO,qBAAqB;AAAA,EACrD;AACF;;;AChCA;AAQO,IAAM,cAAN,MAAM,qBAAoB,OAAO;AAAA,EAItC,YACE,QACA,uBACA;AACA,UAAM,qBAAqB;AAP7B,SAAS,OAAiC;AAQxC,SAAK,SAAS;AAAA,EAChB;AAAA,EAEA,aAAa,aACX,uBACiB;AACjB,UAAM,SAAS,MAAM,OAAO,gBAAgB,EAAE,MAAM,MAAM;AACxD,YAAM,IAAI,oBAAoB,QAAQ;AAAA,IACxC,CAAC;AACD,QAAI,CAAC,QAAQ;AACX,YAAM,IAAI,oBAAoB,OAAO;AAAA,IACvC;AAEA,WAAO,IAAI,aAAY,OAAO,SAAS,qBAAqB;AAAA,EAC9D;AACF;;;AChCA;AAQO,IAAM,cAAN,MAAM,qBAAoB,OAAO;AAAA,EAItC,YACE,QACA,uBACA;AACA,UAAM,qBAAqB;AAP7B,SAAS,OAAiC;AAQxC,SAAK,SAAS;AAAA,EAChB;AAAA,EAEA,aAAa,aACX,uBACiB;AACjB,UAAM,QAAQ,MAAM,OAAO,SAAS,EAAE,MAAM,MAAM;AAChD,YAAM,IAAI,oBAAoB,SAAS;AAAA,IACzC,CAAC;AACD,QAAI,CAAC,OAAO;AACV,YAAM,IAAI,oBAAoB,SAAS;AAAA,IACzC;AAEA,WAAO,IAAI,aAAY,OAAO,qBAAqB;AAAA,EACrD;AACF;;;AChCA;AAQO,IAAM,gBAAN,MAAM,uBAAsB,OAAO;AAAA,EAIxC,YACE,QACA,uBACA;AACA,UAAM,qBAAqB;AAP7B,SAAS,OAAiC;AAQxC,SAAK,SAAS;AAAA,EAChB;AAAA,EAEA,aAAa,aACX,uBACiB;AACjB,UAAM,UAAU,MAAM,OAAO,SAAS,EAAE,MAAM,MAAM;AAClD,YAAM,IAAI,oBAAoB,SAAS;AAAA,IACzC,CAAC;AACD,QAAI,CAAC,SAAS;AACZ,YAAM,IAAI,oBAAoB,SAAS;AAAA,IACzC;AAEA,WAAO,IAAI,eAAc,QAAQ,SAAS,qBAAqB;AAAA,EACjE;AACF;;;APvBO,IAAM,gBAAN,MAAoB;AAAA,EACzB,aAAa,UACX,QACA,uBACiB;AACjB,YAAQ,QAAQ;AAAA,MACd,KAAK;AAAA,MACL,KAAK;AACH,eAAO,YAAY,aAAa,qBAAqB;AAAA,MACvD,KAAK;AACH,eAAO,SAAS,aAAa,qBAAqB;AAAA,MACpD,KAAK;AACH,eAAO,cAAc,aAAa,qBAAqB;AAAA,MACzD,KAAK;AACH,eAAO,YAAY,aAAa,qBAAqB;AAAA,MACvD,KAAK;AACH,eAAO,YAAY,aAAa,qBAAqB;AAAA,MACvD;AACE,cAAM,IAAI;AAAA,UACR,UAAU,MAAM,gEAAgE,MAAM;AAAA,QACxF;AAAA,IACJ;AAAA,EACF;AACF;;;AQhCA;;;ACAA;;;ACAA;AAAA,OAAO;;;ACAP;AAOA,SAAS,iBAAiB,WAAgB;AACxC,MAAI,OAAO,cAAc,YAAY,CAAC,WAAW;AAC/C,WAAO;AAAA,EACT;AAEA,MAAI,cAAc,UAAU,YAAY,GAAG;AACzC,WAAO;AAAA,EACT;AAEA,SAAO,UAAU,QAAQ,sBAAsB,OAAO,EAAE,YAAY;AACtE;AAEA,SAAS,qBAAqB,OAAY;AACxC,MAAI,OAAO,UAAU,YAAY,CAAC,OAAO;AACvC,WAAO;AAAA,EACT;AAEA,MAAI,UAAU,MAAM,YAAY,GAAG;AACjC,WAAO;AAAA,EACT;AAEA,SAAO,MAAM,QAAQ,UAAU,CAAC,MAAM,EAAE,CAAC,EAAE,YAAY,CAAC;AAC1D;AAEO,SAAS,YAAYC,QAAY,IAAoB;AAC1D,MAAI,OAAO,QAAQ;AACjB,WAAOA;AAAA,EACT;AAEA,MAAI,OAAO,SAAS;AAClB,WAAO,iBAAiBA,MAAK;AAAA,EAC/B;AAEA,MAAI,OAAO,SAAS;AAClB,WAAO,qBAAqBA,MAAK;AAAA,EACnC;AAEA,MAAI,cAAc,QAAQ;AACxB,WAAOA,OAAM,QAAQ,IAAI,CAAC,MAAc,EAAE,CAAC,EAAE,YAAY,CAAC;AAAA,EAC5D;AAEA,SAAO,GAAGA,MAAK;AACjB;;;ACjDA;;;ACAA;AAAO,SAAS,eAAeC,QAAqB;AAClD,SACE,OAAOA,WAAU,YACjB,CAAC,MAAM,QAAQA,MAAK,KACpBA,WAAU,QACV,OAAO,KAAKA,MAAK,EAAE,SAAS;AAEhC;;;ACPA;;;ACAA;;;ACAA;AAeO,SAAS,qBACd,eAC2B;AAC3B,SACE,cAAc,eAAe,MAAM,KACnC,cAAc,eAAe,cAAc,KAC3C,cAAc,eAAe,YAAY;AAE7C;AAMO,IAAe,WAAf,MAAwB;AAAA,EAOnB,YAAY,OAAqB,YAAoB;AAL/D,iBAAsB;AACtB,sBAAqB;AAErB,wBAAuB;AAGrB,SAAK,QAAQ;AACb,SAAK,aAAa;AAClB,SAAK,eAAe,KAAK,MAAM;AAAA,EACjC;AACF;;;ADtCO,IAAM,YAAN,cAAwB,SAAS;AAAA,EAItC,YACE,cACA,YACA,YACA;AACA,UAAM,cAAc,UAAU;AAC9B,SAAK,aAAa;AAClB,SAAK;AAAA,EACP;AACF;;;AEhBA;AAGO,IAAM,UAAN,cAAsB,SAAS;AAAA,EAIpC,YACE,cACA,YACA,YACA;AACA,UAAM,cAAc,UAAU;AARhC;AASE,SAAK,aAAa;AAClB,SAAK;AAAA,EACP;AACF;;;AChBA;AAGO,IAAM,SAAN,cAAqB,SAAS;AAAA,EAInC,YACE,cACA,YACA,YACA;AACA,UAAM,cAAc,UAAU;AAC9B,SAAK,aAAa;AAClB,SAAK;AAAA,EACP;AACF;;;AChBA;AAGO,IAAM,aAAN,cAAyB,SAAS;AAAA,EAMvC,YACE,OACA,YACA,cACA,YACA;AACA,UAAM,OAAO,UAAU;AAXzB;AACA,wBAAuB;AACvB,sBAAqB;AACrB,kCAAiC;AAS/B,SAAK,aAAa;AAClB,SAAK,aAAa;AAClB,SAAK,eAAe;AAAA,EACtB;AACF;;;ALaA,IAAM,sBAAsB,OAAO,SAAS;AAC5C,IAAM,8BAA8B,OAAO,gBAAgB;AAC3D,IAAM,2BAA2B,OAAO,YAAY;AACpD,IAAM,wBAAwB,OAAO,WAAW;AAKzC,SAAS,OACd,UAAyB;AAAA,EACvB,YAAY;AACd,GACmB;AACnB,SAAO,CAAC,QAAgB,gBAAiC;AACvD,QAAI,QAAQ,YAAY;AACtB,YAAM,aAAa,QAAQ,YAAY,0BAA0B,MAAM;AACvE,UAAI,YAAY;AACd,cAAM,IAAI,MAAM,uCAAuC;AAAA,MACzD;AACA,cAAQ,eAAe,0BAA0B,aAAa,MAAM;AAAA,IACtE;AAEA,UAAMC,UAAS;AAAA,MACb,YAAY;AAAA,MACZ,WAAW,QAAQ;AAAA,MACnB,SAAS,QAAQ;AAAA,MACjB,QAAQ,QAAQ;AAAA,IAClB;AAEA,UAAM,kBACJ,QAAQ,YAAY,qBAAqB,MAAM,KAAK,CAAC;AACvD,oBAAgB,KAAKA,OAAM;AAC3B,YAAQ,eAAe,qBAAqB,iBAAiB,MAAM;AAAA,EACrE;AACF;AAKO,SAAS,cAAc,YAAuC;AACnE,SAAO,CAAC,QAAgB,gBAAiC;AACvD,UAAMC,iBAAgB;AAAA,MACpB;AAAA,MACA,cAAc;AAAA,MACd,iBAAiB,OAAO,YAAY,UAAU,WAAW;AAAA,IAC3D;AAEA,UAAM,kBACJ,QAAQ,YAAY,6BAA6B,MAAM,KAAK,CAAC;AAC/D,oBAAgB,KAAKA,cAAa;AAClC,YAAQ;AAAA,MACN;AAAA,MACA;AAAA,MACA;AAAA,IACF;AAAA,EACF;AACF;AAKO,SAAS,gBAAgB,QAK5B;AACF,SAAO,QAAQ,YAAY,qBAAqB,OAAO,SAAS,KAAK,CAAC;AACxE;AASO,SAAS,UACd,OACA,YACmB;AACnB,SAAO,CAAC,QAAgB,gBAAiC;AACvD,UAAM,WAAW;AAAA,MACf;AAAA,MACA,YAAY;AAAA,MACZ;AAAA,MACA;AAAA,IACF;AACA,UAAM,YAAY,QAAQ,YAAY,uBAAuB,MAAM,KAAK,CAAC;AACzE,cAAU,KAAK,QAAQ;AACvB,YAAQ,eAAe,uBAAuB,WAAW,MAAM;AAAA,EACjE;AACF;AAKO,SAAS,OACd,OACA,YACmB;AACnB,SAAO,CAAC,QAAgB,gBAAiC;AACvD,UAAM,WAAW;AAAA,MACf;AAAA,MACA,YAAY;AAAA,MACZ;AAAA,MACA;AAAA,IACF;AACA,UAAM,YAAY,QAAQ,YAAY,uBAAuB,MAAM,KAAK,CAAC;AACzE,cAAU,KAAK,QAAQ;AACvB,YAAQ,eAAe,uBAAuB,WAAW,MAAM;AAAA,EACjE;AACF;AAKO,SAAS,QACd,OACA,YACmB;AACnB,SAAO,CAAC,QAAgB,gBAAiC;AACvD,UAAM,WAAW;AAAA,MACf;AAAA,MACA,YAAY;AAAA,MACZ;AAAA,MACA;AAAA,IACF;AACA,UAAM,YAAY,QAAQ,YAAY,uBAAuB,MAAM,KAAK,CAAC;AACzE,cAAU,KAAK,QAAQ;AACvB,YAAQ,eAAe,uBAAuB,WAAW,MAAM;AAAA,EACjE;AACF;AAKO,SAAS,WACd,OACA,cACA,YACmB;AACnB,SAAO,CAAC,QAAgB,gBAAiC;AACvD,QAAI,EAAE,OAAO,iBAAiB,WAAW;AACvC,qBAAe,aAAa,EAAE;AAAA,IAChC;AAEA,UAAM,WAA6B;AAAA,MACjC;AAAA,MACA,YAAY;AAAA,MACZ;AAAA,MACA;AAAA,MACA,mBAAmB;AAAA,QACjB;AAAA,MACF;AAAA,IACF;AAEA,UAAM,YAAY,QAAQ,YAAY,uBAAuB,MAAM,KAAK,CAAC;AACzE,cAAU,KAAK,QAAQ;AACvB,YAAQ,eAAe,uBAAuB,WAAW,MAAM;AAAA,EACjE;AACF;AAKO,SAAS,aAAa,QAAkC;AAC7D,QAAM,YACJ,QAAQ,YAAY,uBAAuB,OAAO,SAAS,KAAK,CAAC;AACnE,SAAO,UAAU,IAAI,CAAC,aAA+B;AACnD,UAAM,EAAE,MAAM,OAAO,YAAY,WAAW,IAAI;AAChD,YAAQ,MAAM;AAAA,MACZ;AACE,eAAO,IAAI,UAAU,MAAM,GAAG,YAAY,UAAU;AAAA,MACtD;AACE,eAAO,IAAI,OAAO,MAAM,GAAG,YAAY,UAAU;AAAA,MACnD;AACE,eAAO,IAAI,QAAQ,MAAM,GAAG,YAAY,UAAU;AAAA,MACpD;AACE,YAAI,CAAC,SAAS,mBAAmB;AAC/B,gBAAM,IAAI,MAAM,iDAAiD;AAAA,QACnE;AAEA,eAAO,IAAI;AAAA,UACT,MAAM;AAAA,UACN;AAAA,UACA,SAAS,kBAAkB;AAAA,UAC3B,SAAS;AAAA,QACX;AAAA,MACF;AACE,cAAM,IAAI,MAAM,0BAA0B,IAAI,EAAE;AAAA,IACpD;AAAA,EACF,CAAC;AACH;AAKO,SAAS,cAAc,QAA8B;AAC1D,SAAO,QAAQ,YAAY,0BAA0B,OAAO,SAAS;AACvE;AAKO,SAAS,kBAAkB,QAI9B;AACF,SAAO,QAAQ,YAAY,6BAA6B,OAAO,SAAS;AAC1E;;;AFtOA,eAAsB,mCACpB,QACA,aACA,iBAAwD,CAAC,GACzD,uBAAiC,CAAC,GACT;AACzB,MAAI,CAAC,OAAO,QAAQ;AAClB,WAAO;AAAA,EACT;AAEA,QAAM,YAAY,aAAa,WAAW;AAE1C,QAAM,mBAAmB,OAAO,IAAI,CAAC,UAAU;AAC7C,UAAM,kBAAkB;AAAA,MACtB;AAAA,MACA;AAAA,MACA;AAAA,IACF;AACA,oBAAgB,iBAAiB,aAAa,WAAW,cAAc;AAEvE,WAAO;AAAA,EACT,CAAC;AAED,SAAO,iBAAiB,WAAW,IAAI,iBAAiB,CAAC,IAAI;AAC/D;AAEA,SAAS,eACP,OACA,aACA,uBAAiC,CAAC,GAC/B;AACH,QAAM,aAAkC,CAAC;AACzC,QAAM,UAAU,gBAAgB,WAAW;AAC3C,QAAM,gBAAgB,QACnB,OAAO,CAACC,YAAWA,QAAO,MAAM,EAChC,IAAI,CAACA,YAAWA,QAAO,UAAU;AAEpC,aAAW,OAAO,OAAO;AACvB,QAAI,QAAQ,sBAAsB;AAChC,+BAAyB,OAAO,KAAK,YAAY,WAAW;AAC5D;AAAA,IACF;AAEA,QACE,CAAC,MAAM,eAAe,GAAG,KACzB,cAAc,SAAS,GAAG,KACzB,qBAAqB,UAAU,CAAC,qBAAqB,SAAS,GAAG,GAClE;AACA;AAAA,IACF;AAEA,UAAM,gBAAgB,MAAM,GAAG;AAE/B,QAAI,iBAAiB,MAAM;AACzB,iBAAW,YAAY,KAAK,YAAY,mBAAmB,CAAC,IAC1D;AACF;AAAA,IACF;AAEA,QAAI,qBAAqB,aAAa,GAAG;AACvC;AAAA,IACF;AAEA,UAAM,eAAe,YAAY,KAAK,YAAY,mBAAmB;AACrE,QAAI,eAAe,aAAa,KAAK,CAAC,MAAM,QAAQ,aAAa,GAAG;AAClE,iBAAW,YAAY,IAAI;AAAA,QACzB;AAAA,QACA;AAAA,MACF;AACA;AAAA,IACF;AAEA,QAAI,MAAM,QAAQ,aAAa,GAAG;AAChC;AAAA,IACF;AAEA,UAAM,cAAc,QAAQ,KAAK,CAACA,YAAWA,QAAO,eAAe,GAAG;AACtE,QAAI,eAAe,YAAY,WAAW;AACxC,iBAAW,YAAY,IAAI,YAAY,UAAU,aAAa;AAC9D;AAAA,IACF;AAEA,eAAW,YAAY,IAAI;AAAA,EAC7B;AAEA,SAAO;AACT;AAEA,SAAS,yBACP,OACA,KACA,YACA,aACA;AACA,MAAI,CAAC,OAAO,KAAK,MAAM,GAAG,CAAC,EAAE,QAAQ;AACnC;AAAA,EACF;AAEA,QAAM,qBAAqB,OAAO,KAAK,MAAM,GAAG,CAAC,EAAE;AAAA,IACjD,CAAC,KAAK,WAAW;AACf,UAAI,YAAY,QAAQ,YAAY,mBAAmB,CAAC,IACtD,MAAM,GAAG,EAAE,MAAM;AACnB,aAAO;AAAA,IACT;AAAA,IACA,CAAC;AAAA,EACH;AAEA,aAAW,GAAG,IAAI;AACpB;AAEA,SAAS,gBACP,iBACA,aACA,WACA,gBACA;AACA,YAAU,QAAQ,CAAC,aAAuB;AACxC,UAAM,gBAAgB,eAAe;AAAA,MACnC,CAACC,mBAAkBA,eAAc,SAAS,UAAU;AAAA,IACtD;AAEA,QAAI,CAAC,eAAe;AAClB;AAAA,IACF;AAEA,UAAM,gBAAgB,cAAc,SAAS,UAAU;AACvD,UAAM,aAAa;AAAA,MACjB,SAAS;AAAA,MACT,YAAY;AAAA,IACd;AACA,UAAM,aAAa;AAAA,MACjB,YAAY;AAAA,MACZ,YAAY;AAAA,IACd;AAEA,YAAQ,SAAS,MAAM;AAAA,MACrB;AACE,cAAM,kBAAkB,oBAAI,IAAgB;AAC5C,cAAM,kBAAkB;AAAA,UACtB;AAAA,UACA,YAAY;AAAA,QACd;AAEA,sBAAc,QAAQ,CAAC,UAAU;AAC/B,0BAAgB,IAAI,MAAM,eAA8B,GAAG,KAAK;AAAA,QAClE,CAAC;AAED,cAAM,wBAAwB,gBAAgB;AAAA,UAC5C,gBAAgB,UAAyB;AAAA,QAC3C;AAEA,YAAI,CAAC,uBAAuB;AAC1B,0BAAgB,SAAS,UAAU,IAAI;AACvC;AAAA,QACF;AAEA,wBAAgB,SAAS,UAAU,IAAI;AAAA,UACrC;AAAA,UACA,SAAS;AAAA,QACX;AACA;AAAA,MAEF;AACE,cAAM,wBAAwB,oBAAI,IAAgB;AAClD,cAAM,kBAAkB;AAAA,UACtB;AAAA,UACA,YAAY;AAAA,QACd;AAEA,sBAAc,QAAQ,CAAC,UAAU;AAC/B,gCAAsB;AAAA,YACpB,MAAM,eAA8B;AAAA,YACpC;AAAA,UACF;AAAA,QACF,CAAC;AAED,cAAM,8BAA8B,sBAAsB;AAAA,UACxD,gBAAgB,UAAyB;AAAA,QAC3C;AAEA,YAAI,CAAC,6BAA6B;AAChC,0BAAgB,SAAS,UAAU,IAAI;AACvC;AAAA,QACF;AAEA,wBAAgB,SAAS,UAAU,IAAI;AAAA,UACrC;AAAA,UACA,SAAS;AAAA,QACX;AACA;AAAA,MAEF;AACE,cAAM,yBAAyB,cAAc;AAAA,UAC3C,CAAC;AAAA;AAAA,YAEC,KACE;AAAA,cACE;AAAA,cACA,YAAY;AAAA,YACd,CACF,MAAM,gBAAgB,UAAyB;AAAA;AAAA,QACnD;AAEA,wBAAgB,SAAS,UAAU,IAAI,uBAAuB;AAAA,UAC5D,CAAC,UAAU,eAAe,OAAO,SAAS,KAAK;AAAA,QACjD;AACA;AAAA,MAEF;AACE,cAAM,4BAA4B,oBAAI,IAAgB;AACtD,sBAAc,QAAQ,CAAC,UAAU;AAC/B,oCAA0B;AAAA,YACxB,MAAM,UAAyB;AAAA,YAC/B;AAAA,UACF;AAAA,QACF,CAAC;AAED,cAAM,iBAAiB,gBAAgB,UAAyB;AAChE,cAAM,eAAe,0BAA0B,IAAI,cAAc;AAEjE,YAAI,CAAC,cAAc;AACjB,0BAAgB,SAAS,UAAU,IAAI,CAAC;AACxC;AAAA,QACF;AAEA,YAAI,qBACF,aAAa,SAAS,UAAyB;AACjD,YAAI,CAAC,oBAAoB;AACvB,+BAAqB,CAAC;AAAA,QACxB;AAEA,YAAI,CAAC,MAAM,QAAQ,kBAAkB,GAAG;AACtC,+BAAqB,CAAC,kBAAkB;AAAA,QAC1C;AAEA,wBAAgB,SAAS,UAAU,IAAI,mBAAmB;AAAA,UACxD,CAAC,gBAAuB,eAAe,aAAa,SAAS,KAAK;AAAA,QACpE;AACA;AAAA,MACF;AACE,cAAM,IAAI,MAAM,6BAA6B;AAAA,IACjD;AAAA,EACF,CAAC;AACH;AAEA,SAAS,6BACP,eACA,aACqB;AACrB,SAAO,OAAO,KAAK,aAAa,EAAE;AAAA,IAChC,CAAC,KAAK,WAAW;AACf,UAAI,YAAY,QAAQ,YAAY,mBAAmB,CAAC,IACtD,cAAc,MAAM;AACtB,aAAO;AAAA,IACT;AAAA,IACA,CAAC;AAAA,EACH;AACF;AAEA,eAAsB,yBACpB,aACA,OACA,qBACe;AACf,QAAM,iBAAiB,kBAAkB,WAAW;AACpD,MAAI,CAAC,kBAAkB,CAAC,eAAe,QAAQ;AAC7C;AAAA,EACF;AAEA,QAAM,mBAAmB,oBAAI,IAM3B;AAEF,aAAWC,kBAAiB,gBAAgB;AAC1C,qBAAiB,IAAIA,eAAc,cAAc;AAAA,MAC/C,YAAYA,eAAc;AAAA,MAC1B,iBAAiBA,eAAc;AAAA,IACjC,CAAC;AAAA,EACH;AAEA,QAAM,WAAW,oBAAoB,IAAI,OAAOA,mBAA0B;AACxE,UAAM,UAAU,iBAAiB,IAAIA,cAAa;AAClD,UAAM,WAAW;AAAA,MACf,SAAS;AAAA,MACT,YAAY;AAAA,IACd;AAEA,WAAO,OAAO,OAAO,EAAE,CAAC,QAAQ,GAAG,MAAM,SAAS,gBAAgB,EAAE,CAAC;AAAA,EACvE,CAAC;AAED,QAAM,QAAQ,IAAI,QAAQ;AAC5B;;;AQrTA;AAMO,IAAe,SAAf,MAAsB;AAAA,EAkB3B,cAAc;AACZ,SAAK,qBAAqB,CAAC;AAAA,EAC7B;AACF;AAAA;AAAA;AAAA;AAAA;AArBsB,OAUb,sBAAsC;AAAA;AAAA;AAAA;AAAA;AAVzB,OAgBb,yBAAyC;;;ACtBlD;AAAO,SAAS,mBAAmB,MAAoB;AACrD,QAAM,MAAM,CAAC,MAAc,EAAE,SAAS,EAAE,SAAS,GAAG,GAAG;AAEvD,QAAM,OAAO,KAAK,eAAe;AACjC,QAAM,QAAQ,IAAI,KAAK,YAAY,IAAI,CAAC;AACxC,QAAM,MAAM,IAAI,KAAK,WAAW,CAAC;AACjC,QAAM,QAAQ,IAAI,KAAK,YAAY,CAAC;AACpC,QAAM,UAAU,IAAI,KAAK,cAAc,CAAC;AACxC,QAAM,UAAU,IAAI,KAAK,cAAc,CAAC;AAExC,SAAO,GAAG,IAAI,IAAI,KAAK,IAAI,GAAG,IAAI,KAAK,IAAI,OAAO,IAAI,OAAO;AAC/D;;;AX+BO,SAAS,iBAAiB,QAA8B;AAC7D,QAAM,YAAY,OAAO;AACzB,SAAO,UAAU,SAAS,GAAG,IACzB,YAAY,WAAW,OAAO,IAC9B,YAAY,WAAW,OAAO,IAAI;AACxC;AAEO,SAAS,uBAA2C;AACzD,SAAO,EAAE,oBAAoB,CAAC,EAAE;AAClC;AAEA,IAAM,WAAW,oBAAI,IAA0B;AAC/C,IAAM,gBAAgB,oBAAI,IAA0B;AAK7C,IAAe,QAAf,cAA6B,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA,EAezC,WAAW,QAAgB;AACzB,QAAI,CAAC,SAAS,IAAI,IAAI,GAAG;AACvB,eAAS,IAAI,MAAM,KAAK,aAAa,iBAAiB,IAAI,CAAC;AAAA,IAC7D;AAEA,WAAO,SAAS,IAAI,IAAI;AAAA,EAC1B;AAAA;AAAA;AAAA;AAAA,EAKA,WAAW,aAAiC;AAC1C,QAAI,CAAC,cAAc,IAAI,IAAI,GAAG;AAC5B,oBAAc,IAAI,MAAM,cAAc,IAAI,CAAC;AAAA,IAC7C;AAEA,WAAO,cAAc,IAAI,IAAI;AAAA,EAC/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,cAAc;AACZ,UAAM;AAAA,EACR;AAAA;AAAA;AAAA;AAAA,EAKA,aAAa,IAEX,UAAkC,CAAC,GACrB;AACd,UAAM,cAAc;AACpB,UAAM,eAAe,YAAY,qBAAwB,OAAO;AAChE,WAAO,MAAM,aAAa,KAAK;AAAA,EACjC;AAAA;AAAA;AAAA;AAAA,EAKA,OAAO,MAEL,UAAkC,CAAC,GACb;AACtB,UAAM,cAAc;AACpB,UAAM,eAAe,YAAY,qBAAwB,OAAO;AAChE,WAAO,aAAa,MAAM;AAAA,EAC5B;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,aAAa,MAEX,UAA+C,CAAC,GAC7B;AACnB,UAAM,cAAc;AACpB,UAAM,eAAe,YAAY,qBAAwB,OAAO;AAChE,WAAO,aAAa,MAAM,EAAE,IAAI,OAAO;AAAA,EACzC;AAAA;AAAA;AAAA;AAAA,EAKA,aAAa,KAEX,aACA,UAAkC,CAAC,GACrB;AACd,UAAM,cAAc;AACpB,UAAM,eAAe,YAAY,qBAAwB,OAAO;AAChE,WAAO,aAAa,KAAK,WAAW;AAAA,EACtC;AAAA;AAAA;AAAA;AAAA,EAKA,aAAa,cAEX,gBAGA,UAAkC,CAAC,GAChB;AACnB,UAAM,cAAc;AACpB,UAAM,eAAe,YAAY,qBAAwB,OAAO;AAChE,WAAO,aAAa,cAAc,cAAc;AAAA,EAClD;AAAA;AAAA;AAAA;AAAA,EAKA,aAAa,QAEX,gBAEA,UAAkC,CAAC,GAChB;AACnB,UAAM,cAAc;AACpB,UAAM,eAAe,YAAY,qBAAwB,OAAO;AAChE,WAAO,aAAa,QAAQ,cAAc;AAAA,EAC5C;AAAA;AAAA;AAAA;AAAA,EAKA,aAAa,oBAEXC,QACA,UAAkC,CAAC,GAChB;AACnB,UAAM,cAAc;AACpB,UAAM,eAAe,YAAY,qBAAwB,OAAO;AAChE,WAAO,aAAa,oBAAoBA,MAAK;AAAA,EAC/C;AAAA;AAAA;AAAA;AAAA,EAKA,aAAa,QAEX,OACA,UAAkC,CAAC,GAChB;AACnB,UAAM,cAAc;AACpB,UAAM,eAAe,YAAY,qBAAwB,OAAO;AAChE,UAAM,aAAa,YAAY;AAC/B,UAAM,kBAAkB,MAAM,UAAU;AACxC,UAAM,iBAAiB,MAAM,aAAa;AAAA,MACxC;AAAA,IACF;AACA,QAAI,CAAC,gBAAgB;AACnB,aAAO;AAAA,IACT;AAEA,mBAAe,qBAAqB,MAAM;AAC1C,WAAO;AAAA,EACT;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,aAAa,OAEX,WACA,UAAkC,CAAC,GAChB;AACnB,UAAM,cAAc;AACpB,UAAM,eAAe,YAAY,qBAAwB,OAAO;AAChE,WAAO,aAAa,OAAO,SAAc;AAAA,EAC3C;AAAA;AAAA;AAAA;AAAA,EAKA,aAAa,WAEX,YACA,UAAkC,CAAC,GACrB;AACd,UAAM,cAAc;AACpB,UAAM,eAAe,YAAY,qBAAwB,OAAO;AAChE,WAAO,aAAa,WAAW,UAAiB;AAAA,EAClD;AAAA;AAAA;AAAA;AAAA,EAKA,aAAa,aAEX,kBACA,UAAkC,CAAC,GAChB;AACnB,UAAM,cAAc;AACpB,UAAM,eAAe,YAAY,qBAAwB,OAAO;AAChE,UAAM,eAAe,MAAM,aAAa,aAAa,gBAAgB;AACrE,QAAI,CAAC,cAAc;AACjB,aAAO;AAAA,IACT;AAEA,iBAAa,qBAAqB,iBAAiB;AACnD,WAAO;AAAA,EACT;AAAA;AAAA;AAAA;AAAA,EAKA,aAAa,cAEX,gBACA,YACA,UAAkC,CAAC,GACvB;AACZ,UAAM,cAAc;AACpB,UAAM,eAAe,YAAY,qBAAwB,OAAO;AAChE,UAAM,YAAY,MAAM,aAAa,QAAQ;AAAA,MAC3C,OAAO;AAAA,IACT,CAAC;AAED,QAAI,WAAW;AACb,aAAO;AAAA,IACT;AAEA,WAAQ,MAAM,aAAa,OAAO,UAAe;AAAA,EACnD;AAAA;AAAA;AAAA;AAAA,EAKA,aAAa,OAEX,gBACA,MACA,UAAmE;AAAA,IACjE,kBAAkB;AAAA,EACpB,GACY;AACZ,UAAM,cAAc;AACpB,UAAM,eAAe,YAAY,qBAAwB,OAAO;AAChE,UAAM,YAAY,MAAM,aAAa,QAAQ;AAAA,MAC3C,OAAO;AAAA,IACT,CAAC;AAED,QAAI,WAAW;AACb,MAAC,KAAW,YAAY,UAAqB,IAC3C,UAAU,YAAY,UAAqB;AAE7C,UAAI,QAAQ,kBAAkB;AAC5B,eAAQ,MAAM,aAAa,aAAa,IAAS;AAAA,MACnD;AAEA,aAAO;AAAA,IACT;AAEA,WAAQ,MAAM,aAAa,OAAO,IAAS;AAAA,EAC7C;AAAA;AAAA;AAAA;AAAA,EAKA,aAAa,WAEX,gBACA,MACA,UAAmE;AAAA,IACjE,kBAAkB;AAAA,EACpB,GACc;AACd,UAAM,cAAc;AACpB,UAAM,eAAe,YAAY,qBAAwB,OAAO;AAEhE,QACE,CAAC,KAAK;AAAA,MAAM,CAAC,WACX,eAAe,MAAM,CAACC,YAAWA,WAAU,MAAM;AAAA,IACnD,GACA;AACA,YAAM,IAAI;AAAA,QACR,iGACE,eAAe,KAAK,IAAI;AAAA,MAC5B;AAAA,IACF;AAEA,UAAM,UAAe,CAAC;AAEtB,aAAS,IAAI,GAAG,IAAI,KAAK,QAAQ,KAAK;AACpC,YAAM,SAAS,KAAK,CAAC;AACrB,YAAM,SAAS,eAAe,OAAO,CAAC,KAAKA,YAAW;AACpD,YAAIA,OAAM,IAAI,OAAOA,OAAM;AAC3B,eAAO;AAAA,MACT,GAAG,CAAC,CAAgC;AAEpC,YAAM,YAAY,MAAM,aAAa,QAAQ;AAAA,QAC3C,OAAO;AAAA,MACT,CAAC;AAED,UAAI,WAAW;AACb,QAAC,OAAa,YAAY,UAAqB,IAC7C,UAAU,YAAY,UAAqB;AAE7C,YAAI,QAAQ,kBAAkB;AAC5B,kBAAQ,KAAM,MAAM,aAAa,aAAa,MAAW,CAAO;AAChE;AAAA,QACF;AAEA,gBAAQ,KAAK,SAAS;AACtB;AAAA,MACF;AAEA,cAAQ,KAAM,MAAM,aAAa,OAAO,MAAW,CAAO;AAAA,IAC5D;AAEA,WAAO;AAAA,EACT;AAAA;AAAA;AAAA;AAAA,EAKA,aAAa,aAEX,kBACA,UAAkC,CAAC,GAChB;AACnB,UAAM,cAAc;AACpB,UAAM,eAAe,YAAY,qBAAwB,OAAO;AAChE,WAAO,aAAa,aAAa,gBAAgB;AAAA,EACnD;AAAA;AAAA;AAAA;AAAA,EAKA,aAAa,WAEX,kBACA,SAIY;AACZ,UAAM,cAAc;AACpB,UAAM;AAAA,MACJ,QAAAA,UAAS;AAAA,MACT,OAAAD,SAAQ,mBAAmB,oBAAI,KAAK,CAAC;AAAA,IACvC,IAAI,WAAW,CAAC;AAEhB,qBAAiBC,OAAiB,IAAID;AACtC,UAAM,eAAe,YAAY,qBAAwB;AAAA,MACvD,KAAK,SAAS;AAAA,MACd,eAAe,SAAS;AAAA,IAC1B,CAAC;AACD,UAAM,aAAa,aAAa,gBAAgB;AAEhD,QAAI,OAAOA,WAAU,UAAU;AAC7B,uBAAiBC,OAAiB,IAAI,IAAI,KAAKD,MAAK;AAAA,IACtD;AAEA,qBAAiBC,OAAiB,IAAID;AACtC,WAAQ,MAAM;AAAA,MACZ,CAAC,gBAAgB;AAAA,MACjB;AAAA,IACF;AAAA,EACF;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,aAAa,kBAEX,MACA,gBACqC;AACrC,UAAM,cAAc;AACpB,gBAAY,oBAAoB;AAChC,QAAI,MAAM,QAAQ,IAAI,GAAG;AACvB,iBAAW,SAAS,MAAM;AACxB,cAAM;AAAA,UACJ;AAAA,UACA;AAAA,UACA;AAAA,QACF;AAAA,MACF;AAEA,aAAO;AAAA,IACT;AAEA,QAAI,CAAC,MAAM,QAAQ,IAAI,GAAG;AACxB,YAAM;AAAA,QACJ;AAAA,QACA;AAAA,QACA;AAAA,MACF;AAEA,aAAO;AAAA,IACT;AAEA,eAAW,SAAU,KAA0B,MAAM;AACnD,YAAM;AAAA,QACJ;AAAA,QACA;AAAA,QACA;AAAA,MACF;AAAA,IACF;AAEA,WAAO;AAAA,EACT;AAAA;AAAA;AAAA;AAAA,EAKA,OAAO,aAA8B,aAAgB,MAAwB;AAC3E,eAAW,OAAO,MAAM;AACtB,aAAO,OAAO,aAAa,EAAE,CAAC,GAAG,GAAG,KAAK,GAAG,EAAE,CAAC;AAAA,IACjD;AAAA,EACF;AAAA;AAAA;AAAA;AAAA,EAKA,OAAO,YAAY,cAA4C;AAC7D;AAAA,EACF;AAAA;AAAA;AAAA;AAAA,EAKA,OAAO,aAAa,MAAiB;AACnC,WAAO;AAAA,EACT;AAAA;AAAA;AAAA;AAAA,EAKA,OAAO,aAAa,cAA4C;AAC9D;AAAA,EACF;AAAA;AAAA;AAAA;AAAA,EAKA,OAAO,aAAa,cAA4C;AAC9D;AAAA,EACF;AAAA;AAAA;AAAA;AAAA,EAKA,aAAa,WAAW,MAAiC;AACvD,WAAO;AAAA,EACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQA,OAAO,OAAO,YAAoB,UAAyB,CAAC,GAAS;AAEnE,WAAO,OAAO,EAAE,KAAK,WAAW,UAAU;AAAA,EAC5C;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,OAAO,OACL,YACA,OACA,YACM;AACN,WAAO,OAAO,UAAU,EAAE,KAAK,WAAW,UAAU;AAAA,EACtD;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,OAAO,QACL,YACA,OACA,YACM;AACN,YAAQ,OAAO,UAAU,EAAE,KAAK,WAAW,UAAU;AAAA,EACvD;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,OAAO,UACL,YACA,OACA,YACM;AACN,cAAU,OAAO,UAAU,EAAE,KAAK,WAAW,UAAU;AAAA,EACzD;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,OAAO,WACL,YACA,OACA,cACA,YACM;AACN,eAAW,OAAO,cAAc,UAAU,EAAE,KAAK,WAAW,UAAU;AAAA,EACxE;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,OAAO,cAAc,YAAoB,MAAuB;AAC9D,kBAAc,UAAU,EAAE,KAAK,WAAW,KAAK,IAAI;AAAA,EACrD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,OAAe,sBAA4B;AACzC,UAAM,MAAM,cAAc,YAAY;AACtC,QAAI,CAAC,KAAK;AACR,YAAM,IAAI;AAAA,QACR;AAAA,MACF;AAAA,IACF;AAEA,SAAK,cAAc;AAAA,EACrB;AAAA;AAAA;AAAA;AAAA,EAKA,OAAe,qBAEb,SACiB;AACjB,QAAI,SAAS,eAAe;AAC1B,aAAO,QAAQ,cAAc;AAAA,QAC3B;AAAA,MACF;AAAA,IACF;AAEA,QAAI,SAAS,KAAK;AAChB,aAAO,QAAQ,IAAI,cAAc;AAAA,QAC/B;AAAA,MACF;AAAA,IACF;AAEA,UAAM,cAAc;AACpB,gBAAY,oBAAoB;AAChC,WAAO,YAAY,YAAY,gBAAmB,WAAW;AAAA,EAC/D;AACF;;;AD9lBO,IAAe,eAAf,MAA6C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAYxC,YACR,OACA,MACA,eACA;AACA,SAAK,OAAO;AACZ,SAAK,QAAQ;AACb,SAAK,aAAa;AAClB,SAAK,gBAAgB,qBAAwB;AAC7C,SAAK,gBAAgB;AAAA,EACvB;AAAA;AAAA;AAAA;AAAA,EAuBA,MAAM,cACJ,OAGY;AACZ,UAAM,SAAS,MAAM,KAAK,QAAQ,KAAK;AACvC,QAAI,WAAW,MAAM;AACnB,UAAI,MAAM,aAAa;AACrB,cAAM,MAAM;AAAA,MACd;AAEA,YAAM,IAAI,MAAM,eAAe;AAAA,IACjC;AAEA,WAAO;AAAA,EACT;AA4CF;;;AalHA;;;ACAA;AAEA,IAAM,iBAAiB,CAAC,OAAe,WAA8B;AACnE,SAAO;AAAA,IACL,QAAQ,CAACE,SAAgBC,WAA4C;AACnE,UAAI,YAAY,eAAe,KAAK,UAAUD,OAAM;AACpD,cAAQ,QAAQ;AAAA,QACd,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AACH,sBAAY,UAAU,QAAQ,eAAe,GAAG;AAChD;AAAA,QACF,KAAK;AACH,sBAAY,UAAU,QAAQ,eAAe,IAAI;AACjD;AAAA,QACF;AACE,gBAAM,IAAI,MAAM,2BAA2B;AAAA,MAC/C;AAEA,aAAO,EAAE,OAAO,WAAW,QAAQ,CAACC,MAAK,EAAE;AAAA,IAC7C;AAAA,IACA,eAAe,CAAC,aAAqB,aAAqB,OAAO;AAC/D,aAAO,eAAe,KAAK,IAAI,UAAU,IAAI,WAAW;AAAA,IAC1D;AAAA,EACF;AACF;AAEA,IAAO,iBAAQ;;;AC3Bf;AAQA,IAAM,iBAAiB,CACrB,QACA,gBACG;AACH,QAAM,QAAQ,YAAY;AAC1B,QAAM,eAAe,gBAAgB,WAAW;AAEhD,SAAO;AAAA,IACL,QAAQ,CAAC,SAAmB,WAAyB;AACnD,UAAI,QAAQ,SAAS,oBAAoB,GAAG;AAC1C,cAAM,0BAA0B,QAAQ,QAAQ,oBAAoB;AACpE,gBAAQ,OAAO,QAAQ,QAAQ,oBAAoB,GAAG,CAAC;AACvD,eAAO,OAAO,yBAAyB,CAAC;AAAA,MAC1C;AAEA,eAAS,IAAI,GAAG,IAAI,OAAO,QAAQ,KAAK;AACtC,cAAMC,UAAS,QAAQ,CAAC;AACxB,cAAM,cAAc,aAAa;AAAA,UAC/B,CAACC,iBAAgBA,aAAY,eAAeD;AAAA,QAC9C;AACA,YAAI,eAAe,YAAY,SAAS;AACtC,iBAAO,CAAC,IAAI,YAAY,QAAQ,OAAO,CAAC,CAAC;AAAA,QAC3C;AAAA,MACF;AAEA,gBAAU,QAAQ;AAAA,QAAI,CAACA,YACrB,YAAYA,SAAQ,YAAY,sBAAsB;AAAA,MACxD;AACA,UAAI;AACJ,UAAI;AAEJ,cAAQ,QAAQ;AAAA,QACd,KAAK;AAAA,QACL,KAAK;AACH,yBAAe,QACZ,IAAI,CAAC,GAAG,UAAU;AACjB,gBAAI,eAAe,OAAO,KAAK,CAAC,GAAG;AACjC,qBAAO;AAAA,YACT;AACA,mBAAO;AAAA,UACT,CAAC,EACA,KAAK,IAAI;AACZ,mBAAS,OAAO;AAAA,YAAI,CAACE,WACnB,eAAeA,MAAK,IAAI,KAAK,UAAUA,MAAK,IAAIA;AAAA,UAClD;AACA;AAAA,QACF,KAAK;AACH,yBAAe,QAAQ,IAAI,MAAM,GAAG,EAAE,KAAK,IAAI;AAC/C,mBAAS;AACT;AAAA,QACF,KAAK;AACH,yBAAe,QACZ,IAAI,CAAC,GAAG,UAAU;AACjB,gBAAI,eAAe,OAAO,KAAK,CAAC,GAAG;AACjC,qBAAO,IAAI,QAAQ,CAAC;AAAA,YACtB;AACA,mBAAO,IAAI,QAAQ,CAAC;AAAA,UACtB,CAAC,EACA,KAAK,IAAI;AACZ,mBAAS,OAAO;AAAA,YAAI,CAACA,WACnB,eAAeA,MAAK,IAAI,KAAK,UAAUA,MAAK,IAAIA;AAAA,UAClD;AACA;AAAA,QACF;AACE,gBAAM,IAAI,MAAM,2BAA2B;AAAA,MAC/C;AAEA,YAAM,QACJ,WAAW,aACP,eAAe,KAAK,KAAK,QAAQ,KAAK,IAAI,CAAC;AAAA,UAC7C,YAAY,OACV,eAAe,KAAK,KAAK,QAAQ,KAAK,IAAI,CAAC;AAAA,UAC7C,YAAY;AAEhB,aAAO,EAAE,OAAO,OAAO;AAAA,IACzB;AAAA,IACA,YAAY,CAAC,SAAmB,WAA2B;AACzD,gBAAU,QAAQ;AAAA,QAAI,CAACF,YACrB,YAAYA,SAAQ,YAAY,sBAAsB;AAAA,MACxD;AACA,UAAI;AACJ,UAAI,SAAuB,CAAC;AAE5B,eAAS,IAAI,GAAG,IAAI,OAAO,QAAQ,KAAK;AACtC,iBAAS,IAAI,GAAG,IAAI,OAAO,CAAC,EAAE,QAAQ,KAAK;AACzC,gBAAMA,UAAS,QAAQ,CAAC;AACxB,gBAAM,cAAc,aAAa;AAAA,YAC/B,CAACC,iBAAgBA,aAAY,eAAeD;AAAA,UAC9C;AACA,cAAI,eAAe,YAAY,SAAS;AACtC,mBAAO,CAAC,EAAE,CAAC,IAAI,YAAY,QAAQ,OAAO,CAAC,EAAE,CAAC,CAAC;AAAA,UACjD;AAAA,QACF;AAAA,MACF;AAEA,cAAQ,QAAQ;AAAA,QACd,KAAK;AAAA,QACL,KAAK;AACH,sBAAY,OAAO,IAAI,CAAC,aAAa;AACnC,mBAAO;AAAA,cACL,GAAG,SAAS;AAAA,gBAAI,CAACE,WACf,eAAeA,MAAK,IAAI,KAAK,UAAUA,MAAK,IAAIA;AAAA,cAClD;AAAA,YACF;AACA,mBAAO,IAAI,SAAS,IAAI,MAAM,GAAG,EAAE,KAAK,IAAI,CAAC;AAAA,UAC/C,CAAC;AACD;AAAA,QACF,KAAK;AACH,sBAAY,OAAO,IAAI,CAAC,aAAa;AACnC,mBAAO,KAAK,GAAG,QAAQ;AACvB,mBAAO,IAAI,SAAS,IAAI,MAAM,GAAG,EAAE,KAAK,IAAI,CAAC;AAAA,UAC/C,CAAC;AACD;AAAA,QACF,KAAK;AACH,sBAAY,OAAO,IAAI,CAAC,UAAU,aAAa;AAC7C,mBAAO;AAAA,cACL,GAAG,SAAS;AAAA,gBAAI,CAACA,WACf,eAAeA,MAAK,IAAI,KAAK,UAAUA,MAAK,IAAIA;AAAA,cAClD;AAAA,YACF;AACA,mBAAO,IAAI,SACR,IAAI,CAACA,QAAO,aAAa;AACxB,kBAAI,eAAeA,MAAK,GAAG;AACzB,uBAAO,IAAI,WAAW,QAAQ,SAAS,WAAW,CAAC;AAAA,cACrD;AACA,qBAAO,IAAI,WAAW,QAAQ,SAAS,WAAW,CAAC;AAAA,YACrD,CAAC,EACA,KAAK,IAAI,CAAC;AAAA,UACf,CAAC;AACD;AAAA,QACF;AACE,gBAAM,IAAI,MAAM,2BAA2B;AAAA,MAC/C;AAEA,YAAM,QACJ,WAAW,aACP,eAAe,KAAK,KAAK,QAAQ,KAAK,IAAI,CAAC;AAAA,SAC9C,UAAU,KAAK,IAAI,CAAC,MACjB,eAAe,KAAK,KAAK,QAAQ,KAAK,IAAI,CAAC;AAAA,SAC9C,UAAU,KAAK,IAAI,CAAC;AAEvB,aAAO,EAAE,OAAO,OAAO;AAAA,IACzB;AAAA,EACF;AACF;AAEA,IAAO,iBAAQ;;;AC1Jf;;;ACAA;AAGO,SAAS,wBAAwB;AAAA,EACtC;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF,GAiBW;AACT,MAAI,kBAAkB;AACtB,MAAI,qBAAqB;AACzB,MAAI,YAAY;AAEhB,UAAQ,QAAQ;AAAA,IACd,KAAK;AACH,wBAAkB;AAClB,2BAAqB;AACrB,kBAAY;AACZ;AAAA,IACF,KAAK;AAAA,IACL,KAAK;AACH,wBAAkB;AAClB,2BAAqB;AACrB,kBAAY;AACZ;AAAA,IACF,KAAK;AACH,wBAAkB;AAClB,2BAAqB;AACrB,kBAAY;AACZ;AAAA,IACF;AACE,YAAM,IAAI,MAAM,2BAA2B;AAAA,EAC/C;AAGA,QAAM,cAAc,gBACjB,IAAI,CAAC,QAAQ;AACZ,QAAI,IAAI,SAAS,GAAG,GAAG;AACrB,aAAO,oBACJ,IAAI,CAACC,YAAW;AACf,eAAO,IAAIA,OAAM,MAAM,UAAU,IAAIA,OAAM;AAAA,MAC7C,CAAC,EACA,KAAK,iBAAiB;AAAA,IAC3B;AAEA,QAAI,IAAI,YAAY,EAAE,SAAS,IAAI,GAAG;AACpC,YAAM,CAACA,SAAQC,MAAK,IAAI,IAAI,MAAM,MAAM;AACxC,aAAO,IAAIA,MAAK,MAAMD,OAAM;AAAA,IAC9B;AAEA,QAAI,CAAC,IAAI,SAAS,GAAG,GAAG;AACtB,aAAO,IAAI,GAAG,MAAM,UAAU,IAAI,GAAG;AAAA,IACvC;AAEA,UAAM,QAAQ,IAAI,MAAM,GAAG,EAAE,IAAI;AACjC,WAAO,IAAI,KAAK,MAAM,GAAG;AAAA,EAC3B,CAAC,EACA,KAAK,iBAAiB;AAEzB,MAAI,oBAAoB;AACxB,MAAI,OAAO;AACT,yBAAqB,SAAS,KAAK;AAAA,EACrC;AAEA,MAAI,QAAQ;AACV,yBAAqB,WAAW,MAAM;AAAA,EACxC;AAEA,MAAI,QAAQ;AAAA;AAAA,MAER,SAAS,UAAU,sBAAsB;AAAA,OACxC,YAAY;AAAA;AAAA,eAEJ,eAAe,IAAI,SAAS;AAAA;AAAA,iBAE1B,kBAAkB;AAAA,YACvB,WAAW;AAAA;AAAA,eAER,UAAU;AAAA,eACV,UAAU,OAAO,UAAU,IAAI,qBAAqB,MAAM,UAAU,IAAI,uBAAuB;AAAA,UACpG,WAAW,YAAY,QAAQ,SAAS,OAAO,UAAU,IAAI,oBAAoB,MAAM,SAAS,IAAI,sBAAsB,KAAK,EAAE;AAAA,gBAC3H,UAAU,IAAI,oBAAoB,MAAM,SAAS,IAAI,sBAAsB;AAEzF,MAAI,gBAAgB;AAClB,aAAS,QAAQ,eAAe,QAAQ,SAAS,EAAE,CAAC;AAAA,EACtD;AAEA,MAAI,aAAa;AACf,aAAS,WAAW,WAAW;AAAA,EACjC;AAEA,MAAI,SAAS;AACX,aAAS,IAAI,OAAO;AAAA,EACtB;AAEA,WAAS,IAAI,iBAAiB;AAAA;AAAA,WAErB,YAAY;AAAA,SACd,SAAS;AAAA;AAGhB,SAAO,MAAM,KAAK;AACpB;AAEO,SAAS,qBAAqB;AAAA,EACnC;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF,GAeW;AACT,QAAM,sBAAsB;AAAA,IAC1B;AAAA,IACA,YAAY;AAAA,EACd;AACA,QAAM,sBAAsB,iBACzB,IAAI,CAAC,EAAE,OAAAE,QAAO,KAAK,MAAM,kBAAkBA,QAAO,IAAI,CAAC,EACvD,KAAK,IAAI;AAEZ,MAAI;AACJ,MAAI,iBAAiB,WAAW,iBAAiB,WAAW;AAC1D,sBAAkB,mCAAmC,YAAY,IAAI,mBAAmB,aAAa,gBAAgB,GAAG,YAAY,IAAI,mBAAmB,EAAE;AAAA,EAC/J,OAAO;AACL,sBAAkB,mCAAmC,YAAY,IAAI,mBAAmB,aAAa,gBAAgB,GAAG;AAAA,EAC1H;AAEA,QAAM,eAAe;AAAA;AAAA,eAER,WAAW,MAAM,YAAY;AAAA,eAC7B,eAAe;AAAA,aACjB,YAAY;AAAA,QACjB,SAAS;AAAA,cACH,YAAY,IAAI,mBAAmB,QAAQ,mBAAmB;AAAA,QACpE,UAAU,IAAI,YAAY,IAAI,WAAW;AAAA;AAAA;AAAA,sBAG3B,wBAAwB,CAAC;AAAA,MACzC,sBAAsB,mBAAmB,wBAAwB,CAAC,MAAM,mBAAmB,MAAM,EAAE;AAAA;AAGvG,SAAO;AACT;AAEO,SAAS,kBAAkBA,QAAY,MAAsB;AAClE,UAAQ,MAAM;AAAA,IACZ,KAAK;AACH,aAAO,IAAIA,MAAK;AAAA,IAClB,KAAK;AAAA,IACL,KAAK;AACH,aAAO,GAAGA,MAAK;AAAA,IACjB;AACE,YAAM,IAAI,MAAM,2BAA2B,IAAI,EAAE;AAAA,EACrD;AACF;;;ADhMA,SAAS,eAAeC,QAAoB;AAC1C,SAAO,OAAOA;AAChB;AAEA,SAAS,mBAAmB,eAS1B;AACA,QAAM,cAAc,cAAc,iBAAiB,KAAK,IAAI,KAAK;AACjE,QAAM,YAAY,cAAc,YAAY,cAAc,YAAY;AACtE,QAAM,eAAe,cAAc,eAC/B,YAAY,cAAc,YAAY,KACtC;AACJ,QAAM,eAAe,cAAc,eAC/B,YAAY,cAAc,YAAY,KACtC;AACJ,QAAM,aAAa,cAAc,aAC7B,SAAS,cAAc,UAAU,KACjC;AACJ,QAAM,cAAc,cAAc,cAC9B,UAAU,cAAc,WAAW,KACnC;AACJ,QAAM,cAAc,cAAc,cAC9B,UAAU,cAAc,WAAW,KACnC;AAEJ,SAAO;AAAA,IACL;AAAA,IACA,YAAY,cAAc,cAAc;AAAA,IACxC;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF;AACF;AAEA,SAAS,kBACP,QACA,UACA,cACA,eACA,aACA,QAIA;AACA,QAAM,aAAa,SAAS,MAAM;AAClC,QAAM,aAAa,SAAS;AAC5B,QAAM,eAAe,SAAS;AAC9B,QAAM;AAAA,IACJ;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF,IAAI,mBAAmB,aAAa;AACpC,QAAM,SAAS,cAAc,UAAU,CAAC;AACxC,QAAM,sBAAsB,WAAW,MAAM,KAAK,IAAI,CAAC;AAGvD,QAAM,uBAAuB,YAAY,MAAM,KAAK,IAAI,CAAC,KAAK;AAE9D,QAAM,mBAAmB,OAAO,IAAI,CAAC,UAAU;AAC7C,UAAMA,SACJ,MACE,YAAY,YAAY,YAAY,mBAAmB,CACzD;AACF,WAAO,EAAE,OAAAA,QAAO,MAAM,eAAeA,MAAK,EAAE;AAAA,EAC9C,CAAC;AAED,QAAM,mBAAmB,OAAO,IAAI,CAAC,UAAU;AAC7C,UAAMA,SACJ,MACE,YAAY,YAAY,YAAY,mBAAmB,CACzD;AACF,WAAO,EAAE,OAAAA,QAAO,MAAM,eAAeA,MAAK,EAAE;AAAA,EAC9C,CAAC;AAED,UAAQ,SAAS,MAAM;AAAA,IACrB;AACE,UAAI,iBAAiB,KAAK,CAAC,EAAE,OAAAA,OAAM,MAAM,CAACA,MAAK,GAAG;AAChD,uBAAO;AAAA,UACL,wDAAwD,YAAY,IAAI,gBAAgB;AAAA,QAC1F;AACA,cAAM,IAAI;AAAA,UACR,wDAAwD,YAAY,IAAI,gBAAgB;AAAA,QAC1F;AAAA,MACF;AAEA,UAAI,CAAC,YAAY;AACf,cAAM,IAAI;AAAA,UACR,iBAAiB,YAAY;AAAA,QAC/B;AAAA,MACF;AAEA,UAAI,CAAC,iBAAiB,QAAQ;AAC5B,eAAO;AAAA,UACL,OAAO;AAAA,UACP;AAAA,QACF;AAAA,MACF;AAEA,YAAM,QAAQ,UAAU,WAAW,MAAM,YAAY,2BAA2B,YAAY;AAAA,EAChG,SAAS,UAAU,YAAY,IAAI;AAAA,QAC7B;AAAA,QACA,YAAY;AAAA,MACd,CAAC,QAAQ,iBACN,IAAI,CAAC,EAAE,OAAAA,QAAO,KAAK,MAAM,kBAAkBA,QAAO,IAAI,CAAC,EACvD,KAAK,IAAI,CAAC,KAAK,UAAU;AAAA;AAG5B,aAAO;AAAA,QACL;AAAA,QACA;AAAA,MACF;AAAA,IAEF;AACE,UAAI,iBAAiB,KAAK,CAAC,EAAE,OAAAA,OAAM,MAAM,CAACA,MAAK,GAAG;AAChD,uBAAO;AAAA,UACL,2DAA2D,YAAY,IAAI,gBAAgB;AAAA,QAC7F;AACA,cAAM,IAAI;AAAA,UACR,2DAA2D,YAAY,IAAI,gBAAgB;AAAA,QAC7F;AAAA,MACF;AAEA,UAAI,CAAC,YAAY;AACf,cAAM,IAAI;AAAA,UACR,iBAAiB,YAAY;AAAA,QAC/B;AAAA,MACF;AAEA,UAAI,CAAC,iBAAiB,QAAQ;AAC5B,eAAO;AAAA,UACL,OAAO;AAAA,UACP,QAAQ,CAAC;AAAA,QACX;AAAA,MACF;AAEA,YAAM,iBAAiB,UAAU,WAAW,MAAM,YAAY,2BAA2B,YAAY;AAAA,EACzG,SAAS,WAAW,YAAY,IAAI,UAAU,QAAQ,iBAC/C,IAAI,CAAC,EAAE,OAAAA,QAAO,KAAK,MAAM,kBAAkBA,QAAO,IAAI,CAAC,EACvD;AAAA,QACC;AAAA,MACF,CAAC,KAAK,UAAU,IAAI,YAAY,IAAI,WAAW,IAAI,YAAY,IAAI,UAAU,IAAI,WAAW;AAAA;AAG9F,aAAO;AAAA,QACL,OAAO;AAAA,QACP;AAAA,MACF;AAAA,IAEF;AACE,UAAI,iBAAiB,KAAK,CAAC,EAAE,OAAAA,OAAM,MAAM,CAACA,MAAK,GAAG;AAChD,uBAAO;AAAA,UACL,yDAAyD,YAAY,IAAI,gBAAgB;AAAA,QAC3F;AACA,cAAM,IAAI;AAAA,UACR,yDAAyD,YAAY,IAAI,gBAAgB;AAAA,QAC3F;AAAA,MACF;AAEA,UAAI,CAAC,iBAAiB,QAAQ;AAC5B,eAAO;AAAA,UACL,OAAO;AAAA,UACP,QAAQ,CAAC;AAAA,QACX;AAAA,MACF;AAEA,aAAO;AAAA,QACL,OAAO,qBAAqB;AAAA,UAC1B;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA,cAAc;AAAA,QAChB,CAAC;AAAA,QAED;AAAA,MACF;AAAA,IAEF;AACE,UAAI,iBAAiB,KAAK,CAAC,EAAE,OAAAA,OAAM,MAAM,CAACA,MAAK,GAAG;AAChD,uBAAO;AAAA,UACL,6DAA6D,YAAY,IAAI,gBAAgB;AAAA,QAC/F;AACA,cAAM,IAAI;AAAA,UACR,6DAA6D,YAAY,IAAI,gBAAgB;AAAA,QAC/F;AAAA,MACF;AAEA,UAAI,CAAC,iBAAiB,QAAQ;AAC5B,eAAO;AAAA,UACL,OAAO;AAAA,UACP,QAAQ,CAAC;AAAA,QACX;AAAA,MACF;AAEA,YAAM,eAAgB,SAAwB;AAC9C,YAAM,yBAA0B,SAAwB;AACxD,YAAM,oBAAqB,SAAwB;AACnD,YAAM,yBAA0B,SAAwB,MAAM;AAE9D,YAAM,uBAAuB,aAAa,SAAS,KAAK;AACxD,YAAM,iCAAiC,qBAAqB;AAAA,QAC1D,CAACC,cACCA,UAAS,0CACRA,UAAwB,iBAAiB;AAAA,MAC9C;AAEA,UACE,CAAC,kCACD,CAAC,+BAA+B,YAChC;AACA,cAAM,IAAI;AAAA,UACR,qDAAqD,YAAY,sBAAsB,YAAY,+EAA+E,YAAY,aAAa,YAAY,SAAS;AAAA,QAClO;AAAA,MACF;AAEA,YAAM,yBAAyB,+BAA+B;AAC9D,YAAM,sBAAsB,gBAAgB,SAAS,KAAK,EAAE;AAAA,QAC1D,CAACC,YAAWA,QAAO;AAAA,MACrB;AAEA,aAAO;AAAA,QACL,OAAO,wBAAwB;AAAA,UAC7B;AAAA,UACA;AAAA,UACA,wBAAwB;AAAA,YACtB;AAAA,YACA,YAAY;AAAA,UACd;AAAA,UACA,yBAAyB;AAAA,YACvB;AAAA,YACA,YAAY;AAAA,UACd;AAAA,UACA,sBAAsB;AAAA,YACpB;AAAA,YACA,YAAY;AAAA,UACd;AAAA,UACA,uBAAuB;AAAA,YACrB;AAAA,YACA,YAAY;AAAA,UACd;AAAA,UACA,iBAAiB,cAAc,iBAAiB,SAC5C,cAAc,kBACd,oBAAoB;AAAA,YAAI,CAACA,YACvB,YAAYA,SAAQ,YAAY,sBAAsB;AAAA,UACxD;AAAA,UACJ,qBAAqB,oBAAoB;AAAA,YAAI,CAACA,YAC5C,YAAYA,SAAQ,YAAY,sBAAsB;AAAA,UACxD;AAAA,UACA,WAAW,YAAY;AAAA,UACvB,YAAY;AAAA,UACZ,YAAY;AAAA,UACZ,gBAAgB;AAAA,UAChB,SAAS;AAAA,UACT;AAAA,UACA,OAAO,sBAAsB,CAAC,sBAAsB;AAAA,UACpD,QAAQ,CAAC,wBAAwB;AAAA,QACnC,CAAC;AAAA,QACD;AAAA,MACF;AAAA,IAEF;AACE,YAAM,IAAI,MAAM,0BAA0B,SAAS,IAAI,EAAE;AAAA,EAC7D;AACF;AAEA,IAAO,mBAAQ;;;AEhTf;AAMA,IAAM,iBAAiB,CACrB,QACA,gBACG;AACH,QAAM,QAAQ,YAAY;AAC1B,QAAM,eAAe,gBAAgB,WAAW;AAEhD,SAAO;AAAA,IACL,QAAQ,CACN,SACA,QACA,YACA,oBACG;AACH,UAAI,QAAQ,SAAS,oBAAoB,GAAG;AAC1C,cAAM,0BAA0B,QAAQ,QAAQ,oBAAoB;AACpE,gBAAQ,OAAO,QAAQ,QAAQ,oBAAoB,GAAG,CAAC;AACvD,eAAO,OAAO,yBAAyB,CAAC;AAAA,MAC1C;AAEA,eAAS,IAAI,GAAG,IAAI,OAAO,QAAQ,KAAK;AACtC,cAAMC,UAAS,QAAQ,CAAC;AACxB,cAAM,cAAc,aAAa;AAAA,UAC/B,CAACC,iBAAgBA,aAAY,eAAeD;AAAA,QAC9C;AACA,YAAI,eAAe,YAAY,SAAS;AACtC,iBAAO,CAAC,IAAI,YAAY,QAAQ,OAAO,CAAC,CAAC;AAAA,QAC3C;AAAA,MACF;AAEA,eAAS,OAAO,IAAI,CAACE,WAAU;AAC7B,YAAI,eAAeA,MAAK,GAAG;AACzB,iBAAO,KAAK,UAAUA,MAAK;AAAA,QAC7B;AAEA,eAAOA;AAAA,MACT,CAAC;AAED,gBAAU,QAAQ;AAAA,QAAI,CAACF,YACrB,YAAYA,SAAQ,YAAY,sBAAsB;AAAA,MACxD;AAEA,UAAI;AACJ,UAAI;AAEJ,cAAQ,QAAQ;AAAA,QACd,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AACH,sBAAY,QAAQ,IAAI,CAACA,YAAW,KAAKA,OAAM,QAAQ,EAAE,KAAK,IAAI;AAClE,mBAAS,CAAC,GAAG,QAAQ,eAAe;AACpC;AAAA,QACF,KAAK;AACH,sBAAY,QACT,IAAI,CAACA,SAAQ,UAAU,IAAIA,OAAM,QAAQ,QAAQ,CAAC,EAAE,EACpD,KAAK,IAAI;AACZ,mBAAS,CAAC,GAAG,QAAQ,eAAe;AACpC;AAAA,QACF;AACE,gBAAM,IAAI,MAAM,2BAA2B;AAAA,MAC/C;AAEA,YAAM,wBACJ,WAAW,aAAa,IAAI,QAAQ,SAAS,CAAC,KAAK;AACrD,YAAM,QAAQ,UAAU,KAAK;AAAA,MAC7B,SAAS;AAAA,QACP,UAAU,MAAM,qBAAqB;AAEvC,aAAO,EAAE,OAAO,OAAO;AAAA,IACzB;AAAA,IACA,eAAe,CACb,SACA,QACA,aACA,aAAqB,OAClB;AACH,gBAAU,QAAQ;AAAA,QAAI,CAACA,YACrB,YAAYA,SAAQ,YAAY,sBAAsB;AAAA,MACxD;AAEA,UAAI,QAAQ,SAAS,oBAAoB,GAAG;AAC1C,cAAM,0BAA0B,QAAQ,QAAQ,oBAAoB;AACpE,gBAAQ,OAAO,QAAQ,QAAQ,oBAAoB,GAAG,CAAC;AACvD,eAAO,OAAO,yBAAyB,CAAC;AAAA,MAC1C;AAEA,eAAS,IAAI,GAAG,IAAI,OAAO,QAAQ,KAAK;AACtC,cAAMA,UAAS,QAAQ,CAAC;AACxB,cAAM,cAAc,aAAa;AAAA,UAC/B,CAACC,iBAAgBA,aAAY,eAAeD;AAAA,QAC9C;AACA,YAAI,eAAe,YAAY,SAAS;AACtC,iBAAO,CAAC,IAAI,YAAY,QAAQ,OAAO,CAAC,CAAC;AAAA,QAC3C;AAAA,MACF;AAEA,UAAI;AACJ,YAAM,SAAgB,CAAC;AAEvB,cAAQ,QAAQ;AAAA,QACd,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AACH,sBAAY,QAAQ,IAAI,CAACA,YAAW,KAAKA,OAAM,QAAQ,EAAE,KAAK,IAAI;AAClE,iBAAO,QAAQ,CAACE,WAAU;AACxB,gBAAI,eAAeA,MAAK,GAAG;AACzB,qBAAO,KAAK,KAAK,UAAUA,MAAK,CAAC;AACjC;AAAA,YACF;AAEA,mBAAO,KAAKA,UAAS,IAAI;AAAA,UAC3B,CAAC;AACD;AAAA,QACF,KAAK;AACH,sBAAY,QACT,IAAI,CAACF,SAAQ,UAAU,IAAIA,OAAM,QAAQ,QAAQ,CAAC,EAAE,EACpD,KAAK,IAAI;AACZ,iBAAO,QAAQ,CAACE,WAAU;AACxB,gBAAI,eAAeA,MAAK,GAAG;AACzB,qBAAO,KAAK,KAAK,UAAUA,MAAK,CAAC;AACjC;AAAA,YACF;AAEA,mBAAO,KAAKA,UAAS,IAAI;AAAA,UAC3B,CAAC;AACD;AAAA,QACF;AACE,gBAAM,IAAI,MAAM,2BAA2B;AAAA,MAC/C;AAEA,YAAM,QAAQ,UAAU,KAAK,IAAI,UAAU;AAAA,MAC3C,SAAS,IAAI,WAAW;AAExB,aAAO,EAAE,OAAO,OAAO;AAAA,IACzB;AAAA,EACF;AACF;AAEA,IAAO,iBAAQ;;;AL/Hf,IAAqB,uBAArB,MAA2D;AAAA,EAIzD,YAAY,QAA2B,eAAkC;AACvE,SAAK,SAAS;AACd,SAAK,gBAAgB;AAAA,EACvB;AAAA,EAEA,YACE,OACA,aACA,QACkC;AAClC,UAAM,gBAAgB,KAAK,2BAA2B,KAAK;AAC3D,UAAM,OAAO,OAAO,KAAK,aAAa;AACtC,UAAM,SAAS,OAAO,OAAO,aAAa;AAC1C,UAAM,SAAS,eAAe,QAAQ,WAAW;AAEjD,WAAO,OAAO,OAAO,MAAM,MAAM;AAAA,EACnC;AAAA,EAEA,mBACE,QACA,aACA,QACkC;AAClC,UAAM,iBAAiB,OAAO;AAAA,MAAI,CAAC,MACjC,KAAK,2BAA2B,CAAC;AAAA,IACnC;AACA,UAAM,SAAS,eAAe,QAAQ,WAAW;AACjD,UAAM,OAAO,OAAO,KAAK,eAAe,CAAC,CAAC;AAC1C,UAAM,SAAS,eAAe,IAAI,CAAC,UAAU,OAAO,OAAO,KAAK,CAAC;AAEjE,WAAO,OAAO,WAAW,MAAM,MAAM;AAAA,EACvC;AAAA,EAEA,YACE,OACA,aACA,QACkC;AAClC,UAAM,SAAS,eAAe,QAAQ,WAAW;AACjD,UAAM,gBAAgB,KAAK,2BAA2B,KAAK;AAC3D,UAAM,OAAO,OAAO,KAAK,aAAa;AACtC,UAAM,SAAS,OAAO,OAAO,aAAa;AAE1C,UAAM,kBAAkB,cAAc,YAAY,UAAqB;AAEvE,WAAO,OAAO;AAAA,MACZ;AAAA,MACA;AAAA,MACA,YAAY;AAAA,MACZ;AAAA,IACF;AAAA,EACF;AAAA,EAEQ,2BAA2B,OAAa;AAC9C,UAAM,gBAAgB,CAAC;AAEvB,UAAM,OAAO,OAAO,KAAK,KAAK;AAC9B,UAAM,aAAa,CAACC,WAAeA,kBAAiB;AACpD,eAAW,OAAO,MAAM;AACtB,UAAI,WAAW,MAAM,GAAc,CAAC,GAAG;AACrC;AAAA,MACF;AAEA,aAAO,OAAO,eAAe,EAAE,CAAC,GAAG,GAAG,MAAM,GAAc,EAAE,CAAC;AAAA,IAC/D;AAEA,WAAO;AAAA,EACT;AAAA,EAEA,YACE,OACAC,SACAD,QACkC;AAClC,WAAO,eAAe,OAAO,KAAK,MAAM,EAAE,OAAOC,SAAQD,MAAK;AAAA,EAChE;AAAA,EAEQ,qBACN,eACA,aACU;AACV,UAAM,YAAY,aAAa,WAAW;AAC1C,UAAM,WAAW,UAAU;AAAA,MACzB,CAACE,cAAaA,UAAS,eAAe;AAAA,IACxC;AACA,QAAI,CAAC,UAAU;AACb,YAAM,IAAI;AAAA,QACR,YAAY,aAAa,uBAAuB,WAAW;AAAA,MAC7D;AAAA,IACF;AAEA,WAAO;AAAA,EACT;AAAA,EAEA,MAAM,2BACJ,QACA,aACA,OACA,QACA,MACgD;AAChD,QAAI,CAAC,MAAM,QAAQ;AACjB,aAAO,CAAC;AAAA,IACV;AAEA,QAAI,CAAC,YAAY,YAAY;AAC3B,YAAM,IAAI,MAAM,SAAS,WAAW,8BAA8B;AAAA,IACpE;AAEA,UAAM,YAAsC,CAAC;AAE7C,eAAW,iBAAiB,OAAO;AACjC,YAAM,WAAW,KAAK;AAAA,QACpB,cAAc;AAAA,QACd;AAAA,MACF;AACA,YAAM,EAAE,OAAO,OAAO,IAAI;AAAA,QACxB;AAAA,QACA;AAAA,QACA,cAAc;AAAA,QACd;AAAA,QACA;AAAA,QACA;AAAA,MACF;AAEA,UAAI,CAAC,OAAO;AACV,kBAAU,cAAc,QAAQ,IAAI,CAAC;AACrC;AAAA,MACF;AAEA,UAAI,OAAO,MAAM,MAAM;AACvB,UAAI,SAAS,MAAM,KAAK,eAAe,OAAO,MAAM;AACpD,UAAI,CAAC,QAAQ;AACX,iBAAS,CAAC;AAAA,MACZ,WAAW,CAAC,MAAM,QAAQ,MAAM,GAAG;AACjC,iBAAS,CAAC,MAAM;AAAA,MAClB;AAGA,iBAAW,OAAO,QAAQ;AACxB,YAAI,cAAc,gBAAgB,QAAQ;AACxC,gBAAO,SAAS,MAAc;AAAA,YAC5B,IAAI,IAAI,eAAe,CAAC;AAAA,YACxB,cAAc;AAAA,UAChB;AAAA,QACF;AAAA,MACF;AAGA,UAAI,CAAC,cAAc,sBAAsB;AACvC,iBAAS,MAAO,SAAS,MAAc,WAAW,MAAM;AAAA,MAC1D;AAGA,aAAO,QAAQ,CAAC,QAAa;AAC3B,cAAM,eAAe,IAAI;AACzB,eAAO,IAAI;AACX,YAAI,CAAC,UAAU,YAAY,GAAG;AAC5B,oBAAU,YAAY,IAAI,CAAC;AAAA,QAC7B;AAEA,kBAAU,YAAY,EAAE,KAAK,GAAG;AAAA,MAClC,CAAC;AAAA,IACH;AAGA,UAAM,cAAmD,MAAM;AAAA,MAC7D,CAAC,kBAAkB;AACjB,cAAM,oBAAoB,UAAU,cAAc,QAAQ,KAAK,CAAC;AAGhE,0BAAkB,QAAQ,CAAC,UAAU;AACnC,cAAI,OAAO,MAAM,cAAc,QAAQ,MAAM,UAAU;AACrD,kBAAM,cAAc,QAAQ,IAAI,KAAK;AAAA,cACnC,MAAM,cAAc,QAAQ;AAAA,YAC9B;AAAA,UACF;AAAA,QACF,CAAC;AAED,eAAO;AAAA,UACL,CAAC,cAAc,QAAQ,GAAG;AAAA,QAC5B;AAAA,MACF;AAAA,IACF;AAEA,WAAO;AAAA,EACT;AAAA,EAEA,MAAc,eACZ,OACA,SAAgB,CAAC,GACH;AACd,YAAQ,KAAK,QAAQ;AAAA,MACnB,KAAK;AAAA,MACL,KAAK;AACH,cAAM,cAAc,MAClB,KAAK,cACL,MAAM,OAAO,MAAM;AACrB,eAAO,YAAY,CAAC;AAAA,MACtB,KAAK;AACH,cAAM,WAAW,MAAO,KAAK,cAAmC;AAAA,UAC9D;AAAA,UACA;AAAA,QACF;AACA,eAAO,SAAS;AAAA,MAClB,KAAK;AACH,eAAO,MAAM,IAAI,QAAQ,CAAC,SAAS,WAAW;AAC5C,UAAC,KAAK,cAA2C;AAAA,YAC/C;AAAA,YACA;AAAA,YACA,CAAC,KAAK,WAAW;AACf,kBAAI,KAAK;AACP,uBAAO,GAAG;AAAA,cACZ;AAEA,sBAAQ,MAAM;AAAA,YAChB;AAAA,UACF;AAAA,QACF,CAAC;AAAA,MACH;AACE,cAAM,IAAI,MAAM,iCAAiC,KAAK,MAAM,EAAE;AAAA,IAClE;AAAA,EACF;AACF;;;AMpPA;;;ACAA;AAiBO,SAAS,sBACd,MACA,OACA,OACA;AACA,SAAO;AAAA,IACL;AAAA,IACA,SAAS;AAAA,IACT,aAAa;AAAA,IACb,WAAW;AAAA,IACX,SAAS,UAAU;AAAA,IACnB,UAAU,KAAK,IAAI,GAAG,KAAK,KAAK,QAAQ,KAAK,CAAC;AAAA,IAC9C,cAAc,OAAO,KAAK,IAAI,GAAG,KAAK,KAAK,QAAQ,KAAK,CAAC;AAAA,IACzD,UAAU,QAAQ;AAAA,EACpB;AACF;;;AChCA;;;ACAA;AAIA,IAAM,oBAAoB;AAAA,EACxB;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF;AAEA,IAAM,iBAAiB,CACrB,QACA,gBACG;AACH,QAAM,QAAQ,YAAY;AAC1B,QAAM,mBAAmB,CAAC,eAAuB;AAC/C,YAAQ,QAAQ;AAAA,MACd,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AACH,eAAO,KAAK,WAAW,QAAQ,MAAM,IAAI,CAAC;AAAA,MAC5C,KAAK;AACH,eAAO,IAAI,WAAW,QAAQ,MAAM,IAAI,CAAC;AAAA,MAC3C;AACE,cAAM,IAAI,MAAM,2BAA2B;AAAA,IAC/C;AAAA,EACF;AAEA,SAAO;AAAA,IACL,WAAW,iBAAiB,KAAK;AAAA,IACjC,YAAY,CAAC,OAAe,iBAAiB,KAAK,eAAe,EAAE;AAAA,IACnE,aAAa,CAAC,QAAkB;AAC9B,YAAM,IAAI,IAAI,CAAC,OAAO,iBAAiB,EAAE,CAAW;AACpD,aAAO,iBAAiB,KAAK,iBAAiB,IAAI,KAAK,IAAI,CAAC;AAAA,IAC9D;AAAA,IACA,eAAe,IAAI,YAAsB;AACvC,gBAAU,QAAQ,IAAI,CAACC,YAAW;AAChC,cAAM,aAAa,YAAY;AAC/B,YAAI,YAAY;AAChB,YAAI,aAAaA;AACjB,YAAI,QAAQ;AAEZ,YAAIA,QAAO,YAAY,EAAE,SAAS,MAAM,GAAG;AACzC,WAAC,YAAY,KAAK,IAAIA,QAAO,MAAM,OAAO;AAAA,QAC5C;AACA,gBAAQ,YAAY,OAAO,UAAU;AAErC,YAAI,WAAW,SAAS,GAAG,GAAG;AAC5B,WAAC,WAAW,UAAU,IAAI,WAAW,MAAM,GAAG;AAAA,QAChD;AAEA,YACE,kBAAkB,SAAS,WAAW,YAAY,CAAC,KACnD,WAAW,SAAS,GAAG,GACvB;AACA,iBAAO,QAAQ,GAAG,UAAU,OAAO,KAAK,KAAK;AAAA,QAC/C;AAEA,YAAI,cAAc;AAClB,YAAI,CAAC,OAAO;AACV,gBAAM,sBAAsB;AAAA,YAC1B,YAAY,YAAY,UAAU;AAAA,UACpC;AACA,wBAAc,YACV,GAAG,SAAS,IAAI,mBAAmB,KACnC;AAAA,QACN,WAAW,WAAW;AACpB,wBAAc,GAAG,SAAS,IAAI,UAAU;AAAA,QAC1C;AAEA,eAAO,QAAQ,GAAG,WAAW,OAAO,KAAK,KAAK;AAAA,MAChD,CAAC;AAED,aAAO,UAAU,QAAQ,KAAK,IAAI,CAAC,SAAS,KAAK;AAAA,IACnD;AAAA,IACA,UAAU;AAAA,IACV,YAAY,IAAI,YAAsB;AACpC,UAAI,WAAW,YAAY;AACzB,cAAM,IAAI,MAAM,2CAA2C;AAAA,MAC7D;AAEA,gBAAU,QAAQ;AAAA,QAAI,CAACA,YACrB;AAAA,UACE,YAAYA,SAAQ,YAAY,sBAAsB;AAAA,QACxD;AAAA,MACF;AAEA,aAAO,gBAAgB,QAAQ,KAAK,IAAI,CAAC;AAAA,IAC3C;AAAA,IACA,aAAa,wBAAwB,KAAK;AAAA,IAC1C,gBAAgB,IAAI,YAAsB;AACxC,gBAAU,QAAQ;AAAA,QAAI,CAACA,YACrB;AAAA,UACE,YAAYA,SAAQ,YAAY,sBAAsB;AAAA,QACxD;AAAA,MACF;AACA,aAAO,mBAAmB,QAAQ,KAAK,IAAI,CAAC,SAAS,KAAK;AAAA,IAC5D;AAAA,IACA,WAAW,CAACA,YACV,cAAc;AAAA,MACZ,YAAYA,SAAQ,YAAY,sBAAsB;AAAA,IACxD,CAAC,UAAU,KAAK;AAAA,IAClB,UAAU,CAAC,SAAmB,QAAwB,UAAU;AAC9D,gBAAU,QAAQ,IAAI,CAACA,YAAW;AAChC,YAAI,YAAY;AAChB,YAAI,aAAaA;AAEjB,YAAIA,QAAO,SAAS,GAAG,GAAG;AACxB,WAAC,WAAW,UAAU,IAAIA,QAAO,MAAM,GAAG;AAAA,QAC5C;AAEA,cAAM,sBAAsB;AAAA,UAC1B;AAAA,UACA,YAAY;AAAA,QACd;AAEA,eAAO,YACH,GAAG,SAAS,IAAI,mBAAmB,KACnC;AAAA,MACN,CAAC;AAED,aAAO,aAAa,QAAQ,KAAK,IAAI,CAAC,IAAI,KAAK;AAAA,IACjD;AAAA,IACA,SAAS,IAAI,YAAsB;AACjC,gBAAU,QAAQ,IAAI,CAACA,YAAW;AAChC,YAAI,YAAY;AAChB,YAAI,aAAaA;AAEjB,YAAIA,QAAO,SAAS,GAAG,GAAG;AACxB,WAAC,WAAW,UAAU,IAAIA,QAAO,MAAM,GAAG;AAAA,QAC5C;AAEA,cAAM,sBAAsB;AAAA,UAC1B;AAAA,UACA,YAAY;AAAA,QACd;AAEA,eAAO,YACH,GAAG,SAAS,IAAI,mBAAmB,KACnC;AAAA,MACN,CAAC;AAED,aAAO,aAAa,QAAQ,KAAK,IAAI,CAAC;AAAA,IACxC;AAAA,IACA,OAAO,CAAC,UAAkB;AACxB,aAAO,UAAU,KAAK;AAAA,IACxB;AAAA,IACA,QAAQ,CAAC,WAAmB;AAC1B,aAAO,WAAW,MAAM;AAAA,IAC1B;AAAA,EACF;AACF;AAEA,IAAO,iBAAQ;;;ACrMf;;;ACAA;AAuBA,IAAM,gBAAgB,CACpB,QACA,gBACG;AACH,SAAO;AAAA,IACL,2BAA2B,CAAC,OAAe,aAAqB,MAAM;AACpE,cAAQ,QAAQ;AAAA,QACd,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AACH,iBAAO,MAAM,QAAQ,gBAAgB,MAAM,GAAG;AAAA,QAChD,KAAK;AACH,cAAI,QAAQ;AACZ,iBAAO,MAAM,QAAQ,gBAAgB,MAAM,IAAI,OAAO,EAAE;AAAA,QAC1D;AACE,gBAAM,IAAI,MAAM,2BAA2B;AAAA,MAC/C;AAAA,IACF;AAAA,IACA,OAAO,CACLC,SACAC,QACA,WAA+B,QAC5B;AACH,UAAI,QAAQ;AAAA,QAAW;AAAA,QACrBD;AAAA,QACA,YAAY;AAAA,MACd,CAAC,IAAI,QAAQ;AACb,UAAI,SAAS,CAACC,MAAK;AAEnB,UAAI,OAAOA,WAAU,YAAYA,WAAU,MAAM;AAC/C,gBAAQ,QAAQ;AAAA,UACd,KAAK;AAAA,UACL,KAAK;AAAA,UACL,KAAK;AACH,oBAAQ;AAAA,kCAAqCD,OAAM,WAAW,QAAQ;AACtE,qBAAS,CAACC,MAAK;AACf;AAAA,UACF,KAAK;AACH,oBAAQ;AAAA,QAAWD,OAAM,WAAW,QAAQ;AAC5C;AAAA,UACF;AACE,kBAAM,IAAI,MAAM,8BAA8B,MAAM,EAAE;AAAA,QAC1D;AAAA,MACF;AAEA,aAAO;AAAA,QACL;AAAA,QACA;AAAA,MACF;AAAA,IACF;AAAA,IACA,UAAU,CACRA,SACAC,QACA,WAA+B,QAC5B;AACH,UAAI,QAAQ,QAAQ;AAAA,QAClBD;AAAA,QACA,YAAY;AAAA,MACd,CAAC,IAAI,QAAQ;AACb,UAAI,SAAS,CAACC,MAAK;AAEnB,UAAI,OAAOA,WAAU,YAAYA,WAAU,MAAM;AAC/C,gBAAQ,QAAQ;AAAA,UACd,KAAK;AAAA,UACL,KAAK;AAAA,UACL,KAAK;AACH,oBAAQ,kCAAkCD,OAAM,WAAW,QAAQ;AACnE;AAAA,UACF,KAAK;AACH,oBAAQ,QAAQA,OAAM,WAAW,QAAQ;AACzC;AAAA,UACF;AACE,kBAAM,IAAI,MAAM,8BAA8B,MAAM,EAAE;AAAA,QAC1D;AAAA,MACF;AAEA,aAAO;AAAA,QACL;AAAA,QACA;AAAA,MACF;AAAA,IACF;AAAA,IACA,SAAS,CACPA,SACAC,QACA,WAA+B,QAC5B;AACH,UAAI,QAAQ,OAAO;AAAA,QACjBD;AAAA,QACA,YAAY;AAAA,MACd,CAAC,IAAI,QAAQ;AACb,UAAI,SAAS,CAACC,MAAK;AAEnB,UAAI,OAAOA,WAAU,YAAYA,WAAU,MAAM;AAC/C,gBAAQ,QAAQ;AAAA,UACd,KAAK;AAAA,UACL,KAAK;AAAA,UACL,KAAK;AACH,oBAAQ,iCAAiCD,OAAM,WAAW,QAAQ;AAClE;AAAA,UACF,KAAK;AACH,oBAAQ,OAAOA,OAAM,WAAW,QAAQ;AACxC;AAAA,UACF;AACE,kBAAM,IAAI,MAAM,8BAA8B,MAAM,EAAE;AAAA,QAC1D;AAAA,MACF;AAEA,aAAO;AAAA,QACL;AAAA,QACA;AAAA,MACF;AAAA,IACF;AAAA,IACA,UAAU,CAACA,SAAgBC,WAAsB;AAC/C,UAAI,QAAQ;AAAA,QAAW;AAAA,QACrBD;AAAA,QACA,YAAY;AAAA,MACd,CAAC;AACD,UAAI,SAAS,CAACC,MAAK;AAEnB,UAAI,OAAOA,WAAU,YAAYA,WAAU,MAAM;AAC/C,gBAAQ,QAAQ;AAAA,UACd,KAAK;AAAA,UACL,KAAK;AAAA,UACL,KAAK;AACH,oBAAQ;AAAA,kCAAqCD,OAAM;AACnD;AAAA,UACF,KAAK;AACH,oBAAQ;AAAA,QAAWA,OAAM;AACzB;AAAA,UACF;AACE,kBAAM,IAAI,MAAM,8BAA8B,MAAM,EAAE;AAAA,QAC1D;AAAA,MACF;AAEA,aAAO;AAAA,QACL;AAAA,QACA;AAAA,MACF;AAAA,IACF;AAAA,IACA,aAAa,CAACA,SAAgBC,WAAsB;AAClD,UAAI,QAAQ,QAAQ;AAAA,QAClBD;AAAA,QACA,YAAY;AAAA,MACd,CAAC;AACD,UAAI,SAAS,CAACC,MAAK;AAEnB,UAAI,OAAOA,WAAU,YAAYA,WAAU,MAAM;AAC/C,gBAAQ,QAAQ;AAAA,UACd,KAAK;AAAA,UACL,KAAK;AAAA,UACL,KAAK;AACH,oBAAQ,kCAAkCD,OAAM;AAChD;AAAA,UACF,KAAK;AACH,oBAAQ,QAAQA,OAAM;AACtB;AAAA,UACF;AACE,kBAAM,IAAI,MAAM,8BAA8B,MAAM,EAAE;AAAA,QAC1D;AAAA,MACF;AAEA,aAAO;AAAA,QACL;AAAA,QACA;AAAA,MACF;AAAA,IACF;AAAA,IACA,YAAY,CAACA,SAAgBC,WAAsB;AACjD,UAAI,QAAQ,OAAO;AAAA,QACjBD;AAAA,QACA,YAAY;AAAA,MACd,CAAC;AACD,UAAI,SAAS,CAACC,MAAK;AAEnB,UAAI,OAAOA,WAAU,YAAYA,WAAU,MAAM;AAC/C,gBAAQ,QAAQ;AAAA,UACd,KAAK;AAAA,UACL,KAAK;AAAA,UACL,KAAK;AACH,oBAAQ,iCAAiCD,OAAM;AAC/C;AAAA,UACF,KAAK;AACH,oBAAQ,OAAOA,OAAM;AACrB;AAAA,UACF;AACE,kBAAM,IAAI,MAAM,8BAA8B,MAAM,EAAE;AAAA,QAC1D;AAAA,MACF;AAEA,aAAO;AAAA,QACL;AAAA,QACA;AAAA,MACF;AAAA,IACF;AAAA,IACA,cAAc,CAACA,SAAgB,KAAiB,QAAoB;AAClE,UAAI,QAAQ;AAAA,QAAW;AAAA,QACrBA;AAAA,QACA,YAAY;AAAA,MACd,CAAC;AACD,UAAI,SAAS,CAAC,KAAK,GAAG;AAEtB,UAAI,OAAO,QAAQ,YAAY,QAAQ,MAAM;AAC3C,gBAAQ,QAAQ;AAAA,UACd,KAAK;AAAA,UACL,KAAK;AAAA,UACL,KAAK;AACH,oBAAQ;AAAA,kCAAqCA,OAAM;AACnD;AAAA,UACF,KAAK;AACH,oBAAQ;AAAA,QAAWA,OAAM;AACzB;AAAA,UACF;AACE,kBAAM,IAAI,MAAM,8BAA8B,MAAM,EAAE;AAAA,QAC1D;AAAA,MACF;AAEA,aAAO;AAAA,QACL;AAAA,QACA;AAAA,MACF;AAAA,IACF;AAAA,IACA,iBAAiB,CAACA,SAAgB,KAAiB,QAAoB;AACrE,UAAI,QAAQ,QAAQ;AAAA,QAClBA;AAAA,QACA,YAAY;AAAA,MACd,CAAC;AACD,UAAI,SAAS,CAAC,KAAK,GAAG;AAEtB,UAAI,OAAO,QAAQ,YAAY,QAAQ,MAAM;AAC3C,gBAAQ,QAAQ;AAAA,UACd,KAAK;AAAA,UACL,KAAK;AAAA,UACL,KAAK;AACH,oBAAQ,kCAAkCA,OAAM;AAChD;AAAA,UACF,KAAK;AACH,oBAAQ,QAAQA,OAAM;AACtB;AAAA,UACF;AACE,kBAAM,IAAI,MAAM,8BAA8B,MAAM,EAAE;AAAA,QAC1D;AAAA,MACF;AAEA,aAAO;AAAA,QACL;AAAA,QACA;AAAA,MACF;AAAA,IACF;AAAA,IACA,gBAAgB,CAACA,SAAgB,KAAiB,QAAoB;AACpE,UAAI,QAAQ,OAAO;AAAA,QACjBA;AAAA,QACA,YAAY;AAAA,MACd,CAAC;AACD,UAAI,SAAS,CAAC,KAAK,GAAG;AAEtB,UAAI,OAAO,QAAQ,YAAY,QAAQ,MAAM;AAC3C,gBAAQ,QAAQ;AAAA,UACd,KAAK;AAAA,UACL,KAAK;AAAA,UACL,KAAK;AACH,oBAAQ,iCAAiCA,OAAM;AAC/C;AAAA,UACF,KAAK;AACH,oBAAQ,OAAOA,OAAM;AACrB;AAAA,UACF;AACE,kBAAM,IAAI,MAAM,8BAA8B,MAAM,EAAE;AAAA,QAC1D;AAAA,MACF;AAEA,aAAO;AAAA,QACL;AAAA,QACA;AAAA,MACF;AAAA,IACF;AAAA,IACA,iBAAiB,CAACA,SAAgB,KAAiB,QAAoB;AACrE,UAAI,QAAQ;AAAA,QAAW;AAAA,QACrBA;AAAA,QACA,YAAY;AAAA,MACd,CAAC;AACD,UAAI,SAAS,CAAC,KAAK,GAAG;AAEtB,UAAI,OAAO,QAAQ,YAAY,QAAQ,MAAM;AAC3C,gBAAQ,QAAQ;AAAA,UACd,KAAK;AAAA,UACL,KAAK;AAAA,UACL,KAAK;AACH,oBAAQ;AAAA,kCAAqCA,OAAM;AACnD;AAAA,UACF,KAAK;AACH,oBAAQ;AAAA,QAAWA,OAAM;AACzB;AAAA,UACF;AACE,kBAAM,IAAI,MAAM,8BAA8B,MAAM,EAAE;AAAA,QAC1D;AAAA,MACF;AAEA,aAAO;AAAA,QACL;AAAA,QACA;AAAA,MACF;AAAA,IACF;AAAA,IACA,oBAAoB,CAACA,SAAgB,KAAiB,QAAoB;AACxE,UAAI,QAAQ,QAAQ;AAAA,QAClBA;AAAA,QACA,YAAY;AAAA,MACd,CAAC;AACD,UAAI,SAAS,CAAC,KAAK,GAAG;AAEtB,UAAI,OAAO,QAAQ,YAAY,QAAQ,MAAM;AAC3C,gBAAQ,QAAQ;AAAA,UACd,KAAK;AAAA,UACL,KAAK;AAAA,UACL,KAAK;AACH,oBAAQ,kCAAkCA,OAAM;AAChD;AAAA,UACF,KAAK;AACH,oBAAQ,QAAQA,OAAM;AACtB;AAAA,UACF;AACE,kBAAM,IAAI,MAAM,8BAA8B,MAAM,EAAE;AAAA,QAC1D;AAAA,MACF;AAEA,aAAO;AAAA,QACL;AAAA,QACA;AAAA,MACF;AAAA,IACF;AAAA,IACA,mBAAmB,CAACA,SAAgB,KAAiB,QAAoB;AACvE,UAAI,QAAQ,OAAO;AAAA,QACjBA;AAAA,QACA,YAAY;AAAA,MACd,CAAC;AACD,UAAI,SAAS,CAAC,KAAK,GAAG;AAEtB,UAAI,OAAO,QAAQ,YAAY,QAAQ,MAAM;AAC3C,gBAAQ,QAAQ;AAAA,UACd,KAAK;AAAA,UACL,KAAK;AAAA,UACL,KAAK;AACH,oBAAQ,iCAAiCA,OAAM;AAC/C;AAAA,UACF,KAAK;AACH,oBAAQ,OAAOA,OAAM;AACrB;AAAA,UACF;AACE,kBAAM,IAAI,MAAM,8BAA8B,MAAM,EAAE;AAAA,QAC1D;AAAA,MACF;AAEA,aAAO;AAAA,QACL;AAAA,QACA;AAAA,MACF;AAAA,IACF;AAAA,IACA,SAAS,CAACA,SAAgB,WAAyB;AACjD,UAAI,QAAQ;AAAA,QAAW;AAAA,QACrBA;AAAA,QACA,YAAY;AAAA,MACd,CAAC,QAAQ,OAAO,IAAI,CAAC,MAAM,aAAa,EAAE,KAAK,IAAI,CAAC;AACpD,UAAI,SAAS;AAEb,UAAI,OAAO,CAAC,KAAK,OAAO,OAAO,CAAC,MAAM,UAAU;AAC9C,gBAAQ,QAAQ;AAAA,UACd,KAAK;AAAA,UACL,KAAK;AAAA,UACL,KAAK;AACH,oBAAQ;AAAA,kCAAqCA,OAAM,eAAe,OAC/D,IAAI,CAAC,MAAM,aAAa,EACxB,KAAK,IAAI,CAAC;AACb;AAAA,UACF,KAAK;AACH,oBAAQ;AAAA,QAAW;AAAA,cACjBA;AAAA,cACA,YAAY;AAAA,YACd,CAAC,eAAe,OAAO,IAAI,CAAC,MAAM,aAAa,EAAE,KAAK,IAAI,CAAC;AAC3D;AAAA,UACF;AACE,kBAAM,IAAI,MAAM,8BAA8B,MAAM,EAAE;AAAA,QAC1D;AAAA,MACF;AAEA,aAAO;AAAA,QACL;AAAA,QACA;AAAA,MACF;AAAA,IACF;AAAA,IACA,YAAY,CAACA,SAAgB,WAAyB;AACpD,UAAI,QAAQ,QAAQ;AAAA,QAClBA;AAAA,QACA,YAAY;AAAA,MACd,CAAC,QAAQ,OAAO,IAAI,CAAC,MAAM,aAAa,EAAE,KAAK,IAAI,CAAC;AACpD,UAAI,SAAS;AAEb,UAAI,OAAO,CAAC,KAAK,OAAO,OAAO,CAAC,MAAM,UAAU;AAC9C,gBAAQ,QAAQ;AAAA,UACd,KAAK;AAAA,UACL,KAAK;AAAA,UACL,KAAK;AACH,oBAAQ,kCAAkCA,OAAM,eAAe,OAC5D,IAAI,CAAC,MAAM,aAAa,EACxB,KAAK,IAAI,CAAC;AACb;AAAA,UACF,KAAK;AACH,oBAAQ,QAAQ;AAAA,cACdA;AAAA,cACA,YAAY;AAAA,YACd,CAAC,eAAe,OAAO,IAAI,CAAC,MAAM,aAAa,EAAE,KAAK,IAAI,CAAC;AAC3D;AAAA,UACF;AACE,kBAAM,IAAI,MAAM,8BAA8B,MAAM,EAAE;AAAA,QAC1D;AAAA,MACF;AAEA,aAAO;AAAA,QACL;AAAA,QACA;AAAA,MACF;AAAA,IACF;AAAA,IACA,WAAW,CAACA,SAAgB,WAAyB;AACnD,UAAI,QAAQ,OAAO;AAAA,QACjBA;AAAA,QACA,YAAY;AAAA,MACd,CAAC,QAAQ,OAAO,IAAI,CAAC,MAAM,aAAa,EAAE,KAAK,IAAI,CAAC;AACpD,UAAI,SAAS;AAEb,UAAI,OAAO,CAAC,KAAK,OAAO,OAAO,CAAC,MAAM,UAAU;AAC9C,gBAAQ,QAAQ;AAAA,UACd,KAAK;AAAA,UACL,KAAK;AAAA,UACL,KAAK;AACH,oBAAQ,iCAAiCA,OAAM,eAAe,OAC3D,IAAI,CAAC,MAAM,aAAa,EACxB,KAAK,IAAI,CAAC;AACb;AAAA,UACF,KAAK;AACH,oBAAQ,OAAO;AAAA,cACbA;AAAA,cACA,YAAY;AAAA,YACd,CAAC,eAAe,OAAO,IAAI,CAAC,MAAM,aAAa,EAAE,KAAK,IAAI,CAAC;AAC3D;AAAA,UACF;AACE,kBAAM,IAAI,MAAM,8BAA8B,MAAM,EAAE;AAAA,QAC1D;AAAA,MACF;AAEA,aAAO;AAAA,QACL;AAAA,QACA;AAAA,MACF;AAAA,IACF;AAAA,IACA,YAAY,CAACA,SAAgB,WAAyB;AACpD,UAAI,QAAQ;AAAA,QAAW;AAAA,QACrBA;AAAA,QACA,YAAY;AAAA,MACd,CAAC,YAAY,OAAO,IAAI,CAAC,MAAM,aAAa,EAAE,KAAK,IAAI,CAAC;AACxD,UAAI,SAAS;AAEb,UAAI,OAAO,CAAC,KAAK,OAAO,OAAO,CAAC,MAAM,UAAU;AAC9C,gBAAQ,QAAQ;AAAA,UACd,KAAK;AAAA,UACL,KAAK;AAAA,UACL,KAAK;AACH,oBAAQ;AAAA,kCAAqCA,OAAM,mBAAmB,OACnE,IAAI,CAAC,MAAM,aAAa,EACxB,KAAK,IAAI,CAAC;AACb;AAAA,UACF,KAAK;AACH,oBAAQ;AAAA,QAAW;AAAA,cACjBA;AAAA,cACA,YAAY;AAAA,YACd,CAAC,mBAAmB,OAAO,IAAI,CAAC,MAAM,aAAa,EAAE,KAAK,IAAI,CAAC;AAC/D;AAAA,UACF;AACE,kBAAM,IAAI,MAAM,8BAA8B,MAAM,EAAE;AAAA,QAC1D;AAAA,MACF;AAEA,aAAO;AAAA,QACL;AAAA,QACA;AAAA,MACF;AAAA,IACF;AAAA,IACA,eAAe,CAACA,SAAgB,WAAyB;AACvD,UAAI,QAAQ,QAAQ;AAAA,QAClBA;AAAA,QACA,YAAY;AAAA,MACd,CAAC,YAAY,OAAO,IAAI,CAAC,MAAM,aAAa,EAAE,KAAK,IAAI,CAAC;AACxD,UAAI,SAAS;AAEb,UAAI,OAAO,CAAC,KAAK,OAAO,OAAO,CAAC,MAAM,UAAU;AAC9C,gBAAQ,QAAQ;AAAA,UACd,KAAK;AAAA,UACL,KAAK;AAAA,UACL,KAAK;AACH,oBAAQ,kCAAkCA,OAAM,mBAAmB,OAChE,IAAI,CAAC,MAAM,aAAa,EACxB,KAAK,IAAI,CAAC;AACb;AAAA,UACF,KAAK;AACH,oBAAQ,QAAQ;AAAA,cACdA;AAAA,cACA,YAAY;AAAA,YACd,CAAC,mBAAmB,OAAO,IAAI,CAAC,MAAM,aAAa,EAAE,KAAK,IAAI,CAAC;AAC/D;AAAA,UACF;AACE,kBAAM,IAAI,MAAM,8BAA8B,MAAM,EAAE;AAAA,QAC1D;AAAA,MACF;AAEA,aAAO;AAAA,QACL;AAAA,QACA;AAAA,MACF;AAAA,IACF;AAAA,IACA,cAAc,CAACA,SAAgB,WAAyB;AACtD,UAAI,QAAQ,OAAO;AAAA,QACjBA;AAAA,QACA,YAAY;AAAA,MACd,CAAC,YAAY,OAAO,IAAI,CAAC,MAAM,aAAa,EAAE,KAAK,IAAI,CAAC;AACxD,UAAI,SAAS;AAEb,UAAI,OAAO,CAAC,KAAK,OAAO,OAAO,CAAC,MAAM,UAAU;AAC9C,gBAAQ,QAAQ;AAAA,UACd,KAAK;AAAA,UACL,KAAK;AAAA,UACL,KAAK;AACH,oBAAQ,iCAAiCA,OAAM,mBAAmB,OAC/D,IAAI,CAAC,MAAM,aAAa,EACxB,KAAK,IAAI,CAAC;AACb;AAAA,UACF,KAAK;AACH,oBAAQ,OAAO;AAAA,cACbA;AAAA,cACA,YAAY;AAAA,YACd,CAAC,mBAAmB,OAAO,IAAI,CAAC,MAAM,aAAa,EAAE,KAAK,IAAI,CAAC;AAC/D;AAAA,UACF;AACE,kBAAM,IAAI,MAAM,8BAA8B,MAAM,EAAE;AAAA,QAC1D;AAAA,MACF;AAEA,aAAO;AAAA,QACL;AAAA,QACA;AAAA,MACF;AAAA,IACF;AAAA,IACA,WAAW,CAACA,aAAoB;AAAA,MAC9B,OAAO;AAAA,QAAW;AAAA,QAChBA;AAAA,QACA,YAAY;AAAA,MACd,CAAC;AAAA,MACD,QAAQ,CAAC;AAAA,IACX;AAAA,IACA,cAAc,CAACA,aAAoB;AAAA,MACjC,OAAO,QAAQ;AAAA,QACbA;AAAA,QACA,YAAY;AAAA,MACd,CAAC;AAAA,MACD,QAAQ,CAAC;AAAA,IACX;AAAA,IACA,aAAa,CAACA,aAAoB;AAAA,MAChC,OAAO,OAAO;AAAA,QACZA;AAAA,QACA,YAAY;AAAA,MACd,CAAC;AAAA,MACD,QAAQ,CAAC;AAAA,IACX;AAAA,IACA,cAAc,CAACA,aAAoB;AAAA,MACjC,OAAO;AAAA,QAAW;AAAA,QAChBA;AAAA,QACA,YAAY;AAAA,MACd,CAAC;AAAA,MACD,QAAQ,CAAC;AAAA,IACX;AAAA,IACA,iBAAiB,CAACA,aAAoB;AAAA,MACpC,OAAO,QAAQ;AAAA,QACbA;AAAA,QACA,YAAY;AAAA,MACd,CAAC;AAAA,MACD,QAAQ,CAAC;AAAA,IACX;AAAA,IACA,gBAAgB,CAACA,aAAoB;AAAA,MACnC,OAAO,OAAO;AAAA,QACZA;AAAA,QACA,YAAY;AAAA,MACd,CAAC;AAAA,MACD,QAAQ,CAAC;AAAA,IACX;AAAA,IACA,UAAU,CAAC,OAAe,YAAmB;AAAA,MAC3C,OAAO;AAAA,QAAW,KAAK;AAAA,MACvB;AAAA,IACF;AAAA,IACA,aAAa,CAAC,OAAe,YAAmB;AAAA,MAC9C,OAAO,QAAQ,KAAK;AAAA,MACpB;AAAA,IACF;AAAA,IACA,YAAY,CAAC,OAAe,YAAmB;AAAA,MAC7C,OAAO,OAAO,KAAK;AAAA,MACnB;AAAA,IACF;AAAA,IACA,YAAY,CAACA,SAAgB,UAAkB;AAC7C,cAAQ,QAAQ;AAAA,QACd,KAAK;AACH,iBAAO;AAAA,YACL,OAAO;AAAA,QAAW;AAAA,cAChBA;AAAA,cACA,YAAY;AAAA,YACd,CAAC;AAAA,YACD,QAAQ,CAAC,MAAM,MAAM;AAAA,UACvB;AAAA,QACF,KAAK;AAAA,QACL,KAAK;AACH,iBAAO;AAAA,YACL,OAAO;AAAA,QAAW;AAAA,cAChBA;AAAA,cACA,YAAY;AAAA,YACd,CAAC;AAAA,YACD,QAAQ,CAAC,MAAM,MAAM;AAAA,UACvB;AAAA,QACF,KAAK;AACH,gBAAM,IAAI,MAAM,+CAA+C;AAAA,QACjE;AACE,gBAAM,IAAI,MAAM,8BAA8B,MAAM,EAAE;AAAA,MAC1D;AAAA,IACF;AAAA,IACA,eAAe,CAACA,SAAgB,UAAkB;AAChD,cAAQ,QAAQ;AAAA,QACd,KAAK;AACH,iBAAO;AAAA,YACL,OAAO,QAAQ;AAAA,cACbA;AAAA,cACA,YAAY;AAAA,YACd,CAAC;AAAA,YACD,QAAQ,CAAC,MAAM,MAAM;AAAA,UACvB;AAAA,QACF,KAAK;AAAA,QACL,KAAK;AACH,iBAAO;AAAA,YACL,OAAO,QAAQ;AAAA,cACbA;AAAA,cACA,YAAY;AAAA,YACd,CAAC;AAAA,YACD,QAAQ,CAAC,MAAM,MAAM;AAAA,UACvB;AAAA,QACF,KAAK;AACH,gBAAM,IAAI,MAAM,+CAA+C;AAAA,QACjE;AACE,gBAAM,IAAI,MAAM,8BAA8B,MAAM,EAAE;AAAA,MAC1D;AAAA,IACF;AAAA,IACA,cAAc,CAACA,SAAgB,UAAkB;AAC/C,cAAQ,QAAQ;AAAA,QACd,KAAK;AACH,iBAAO;AAAA,YACL,OAAO,OAAO;AAAA,cACZA;AAAA,cACA,YAAY;AAAA,YACd,CAAC;AAAA,YACD,QAAQ,CAAC,MAAM,MAAM;AAAA,UACvB;AAAA,QACF,KAAK;AAAA,QACL,KAAK;AACH,iBAAO;AAAA,YACL,OAAO,OAAO;AAAA,cACZA;AAAA,cACA,YAAY;AAAA,YACd,CAAC;AAAA,YACD,QAAQ,CAAC,MAAM,MAAM;AAAA,UACvB;AAAA,QACF,KAAK;AACH,gBAAM,IAAI,MAAM,+CAA+C;AAAA,QACjE;AACE,gBAAM,IAAI,MAAM,8BAA8B,MAAM,EAAE;AAAA,MAC1D;AAAA,IACF;AAAA,EACF;AACF;AAEA,IAAO,gBAAQ;;;ADtrBR,IAAM,oBAAN,MAAyC;AAAA;AAAA;AAAA;AAAA,EAc9C,YACE,OACA,OACA,MACA,oBAAoB,OACpB,eACA;AAlBF,SAAU,aAAqB;AAC/B,SAAU,SAAuB,CAAC;AAMlC,SAAU,oBAAoB;AAY5B,SAAK,QAAQ;AACb,SAAK,gBAAgB;AACrB,SAAK,OAAO;AACZ,SAAK,QAAQ;AACb,SAAK,gBAAgB;AAAA,MACnB,KAAK,cAAc,UAAU;AAAA,MAC7B,KAAK;AAAA,IACP;AACA,SAAK,SAAS,CAAC;AACf,SAAK,oBAAoB;AAAA,EAC3B;AAAA;AAAA;AAAA;AAAA,EAKA,KACEE,QACA,IACM;AACN,QAAIA,WAAU,UAAaA,WAAU,MAAM;AACzC,aAAO;AAAA,IACT;AAEA,OAAGA,QAAO,IAAI;AACd,WAAO;AAAA,EACT;AAAA,EAYA,MACEC,SACA,iBACAD,QACM;AACN,QAAI,WAA+B;AACnC,QAAI;AAEJ,QAAI,OAAO,oBAAoB,YAAYA,QAAO;AAChD,iBAAW;AACX,oBAAcA;AAAA,IAChB,OAAO;AACL,oBAAc;AACd,iBAAW;AAAA,IACb;AAEA,QAAI,KAAK,cAAc,KAAK,mBAAmB;AAC7C,YAAM,EAAE,OAAAE,QAAO,QAAAC,QAAO,IAAI,KAAK,cAAc;AAAA,QAC3CF;AAAA,QACA;AAAA,QACA;AAAA,MACF;AACA,WAAK,cAAcC;AACnB,WAAK,OAAO,KAAK,GAAGC,OAAM;AAC1B,aAAO;AAAA,IACT;AAEA,UAAM,EAAE,OAAO,OAAO,IAAI,KAAK,cAAc;AAAA,MAC3CF;AAAA,MACA;AAAA,MACA;AAAA,IACF;AACA,SAAK,aAAa;AAClB,SAAK,OAAO,KAAK,GAAG,MAAM;AAC1B,WAAO;AAAA,EACT;AAAA,EAgBA,SACEA,SACA,iBACAD,QACM;AACN,QAAI,WAA+B;AACnC,QAAI;AAEJ,QAAI,OAAO,oBAAoB,YAAYA,QAAO;AAChD,iBAAW;AACX,oBAAcA;AAAA,IAChB,OAAO;AACL,oBAAc;AACd,iBAAW;AAAA,IACb;AAEA,QAAI,CAAC,KAAK,cAAc,CAAC,KAAK,mBAAmB;AAC/C,YAAM,EAAE,OAAAE,QAAO,QAAAC,QAAO,IAAI,KAAK,cAAc;AAAA,QAC3CF;AAAA,QACA;AAAA,QACA;AAAA,MACF;AACA,WAAK,aAAaC;AAClB,WAAK,OAAO,KAAK,GAAGC,OAAM;AAC1B,aAAO;AAAA,IACT;AAEA,UAAM,EAAE,OAAO,OAAO,IAAI,KAAK,cAAc;AAAA,MAC3CF;AAAA,MACA;AAAA,MACA;AAAA,IACF;AACA,SAAK,cAAc;AACnB,SAAK,OAAO,KAAK,GAAG,MAAM;AAC1B,WAAO;AAAA,EACT;AAAA,EAgBA,QACEA,SACA,iBACAD,QACM;AACN,QAAI,WAA+B;AACnC,QAAI;AAEJ,QAAI,OAAO,oBAAoB,YAAYA,QAAO;AAChD,iBAAW;AACX,oBAAcA;AAAA,IAChB,OAAO;AACL,oBAAc;AACd,iBAAW;AAAA,IACb;AAEA,QAAI,CAAC,KAAK,cAAc,CAAC,KAAK,mBAAmB;AAC/C,YAAM,EAAE,OAAAE,QAAO,QAAAC,QAAO,IAAI,KAAK,cAAc;AAAA,QAC3CF;AAAA,QACA;AAAA,QACA;AAAA,MACF;AACA,WAAK,aAAaC;AAClB,WAAK,OAAO,KAAK,GAAGC,OAAM;AAC1B,aAAO;AAAA,IACT;AAEA,UAAM,EAAE,OAAO,OAAO,IAAI,KAAK,cAAc;AAAA,MAC3CF;AAAA,MACA;AAAA,MACA;AAAA,IACF;AACA,SAAK,cAAc;AACnB,SAAK,OAAO,KAAK,GAAG,MAAM;AAC1B,WAAO;AAAA,EACT;AAAA,EAWA,aACEA,SACA,KACA,KACM;AACN,QAAI,CAAC,KAAK,cAAc,CAAC,KAAK,mBAAmB;AAC/C,YAAM,EAAE,OAAAC,QAAO,QAAAC,QAAO,IAAI,KAAK,cAAc;AAAA,QAC3CF;AAAA,QACA;AAAA,QACA;AAAA,MACF;AACA,WAAK,aAAaC;AAClB,WAAK,OAAO,KAAK,GAAGC,OAAM;AAC1B,aAAO;AAAA,IACT;AAEA,UAAM,EAAE,OAAO,OAAO,IAAI,KAAK,cAAc;AAAA,MAC3CF;AAAA,MACA;AAAA,MACA;AAAA,IACF;AACA,SAAK,cAAc;AACnB,SAAK,OAAO,KAAK,GAAG,MAAM;AAC1B,WAAO;AAAA,EACT;AAAA,EAWA,gBACEA,SACA,KACA,KACM;AACN,QAAI,CAAC,KAAK,cAAc,CAAC,KAAK,mBAAmB;AAC/C,YAAM,EAAE,OAAAC,QAAO,QAAAC,QAAO,IAAI,KAAK,cAAc;AAAA,QAC3CF;AAAA,QACA;AAAA,QACA;AAAA,MACF;AACA,WAAK,aAAaC;AAClB,WAAK,OAAO,KAAK,GAAGC,OAAM;AAC1B,aAAO;AAAA,IACT;AAEA,UAAM,EAAE,OAAO,OAAO,IAAI,KAAK,cAAc;AAAA,MAC3CF;AAAA,MACA;AAAA,MACA;AAAA,IACF;AACA,SAAK,cAAc;AACnB,SAAK,OAAO,KAAK,GAAG,MAAM;AAC1B,WAAO;AAAA,EACT;AAAA,EAWA,eACEA,SACA,KACA,KACM;AACN,QAAI,CAAC,KAAK,cAAc,CAAC,KAAK,mBAAmB;AAC/C,YAAM,EAAE,OAAAC,QAAO,QAAAC,QAAO,IAAI,KAAK,cAAc;AAAA,QAC3CF;AAAA,QACA;AAAA,QACA;AAAA,MACF;AACA,WAAK,aAAaC;AAClB,WAAK,OAAO,KAAK,GAAGC,OAAM;AAC1B,aAAO;AAAA,IACT;AAEA,UAAM,EAAE,OAAO,OAAO,IAAI,KAAK,cAAc;AAAA,MAC3CF;AAAA,MACA;AAAA,MACA;AAAA,IACF;AACA,SAAK,cAAc;AACnB,SAAK,OAAO,KAAK,GAAG,MAAM;AAC1B,WAAO;AAAA,EACT;AAAA,EAWA,gBACEA,SACA,KACA,KACM;AACN,QAAI,CAAC,KAAK,cAAc,CAAC,KAAK,mBAAmB;AAC/C,YAAM,EAAE,OAAAC,QAAO,QAAAC,QAAO,IAAI,KAAK,cAAc;AAAA,QAC3CF;AAAA,QACA;AAAA,QACA;AAAA,MACF;AACA,WAAK,aAAaC;AAClB,WAAK,OAAO,KAAK,GAAGC,OAAM;AAC1B,aAAO;AAAA,IACT;AAEA,UAAM,EAAE,OAAO,OAAO,IAAI,KAAK,cAAc;AAAA,MAC3CF;AAAA,MACA;AAAA,MACA;AAAA,IACF;AACA,SAAK,cAAc;AACnB,SAAK,OAAO,KAAK,GAAG,MAAM;AAC1B,WAAO;AAAA,EACT;AAAA,EAWA,kBACEA,SACA,KACA,KACM;AACN,QAAI,CAAC,KAAK,cAAc,CAAC,KAAK,mBAAmB;AAC/C,YAAM,EAAE,OAAAC,QAAO,QAAAC,QAAO,IAAI,KAAK,cAAc;AAAA,QAC3CF;AAAA,QACA;AAAA,QACA;AAAA,MACF;AACA,WAAK,aAAaC;AAClB,WAAK,OAAO,KAAK,GAAGC,OAAM;AAC1B,aAAO;AAAA,IACT;AAEA,UAAM,EAAE,OAAO,OAAO,IAAI,KAAK,cAAc;AAAA,MAC3CF;AAAA,MACA;AAAA,MACA;AAAA,IACF;AACA,SAAK,cAAc;AACnB,SAAK,OAAO,KAAK,GAAG,MAAM;AAC1B,WAAO;AAAA,EACT;AAAA,EAOA,QAAQA,SAAoC,QAA4B;AACtE,QAAI,CAAC,KAAK,cAAc,CAAC,KAAK,mBAAmB;AAC/C,YAAM,EAAE,OAAAC,QAAO,QAAAC,QAAO,IAAI,KAAK,cAAc;AAAA,QAC3CF;AAAA,QACA;AAAA,MACF;AACA,WAAK,aAAaC;AAClB,WAAK,OAAO,KAAK,GAAGC,OAAM;AAC1B,aAAO;AAAA,IACT;AAEA,UAAM,EAAE,OAAO,OAAO,IAAI,KAAK,cAAc;AAAA,MAC3CF;AAAA,MACA;AAAA,IACF;AACA,SAAK,cAAc;AACnB,SAAK,OAAO,KAAK,GAAG,MAAM;AAC1B,WAAO;AAAA,EACT;AAAA,EAOA,WAAWA,SAAoC,QAA4B;AACzE,QAAI,CAAC,KAAK,cAAc,CAAC,KAAK,mBAAmB;AAC/C,YAAM,EAAE,OAAAC,QAAO,QAAAC,QAAO,IAAI,KAAK,cAAc;AAAA,QAC3CF;AAAA,QACA;AAAA,MACF;AACA,WAAK,aAAaC;AAClB,WAAK,OAAO,KAAK,GAAGC,OAAM;AAC1B,aAAO;AAAA,IACT;AAEA,UAAM,EAAE,OAAO,OAAO,IAAI,KAAK,cAAc;AAAA,MAC3CF;AAAA,MACA;AAAA,IACF;AACA,SAAK,cAAc;AACnB,SAAK,OAAO,KAAK,GAAG,MAAM;AAC1B,WAAO;AAAA,EACT;AAAA,EAOA,UAAUA,SAAoC,QAA4B;AACxE,QAAI,CAAC,KAAK,cAAc,CAAC,KAAK,mBAAmB;AAC/C,YAAM,EAAE,OAAAC,QAAO,QAAAC,QAAO,IAAI,KAAK,cAAc;AAAA,QAC3CF;AAAA,QACA;AAAA,MACF;AACA,WAAK,aAAaC;AAClB,WAAK,OAAO,KAAK,GAAGC,OAAM;AAC1B,aAAO;AAAA,IACT;AAEA,UAAM,EAAE,OAAO,OAAO,IAAI,KAAK,cAAc;AAAA,MAC3CF;AAAA,MACA;AAAA,IACF;AACA,SAAK,cAAc;AACnB,SAAK,OAAO,KAAK,GAAG,MAAM;AAC1B,WAAO;AAAA,EACT;AAAA,EAOA,WAAWA,SAAoC,QAA4B;AACzE,QAAI,CAAC,KAAK,cAAc,CAAC,KAAK,mBAAmB;AAC/C,YAAM,EAAE,OAAAC,QAAO,QAAAC,QAAO,IAAI,KAAK,cAAc;AAAA,QAC3CF;AAAA,QACA;AAAA,MACF;AACA,WAAK,aAAaC;AAClB,WAAK,OAAO,KAAK,GAAGC,OAAM;AAC1B,aAAO;AAAA,IACT;AAEA,UAAM,EAAE,OAAO,OAAO,IAAI,KAAK,cAAc;AAAA,MAC3CF;AAAA,MACA;AAAA,IACF;AACA,SAAK,cAAc;AACnB,SAAK,OAAO,KAAK,GAAG,MAAM;AAC1B,WAAO;AAAA,EACT;AAAA,EAOA,aAAaA,SAAoC,QAA4B;AAC3E,QAAI,CAAC,KAAK,cAAc,CAAC,KAAK,mBAAmB;AAC/C,YAAM,EAAE,OAAAC,QAAO,QAAAC,QAAO,IAAI,KAAK,cAAc;AAAA,QAC3CF;AAAA,QACA;AAAA,MACF;AACA,WAAK,aAAaC;AAClB,WAAK,OAAO,KAAK,GAAGC,OAAM;AAC1B,aAAO;AAAA,IACT;AAEA,UAAM,EAAE,OAAO,OAAO,IAAI,KAAK,cAAc;AAAA,MAC3CF;AAAA,MACA;AAAA,IACF;AACA,SAAK,cAAc;AACnB,SAAK,OAAO,KAAK,GAAG,MAAM;AAC1B,WAAO;AAAA,EACT;AAAA,EAOA,UAAUA,SAA0C;AAClD,QAAI,CAAC,KAAK,cAAc,CAAC,KAAK,mBAAmB;AAC/C,YAAM,EAAE,OAAAC,QAAO,QAAAC,QAAO,IAAI,KAAK,cAAc,UAAUF,OAAgB;AACvE,WAAK,aAAaC;AAClB,WAAK,OAAO,KAAK,GAAGC,OAAM;AAC1B,aAAO;AAAA,IACT;AAEA,UAAM,EAAE,OAAO,OAAO,IAAI,KAAK,cAAc,aAAaF,OAAgB;AAC1E,SAAK,cAAc;AACnB,SAAK,OAAO,KAAK,GAAG,MAAM;AAC1B,WAAO;AAAA,EACT;AAAA,EAOA,aAAaA,SAA0C;AACrD,QAAI,CAAC,KAAK,cAAc,CAAC,KAAK,mBAAmB;AAC/C,YAAM,EAAE,OAAAC,QAAO,QAAAC,QAAO,IAAI,KAAK,cAAc,UAAUF,OAAgB;AACvE,WAAK,aAAaC;AAClB,WAAK,OAAO,KAAK,GAAGC,OAAM;AAC1B,aAAO;AAAA,IACT;AAEA,UAAM,EAAE,OAAO,OAAO,IAAI,KAAK,cAAc,aAAaF,OAAgB;AAC1E,SAAK,cAAc;AACnB,SAAK,OAAO,KAAK,GAAG,MAAM;AAC1B,WAAO;AAAA,EACT;AAAA,EAOA,YAAYA,SAA0C;AACpD,QAAI,CAAC,KAAK,cAAc,CAAC,KAAK,mBAAmB;AAC/C,YAAM,EAAE,OAAAC,QAAO,QAAAC,QAAO,IAAI,KAAK,cAAc,UAAUF,OAAgB;AACvE,WAAK,aAAaC;AAClB,WAAK,OAAO,KAAK,GAAGC,OAAM;AAC1B,aAAO;AAAA,IACT;AAEA,UAAM,EAAE,OAAO,OAAO,IAAI,KAAK,cAAc,YAAYF,OAAgB;AACzE,SAAK,cAAc;AACnB,SAAK,OAAO,KAAK,GAAG,MAAM;AAC1B,WAAO;AAAA,EACT;AAAA,EAOA,aAAaA,SAA0C;AACrD,QAAI,CAAC,KAAK,cAAc,CAAC,KAAK,mBAAmB;AAC/C,YAAM,EAAE,OAAAC,QAAO,QAAAC,QAAO,IAAI,KAAK,cAAc;AAAA,QAC3CF;AAAA,MACF;AACA,WAAK,aAAaC;AAClB,WAAK,OAAO,KAAK,GAAGC,OAAM;AAC1B,aAAO;AAAA,IACT;AAEA,UAAM,EAAE,OAAO,OAAO,IAAI,KAAK,cAAc;AAAA,MAC3CF;AAAA,IACF;AACA,SAAK,cAAc;AACnB,SAAK,OAAO,KAAK,GAAG,MAAM;AAC1B,WAAO;AAAA,EACT;AAAA,EAOA,gBAAgBA,SAA0C;AACxD,QAAI,CAAC,KAAK,cAAc,CAAC,KAAK,mBAAmB;AAC/C,YAAM,EAAE,OAAAC,QAAO,QAAAC,QAAO,IAAI,KAAK,cAAc;AAAA,QAC3CF;AAAA,MACF;AACA,WAAK,aAAaC;AAClB,WAAK,OAAO,KAAK,GAAGC,OAAM;AAC1B,aAAO;AAAA,IACT;AAEA,UAAM,EAAE,OAAO,OAAO,IAAI,KAAK,cAAc;AAAA,MAC3CF;AAAA,IACF;AACA,SAAK,cAAc;AACnB,SAAK,OAAO,KAAK,GAAG,MAAM;AAC1B,WAAO;AAAA,EACT;AAAA,EAOA,eAAeA,SAA0C;AACvD,QAAI,CAAC,KAAK,cAAc,CAAC,KAAK,mBAAmB;AAC/C,YAAM,EAAE,OAAAC,QAAO,QAAAC,QAAO,IAAI,KAAK,cAAc;AAAA,QAC3CF;AAAA,MACF;AACA,WAAK,aAAaC;AAClB,WAAK,OAAO,KAAK,GAAGC,OAAM;AAC1B,aAAO;AAAA,IACT;AAEA,UAAM,EAAE,OAAO,OAAO,IAAI,KAAK,cAAc;AAAA,MAC3CF;AAAA,IACF;AACA,SAAK,cAAc;AACnB,SAAK,OAAO,KAAK,GAAG,MAAM;AAC1B,WAAO;AAAA,EACT;AAAA,EAOA,YAAYA,SAAoC,QAAsB;AACpE,QAAI,CAAC,KAAK,cAAc,CAAC,KAAK,mBAAmB;AAC/C,YAAM,EAAE,OAAAC,QAAO,QAAAC,QAAO,IAAI,KAAK,cAAc;AAAA,QAC3CF;AAAA,QACA;AAAA,MACF;AACA,WAAK,aAAaC;AAClB,WAAK,OAAO,KAAK,GAAGC,OAAM;AAC1B,aAAO;AAAA,IACT;AAEA,UAAM,EAAE,OAAO,OAAO,IAAI,KAAK,cAAc;AAAA,MAC3CF;AAAA,MACA;AAAA,IACF;AACA,SAAK,cAAc;AACnB,SAAK,OAAO,KAAK,GAAG,MAAM;AAC1B,WAAO;AAAA,EACT;AAAA,EAOA,eAAeA,SAAoC,QAAsB;AACvE,QAAI,CAAC,KAAK,cAAc,CAAC,KAAK,mBAAmB;AAC/C,YAAM,EAAE,OAAAC,QAAO,QAAAC,QAAO,IAAI,KAAK,cAAc;AAAA,QAC3CF;AAAA,QACA;AAAA,MACF;AACA,WAAK,aAAaC;AAClB,WAAK,OAAO,KAAK,GAAGC,OAAM;AAC1B,aAAO;AAAA,IACT;AAEA,UAAM,EAAE,OAAO,OAAO,IAAI,KAAK,cAAc;AAAA,MAC3CF;AAAA,MACA;AAAA,IACF;AACA,SAAK,cAAc;AACnB,SAAK,OAAO,KAAK,GAAG,MAAM;AAC1B,WAAO;AAAA,EACT;AAAA,EAOA,cAAcA,SAAoC,QAAsB;AACtE,QAAI,CAAC,KAAK,cAAc,CAAC,KAAK,mBAAmB;AAC/C,YAAM,EAAE,OAAAC,QAAO,QAAAC,QAAO,IAAI,KAAK,cAAc;AAAA,QAC3CF;AAAA,QACA;AAAA,MACF;AACA,WAAK,aAAaC;AAClB,WAAK,OAAO,KAAK,GAAGC,OAAM;AAC1B,aAAO;AAAA,IACT;AAEA,UAAM,EAAE,OAAO,OAAO,IAAI,KAAK,cAAc;AAAA,MAC3CF;AAAA,MACA;AAAA,IACF;AACA,SAAK,cAAc;AACnB,SAAK,OAAO,KAAK,GAAG,MAAM;AAC1B,WAAO;AAAA,EACT;AAAA;AAAA;AAAA;AAAA,EAKA,SAAS,OAAe,cAAqB,CAAC,GAAG;AAC/C,QAAI,CAAC,KAAK,cAAc,CAAC,KAAK,mBAAmB;AAC/C,YAAM,EAAE,OAAOG,WAAU,QAAAD,QAAO,IAAI,KAAK,cAAc;AAAA,QACrD;AAAA,QACA;AAAA,MACF;AACA,WAAK,aAAaC;AAClB,WAAK,OAAO,KAAK,GAAGD,OAAM;AAC1B,aAAO;AAAA,IACT;AAEA,UAAM,EAAE,OAAO,UAAU,OAAO,IAAI,KAAK,cAAc;AAAA,MACrD;AAAA,MACA;AAAA,IACF;AACA,SAAK,cAAc;AACnB,SAAK,OAAO,KAAK,GAAG,MAAM;AAC1B,WAAO;AAAA,EACT;AAAA;AAAA;AAAA;AAAA,EAKA,YAAY,OAAe,cAAqB,CAAC,GAAG;AAClD,QAAI,CAAC,KAAK,cAAc,CAAC,KAAK,mBAAmB;AAC/C,YAAM,EAAE,OAAOC,WAAU,QAAAD,QAAO,IAAI,KAAK,cAAc;AAAA,QACrD;AAAA,QACA;AAAA,MACF;AACA,WAAK,aAAaC;AAClB,WAAK,OAAO,KAAK,GAAGD,OAAM;AAC1B,aAAO;AAAA,IACT;AAEA,UAAM,EAAE,OAAO,UAAU,OAAO,IAAI,KAAK,cAAc;AAAA,MACrD;AAAA,MACA;AAAA,IACF;AACA,SAAK,cAAc;AACnB,SAAK,OAAO,KAAK,GAAG,MAAM;AAC1B,WAAO;AAAA,EACT;AAAA;AAAA;AAAA;AAAA,EAKA,WAAW,OAAe,cAAqB,CAAC,GAAG;AACjD,QAAI,CAAC,KAAK,cAAc,CAAC,KAAK,mBAAmB;AAC/C,YAAM,EAAE,OAAOC,WAAU,QAAAD,QAAO,IAAI,KAAK,cAAc;AAAA,QACrD;AAAA,QACA;AAAA,MACF;AACA,WAAK,aAAaC;AAClB,WAAK,OAAO,KAAK,GAAGD,OAAM;AAC1B,aAAO;AAAA,IACT;AAEA,UAAM,EAAE,OAAO,UAAU,OAAO,IAAI,KAAK,cAAc;AAAA,MACrD;AAAA,MACA;AAAA,IACF;AACA,SAAK,cAAc;AACnB,SAAK,OAAO,KAAK,GAAG,MAAM;AAC1B,WAAO;AAAA,EACT;AACF;;;AF9sBO,IAAe,eAAf,cAEG,kBAAqB;AAAA;AAAA;AAAA;AAAA,EAgBnB,YACR,OACA,OACA,MACA,eACA;AACA,UAAM,OAAO,OAAO,MAAM,OAAO,aAAa;AAC9C,SAAK,gBAAgB;AACrB,SAAK,cAAc;AAAA,MACjB,KAAK,cAAc,UAAU;AAAA,MAC7B,KAAK;AAAA,IACP,EAAE;AACF,SAAK,iBAAiB;AAAA,MACpB,KAAK,cAAc,UAAU;AAAA,MAC7B,KAAK;AAAA,IACP;AACA,SAAK,YAAY;AACjB,SAAK,aAAa;AAClB,SAAK,uBAAuB,CAAC;AAC7B,SAAK,YAAY,CAAC;AAClB,SAAK,iBAAiB,CAAC;AACvB,SAAK,eAAe;AACpB,SAAK,eAAe;AACpB,SAAK,aAAa;AAClB,SAAK,cAAc;AACnB,SAAK,cAAc;AAAA,EACrB;AAAA;AAAA;AAAA;AAAA;AAAA,EAWA,MAAM,MAAM,SAAyC;AACnD,WAAO,KAAK,IAAI,OAAO;AAAA,EACzB;AAAA;AAAA;AAAA;AAAA;AAAA,EAaA,MAAM,YAAY,SAEH;AACb,WAAO,KAAK,UAAU,OAAO;AAAA,EAC/B;AAAA;AAAA;AAAA;AAAA,EAgMA,QAGE;AACA,UAAM,QACJ,KAAK,cACL,KAAK,YACL,KAAK,aACL,KAAK,eACL,KAAK,cACL,KAAK,eACL,KAAK,aACL,KAAK;AAEP,aAAS,kBACP,QACAE,QACA,aAAqB,GACb;AACR,cAAQ,QAAQ;AAAA,QACd,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AACH,iBAAOA,OAAM,QAAQ,gBAAgB,MAAM,GAAG;AAAA,QAChD,KAAK;AACH,cAAI,QAAQ;AACZ,iBAAOA,OAAM,QAAQ,gBAAgB,MAAM,IAAI,OAAO,EAAE;AAAA,QAC1D;AACE,gBAAM,IAAI;AAAA,YACR;AAAA,UACF;AAAA,MACJ;AAAA,IACF;AAEA,UAAM,cAAc;AAAA,MAClB,KAAK,cAAc,UAAU;AAAA,MAC7B;AAAA,IACF;AAEA,WAAO,EAAE,OAAO,aAAa,QAAQ,KAAK,OAAO;AAAA,EACnD;AAAA,EAEU,mBAA2B;AACnC,WACE,KAAK,eACL,KAAK,cACL,KAAK,eACL,KAAK,aACL,KAAK;AAAA,EAET;AAAA,EAEA,MAAgB,wBACd,OACA,KACA,aACA;AACA,UAAM,UAAU,gBAAgB,KAAK,KAAK;AAC1C,WAAO,QAAQ,GAAG,EAAE,QAAQ,CAAC,CAAC,KAAKC,MAAK,MAAM;AAC5C,YAAM,WAAW;AAAA,QACf;AAAA,QACA,YAAY;AAAA,MACd;AACA,UAAI,QAAQ,IAAI,CAACC,YAAWA,QAAO,UAAU,EAAE,SAAS,QAAQ,GAAG;AACjE,eAAO,OAAO,OAAO,EAAE,CAAC,QAAQ,GAAGD,OAAM,CAAC;AAC1C;AAAA,MACF;AAEA,YAAM,mBAAmB,GAAG,IAAIA;AAAA,IAClC,CAAC;AAED,QAAI,CAAC,KAAK,eAAe,QAAQ;AAC/B;AAAA,IACF;AAEA,UAAM,yBAAyB,KAAK,OAAO,OAAO,KAAK,cAAc;AAAA,EACvE;AACF;;;AI/YA;AAGA,IAAM,eAAe,CACnB,aACA,cACA,eACA,kBACG;AACH,QAAM,QAAQ,YAAY;AAC1B,QAAM,oBAAoB,cAAc,SAAS,GAAG,IAChD,cAAc,MAAM,GAAG,EAAE,IAAI,IAC7B;AACJ,QAAM,oBAAoB,cAAc,SAAS,GAAG,IAChD,cAAc,MAAM,GAAG,EAAE,IAAI,IAC7B;AAEJ,SAAO;AAAA,IACL,WAAW,MAAM;AACf,YAAM,yBAAyB;AAAA,QAC7B;AAAA,QACA,YAAY;AAAA,MACd;AACA,YAAM,yBAAyB;AAAA,QAC7B;AAAA,QACA,YAAY;AAAA,MACd;AAEA,aAAO;AAAA,aAAgB,YAAY,OAAO,YAAY,IAAI,sBAAsB,MAAM,KAAK,IAAI,sBAAsB;AAAA,IACvH;AAAA,IACA,UAAU,MAAM;AACd,YAAM,yBAAyB;AAAA,QAC7B;AAAA,QACA,YAAY;AAAA,MACd;AACA,YAAM,yBAAyB;AAAA,QAC7B;AAAA,QACA,YAAY;AAAA,MACd;AAEA,aAAO;AAAA,YAAe,YAAY,OAAO,YAAY,IAAI,sBAAsB,MAAM,KAAK,IAAI,sBAAsB;AAAA,IACtH;AAAA,EACF;AACF;AAEA,IAAO,eAAQ;;;ANhBR,IAAM,oBAAN,MAAM,2BAA2C,aAAgB;AAAA,EAOtE,YACE,MACA,OACA,OACA,iBACA,MACA,oBAAoB,OACpB,eACA;AACA,UAAM,OAAO,OAAO,MAAM,aAAa;AACvC,SAAK,OAAO;AACZ,SAAK,kBAAkB;AACvB,SAAK,iBAAiB,eAAe,cAAc,UAAU,GAAG,KAAK,KAAK;AAC1E,SAAK,iBAAiB,eAAe,OAAO,cAAc,UAAU,CAAC;AACrE,SAAK,oBAAoB;AACzB,SAAK,yBAAyB,IAAI;AAAA,MAChC,KAAK;AAAA,MACL,KAAK;AAAA,IACP;AAAA,EACF;AAAA,EAEA,MAAM,IAAI,UAAsB,CAAC,GAAsB;AAErD,QAAI,CAAC,QAAQ,aAAa,SAAS,aAAa,GAAG;AACjD,WAAK,MAAM,YAAY,IAAI;AAAA,IAC7B;AAEA,QAAI,QAAgB;AACpB,QAAI,KAAK,aAAa,CAAC,KAAK,aAAa;AACvC,WAAK,cAAc,KAAK,eAAe,cAAc,GAAG,KAAK,KAAK,IAAI;AAAA,IACxE;AACA,YAAQ,KAAK,cAAc,KAAK;AAEhC,QAAI,KAAK,YAAY;AACnB,eAAS,KAAK;AAAA,IAChB;AAEA,YAAQ,KAAK,cAAc,0BAA0B,KAAK;AAG1D,SAAK,MAAM,CAAC;AACZ,aAAS,KAAK,iBAAiB;AAE/B,YAAQ,MAAM,KAAK;AACnB,QAAI,OAAO,KAAK,MAAM,KAAK,MAAM;AACjC,UAAM,CAAC,IAAI,IAAI,MAAM,KAAK,gBAAgB,MAAa,OAAO,KAAK,MAAM;AAEzE,QAAI,CAAC,KAAK,QAAQ;AAChB,aAAO;AAAA,IACT;AAEA,UAAM,gBAAgB,qBAAwB;AAC9C,UAAM,KAAK,wBAAwB,eAAe,KAAK,CAAC,GAAG,KAAK,KAAK;AACrE,UAAM,iBACJ,MAAM,KAAK,uBAAuB;AAAA,MAChC,CAAC,aAAa;AAAA,MACd,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP;AAEF,UAAM,QAAS,MAAM;AAAA,MACnB,CAAC,aAAa;AAAA,MACd,KAAK;AAAA,MACL;AAAA,MACA,KAAK;AAAA,IACP;AAEA,WAAO,CAAC,QAAQ,aAAa,SAAS,YAAY,KAC5C,MAAM,KAAK,MAAM,WAAW,CAAC,KAAK,CAAC,GAAG,CAAC,IACzC;AAAA,EACN;AAAA,EAEA,MAAM,UAAU,SAA2D;AACzE,UAAM,QAAQ,MAAM,KAAK,IAAI;AAAA,MAC3B,aAAa,SAAS;AAAA,IACxB,CAAC;AAED,QAAI,CAAC,OAAO;AACV,UAAI,SAAS,aAAa;AACxB,cAAM,QAAQ;AAAA,MAChB;AAEA,YAAM,IAAI,MAAM,eAAe;AAAA,IACjC;AAEA,WAAO;AAAA,EACT;AAAA,EAEA,MAAM,KAAK,UAAuB,CAAC,GAAiB;AAElD,QAAI,CAAC,QAAQ,aAAa,SAAS,aAAa,GAAG;AACjD,WAAK,MAAM,YAAY,IAAI;AAAA,IAC7B;AAEA,QAAI,QAAgB;AACpB,QAAI,KAAK,aAAa,CAAC,KAAK,aAAa;AACvC,WAAK,cAAc,KAAK,eAAe,cAAc,GAAG,KAAK,KAAK,IAAI;AAAA,IACxE;AACA,YAAQ,KAAK,cAAc,KAAK;AAEhC,QAAI,KAAK,YAAY;AACnB,eAAS,KAAK;AAAA,IAChB;AAEA,aAAS,KAAK,iBAAiB;AAC/B,YAAQ,KAAK,cAAc,0BAA0B,KAAK;AAC1D,YAAQ,MAAM,KAAK;AAEnB,QAAI,OAAO,KAAK,MAAM,KAAK,MAAM;AACjC,UAAM,CAAC,IAAI,IAAI,MAAM,KAAK,gBAAgB,MAAa,OAAO,KAAK,MAAM;AAEzE,UAAM,gBAAgB,KAAK,IAAI,OAAO,QAAQ;AAC5C,YAAM,gBAAgB,qBAAwB;AAC9C,YAAM,KAAK,wBAAwB,eAAe,KAAK,KAAK,KAAK;AACjE,aAAO;AAAA,IACT,CAAC;AAED,UAAM,SAAS,MAAM,QAAQ,IAAI,aAAa;AAC9C,UAAM,iBACJ,MAAM,KAAK,uBAAuB;AAAA,MAChC;AAAA,MACA,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP;AAEF,UAAM,mBAAmB,MAAM;AAAA,MAC7B;AAAA,MACA,KAAK;AAAA,MACL;AAAA,MACA,KAAK;AAAA,IACP;AACA,QAAI,CAAC,kBAAkB;AACrB,aAAO,CAAC;AAAA,IACV;AAEA,QAAI,CAAC,QAAQ,aAAa,SAAS,YAAY,GAAG;AAChD,YAAM,KAAK,MAAM;AAAA,QACf,MAAM,QAAQ,gBAAgB,IAAI,mBAAmB,CAAC,gBAAgB;AAAA,MACxE;AAAA,IACF;AAEA,WACE,MAAM,QAAQ,gBAAgB,IAAI,mBAAmB,CAAC,gBAAgB;AAAA,EAE1E;AAAA,EAEA,MAAM,WAAW,SAAiD;AAChE,UAAM;AAAA,MACJ,QAAAE,UAAS;AAAA,MACT,OAAAC,UAAQ,oBAAI,KAAK,GAAE,YAAY,EAAE,MAAM,GAAG,EAAE,EAAE,QAAQ,KAAK,GAAG;AAAA,MAC9D,yBAAyB;AAAA,IAC3B,IAAI,WAAW,CAAC;AAChB,QAAI,CAAC,wBAAwB;AAC3B,WAAK,MAAM,aAAa,IAAI;AAAA,IAC9B;AAEA,QAAI,EAAE,OAAO,OAAO,IAAI,KAAK,eAAe;AAAA,MAC1C,CAACD,OAAgB;AAAA,MACjB,CAACC,MAAK;AAAA,MACN,KAAK;AAAA,MACL,KAAK;AAAA,IACP;AAEA,aAAS,CAAC,GAAG,QAAQ,GAAG,KAAK,MAAM;AAEnC,QAAI,OAAO,KAAK,MAAM,MAAM;AAC5B,UAAM,OAAY,MAAM,KAAK,gBAAgB,MAAM,OAAO,MAAM;AAChE,QAAI,CAAC,KAAK,CAAC,EAAE,cAAc;AACzB,aAAO;AAAA,IACT;AAEA,WAAO,KAAK,CAAC,EAAE;AAAA,EACjB;AAAA,EAEA,MAAM,OAAO,UAAyB,CAAC,GAAoB;AACzD,UAAM,EAAE,uBAAuB,IAAI,WAAW,CAAC;AAC/C,QAAI,CAAC,wBAAwB;AAC3B,WAAK,MAAM,aAAa,IAAI;AAAA,IAC9B;AAEA,SAAK,aAAa,KAAK,cAAc;AAAA,MACnC,KAAK;AAAA,IACP;AAEA,UAAM,QAAQ,KAAK,eAAe;AAAA,MAChC,KAAK;AAAA,MACL,KAAK;AAAA,IACP;AAEA,QAAI,OAAO,KAAK,MAAM,KAAK,MAAM;AACjC,UAAM,OAAY,MAAM,KAAK,gBAAgB,MAAM,OAAO,KAAK,MAAM;AAErE,QAAI,CAAC,KAAK,CAAC,EAAE,cAAc;AACzB,aAAO;AAAA,IACT;AAEA,WAAO,KAAK,CAAC,EAAE;AAAA,EACjB;AAAA,EAEA,MAAM,OAAO,MAAkB,SAA0C;AACvE,UAAM,EAAE,uBAAuB,IAAI,WAAW,CAAC;AAC/C,QAAI,CAAC,wBAAwB;AAC3B,WAAK,MAAM,aAAa,IAAI;AAAA,IAC9B;AAEA,UAAM,UAAU,OAAO,KAAK,IAAI;AAChC,UAAM,SAAS,OAAO,OAAO,IAAI;AACjC,SAAK,aAAa,KAAK,cAAc;AAAA,MACnC,KAAK;AAAA,IACP;AAEA,UAAM,EAAE,OAAO,OAAO,IAAI,KAAK,eAAe;AAAA,MAC5C;AAAA,MACA;AAAA,MACA,KAAK;AAAA,MACL,KAAK;AAAA,IACP;AACA,YAAQ,IAAI,OAAO,QAAQ,KAAK,MAAM;AAEtC,WAAO,KAAK,GAAG,KAAK,MAAM;AAE1B,QAAI,OAAO,KAAK,MAAM,MAAM;AAC5B,UAAM,OAAY,MAAM,KAAK,gBAAgB,MAAM,OAAO,MAAM;AAChE,QAAI,CAAC,KAAK,CAAC,EAAE,cAAc;AACzB,aAAO;AAAA,IACT;AAEA,WAAO,KAAK,CAAC,EAAE;AAAA,EACjB;AAAA,EAEA,aAAa,IAAwD;AACnE,UAAM,eAAe,IAAI;AAAA,MACvB,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL;AAAA,MACA,KAAK;AAAA,IACP;AACA,OAAG,YAA+C;AAElD,QAAI,iBAAiB,aAAa,WAAW,KAAK;AAClD,QAAI,eAAe,WAAW,KAAK,GAAG;AACpC,uBAAiB,eAAe,UAAU,CAAC;AAAA,IAC7C,WAAW,eAAe,WAAW,IAAI,GAAG;AAC1C,uBAAiB,eAAe,UAAU,CAAC;AAAA,IAC7C;AAEA,qBAAiB,MAAM,iBAAiB;AAExC,QAAI,CAAC,KAAK,YAAY;AACpB,WAAK,aAAa,KAAK,oBACnB,iBACA,SAAS,cAAc;AAAA,IAC7B,OAAO;AACL,WAAK,cAAc,QAAQ,cAAc;AAAA,IAC3C;AAEA,SAAK,OAAO,KAAK,GAAG,aAAa,MAAM;AACvC,WAAO;AAAA,EACT;AAAA,EAEA,eAAe,IAAwD;AACrE,UAAM,gBAAgB,IAAI;AAAA,MACxB,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL;AAAA,MACA,KAAK;AAAA,IACP;AACA,OAAG,aAAgD;AAEnD,QAAI,kBAAkB,cAAc,WAAW,KAAK;AACpD,QAAI,gBAAgB,WAAW,KAAK,GAAG;AACrC,wBAAkB,gBAAgB,UAAU,CAAC;AAAA,IAC/C,WAAW,gBAAgB,WAAW,IAAI,GAAG;AAC3C,wBAAkB,gBAAgB,UAAU,CAAC;AAAA,IAC/C;AAEA,sBAAkB,IAAI,eAAe;AAErC,QAAI,CAAC,KAAK,YAAY;AACpB,WAAK,aAAa,KAAK,oBACnB,kBACA,SAAS,eAAe;AAE5B,WAAK,OAAO,KAAK,GAAG,cAAc,MAAM;AACxC,aAAO;AAAA,IACT;AAEA,SAAK,cAAc,OAAO,eAAe;AACzC,SAAK,OAAO,KAAK,GAAG,cAAc,MAAM;AAExC,WAAO;AAAA,EACT;AAAA,EAEA,gBAAgB,IAAwD;AACtE,UAAM,gBAAgB,IAAI;AAAA,MACxB,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL;AAAA,MACA,KAAK;AAAA,IACP;AACA,OAAG,aAAgD;AAEnD,QAAI,kBAAkB,cAAc,WAAW,KAAK;AACpD,QAAI,gBAAgB,WAAW,KAAK,GAAG;AACrC,wBAAkB,gBAAgB,UAAU,CAAC;AAAA,IAC/C,WAAW,gBAAgB,WAAW,IAAI,GAAG;AAC3C,wBAAkB,gBAAgB,UAAU,CAAC;AAAA,IAC/C;AAEA,QAAI,CAAC,KAAK,YAAY;AACpB,WAAK,aAAa,KAAK,oBACnB,kBACA,SAAS,eAAe;AAE5B,WAAK,OAAO,KAAK,GAAG,cAAc,MAAM;AACxC,aAAO;AAAA,IACT;AAEA,SAAK,cAAc,QAAQ,eAAe;AAC1C,SAAK,OAAO,KAAK,GAAG,cAAc,MAAM;AAExC,WAAO;AAAA,EACT;AAAA,EAEA,MAAM,SACJ,UAAoC,EAAE,aAAa,MAAM,GACxC;AACjB,QAAI,QAAQ,aAAa;AACvB,YAAM,CAACC,OAAM,IAAS,MAAM,KAAK,gBAAgB;AAAA,QAC/C,iCAAiC,KAAK,KAAK;AAAA,MAC7C;AACA,aAAOA,QAAO,CAAC,EAAE;AAAA,IACnB;AAEA,SAAK,OAAO,mBAAmB;AAC/B,UAAM,SAAS,MAAM,KAAK,IAAI;AAC9B,WAAO,SAAS,CAAC,OAAO,mBAAmB,QAAQ;AAAA,EACrD;AAAA,EAIA,MAAM,OACJF,SACA,UAAoC,EAAE,aAAa,MAAM,GACxC;AACjB,QAAI,QAAQ,aAAa;AACvB,YAAM,CAACE,OAAM,IAAS,MAAM,KAAK,gBAAgB;AAAA,QAC/C,cAAcF,OAAgB,mBAAmB,KAAK,KAAK;AAAA,MAC7D;AACA,aAAOE,QAAO,CAAC,EAAE;AAAA,IACnB;AAEA,IAAAF,UAAS,YAAYA,SAAkB,KAAK,MAAM,sBAAsB;AACxE,SAAK,OAAO,OAAOA,OAAgB,YAAY;AAC/C,UAAM,SAAS,MAAM,KAAK,IAAI;AAC9B,WAAO,SAAS,CAAC,OAAO,mBAAmB,QAAQ;AAAA,EACrD;AAAA,EAEA,MAAM,SACJ,MACA,OACA,SAC2B;AAC3B,SAAK,aAAa,KAAK,eAAe,MAAM,KAAK;AACjD,SAAK,cAAc,KAAK,eAAe,QAAQ,OAAO,KAAK,KAAK;AAEhE,UAAM,sBAAsB,KAAK;AACjC,SAAK,OAAO,mBAAmB;AAC/B,UAAM,QAAQ,MAAM,KAAK,KAAK,OAAO;AAErC,SAAK,cAAc;AACnB,UAAM,SAAS,MAAM,KAAK,KAAK,OAAO;AAEtC,UAAM,qBAAqB;AAAA,MACzB;AAAA,MACA;AAAA,MACA,CAAC,MAAM,CAAC,EAAE,mBAAmB,OAAO;AAAA,IACtC;AACA,QAAI,OACD,MAAM,mCAAmC,QAAQ,KAAK,KAAK,KAAM,CAAC;AACrE,QAAI,MAAM,QAAQ,IAAI,GAAG;AACvB,aAAO,KAAK,OAAO,CAAC,UAAU,UAAU,IAAI;AAAA,IAC9C;AAEA,WAAO;AAAA,MACL;AAAA,MACA,MAAM,MAAM,QAAQ,IAAI,IAAI,OAAO,CAAC,IAAI;AAAA,IAC1C;AAAA,EACF;AAAA,EAKA,UACK,SACmB;AACtB,SAAK,uBAAuB,QAAQ;AAAA,MAAI,CAACA,YACvC,YAAYA,SAAkB,KAAK,MAAM,sBAAsB;AAAA,IACjE;AACA,SAAK,cAAc,KAAK,eAAe;AAAA,MACrC,GAAI;AAAA,IACN;AAEA,WAAO;AAAA,EACT;AAAA,EAEA,WAAiC;AAC/B,UAAM,WAAW,KAAK,eAAe;AACrC,SAAK,cAAc,KAAK,YAAY;AAAA,MAClC;AAAA,MACA,UAAU,QAAQ;AAAA,IACpB;AACA,WAAO;AAAA,EACT;AAAA,EAKA,cAAc,SAA+D;AAC3E,UAAM,IAAI,MAAM,2CAA2C;AAAA,EAC7D;AAAA,EAEA,QAAQ,OAAqB;AAC3B,SAAK,aAAa,IAAI,KAAK;AAC3B,WAAO;AAAA,EACT;AAAA,EAEA,KACE,eACA,eACA,eACsB;AACtB,UAAMG,QAAO;AAAA,MACX,KAAK;AAAA,MACL;AAAA,MACA;AAAA,MACA;AAAA,IACF;AACA,SAAK,aAAaA,MAAK,UAAU;AACjC,WAAO;AAAA,EACT;AAAA,EAEA,SACE,eACA,eACA,eACsB;AACtB,UAAMA,QAAO;AAAA,MACX,KAAK;AAAA,MACL;AAAA,MACA;AAAA,MACA;AAAA,IACF;AACA,SAAK,aAAaA,MAAK,SAAS;AAChC,WAAO;AAAA,EACT;AAAA,EAEA,KACE,UACA,cACA,0BAGA,aACsB;AACtB,QAAI,CAAC,0BAA0B;AAC7B,WAAK,UAAU,KAAK;AAAA,QAClB;AAAA,MACF,CAAC;AAED,aAAO;AAAA,IACT;AAEA,UAAM,eAAe,IAAI;AAAA,MACvB,KAAK;AAAA,MACL;AAAA,MACA,cAAc,SAAS;AAAA,MACvB,KAAK;AAAA,MACL,KAAK;AAAA,MACL;AAAA,MACA,KAAK;AAAA,IACP;AAEA,6BAAyB,YAAsC;AAC/D,QAAI,CAAC,aAAa,aAAa;AAC7B,oBAAc,YAAY,YAAY;AAAA,IACxC;AAEA,SAAK,UAAU,KAAK;AAAA,MAClB;AAAA,MACA,iBAAiB,aAAa;AAAA,MAC9B,YAAY,KAAK,cAAc;AAAA,QAC7B,aAAa;AAAA,MACf;AAAA,MACA,QAAQ,aAAa;AAAA,MACrB,WAAW,aAAa;AAAA,MACxB,cAAc,aAAa;AAAA,MAC3B,cAAc,aAAa;AAAA,MAC3B,YAAY,aAAa;AAAA,MACzB,aAAa,aAAa;AAAA,MAC1B,aAAa,aAAa;AAAA,MAC1B,gBAAgB,aAAa;AAAA,MAC7B,sBAAsB,aAAa,cAAc;AAAA,IACnD,CAAC;AAED,WAAO;AAAA,EACT;AAAA,EAEA,kBACE,gBACsB;AACtB,SAAK,iBAAiB;AACtB,WAAO;AAAA,EACT;AAAA,EAIA,WAAW,SAA+C;AACxD,SAAK,eAAe,KAAK,eAAe,QAAQ,GAAI,OAAoB;AACxE,WAAO;AAAA,EACT;AAAA,EAEA,WAAW,OAAqB;AAC9B,UAAM,QAAQ,YAAY,EAAE;AAC5B,SAAK,eAAe,aAAa,KAAK;AACtC,WAAO;AAAA,EACT;AAAA,EAIA,QAAQH,SAAoC,OAA6B;AACvE,UAAM,cAAc;AAAA,MAClBA;AAAA,MACA,KAAK,MAAM;AAAA,IACb;AAEA,QAAI,KAAK,cAAc;AACrB,WAAK,gBAAgB,KAAK,WAAqB,IAAI,KAAK;AACxD,aAAO;AAAA,IACT;AAEA,SAAK,eAAe,aAAa,WAAqB,IAAI,KAAK;AAC/D,WAAO;AAAA,EACT;AAAA,EAEA,WAAW,OAAqB;AAC9B,QAAI,KAAK,cAAc;AACrB,WAAK,gBAAgB,KAAK,KAAK;AAC/B,aAAO;AAAA,IACT;AAEA,SAAK,eAAe,aAAa,KAAK;AACtC,WAAO;AAAA,EACT;AAAA,EAEA,MAAM,OAAe;AACnB,SAAK,aAAa,KAAK,eAAe,MAAM,KAAK;AACjD,WAAO;AAAA,EACT;AAAA,EAEA,OAAO,QAAgB;AACrB,SAAK,cAAc,KAAK,eAAe,OAAO,MAAM;AACpD,WAAO;AAAA,EACT;AAAA,EAEA,UAAU,OAAqC;AAC7C,YAAQ,MAAM,QAAQ,UAAU,EAAE;AAClC,QAAI,KAAK,aAAa;AACpB,WAAK,eAAe,QAAQ,KAAK;AACjC,aAAO;AAAA,IACT;AAEA,SAAK,cAAc,WAAW,KAAK;AACnC,WAAO;AAAA,EACT;AAAA,EAEA,OAA6B;AAC3B,UAAM,eAAe,IAAI;AAAA,MACvB,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP;AAEA,iBAAa,cAAc,KAAK;AAChC,iBAAa,aAAa,KAAK;AAC/B,iBAAa,YAAY,KAAK;AAC9B,iBAAa,eAAe,KAAK;AACjC,iBAAa,eAAe,KAAK;AACjC,iBAAa,aAAa,KAAK;AAC/B,iBAAa,cAAc,KAAK;AAChC,iBAAa,SAAS,CAAC,GAAG,KAAK,MAAM;AACrC,iBAAa,YAAY,CAAC,GAAG,KAAK,SAAS;AAC3C,WAAO;AAAA,EACT;AACF;;;ApBxnBO,IAAM,oBAAN,cAAiD,aAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAYtE,YACE,MACA,OACA,iBACA,MACA,eACA;AACA,UAAM,OAAO,MAAM,aAAa;AAChC,SAAK,OAAO;AACZ,SAAK,kBAAkB;AACvB,SAAK,uBAAuB,IAAI;AAAA,MAC9B,KAAK;AAAA,MACL;AAAA,IACF;AAAA,EACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQA,MAAM,KAAK,OAA6D;AACtE,QAAI,CAAC,OAAO;AACV,aAAO,MAAM,KAAK,MAAM,EAAE,KAAK;AAAA,IACjC;AAEA,UAAM,QAAQ,KAAK,MAAM;AACzB,QAAI,MAAM,QAAQ;AAChB,YAAM,OAAO,GAAI,MAAM,MAAmB;AAAA,IAC5C;AAEA,QAAI,MAAM,WAAW;AACnB,YAAM,UAAU,QAAQ,CAAC,aAAa;AACpC,cAAM,KAAK,QAAQ;AAAA,MACrB,CAAC;AAAA,IACH;AAEA,QAAI,MAAM,OAAO;AACf,aAAO,QAAQ,MAAM,KAAK,EAAE,QAAQ,CAAC,CAAC,KAAKI,MAAK,MAAM;AACpD,cAAM,MAAM,KAAKA,MAAK;AAAA,MACxB,CAAC;AAAA,IACH;AAEA,QAAI,MAAM,SAAS;AACjB,aAAO,QAAQ,MAAM,OAAO,EAAE,QAAQ,CAAC,CAAC,KAAKA,MAAK,MAAM;AACtD,cAAM,QAAQ,KAAKA,MAAK;AAAA,MAC1B,CAAC;AAAA,IACH;AAEA,QAAI,MAAM,OAAO;AACf,YAAM,MAAM,MAAM,KAAK;AAAA,IACzB;AAEA,QAAI,MAAM,QAAQ;AAChB,YAAM,OAAO,MAAM,MAAM;AAAA,IAC3B;AAEA,QAAI,MAAM,SAAS;AACjB,YAAM,QAAQ,GAAI,MAAM,OAAoB;AAAA,IAC9C;AAEA,WAAO,MAAM,MAAM,KAAK,EAAE,aAAa,MAAM,eAAe,CAAC,EAAE,CAAC;AAAA,EAClE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQA,MAAM,QACJ,OACmB;AACnB,UAAM,UAAU,MAAM,KAAK,KAAK;AAAA,MAC9B,GAAG;AAAA,MACH,OAAO;AAAA,IACT,CAAC;AAED,QAAI,CAAC,QAAQ,QAAQ;AACnB,aAAO;AAAA,IACT;AAEA,WAAO,QAAQ,CAAC;AAAA,EAClB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQA,MAAM,oBACJA,QACmB;AACnB,QAAI,CAAC,KAAK,MAAM,YAAY;AAC1B,YAAM,IAAI;AAAA,QACR,WAAW,KAAK,MAAM,QAAQ;AAAA,MAChC;AAAA,IACF;AAEA,WAAO,MAAM,KAAK,MAAM,EACrB,MAAM,KAAK,MAAM,YAAsBA,MAAK,EAC5C,IAAI;AAAA,EACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASA,MAAM,OAAO,OAAsC;AACjD,SAAK,MAAM,aAAa,KAAU;AAClC,UAAM,EAAE,OAAO,OAAO,IAAI,KAAK,qBAAqB;AAAA,MAClD;AAAA,MACA,KAAK;AAAA,MACL,KAAK,cAAc,UAAU;AAAA,IAC/B;AAEA,QAAI,OAAO,KAAK,MAAM,MAAM;AAC5B,UAAM,CAAC,MAAM,IAAS,MAAM,KAAK,gBAAgB,MAAW,OAAO,MAAM;AAGzE,QAAI,KAAK,MAAM,cAAc,MAAM,KAAK,MAAM,UAAqB,GAAG;AACpE,YAAM,UAAU,MAAM,KAAK,MAAM,UAAqB;AAGtD,aAAO,MAAM,KAAK,oBAAoB,OAAO;AAAA,IAC/C;AAEA,WAAO,MAAM,KAAK,oBAAoB,OAAO,UAAU,CAAC;AAAA,EAC1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASA,MAAM,WAAW,QAAoC;AACnD,WAAO,QAAQ,CAAC,UAAU;AACxB,WAAK,MAAM,aAAa,KAAU;AAAA,IACpC,CAAC;AAED,UAAM,EAAE,OAAO,OAAO,IAAI,KAAK,qBAAqB;AAAA,MAClD;AAAA,MACA,KAAK;AAAA,MACL,KAAK,cAAc,UAAU;AAAA,IAC/B;AAEA,QAAI,OAAO,KAAK,MAAM,MAAM;AAC5B,UAAM,CAAC,IAAI,IAAS,MAAM,KAAK,gBAAgB,MAAM,OAAO,MAAM;AAElE,QAAI,CAAC,KAAK,cAAc;AACtB,aAAO,CAAC;AAAA,IACV;AAGA,QAAI,KAAK,MAAM,cAAc,OAAO,CAAC,EAAE,KAAK,MAAM,UAAqB,GAAG;AACxE,YAAMC,kBAAiB,OAAO;AAAA,QAC5B,CAAC,UAAU,MAAM,KAAK,MAAM,UAAqB;AAAA,MACnD;AAEA,YAAM,iBAAiBA,gBAAe,IAAI,CAAC,QAAQ,IAAI,GAAG,GAAG,EAAE,KAAK,GAAG;AAEvE,aAAO,MAAM,KAAK,MAAM,EACrB,QAAQ,KAAK,MAAM,YAAsBA,eAAc,EACvD,WAAW,SAAS,KAAK,MAAM,UAAU,KAAK,cAAc,GAAG,EAC/D,KAAK;AAAA,IACV;AAEA,UAAM,iBAAiB,MAAM;AAAA,MAC3B,EAAE,QAAQ,KAAK,aAAa;AAAA,MAC5B,CAAC,GAAG,MAAM,IAAI,KAAK;AAAA,IACrB;AAEA,WAAO,MAAM,KAAK,MAAM,EACrB,QAAQ,KAAK,MAAM,YAAsB,cAAc,EACvD,KAAK;AAAA,EACV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQA,MAAM,aAAa,OAA6B;AAC9C,QAAI,CAAC,KAAK,MAAM,YAAY;AAC1B,YAAM,IAAI;AAAA,QACR,WACE,KAAK,MAAM,QACX;AAAA,MACJ;AAAA,IACF;AAEA,UAAM,cAAc,KAAK,qBAAqB;AAAA,MAC5C;AAAA,MACA,KAAK;AAAA,MACL,KAAK,cAAc,UAAU;AAAA,IAC/B;AACA,QAAI,YAAY,OAAO,KAAK,MAAM,YAAY,MAAM;AACpD,UAAM,KAAK,gBAAgB,MAAM,YAAY,OAAO,YAAY,MAAM;AACtE,QAAI,CAAC,KAAK,MAAM,YAAY;AAC1B,UAAI,0DAA0D,KAAK,IAAI;AACvE,aAAO;AAAA,IACT;AAEA,WAAO,MAAM,KAAK;AAAA,MAChB,MAAM,KAAK,MAAM,UAAqB;AAAA,IACxC;AAAA,EACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASA,MAAM,aAAa,OAA6B;AAC9C,QAAI,CAAC,KAAK,MAAM,YAAY;AAC1B,YAAM,IAAI;AAAA,QACR,WAAW,KAAK,MAAM,QAAQ;AAAA,MAChC;AAAA,IACF;AACA,UAAM,EAAE,OAAO,OAAO,IAAI,KAAK,qBAAqB;AAAA,MAClD,KAAK,MAAM;AAAA,MACX,KAAK,MAAM;AAAA,MACX,MAAM,KAAK,MAAM,UAAqB;AAAA,IACxC;AAEA,QAAI,OAAO,KAAK,MAAM,MAAM;AAC5B,UAAM,CAAC,IAAI,IAAS,MAAM,KAAK,gBAAgB,MAAW,OAAO,MAAM;AACvE,QAAI,KAAK,cAAc,UAAU,MAAM,WAAW;AAChD,aAAQ,MAAM;AAAA,QACZ,CAAC,KAAK,CAAC,CAAM;AAAA,QACb,KAAK;AAAA,MACP;AAAA,IACF;AAEA,WAAO;AAAA,EACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,QAA8B;AAC5B,WAAO,IAAI;AAAA,MACT,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK,MAAM;AAAA,MACX,KAAK;AAAA,MACL,KAAK;AAAA,MACL;AAAA,MACA,KAAK;AAAA,IACP;AAAA,EACF;AACF;;;A2BlSA;;;ACAA;AAiBA,OAAO;AAaA,IAAM,uBAAN,MAAM,8BAA8C,aAAgB;AAAA,EAMzE,YACE,OACA,OACA,UACA,MACA,oBAAoB,OACpB,eACA;AACA,UAAM,OAAO,OAAO,MAAM,aAAa;AACvC,SAAK,WAAW;AAChB,SAAK,oBAAoB;AACzB,SAAK,iBAAiB,eAAe,cAAc,UAAU,GAAG,KAAK,KAAK;AAC1E,SAAK,iBAAiB,eAAe,OAAO,cAAc,UAAU,CAAC;AACrE,SAAK,4BAA4B,IAAI;AAAA,MACnC;AAAA,MACA,KAAK;AAAA,IACP;AAAA,EACF;AAAA,EAKA,UACK,SACsB;AACzB,SAAK,cAAc,KAAK,eAAe;AAAA,MACrC,GAAI;AAAA,IACN;AACA,SAAK,uBAAuB,QAAQ;AAAA,MAAI,CAACC,YACvC,YAAYA,SAAkB,KAAK,MAAM,sBAAsB;AAAA,IACjE;AACA,WAAO;AAAA,EACT;AAAA,EAEA,WAAoC;AAClC,UAAM,WAAW,KAAK,eAAe;AACrC,SAAK,cAAc,KAAK,YAAY;AAAA,MAClC;AAAA,MACA,UAAU,QAAQ;AAAA,IACpB;AACA,WAAO;AAAA,EACT;AAAA,EAIA,cACK,SACsB;AACzB,UAAM,aAAa,KAAK,eAAe,WAAW,GAAI,OAAoB;AAE1E,SAAK,cAAc,KAAK,YAAY;AAAA,MAClC;AAAA,MACA,UAAU,UAAU;AAAA,IACtB;AACA,WAAO;AAAA,EACT;AAAA,EAEA,MAAM,IAAI,UAAsB,CAAC,GAAsB;AAErD,QAAI,CAAC,QAAQ,aAAa,SAAS,aAAa,GAAG;AACjD,WAAK,MAAM,YAAY,IAAI;AAAA,IAC7B;AAEA,SAAK,aAAa,KAAK,eAAe,MAAM,CAAC;AAC7C,QAAI,QAAgB;AACpB,QAAI,KAAK,aAAa,CAAC,KAAK,aAAa;AACvC,WAAK,cAAc,KAAK,eAAe,cAAc,GAAG,KAAK,KAAK,IAAI;AAAA,IACxE;AACA,YAAQ,KAAK,cAAc,KAAK;AAEhC,QAAI,KAAK,YAAY;AACnB,eAAS,KAAK;AAAA,IAChB;AAEA,YAAQ,KAAK,cAAc,0BAA0B,KAAK;AAG1D,SAAK,MAAM,CAAC;AACZ,aAAS,KAAK,iBAAiB;AAE/B,YAAQ,MAAM,KAAK;AACnB,QAAI,OAAO,KAAK,MAAM,KAAK,MAAM;AACjC,UAAM,SAAS,MAAM,KAAK,SAAS,MAAM,OAAO,KAAK,MAAM;AAC3D,QAAI,CAAC,OAAO,KAAK,CAAC,GAAG;AACnB,aAAO;AAAA,IACT;AAEA,UAAM,gBAAgB,qBAAwB;AAC9C,UAAM,KAAK;AAAA,MACT;AAAA,MACA,OAAO,KAAK,CAAC;AAAA,MACb,KAAK;AAAA,IACP;AAEA,UAAM,iBACJ,MAAM,KAAK,0BAA0B;AAAA,MACnC,CAAC,aAAa;AAAA,MACd,KAAK;AAAA,MACL,KAAK;AAAA,MACL;AAAA,MACA,KAAK;AAAA,IACP;AAEF,UAAM,QAAS,MAAM;AAAA,MACnB,CAAC,aAAa;AAAA,MACd,KAAK;AAAA,MACL;AAAA,MACA,KAAK;AAAA,IACP;AAEA,WAAO,CAAC,QAAQ,aAAa,SAAS,YAAY,KAC5C,MAAM,KAAK,MAAM,WAAW,CAAC,KAAK,CAAC,GAAG,CAAC,IACzC;AAAA,EACN;AAAA,EAEA,MAAM,UAAU,SAA2D;AACzE,UAAM,QAAQ,MAAM,KAAK,IAAI;AAAA,MAC3B,aAAa,SAAS;AAAA,IACxB,CAAC;AAED,QAAI,CAAC,OAAO;AACV,UAAI,SAAS,aAAa;AACxB,cAAM,QAAQ;AAAA,MAChB;AAEA,YAAM,IAAI,MAAM,eAAe;AAAA,IACjC;AAEA,WAAO;AAAA,EACT;AAAA,EAEA,MAAM,KAAK,UAAuB,CAAC,GAAiB;AAElD,QAAI,CAAC,QAAQ,aAAa,SAAS,aAAa,GAAG;AACjD,WAAK,MAAM,YAAY,IAAI;AAAA,IAC7B;AAEA,QAAI,QAAgB;AACpB,QAAI,KAAK,aAAa,CAAC,KAAK,aAAa;AACvC,WAAK,cAAc,KAAK,eAAe,cAAc,GAAG,KAAK,KAAK,IAAI;AAAA,IACxE;AACA,YAAQ,KAAK,cAAc,KAAK;AAEhC,QAAI,KAAK,YAAY;AACnB,eAAS,KAAK;AAAA,IAChB;AAEA,aAAS,KAAK,iBAAiB;AAC/B,YAAQ,KAAK,cAAc,0BAA0B,KAAK;AAC1D,YAAQ,MAAM,KAAK;AAEnB,QAAI,OAAO,KAAK,MAAM,KAAK,MAAM;AACjC,UAAM,SAAS,MAAM,KAAK,SAAS,MAAM,OAAO,KAAK,MAAM;AAC3D,UAAM,OAAO,OAAO;AAEpB,UAAM,gBAAgB,KAAK,IAAI,OAAO,QAAQ;AAC5C,YAAM,gBAAgB,qBAAwB;AAC9C,YAAM,KAAK,wBAAwB,eAAe,KAAK,KAAK,KAAK;AAEjE,aAAO;AAAA,IACT,CAAC;AAED,UAAM,SAAS,MAAM,QAAQ,IAAI,aAAa;AAC9C,UAAM,iBACJ,MAAM,KAAK,0BAA0B;AAAA,MACnC;AAAA,MACA,KAAK;AAAA,MACL,KAAK;AAAA,MACL;AAAA,MACA,KAAK;AAAA,IACP;AAEF,UAAM,mBAAmB,MAAM;AAAA,MAC7B;AAAA,MACA,KAAK;AAAA,MACL;AAAA,MACA,KAAK;AAAA,IACP;AACA,QAAI,CAAC,kBAAkB;AACrB,aAAO,CAAC;AAAA,IACV;AAEA,QAAI,CAAC,QAAQ,aAAa,SAAS,YAAY,GAAG;AAChD,YAAM,KAAK,MAAM;AAAA,QACf,MAAM,QAAQ,gBAAgB,IAAI,mBAAmB,CAAC,gBAAgB;AAAA,MACxE;AAAA,IACF;AAEA,WACE,MAAM,QAAQ,gBAAgB,IAAI,mBAAmB,CAAC,gBAAgB;AAAA,EAE1E;AAAA,EAEA,MAAM,OAAO,MAAkB,SAA0C;AACvE,UAAM,EAAE,uBAAuB,IAAI,WAAW,CAAC;AAC/C,QAAI,CAAC,wBAAwB;AAC3B,WAAK,MAAM,aAAa,IAAI;AAAA,IAC9B;AAEA,UAAM,UAAU,OAAO,KAAK,IAAI;AAChC,UAAM,SAAS,OAAO,OAAO,IAAI;AACjC,SAAK,aAAa,KAAK,cAAc;AAAA,MACnC,KAAK;AAAA,MACL,OAAO,SAAS;AAAA,IAClB;AACA,UAAM,EAAE,OAAO,OAAO,IAAI,KAAK,eAAe;AAAA,MAC5C;AAAA,MACA;AAAA,MACA,KAAK;AAAA,MACL,KAAK;AAAA,IACP;AAEA,WAAO,KAAK,GAAG,KAAK,MAAM;AAE1B,QAAI,OAAO,KAAK,MAAM,MAAM;AAC5B,UAAM,SAAS,MAAM,KAAK,SAAS,MAAS,OAAO,MAAM;AACzD,QAAI,CAAC,OAAO,MAAM;AAChB,aAAO;AAAA,IACT;AAEA,WAAO,OAAO,YAAY;AAAA,EAC5B;AAAA,EAEA,MAAM,OAAO,UAAyB,CAAC,GAAoB;AACzD,UAAM,EAAE,uBAAuB,IAAI,WAAW,CAAC;AAC/C,QAAI,CAAC,wBAAwB;AAC3B,WAAK,MAAM,aAAa,IAAI;AAAA,IAC9B;AAEA,SAAK,aAAa,KAAK,cAAc;AAAA,MACnC,KAAK;AAAA,IACP;AACA,UAAM,QAAQ,KAAK,eAAe;AAAA,MAChC,KAAK;AAAA,MACL,KAAK;AAAA,IACP;AAEA,QAAI,OAAO,KAAK,MAAM,KAAK,MAAM;AACjC,UAAM,SAAS,MAAM,KAAK,SAAS,MAAS,OAAO,KAAK,MAAM;AAC9D,QAAI,CAAC,OAAO,MAAM;AAChB,aAAO;AAAA,IACT;AAEA,WAAO,OAAO,YAAY;AAAA,EAC5B;AAAA,EAEA,MAAM,WAAW,SAAiD;AAChE,UAAM;AAAA,MACJ,QAAAA,UAAS;AAAA,MACT,OAAAC,UAAQ,oBAAI,KAAK,GAAE,YAAY,EAAE,MAAM,GAAG,EAAE,EAAE,QAAQ,KAAK,GAAG;AAAA,MAC9D,yBAAyB;AAAA,IAC3B,IAAI,WAAW,CAAC;AAChB,QAAI,CAAC,wBAAwB;AAC3B,WAAK,MAAM,aAAa,IAAI;AAAA,IAC9B;AAEA,QAAI,EAAE,OAAO,OAAO,IAAI,KAAK,eAAe;AAAA,MAC1C,CAACD,OAAgB;AAAA,MACjB,CAACC,MAAK;AAAA,MACN,KAAK;AAAA,MACL,KAAK;AAAA,IACP;AAEA,aAAS,CAAC,GAAG,QAAQ,GAAG,KAAK,MAAM;AAEnC,QAAI,OAAO,KAAK,MAAM,MAAM;AAC5B,UAAM,SAAS,MAAM,KAAK,SAAS,MAAS,OAAO,MAAM;AACzD,QAAI,CAAC,OAAO,MAAM;AAChB,aAAO;AAAA,IACT;AAEA,WAAO,OAAO,YAAY;AAAA,EAC5B;AAAA,EAEA,aAAa,IAA2D;AACtE,UAAM,eAAe,IAAI;AAAA,MACvB,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL;AAAA,MACA,KAAK;AAAA,IACP;AACA,OAAG,YAAkD;AAErD,QAAI,iBAAiB,aAAa,WAAW,KAAK;AAClD,QAAI,eAAe,WAAW,KAAK,GAAG;AACpC,uBAAiB,eAAe,UAAU,CAAC;AAAA,IAC7C,WAAW,eAAe,WAAW,IAAI,GAAG;AAC1C,uBAAiB,eAAe,UAAU,CAAC;AAAA,IAC7C;AAEA,qBAAiB,MAAM,iBAAiB;AAExC,QAAI,CAAC,KAAK,YAAY;AACpB,WAAK,aAAa,KAAK,oBACnB,iBACA,SAAS,cAAc;AAAA,IAC7B,OAAO;AACL,WAAK,cAAc,QAAQ,cAAc;AAAA,IAC3C;AAEA,SAAK,OAAO,KAAK,GAAG,aAAa,MAAM;AACvC,WAAO;AAAA,EACT;AAAA,EAEA,eAAe,IAA2D;AACxE,UAAM,gBAAgB,IAAI;AAAA,MACxB,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL;AAAA,MACA,KAAK;AAAA,IACP;AACA,OAAG,aAAmD;AAEtD,QAAI,kBAAkB,cAAc,WAAW,KAAK;AACpD,QAAI,gBAAgB,WAAW,KAAK,GAAG;AACrC,wBAAkB,gBAAgB,UAAU,CAAC;AAAA,IAC/C,WAAW,gBAAgB,WAAW,IAAI,GAAG;AAC3C,wBAAkB,gBAAgB,UAAU,CAAC;AAAA,IAC/C;AAEA,sBAAkB,IAAI,eAAe;AAErC,QAAI,CAAC,KAAK,YAAY;AACpB,WAAK,aAAa,KAAK,oBACnB,kBACA,SAAS,eAAe;AAE5B,WAAK,OAAO,KAAK,GAAG,cAAc,MAAM;AACxC,aAAO;AAAA,IACT;AAEA,SAAK,cAAc,OAAO,eAAe;AACzC,SAAK,OAAO,KAAK,GAAG,cAAc,MAAM;AAExC,WAAO;AAAA,EACT;AAAA,EAEA,gBAAgB,IAA2D;AACzE,UAAM,gBAAgB,IAAI;AAAA,MACxB,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL;AAAA,MACA,KAAK;AAAA,IACP;AACA,OAAG,aAAmD;AAEtD,QAAI,kBAAkB,cAAc,WAAW,KAAK;AACpD,QAAI,gBAAgB,WAAW,KAAK,GAAG;AACrC,wBAAkB,gBAAgB,UAAU,CAAC;AAAA,IAC/C,WAAW,gBAAgB,WAAW,IAAI,GAAG;AAC3C,wBAAkB,gBAAgB,UAAU,CAAC;AAAA,IAC/C;AAEA,QAAI,CAAC,KAAK,YAAY;AACpB,WAAK,aAAa,KAAK,oBACnB,kBACA,SAAS,eAAe;AAE5B,WAAK,OAAO,KAAK,GAAG,cAAc,MAAM;AACxC,aAAO;AAAA,IACT;AAEA,SAAK,cAAc,QAAQ,eAAe;AAC1C,SAAK,OAAO,KAAK,GAAG,cAAc,MAAM;AAExC,WAAO;AAAA,EACT;AAAA,EAEA,MAAM,SACJ,UAAoC,EAAE,aAAa,MAAM,GACxC;AACjB,QAAI,QAAQ,aAAa;AACvB,YAAM,EAAE,KAAK,IAAI,MAAM,KAAK,SAAS;AAAA,QACnC,iCAAiC,KAAK,KAAK;AAAA,MAC7C;AACA,aAAO,CAAC,KAAK,CAAC,EAAE;AAAA,IAClB;AACA,SAAK,OAAO,mBAAmB;AAC/B,UAAM,SAAS,MAAM,KAAK,IAAI;AAC9B,WAAO,SAAS,CAAC,OAAO,mBAAmB,OAAO,IAAI;AAAA,EACxD;AAAA,EAIA,MAAM,OACJD,SACA,UAAoC,EAAE,aAAa,MAAM,GACxC;AACjB,QAAI,QAAQ,aAAa;AACvB,YAAM,EAAE,KAAK,IAAI,MAAM,KAAK,SAAS;AAAA,QACnC,cAAcA,OAAgB,mBAAmB,KAAK,KAAK;AAAA,MAC7D;AACA,aAAO,CAAC,KAAK,CAAC,EAAE,SAAS;AAAA,IAC3B;AAEA,IAAAA,UAAS,YAAYA,SAAkB,KAAK,MAAM,sBAAsB;AACxE,SAAK,OAAO,OAAOA,OAAgB,YAAY;AAC/C,UAAM,SAAS,MAAM,KAAK,IAAI;AAC9B,WAAO,SAAS,CAAC,OAAO,mBAAmB,OAAO,IAAI;AAAA,EACxD;AAAA,EAEA,MAAM,SACJ,MACA,OACA,SAC2B;AAC3B,SAAK,aAAa,KAAK,eAAe,MAAM,KAAK;AACjD,SAAK,cAAc,KAAK,eAAe,QAAQ,OAAO,KAAK,KAAK;AAEhE,UAAM,sBAAsB,KAAK;AACjC,SAAK,OAAO,mBAAmB;AAC/B,UAAM,QAAQ,MAAM,KAAK,KAAK,OAAO;AACrC,SAAK,cAAc;AAEnB,UAAM,SAAS,MAAM,KAAK,KAAK,OAAO;AACtC,UAAM,qBAAqB;AAAA,MACzB;AAAA,MACA;AAAA,MACA,CAAC,MAAM,CAAC,EAAE,mBAAmB,OAAO;AAAA,IACtC;AACA,QAAI,OACD,MAAM,mCAAmC,QAAQ,KAAK,KAAK,KAAM,CAAC;AACrE,QAAI,MAAM,QAAQ,IAAI,GAAG;AACvB,aAAO,KAAK,OAAO,CAAC,UAAU,UAAU,IAAI;AAAA,IAC9C;AACA,WAAO;AAAA,MACL;AAAA,MACA,MAAM,MAAM,QAAQ,IAAI,IAAI,OAAO,CAAC,IAAI;AAAA,IAC1C;AAAA,EACF;AAAA,EAEA,QAAQ,OAAqB;AAC3B,SAAK,aAAa,IAAI,KAAK;AAC3B,WAAO;AAAA,EACT;AAAA,EAEA,KACE,eACA,eACA,eACyB;AACzB,UAAME,QAAO;AAAA,MACX,KAAK;AAAA,MACL;AAAA,MACA;AAAA,MACA;AAAA,IACF;AACA,SAAK,aAAaA,MAAK,UAAU;AACjC,WAAO;AAAA,EACT;AAAA,EAEA,SACE,eACA,eACA,eACyB;AACzB,UAAMA,QAAO;AAAA,MACX,KAAK;AAAA,MACL;AAAA,MACA;AAAA,MACA;AAAA,IACF;AACA,SAAK,aAAaA,MAAK,SAAS;AAChC,WAAO;AAAA,EACT;AAAA,EACA,KACE,UACA,cACA,0BAGA,aACsB;AACtB,QAAI,CAAC,0BAA0B;AAC7B,WAAK,UAAU,KAAK;AAAA,QAClB;AAAA,MACF,CAAC;AAED,aAAO;AAAA,IACT;AAEA,UAAM,eAAe,IAAI;AAAA,MACvB;AAAA,MACA,cAAc,SAAS;AAAA,MACvB,KAAK;AAAA,MACL,KAAK;AAAA,MACL;AAAA,MACA,KAAK;AAAA,IACP;AAEA,6BAAyB,YAAsC;AAC/D,QAAI,CAAC,aAAa,aAAa;AAC7B,oBAAc,YAAY,YAAY;AAAA,IACxC;AAEA,SAAK,UAAU,KAAK;AAAA,MAClB;AAAA,MACA,iBAAiB,aAAa;AAAA,MAC9B,YAAY,KAAK,cAAc;AAAA,QAC7B,aAAa;AAAA,MACf;AAAA,MACA,QAAQ,aAAa;AAAA,MACrB,WAAW,aAAa;AAAA,MACxB,cAAc,aAAa;AAAA,MAC3B,cAAc,aAAa;AAAA,MAC3B,YAAY,aAAa;AAAA,MACzB,aAAa,aAAa;AAAA,MAC1B,aAAa,aAAa;AAAA,MAC1B,gBAAgB,aAAa;AAAA,MAC7B,sBAAsB,aAAa,cAAc;AAAA,IACnD,CAAC;AAED,WAAO;AAAA,EACT;AAAA,EAEA,kBACE,gBACsB;AACtB,SAAK,iBAAiB;AACtB,WAAO;AAAA,EACT;AAAA,EAIA,WAAW,SAA+C;AACxD,SAAK,eAAe,KAAK,eAAe,QAAQ,GAAI,OAAoB;AACxE,WAAO;AAAA,EACT;AAAA,EAEA,WAAW,OAAqB;AAC9B,UAAM,QAAQ,YAAY,EAAE;AAC5B,SAAK,eAAe,aAAa,KAAK;AACtC,WAAO;AAAA,EACT;AAAA,EAIA,QAAQF,SAAoC,OAA6B;AACvE,UAAM,cAAc;AAAA,MAClBA;AAAA,MACA,KAAK,MAAM;AAAA,IACb;AAEA,QAAI,KAAK,cAAc;AACrB,WAAK,gBAAgB,KAAK,WAAqB,IAAI,KAAK;AACxD,aAAO;AAAA,IACT;AAEA,SAAK,eAAe,aAAa,WAAqB,IAAI,KAAK;AAC/D,WAAO;AAAA,EACT;AAAA,EAEA,WAAW,OAAqB;AAC9B,QAAI,KAAK,cAAc;AACrB,WAAK,gBAAgB,KAAK,KAAK;AAC/B,aAAO;AAAA,IACT;AAEA,SAAK,eAAe,aAAa,KAAK;AACtC,WAAO;AAAA,EACT;AAAA,EAEA,MAAM,OAAe;AACnB,SAAK,aAAa,KAAK,eAAe,MAAM,KAAK;AACjD,WAAO;AAAA,EACT;AAAA,EAEA,OAAO,QAAgB;AACrB,SAAK,cAAc,KAAK,eAAe,OAAO,MAAM;AACpD,WAAO;AAAA,EACT;AAAA,EAEA,UAAU,OAAqC;AAC7C,YAAQ,MAAM,QAAQ,UAAU,EAAE;AAClC,QAAI,KAAK,aAAa;AACpB,WAAK,eAAe,QAAQ,KAAK;AACjC,aAAO;AAAA,IACT;AAEA,SAAK,cAAc,WAAW,KAAK;AACnC,WAAO;AAAA,EACT;AAAA,EAEA,OAA6B;AAC3B,UAAM,eAAe,IAAI;AAAA,MACvB,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP;AACA,iBAAa,cAAc,KAAK;AAChC,iBAAa,aAAa,KAAK;AAC/B,iBAAa,eAAe,KAAK;AACjC,iBAAa,eAAe,KAAK;AACjC,iBAAa,aAAa,KAAK;AAC/B,iBAAa,cAAc,KAAK;AAChC,iBAAa,SAAS,CAAC,GAAG,KAAK,MAAM;AACrC,WAAO;AAAA,EACT;AACF;;;ADpnBO,IAAM,uBAAN,cAAoD,aAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAWzE,YACE,OACA,cACA,MACA,eACA;AACA,UAAM,OAAO,MAAM,aAAa;AAChC,SAAK,eAAe;AACpB,SAAK,uBAAuB,IAAI;AAAA,MAC9B;AAAA,MACA;AAAA,IACF;AAAA,EACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQA,MAAM,KAAK,OAA6D;AACtE,QAAI,CAAC,OAAO;AACV,aAAO,MAAM,KAAK,MAAM,EAAE,KAAK;AAAA,IACjC;AAEA,UAAM,QAAQ,KAAK,MAAM;AACzB,QAAI,MAAM,QAAQ;AAChB,YAAM,OAAO,GAAI,MAAM,MAAmB;AAAA,IAC5C;AAEA,QAAI,MAAM,WAAW;AACnB,YAAM,UAAU,QAAQ,CAAC,aAAa;AACpC,cAAM,KAAK,QAAQ;AAAA,MACrB,CAAC;AAAA,IACH;AACA,QAAI,MAAM,OAAO;AACf,aAAO,QAAQ,MAAM,KAAK,EAAE,QAAQ,CAAC,CAAC,KAAKG,MAAK,MAAM;AACpD,cAAM,MAAM,KAAKA,MAAK;AAAA,MACxB,CAAC;AAAA,IACH;AAEA,QAAI,MAAM,SAAS;AACjB,aAAO,QAAQ,MAAM,OAAO,EAAE,QAAQ,CAAC,CAAC,KAAKA,MAAK,MAAM;AACtD,cAAM,QAAQ,KAAKA,MAAK;AAAA,MAC1B,CAAC;AAAA,IACH;AAEA,QAAI,MAAM,OAAO;AACf,YAAM,MAAM,MAAM,KAAK;AAAA,IACzB;AAEA,QAAI,MAAM,QAAQ;AAChB,YAAM,OAAO,MAAM,MAAM;AAAA,IAC3B;AAEA,QAAI,MAAM,SAAS;AACjB,YAAM,QAAQ,GAAI,MAAM,OAAoB;AAAA,IAC9C;AAEA,WAAO,MAAM,MAAM,KAAK,EAAE,aAAa,MAAM,eAAe,CAAC,EAAE,CAAC;AAAA,EAClE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQA,MAAM,QACJ,OACmB;AACnB,UAAM,UAAU,MAAM,KAAK,KAAK;AAAA,MAC9B,GAAG;AAAA,MACH,OAAO;AAAA,IACT,CAAC;AAED,QAAI,CAAC,QAAQ,QAAQ;AACnB,aAAO;AAAA,IACT;AAEA,WAAO,QAAQ,CAAC;AAAA,EAClB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQA,MAAM,oBACJA,QACmB;AACnB,QAAI,CAAC,KAAK,MAAM,YAAY;AAC1B,YAAM,IAAI;AAAA,QACR,WAAW,KAAK,MAAM,QAAQ;AAAA,MAChC;AAAA,IACF;AAEA,WAAO,MAAM,KAAK,MAAM,EACrB,MAAM,KAAK,MAAM,YAAsB,KAAKA,MAAK,EACjD,IAAI;AAAA,EACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASA,MAAM,OAAO,OAAsC;AACjD,SAAK,MAAM,aAAa,KAAU;AAClC,UAAM,EAAE,OAAO,OAAO,IAAI,KAAK,qBAAqB;AAAA,MAClD;AAAA,MACA,KAAK;AAAA,MACL,KAAK,cAAc,UAAU;AAAA,IAC/B;AACA,QAAI,OAAO,KAAK,MAAM,MAAM;AAC5B,UAAM,EAAE,KAAK,IAAI,MAAM,KAAK,aAAa,MAAM,OAAO,MAAM;AAC5D,UAAM,gBAAgB,KAAK,CAAC;AAC5B,QAAI,CAAC,eAAe;AAClB,YAAM,IAAI,MAAM,KAAK,CAAC,CAAC;AAAA,IACzB;AAEA,UAAM,SAAU,MAAM;AAAA,MACpB,CAAC,aAAa;AAAA,MACd,KAAK;AAAA,IACP;AAEA,SAAK,MAAM,WAAW,CAAC,MAAM,CAAC;AAC9B,WAAO;AAAA,EACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASA,MAAM,WAAW,QAAoC;AACnD,WAAO,QAAQ,CAAC,UAAU,KAAK,MAAM,aAAa,KAAU,CAAC;AAE7D,UAAM,EAAE,OAAO,OAAO,IAAI,KAAK,qBAAqB;AAAA,MAClD;AAAA,MACA,KAAK;AAAA,MACL,KAAK,cAAc,UAAU;AAAA,IAC/B;AAEA,QAAI,OAAO,KAAK,MAAM,MAAM;AAC5B,UAAM,EAAE,KAAK,IAAI,MAAM,KAAK,aAAa,MAAM,OAAO,MAAM;AAC5D,UAAM,gBAAgB;AACtB,QAAI,CAAC,cAAc,QAAQ;AACzB,aAAO,CAAC;AAAA,IACV;AAEA,UAAM,qBAAqB,cAAc;AAAA,MACvC,OAAO,UACJ,MAAM,mCAAmC,CAAC,KAAK,GAAG,KAAK,KAAK;AAAA,IACjE;AAEA,UAAM,UAAU,MAAM,QAAQ,IAAI,kBAAkB;AACpD,SAAK,MAAM,WAAW,OAAO;AAC7B,WAAO;AAAA,EACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQA,MAAM,aAAa,OAA6B;AAC9C,UAAM,EAAE,OAAO,WAAW,IAAI,KAAK;AACnC,QAAI,CAAC,YAAY;AACf,YAAM,IAAI;AAAA,QACR,WAAW,QAAQ;AAAA,MACrB;AAAA,IACF;AAEA,UAAM,EAAE,OAAO,OAAO,IAAI,KAAK,qBAAqB;AAAA,MAClD;AAAA,MACA,KAAK;AAAA,MACL,KAAK,cAAc,UAAU;AAAA,IAC/B;AACA,QAAI,OAAO,KAAK,MAAM,MAAM;AAC5B,UAAM,KAAK,aAAa,MAAM,OAAO,MAAM;AAC3C,QAAI,CAAC,YAAY;AACf,aAAO;AAAA,IACT;AAEA,WAAO,MAAM,KAAK;AAAA,MAChB,MAAM,UAAqB;AAAA,IAC7B;AAAA,EACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASA,MAAM,aAAa,OAA6B;AAC9C,QAAI,CAAC,KAAK,MAAM,YAAY;AAC1B,YAAM,IAAI;AAAA,QACR,WAAW,KAAK,MAAM,QAAQ;AAAA,MAChC;AAAA,IACF;AAEA,UAAM,EAAE,OAAO,OAAO,IAAI,KAAK,qBAAqB;AAAA,MAClD,KAAK,MAAM;AAAA,MACX,KAAK,MAAM;AAAA,MACX,MAAM,KAAK,MAAM,UAAqB;AAAA,IACxC;AAEA,QAAI,OAAO,KAAK,MAAM,MAAM;AAC5B,UAAM,KAAK,aAAa,MAAM,OAAO,MAAM;AAC3C,WAAO;AAAA,EACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,QAAiC;AAC/B,WAAO,IAAI;AAAA,MACT,KAAK;AAAA,MACL,KAAK,MAAM;AAAA,MACX,KAAK;AAAA,MACL,KAAK;AAAA,MACL;AAAA,MACA,KAAK;AAAA,IACP;AAAA,EACF;AACF;;;AEtQA;;;ACAA;AA6BO,IAAM,sBAAN,MAAM,6BAA6C,aAAgB;AAAA,EAMxE,YACE,OACA,OACA,kBACA,MACA,oBAAoB,OACpB,eACA;AACA,UAAM,OAAO,OAAO,MAAM,aAAa;AACvC,SAAK,mBAAmB;AACxB,SAAK,oBAAoB;AACzB,SAAK,iBAAiB,eAAe,cAAc,UAAU,GAAG,KAAK,KAAK;AAC1E,SAAK,iBAAiB,eAAe,OAAO,cAAc,UAAU,CAAC;AACrE,SAAK,0BAA0B,IAAI;AAAA,MACjC;AAAA,MACA,KAAK;AAAA,IACP;AAAA,EACF;AAAA,EAEA,MAAM,IAAI,UAAsB,CAAC,GAAsB;AAErD,QAAI,CAAC,QAAQ,aAAa,SAAS,aAAa,GAAG;AACjD,WAAK,MAAM,YAAY,IAAI;AAAA,IAC7B;AAEA,QAAI,QAAgB;AACpB,QAAI,KAAK,aAAa,CAAC,KAAK,aAAa;AACvC,WAAK,cAAc,KAAK,eAAe,cAAc,GAAG,KAAK,KAAK,IAAI;AAAA,IACxE;AACA,YAAQ,KAAK,cAAc,KAAK;AAEhC,QAAI,KAAK,YAAY;AACnB,eAAS,KAAK;AAAA,IAChB;AAEA,YAAQ,KAAK,cAAc,0BAA0B,KAAK;AAG1D,SAAK,MAAM,CAAC;AACZ,aAAS,KAAK,iBAAiB;AAE/B,YAAQ,MAAM,KAAK;AACnB,QAAI,OAAO,KAAK,MAAM,KAAK,MAAM;AACjC,UAAM,UAAU,MAAM,KAAK,eAAkB,OAAO,KAAK,MAAM;AAC/D,QAAI,CAAC,QAAQ,QAAQ;AACnB,aAAO;AAAA,IACT;AAEA,UAAM,SAAS,QAAQ,CAAC;AAExB,UAAM,gBAAgB,qBAAwB;AAC9C,UAAM,KAAK,wBAAwB,eAAe,QAAQ,KAAK,KAAK;AACpE,UAAM,iBACJ,MAAM,KAAK,wBAAwB;AAAA,MACjC,CAAC,aAAa;AAAA,MACd,KAAK;AAAA,MACL,KAAK;AAAA,MACL;AAAA,MACA,KAAK;AAAA,IACP;AAEF,UAAM,QAAS,MAAM;AAAA,MACnB,CAAC,aAAa;AAAA,MACd,KAAK;AAAA,MACL;AAAA,MACA,KAAK;AAAA,IACP;AAEA,WAAO,CAAC,QAAQ,aAAa,SAAS,YAAY,KAC5C,MAAM,KAAK,MAAM,WAAW,CAAC,KAAK,CAAC,GAAG,CAAC,IACzC;AAAA,EACN;AAAA,EAEA,MAAM,UAAU,SAA2D;AACzE,UAAM,QAAQ,MAAM,KAAK,IAAI;AAAA,MAC3B,aAAa,SAAS;AAAA,IACxB,CAAC;AAED,QAAI,CAAC,OAAO;AACV,UAAI,SAAS,aAAa;AACxB,cAAM,QAAQ;AAAA,MAChB;AAEA,YAAM,IAAI,MAAM,eAAe;AAAA,IACjC;AAEA,WAAO;AAAA,EACT;AAAA,EAEA,MAAM,KAAK,UAAuB,CAAC,GAAiB;AAElD,QAAI,CAAC,QAAQ,aAAa,SAAS,aAAa,GAAG;AACjD,WAAK,MAAM,YAAY,IAAI;AAAA,IAC7B;AAEA,QAAI,QAAgB;AACpB,QAAI,KAAK,aAAa,CAAC,KAAK,aAAa;AACvC,WAAK,cAAc,KAAK,eAAe,cAAc,GAAG,KAAK,KAAK,IAAI;AAAA,IACxE;AACA,YAAQ,KAAK,cAAc,KAAK;AAEhC,QAAI,KAAK,YAAY;AACnB,eAAS,KAAK;AAAA,IAChB;AAEA,aAAS,KAAK,iBAAiB;AAC/B,YAAQ,KAAK,cAAc,0BAA0B,KAAK;AAC1D,YAAQ,MAAM,KAAK;AAEnB,QAAI,OAAO,KAAK,MAAM,KAAK,MAAM;AACjC,UAAM,UAAU,MAAM,KAAK,eAAoB,OAAO,KAAK,MAAM;AACjE,UAAM,gBAAgB,QAAQ,IAAI,OAAO,WAAW;AAClD,YAAM,gBAAgB,qBAAwB;AAC9C,YAAM,KAAK,wBAAwB,eAAe,QAAQ,KAAK,KAAK;AAEpE,aAAO;AAAA,IACT,CAAC;AAED,UAAM,SAAS,MAAM,QAAQ,IAAI,aAAa;AAC9C,UAAM,iBACJ,MAAM,KAAK,wBAAwB;AAAA,MACjC;AAAA,MACA,KAAK;AAAA,MACL,KAAK;AAAA,MACL;AAAA,MACA,KAAK;AAAA,IACP;AAEF,UAAM,mBAAmB,MAAM;AAAA,MAC7B;AAAA,MACA,KAAK;AAAA,MACL;AAAA,MACA,KAAK;AAAA,IACP;AACA,QAAI,CAAC,kBAAkB;AACrB,aAAO,CAAC;AAAA,IACV;AAEA,QAAI,CAAC,QAAQ,aAAa,SAAS,YAAY,GAAG;AAChD,YAAM,KAAK,MAAM;AAAA,QACf,MAAM,QAAQ,gBAAgB,IAAI,mBAAmB,CAAC,gBAAgB;AAAA,MACxE;AAAA,IACF;AAEA,WACE,MAAM,QAAQ,gBAAgB,IAAI,mBAAmB,CAAC,gBAAgB;AAAA,EAE1E;AAAA,EAEA,MAAM,OAAO,MAAkB,SAA0C;AACvE,UAAM,EAAE,uBAAuB,IAAI,WAAW,CAAC;AAC/C,QAAI,CAAC,wBAAwB;AAC3B,WAAK,MAAM,aAAa,IAAI;AAAA,IAC9B;AAEA,UAAM,UAAU,OAAO,KAAK,IAAI;AAChC,UAAM,SAAS,OAAO,OAAO,IAAI;AACjC,SAAK,aAAa,KAAK,cAAc;AAAA,MACnC,KAAK;AAAA,MACL,OAAO,SAAS;AAAA,IAClB;AACA,UAAM,EAAE,OAAO,OAAO,IAAI,KAAK,eAAe;AAAA,MAC5C;AAAA,MACA;AAAA,MACA,KAAK;AAAA,MACL,KAAK;AAAA,IACP;AAEA,WAAO,KAAK,GAAG,KAAK,MAAM;AAE1B,QAAI,OAAO,KAAK,MAAM,MAAM;AAC5B,WAAO,MAAM,IAAI,QAAQ,CAAC,SAAS,WAAW;AAC5C,WAAK,iBAAiB,IAAI,OAAO,QAAQ,SAAqB,KAAK;AACjE,YAAI,KAAK;AACP,iBAAO,IAAI,MAAM,IAAI,OAAO,CAAC;AAAA,QAC/B,OAAO;AACL,kBAAQ,KAAK,OAAO;AAAA,QACtB;AAAA,MACF,CAAC;AAAA,IACH,CAAC;AAAA,EACH;AAAA,EAEA,MAAM,OAAO,UAAyB,CAAC,GAAoB;AACzD,UAAM,EAAE,uBAAuB,IAAI,WAAW,CAAC;AAC/C,QAAI,CAAC,wBAAwB;AAC3B,WAAK,MAAM,aAAa,IAAI;AAAA,IAC9B;AAEA,SAAK,aAAa,KAAK,cAAc;AAAA,MACnC,KAAK;AAAA,IACP;AACA,UAAM,QAAQ,KAAK,eAAe;AAAA,MAChC,KAAK;AAAA,MACL,KAAK;AAAA,IACP;AAEA,QAAI,OAAO,KAAK,MAAM,KAAK,MAAM;AACjC,WAAO,IAAI,QAAQ,CAAC,SAAS,WAAW;AACtC,WAAK,iBAAiB,IAAI,OAAO,KAAK,QAAQ,SAAqB,KAAK;AACtE,YAAI,KAAK;AACP,iBAAO,IAAI,MAAM,IAAI,OAAO,CAAC;AAAA,QAC/B,OAAO;AACL,kBAAQ,KAAK,OAAO;AAAA,QACtB;AAAA,MACF,CAAC;AAAA,IACH,CAAC;AAAA,EACH;AAAA,EAEA,MAAM,WAAW,SAAiD;AAChE,UAAM;AAAA,MACJ,QAAAC,UAAS;AAAA,MACT,OAAAC,UAAQ,oBAAI,KAAK,GAAE,YAAY,EAAE,MAAM,GAAG,EAAE,EAAE,QAAQ,KAAK,GAAG;AAAA;AAAA,MAC9D,yBAAyB;AAAA,IAC3B,IAAI,WAAW,CAAC;AAChB,QAAI,CAAC,wBAAwB;AAC3B,WAAK,MAAM,aAAa,IAAI;AAAA,IAC9B;AAEA,QAAI,EAAE,OAAO,OAAO,IAAI,KAAK,eAAe;AAAA,MAC1C,CAACD,OAAgB;AAAA,MACjB,CAACC,MAAK;AAAA,MACN,KAAK;AAAA,MACL,KAAK;AAAA,IACP;AAEA,aAAS,CAAC,GAAG,QAAQ,GAAG,KAAK,MAAM;AAEnC,QAAI,OAAO,KAAK,MAAM,MAAM;AAC5B,WAAO,IAAI,QAAQ,CAAC,SAAS,WAAW;AACtC,WAAK,iBAAiB,IAAI,OAAO,QAAQ,SAAqB,KAAK;AACjE,YAAI,KAAK;AACP,iBAAO,IAAI,MAAM,IAAI,OAAO,CAAC;AAAA,QAC/B,OAAO;AACL,kBAAQ,KAAK,OAAO;AAAA,QACtB;AAAA,MACF,CAAC;AAAA,IACH,CAAC;AAAA,EACH;AAAA,EAEA,aAAa,IAA0D;AACrE,UAAM,eAAe,IAAI;AAAA,MACvB,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL;AAAA,MACA,KAAK;AAAA,IACP;AACA,OAAG,YAAiD;AAEpD,QAAI,iBAAiB,aAAa,WAAW,KAAK;AAClD,QAAI,eAAe,WAAW,KAAK,GAAG;AACpC,uBAAiB,eAAe,UAAU,CAAC;AAAA,IAC7C,WAAW,eAAe,WAAW,IAAI,GAAG;AAC1C,uBAAiB,eAAe,UAAU,CAAC;AAAA,IAC7C;AAEA,qBAAiB,MAAM,iBAAiB;AAExC,QAAI,CAAC,KAAK,YAAY;AACpB,WAAK,aAAa,KAAK,oBACnB,iBACA,SAAS,cAAc;AAAA,IAC7B,OAAO;AACL,WAAK,cAAc,QAAQ,cAAc;AAAA,IAC3C;AAEA,SAAK,OAAO,KAAK,GAAG,aAAa,MAAM;AACvC,WAAO;AAAA,EACT;AAAA,EAEA,eAAe,IAA0D;AACvE,UAAM,gBAAgB,IAAI;AAAA,MACxB,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL;AAAA,MACA,KAAK;AAAA,IACP;AACA,OAAG,aAAkD;AAErD,QAAI,kBAAkB,cAAc,WAAW,KAAK;AACpD,QAAI,gBAAgB,WAAW,KAAK,GAAG;AACrC,wBAAkB,gBAAgB,UAAU,CAAC;AAAA,IAC/C,WAAW,gBAAgB,WAAW,IAAI,GAAG;AAC3C,wBAAkB,gBAAgB,UAAU,CAAC;AAAA,IAC/C;AAEA,sBAAkB,IAAI,eAAe;AAErC,QAAI,CAAC,KAAK,YAAY;AACpB,WAAK,aAAa,KAAK,oBACnB,kBACA,SAAS,eAAe;AAE5B,WAAK,OAAO,KAAK,GAAG,cAAc,MAAM;AACxC,aAAO;AAAA,IACT;AAEA,SAAK,cAAc,OAAO,eAAe;AACzC,SAAK,OAAO,KAAK,GAAG,cAAc,MAAM;AAExC,WAAO;AAAA,EACT;AAAA,EAEA,gBAAgB,IAA0D;AACxE,UAAM,gBAAgB,IAAI;AAAA,MACxB,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL;AAAA,MACA,KAAK;AAAA,IACP;AACA,OAAG,aAAkD;AAErD,QAAI,kBAAkB,cAAc,WAAW,KAAK;AACpD,QAAI,gBAAgB,WAAW,KAAK,GAAG;AACrC,wBAAkB,gBAAgB,UAAU,CAAC;AAAA,IAC/C,WAAW,gBAAgB,WAAW,IAAI,GAAG;AAC3C,wBAAkB,gBAAgB,UAAU,CAAC;AAAA,IAC/C;AAEA,QAAI,CAAC,KAAK,YAAY;AACpB,WAAK,aAAa,KAAK,oBACnB,kBACA,SAAS,eAAe;AAE5B,WAAK,OAAO,KAAK,GAAG,cAAc,MAAM;AACxC,aAAO;AAAA,IACT;AAEA,SAAK,cAAc,QAAQ,eAAe;AAC1C,SAAK,OAAO,KAAK,GAAG,cAAc,MAAM;AAExC,WAAO;AAAA,EACT;AAAA,EAEA,MAAM,IAAO,OAAe,SAAgB,CAAC,GAAG;AAC9C,WAAO,MAAM,KAAK,eAAkB,OAAO,MAAM;AAAA,EACnD;AAAA,EAEA,MAAM,SACJ,UAAoC,EAAE,aAAa,MAAM,GACxC;AACjB,QAAI,QAAQ,aAAa;AACvB,YAAMC,UAAU,MAAM,KAAK;AAAA,QACzB,mCAAmC,KAAK;AAAA,QACxC,CAAC;AAAA,MACH;AACA,aAAO,CAACA,QAAO,CAAC,EAAE;AAAA,IACpB;AAEA,SAAK,OAAO,mBAAmB;AAC/B,UAAM,SAAS,MAAM,KAAK,IAAI;AAC9B,WAAO,SAAS,CAAC,OAAO,mBAAmB,QAAQ;AAAA,EACrD;AAAA,EAIA,MAAM,OACJF,SACA,UAAoC,EAAE,aAAa,MAAM,GACxC;AACjB,QAAI,CAAC,QAAQ,aAAa;AACxB,YAAME,UAAU,MAAM,KAAK;AAAA,QACzB,eAAeF,OAAgB,qBAAqB,KAAK;AAAA,QACzD,CAAC;AAAA,MACH;AACA,aAAO,CAACE,QAAO,CAAC,EAAE,SAAS;AAAA,IAC7B;AAEA,IAAAF,UAAS,YAAYA,SAAkB,KAAK,MAAM,sBAAsB;AACxE,SAAK,OAAO,OAAOA,OAAgB,YAAY;AAC/C,UAAM,SAAS,MAAM,KAAK,IAAI;AAC9B,WAAO,SAAS,CAAC,OAAO,mBAAmB,QAAQ;AAAA,EACrD;AAAA,EAEA,MAAM,SACJ,MACA,OACA,SAC2B;AAC3B,SAAK,aAAa,KAAK,eAAe,MAAM,KAAK;AACjD,SAAK,cAAc,KAAK,eAAe,QAAQ,OAAO,KAAK,KAAK;AAEhE,UAAM,sBAAsB,KAAK;AACjC,SAAK,OAAO,mBAAmB;AAC/B,UAAM,QAAQ,MAAM,KAAK,KAAK,OAAO;AAErC,SAAK,cAAc;AACnB,UAAM,SAAS,MAAM,KAAK,KAAK,OAAO;AAEtC,UAAM,qBAAqB;AAAA,MACzB;AAAA,MACA;AAAA,MACA,CAAC,MAAM,CAAC,EAAE,mBAAmB,OAAO;AAAA,IACtC;AACA,QAAI,OACD,MAAM,mCAAmC,QAAQ,KAAK,KAAK,KAAM,CAAC;AACrE,QAAI,MAAM,QAAQ,IAAI,GAAG;AACvB,aAAO,KAAK,OAAO,CAAC,UAAU,UAAU,IAAI;AAAA,IAC9C;AAEA,WAAO;AAAA,MACL;AAAA,MACA,MAAM,MAAM,QAAQ,IAAI,IAAI,OAAO,CAAC,IAAI;AAAA,IAC1C;AAAA,EACF;AAAA,EAKA,UACK,SACqB;AACxB,SAAK,cAAc,KAAK,eAAe;AAAA,MACrC,GAAI;AAAA,IACN;AACA,SAAK,uBAAuB,QAAQ;AAAA,MAAI,CAACA,YACvC,YAAYA,SAAkB,KAAK,MAAM,sBAAsB;AAAA,IACjE;AACA,WAAO;AAAA,EACT;AAAA,EAEA,WAAmC;AACjC,UAAM,WAAW,KAAK,eAAe;AACrC,SAAK,cAAc,KAAK,YAAY;AAAA,MAClC;AAAA,MACA,UAAU,QAAQ;AAAA,IACpB;AACA,WAAO;AAAA,EACT;AAAA,EAOA,cACK,SACqB;AACxB,UAAM,IAAI,MAAM,2CAA2C;AAAA,EAC7D;AAAA,EAEA,QAAQ,OAAqB;AAC3B,SAAK,aAAa,IAAI,KAAK;AAC3B,WAAO;AAAA,EACT;AAAA,EAEA,KACE,eACA,eACA,eACwB;AACxB,UAAMG,QAAO;AAAA,MACX,KAAK;AAAA,MACL;AAAA,MACA;AAAA,MACA;AAAA,IACF;AACA,SAAK,aAAaA,MAAK,UAAU;AACjC,WAAO;AAAA,EACT;AAAA,EAEA,SACE,eACA,eACA,eACwB;AACxB,UAAMA,QAAO;AAAA,MACX,KAAK;AAAA,MACL;AAAA,MACA;AAAA,MACA;AAAA,IACF;AACA,SAAK,aAAaA,MAAK,SAAS;AAChC,WAAO;AAAA,EACT;AAAA,EAEA,KACE,UACA,cACA,0BAGA,aACsB;AACtB,QAAI,CAAC,0BAA0B;AAC7B,WAAK,UAAU,KAAK;AAAA,QAClB;AAAA,MACF,CAAC;AAED,aAAO;AAAA,IACT;AAEA,UAAM,eAAe,IAAI;AAAA,MACvB;AAAA,MACA,cAAc,SAAS;AAAA,MACvB,KAAK;AAAA,MACL,KAAK;AAAA,MACL;AAAA,MACA,KAAK;AAAA,IACP;AAEA,6BAAyB,YAAsC;AAC/D,QAAI,CAAC,aAAa,aAAa;AAC7B,oBAAc,YAAY,YAAY;AAAA,IACxC;AAEA,SAAK,UAAU,KAAK;AAAA,MAClB;AAAA,MACA,iBAAiB,aAAa;AAAA,MAC9B,YAAY,KAAK,cAAc;AAAA,QAC7B,aAAa;AAAA,MACf;AAAA,MACA,QAAQ,aAAa;AAAA,MACrB,WAAW,aAAa;AAAA,MACxB,cAAc,aAAa;AAAA,MAC3B,cAAc,aAAa;AAAA,MAC3B,YAAY,aAAa;AAAA,MACzB,aAAa,aAAa;AAAA,MAC1B,aAAa,aAAa;AAAA,MAC1B,gBAAgB,aAAa;AAAA,MAC7B,sBAAsB,aAAa,cAAc;AAAA,IACnD,CAAC;AAED,WAAO;AAAA,EACT;AAAA,EAEA,kBACE,gBACsB;AACtB,SAAK,iBAAiB;AACtB,WAAO;AAAA,EACT;AAAA,EAIA,WAAW,SAA+C;AACxD,SAAK,eAAe,KAAK,eAAe,QAAQ,GAAI,OAAoB;AACxE,WAAO;AAAA,EACT;AAAA,EAEA,WAAW,OAAqB;AAC9B,UAAM,QAAQ,YAAY,EAAE;AAC5B,SAAK,eAAe,aAAa,KAAK;AACtC,WAAO;AAAA,EACT;AAAA,EAIA,QAAQH,SAAoC,OAA6B;AACvE,UAAM,cAAc;AAAA,MAClBA;AAAA,MACA,KAAK,MAAM;AAAA,IACb;AAEA,QAAI,KAAK,cAAc;AACrB,WAAK,gBAAgB,KAAK,WAAqB,IAAI,KAAK;AACxD,aAAO;AAAA,IACT;AAEA,SAAK,eAAe,aAAa,WAAqB,IAAI,KAAK;AAC/D,WAAO;AAAA,EACT;AAAA,EAEA,WAAW,OAAqB;AAC9B,QAAI,KAAK,cAAc;AACrB,WAAK,gBAAgB,KAAK,KAAK;AAC/B,aAAO;AAAA,IACT;AAEA,SAAK,eAAe,aAAa,KAAK;AACtC,WAAO;AAAA,EACT;AAAA,EAEA,MAAM,OAAe;AACnB,SAAK,aAAa,KAAK,eAAe,MAAM,KAAK;AACjD,WAAO;AAAA,EACT;AAAA,EAEA,OAAO,QAAgB;AACrB,SAAK,cAAc,KAAK,eAAe,OAAO,MAAM;AACpD,WAAO;AAAA,EACT;AAAA,EAEA,UAAU,OAAqC;AAC7C,YAAQ,MAAM,QAAQ,UAAU,EAAE;AAClC,QAAI,KAAK,aAAa;AACpB,WAAK,eAAe,QAAQ,KAAK;AACjC,aAAO;AAAA,IACT;AAEA,SAAK,cAAc,WAAW,KAAK;AACnC,WAAO;AAAA,EACT;AAAA,EAEA,OAA6B;AAC3B,UAAM,eAAe,IAAI;AAAA,MACvB,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP;AAEA,iBAAa,cAAc,KAAK;AAChC,iBAAa,aAAa,KAAK;AAC/B,iBAAa,YAAY,KAAK;AAC9B,iBAAa,eAAe,KAAK;AACjC,iBAAa,eAAe,KAAK;AACjC,iBAAa,aAAa,KAAK;AAC/B,iBAAa,cAAc,KAAK;AAChC,iBAAa,SAAS,CAAC,GAAG,KAAK,MAAM;AACrC,iBAAa,YAAY,CAAC,GAAG,KAAK,SAAS;AAC3C,WAAO;AAAA,EACT;AAAA,EAEQ,eAAkB,OAAe,QAA2B;AAClE,WAAO,IAAI,QAAa,CAAC,SAAS,WAAW;AAC3C,WAAK,iBAAiB,IAAI,OAAO,QAAQ,CAAC,KAAK,WAAW;AACxD,YAAI,KAAK;AACP,iBAAO,GAAG;AAAA,QACZ;AAEA,YAAI,CAAC,QAAQ;AACX,kBAAQ,CAAC,CAAQ;AAAA,QACnB;AAEA,YAAI,CAAC,MAAM,QAAQ,MAAM,GAAG;AAC1B,kBAAQ,CAAC,MAAW,CAAC;AAAA,QACvB;AAEA,gBAAQ,MAAa;AAAA,MACvB,CAAC;AAAA,IACH,CAAC;AAAA,EACH;AACF;;;ADrpBO,IAAM,qBAAN,cAAkD,aAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAWvE,YACE,OACA,kBACA,MACA,eACA;AACA,UAAM,OAAO,MAAM,aAAa;AAChC,SAAK,mBAAmB;AACxB,SAAK,uBAAuB,IAAI;AAAA,MAC9B;AAAA,MACA;AAAA,IACF;AAAA,EACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQA,MAAM,KAAK,OAA6D;AACtE,QAAI,CAAC,OAAO;AACV,aAAO,MAAM,KAAK,MAAM,EAAE,KAAK;AAAA,IACjC;AAEA,UAAM,QAAQ,KAAK,MAAM;AACzB,QAAI,MAAM,QAAQ;AAChB,YAAM,OAAO,GAAI,MAAM,MAAmB;AAAA,IAC5C;AAEA,QAAI,MAAM,WAAW;AACnB,YAAM,UAAU,QAAQ,CAAC,aAAa;AACpC,cAAM,KAAK,QAAQ;AAAA,MACrB,CAAC;AAAA,IACH;AAEA,QAAI,MAAM,OAAO;AACf,aAAO,QAAQ,MAAM,KAAK,EAAE,QAAQ,CAAC,CAAC,KAAKI,MAAK,MAAM;AACpD,cAAM,MAAM,KAAKA,MAAK;AAAA,MACxB,CAAC;AAAA,IACH;AAEA,QAAI,MAAM,SAAS;AACjB,aAAO,QAAQ,MAAM,OAAO,EAAE,QAAQ,CAAC,CAAC,KAAKA,MAAK,MAAM;AACtD,cAAM,QAAQ,KAAKA,MAAK;AAAA,MAC1B,CAAC;AAAA,IACH;AAEA,QAAI,MAAM,OAAO;AACf,YAAM,MAAM,MAAM,KAAK;AAAA,IACzB;AAEA,QAAI,MAAM,QAAQ;AAChB,YAAM,OAAO,MAAM,MAAM;AAAA,IAC3B;AAEA,QAAI,MAAM,SAAS;AACjB,YAAM,QAAQ,GAAI,MAAM,OAAoB;AAAA,IAC9C;AAEA,WAAO,MAAM,MAAM,KAAK,EAAE,aAAa,MAAM,eAAe,CAAC,EAAE,CAAC;AAAA,EAClE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQA,MAAM,QACJ,OACmB;AACnB,UAAM,UAAU,MAAM,KAAK,KAAK;AAAA,MAC9B,GAAG;AAAA,MACH,OAAO;AAAA,IACT,CAAC;AAED,QAAI,CAAC,QAAQ,QAAQ;AACnB,aAAO;AAAA,IACT;AAEA,WAAO,QAAQ,CAAC;AAAA,EAClB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQA,MAAM,oBACJA,QACmB;AACnB,QAAI,CAAC,KAAK,MAAM,YAAY;AAC1B,YAAM,IAAI;AAAA,QACR,WAAW,KAAK,MAAM,QAAQ;AAAA,MAChC;AAAA,IACF;AAEA,WAAO,MAAM,KAAK,MAAM,EACrB,MAAM,KAAK,MAAM,YAAsBA,MAAK,EAC5C,IAAI;AAAA,EACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASA,MAAM,OAAO,OAAsC;AACjD,SAAK,MAAM,aAAa,KAAU;AAElC,UAAM,EAAE,OAAO,OAAO,IAAI,KAAK,qBAAqB;AAAA,MAClD;AAAA,MACA,KAAK;AAAA,MACL,KAAK,cAAc,UAAU;AAAA,IAC/B;AAEA,QAAI,OAAO,KAAK,MAAM,MAAM;AAC5B,WAAQ,MAAM,KAAK,eAAkB,OAAO,QAAQ;AAAA,MAClD,UAAU;AAAA,MACV,QAAQ;AAAA,IACV,CAAC;AAAA,EACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASA,MAAM,WAAW,QAAoC;AACnD,WAAO,QAAQ,CAAC,UAAU;AACxB,WAAK,MAAM,aAAa,KAAU;AAAA,IACpC,CAAC;AAED,UAAM,EAAE,OAAO,OAAO,IAAI,KAAK,qBAAqB;AAAA,MAClD;AAAA,MACA,KAAK;AAAA,MACL,KAAK,cAAc,UAAU;AAAA,IAC/B;AACA,QAAI,OAAO,KAAK,MAAM,MAAM;AAC5B,WAAQ,MAAM,KAAK,eAAoB,OAAO,QAAQ;AAAA,MACpD,cAAc;AAAA,MACd;AAAA,IACF,CAAC;AAAA,EACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQA,MAAM,aAAa,OAA6B;AAC9C,QAAI,CAAC,KAAK,MAAM,YAAY;AAC1B,YAAM,IAAI;AAAA,QACR,WACE,KAAK,MAAM,QACX;AAAA,MACJ;AAAA,IACF;AAEA,UAAM,cAAc,KAAK,qBAAqB;AAAA,MAC5C;AAAA,MACA,KAAK;AAAA,MACL,KAAK,cAAc,UAAU;AAAA,IAC/B;AAEA,QAAI,YAAY,OAAO,KAAK,MAAM,YAAY,MAAM;AACpD,UAAM,KAAK,eAAkB,YAAY,OAAO,YAAY,MAAM;AAElE,WAAO,MAAM,KAAK;AAAA,MAChB,MAAM,KAAK,MAAM,UAAqB;AAAA,IACxC;AAAA,EACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASA,MAAM,aAAa,OAA6B;AAC9C,QAAI,CAAC,KAAK,MAAM,YAAY;AAC1B,YAAM,IAAI;AAAA,QACR,WAAW,KAAK,MAAM,QAAQ;AAAA,MAChC;AAAA,IACF;AACA,UAAM,EAAE,OAAO,OAAO,IAAI,KAAK,qBAAqB;AAAA,MAClD,KAAK,MAAM;AAAA,MACX,KAAK,MAAM;AAAA,MACX,MAAM,KAAK,MAAM,UAAqB;AAAA,IACxC;AAEA,QAAI,OAAO,KAAK,MAAM,MAAM;AAC5B,UAAM,KAAK,eAAkB,OAAO,MAAM;AAC1C,WAAO;AAAA,EACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,QAAgC;AAC9B,WAAO,IAAI;AAAA,MACT,KAAK;AAAA,MACL,KAAK,MAAM;AAAA,MACX,KAAK;AAAA,MACL,KAAK;AAAA,MACL;AAAA,MACA,KAAK;AAAA,IACP;AAAA,EACF;AAAA,EAEQ,eACN,OACA,QACA,UAII;AAAA,IACF,UAAU;AAAA,IACV,cAAc;AAAA,IACd,QAAQ,CAAC;AAAA,EACX,GACkB;AAClB,UAAM,iBAAiB,KAAK,MAAM;AAClC,QAAI,QAAQ,YAAY,QAAQ,cAAc;AAC5C,UAAI,QAAQ,UAAU;AACpB,cAAMC,SAAQ,KAAK,MAAM;AACzB,cAAMC,oBAAmB,KAAK;AAC9B,eAAO,IAAI,QAAW,CAAC,SAAS,WAAW;AACzC,eAAK,iBAAiB;AAAA,YACpB;AAAA,YACA;AAAA,YACA,SAAqB,KAAU;AAC7B,kBAAI,KAAK;AACP,uBAAO,OAAO,GAAG;AAAA,cACnB;AAEA,oBAAM,eAAe,QAAQ;AAC7B,oBAAM,SACJ,aAAa,cAAyB,KAAK,KAAK;AAClD,oBAAM,cAAc,iBAAiBD,MAAK,UAAU,cAAc;AAClE,cAAAC,kBAAiB;AAAA,gBACf;AAAA,gBACA,CAAC,MAAM;AAAA,gBACP,CAACC,MAAU,QAAW;AACpB,sBAAIA,MAAK;AACP,2BAAO,OAAOA,IAAG;AAAA,kBACnB;AAEA,0BAAQ,GAAQ;AAAA,gBAClB;AAAA,cACF;AAAA,YACF;AAAA,UACF;AAAA,QACF,CAAC;AAAA,MACH;AAEA,UAAI,CAAC,MAAM,QAAQ,QAAQ,MAAM,GAAG;AAClC,cAAM,IAAI;AAAA,UACR;AAAA,QACF;AAAA,MACF;AAEA,YAAM,SAAS,QAAQ;AACvB,YAAM,QAAQ,KAAK,MAAM;AACzB,YAAM,cAAmB,CAAC;AAC1B,YAAM,mBAAmB,KAAK;AAC9B,aAAO,IAAI,QAAa,OAAO,SAAS,WAAW;AACjD,mBAAW,SAAS,QAAQ;AAC1B,cAAI;AACF,kBAAM,EAAE,OAAAC,QAAO,QAAAC,QAAO,IAAI,KAAK,qBAAqB;AAAA,cAClD;AAAA,cACA,KAAK;AAAA,cACL,KAAK,cAAc,UAAU;AAAA,YAC/B;AAEA,kBAAM,IAAI,QAAc,CAACC,UAASC,YAAW;AAC3C,mBAAK,iBAAiB,IAAIH,QAAOC,SAAQ,SAAU,KAAU;AAC3D,oBAAI,KAAK;AACP,yBAAOE,QAAO,GAAG;AAAA,gBACnB;AAEA,sBAAM,SAAS,MAAM,cAAyB,KAAK,KAAK;AACxD,sBAAM,cAAc,iBAAiB,KAAK,UAAU,cAAc;AAClE,iCAAiB;AAAA,kBACf;AAAA,kBACA,CAAC,MAAM;AAAA,kBACP,CAACJ,MAAU,QAAW;AACpB,wBAAIA,MAAK;AACP,6BAAOI,QAAOJ,IAAG;AAAA,oBACnB;AAEA,gCAAY,KAAK,GAAQ;AACzB,oBAAAG,SAAQ;AAAA,kBACV;AAAA,gBACF;AAAA,cACF,CAAC;AAAA,YACH,CAAC;AAAA,UACH,SAAS,KAAK;AACZ,mBAAO,OAAO,GAAG;AAAA,UACnB;AAAA,QACF;AACA,gBAAQ,WAAW;AAAA,MACrB,CAAC;AAAA,IACH;AAEA,WAAO,IAAI,QAAW,CAAC,SAAS,WAAW;AACzC,WAAK,iBAAiB,IAAI,OAAO,QAAQ,CAAC,KAAK,SAAS;AACtD,YAAI,KAAK;AACP,iBAAO,OAAO,GAAG;AAAA,QACnB;AAEA,gBAAQ,IAAS;AAAA,MACnB,CAAC;AAAA,IACH,CAAC;AAAA,EACH;AACF;;;AE/VA;AAcO,IAAM,cAAN,MAAkB;AAAA,EAMvB,YAAY,eAA8B,MAAgB;AACxD,SAAK,gBAAgB;AACrB,SAAK,gBAAgB,KAAK,cAAc,qBAAqB;AAC7D,SAAK,WAAW;AAChB,SAAK,OAAO,QAAQ,KAAK,cAAc,QAAQ;AAAA,EACjD;AAAA,EAEA,MAAM,mBAAkC;AACtC,QAAI;AACF,cAAQ,KAAK,cAAc,UAAU,GAAG;AAAA,QACtC,KAAK;AAAA,QACL,KAAK;AACH,cAAI,mBAAmB,KAAK,IAAI;AAChC,gBACE,KAAK,cACL,iBAAiB;AACnB;AAAA,QAEF,KAAK;AACH,cAAI,mBAAmB,KAAK,IAAI;AAChC,gBAAO,KAAK,cAAmC;AAAA,YAC7C;AAAA,UACF;AACA;AAAA,QAEF,KAAK;AACH,cAAI,mBAAmB,KAAK,IAAI;AAChC,UAAC,KAAK,cAA2C;AAAA,YAC/C;AAAA,YACA,CAAC,QAAQ;AACP,kBAAI,KAAK;AACP,sBAAM,IAAI,MAAM,IAAI,OAAO;AAAA,cAC7B;AAAA,YACF;AAAA,UACF;AACA;AAAA,QAEF;AACE,gBAAM,IAAI,MAAM,mDAAmD;AAAA,MACvE;AAEA,WAAK,WAAW;AAAA,IAClB,SAAS,OAAO;AACd,YAAM,KAAK,kBAAkB;AAAA,IAC/B;AAAA,EACF;AAAA,EAEA,MAAM,SAAwB;AAC5B,QAAI;AACF,cAAQ,KAAK,cAAc,UAAU,GAAG;AAAA,QACtC,KAAK;AAAA,QACL,KAAK;AACH,cAAI,oBAAoB,KAAK,IAAI;AACjC,gBAAO,KAAK,cAA0C,OAAO;AAC7D;AAAA,QAEF,KAAK;AACH,cAAI,oBAAoB,KAAK,IAAI;AACjC,gBAAO,KAAK,cAAmC;AAAA,YAC7C;AAAA,UACF;AACA;AAAA,QAEF,KAAK;AACH,cAAI,oBAAoB,KAAK,IAAI;AACjC,UAAC,KAAK,cAA2C;AAAA,YAC/C;AAAA,YACA,CAAC,QAAQ;AACP,kBAAI,KAAK;AACP,sBAAM,IAAI,MAAM,IAAI,OAAO;AAAA,cAC7B;AAAA,YACF;AAAA,UACF;AACA;AAAA,QACF;AACE,gBAAM,IAAI,MAAM,oDAAoD;AAAA,MACxE;AAEA,WAAK,WAAW;AAAA,IAClB,SAAS,OAAO;AACd,YAAM;AAAA,IACR,UAAE;AACA,YAAM,KAAK,kBAAkB;AAAA,IAC/B;AAAA,EACF;AAAA,EAEA,MAAM,WAA0B;AAC9B,QAAI;AACF,cAAQ,KAAK,cAAc,UAAU,GAAG;AAAA,QACtC,KAAK;AAAA,QACL,KAAK;AACH,cAAI,sBAAsB,KAAK,IAAI;AACnC,gBAAO,KAAK,cAA0C,SAAS;AAC/D;AAAA,QAEF,KAAK;AACH,cAAI,sBAAsB,KAAK,IAAI;AACnC,gBAAO,KAAK,cAAmC;AAAA,YAC7C;AAAA,UACF;AACA;AAAA,QAEF,KAAK;AACH,cAAI,sBAAsB,KAAK,IAAI;AACnC,UAAC,KAAK,cAA2C;AAAA,YAC/C;AAAA,YACA,CAAC,QAAQ;AACP,kBAAI,KAAK;AACP,sBAAM,IAAI,MAAM,IAAI,OAAO;AAAA,cAC7B;AAAA,YACF;AAAA,UACF;AACA;AAAA,QAEF;AACE,gBAAM,IAAI;AAAA,YACR;AAAA,UACF;AAAA,MACJ;AAEA,WAAK,WAAW;AAAA,IAClB,UAAE;AACA,YAAM,KAAK,kBAAkB;AAAA,IAC/B;AAAA,EACF;AAAA,EAEA,MAAc,oBAAmC;AAC/C,YAAQ,KAAK,cAAc,UAAU,GAAG;AAAA,MACtC,KAAK;AAAA,MACL,KAAK;AACH,cAAO,KAAK,cAA0C,IAAI;AAC1D;AAAA,MAEF,KAAK;AACH,cAAO,KAAK,cAAmC,IAAI;AACnD;AAAA,MAEF,KAAK;AACH,QAAC,KAAK,cAA2C,MAAM;AACvD;AAAA,MAEF;AACE,cAAM,IAAI,MAAM,kDAAkD;AAAA,IACtE;AAAA,EACF;AACF;;;AzC7IO,IAAM,iBAAN,MAAM,uBAAsB,WAAW;AAAA,EAKpC,YAAY,OAA4B;AAC9C,UAAM,KAAK;AACX,SAAK,cAAc;AAAA,EACrB;AAAA,EAEA,YAA+B;AAC7B,WAAO,KAAK;AAAA,EACd;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,aAAa,QACX,OACA,IACwB;AACxB,UAAM,gBAAgB,IAAI,KAAK,KAAK;AACpC,UAAM,SAAS,MAAM,cAAc,UAAU,cAAc,IAAI;AAC/D,YAAQ,cAAc,MAAM;AAAA,MAC1B,KAAK;AAAA,MACL,KAAK;AACH,cAAM,cAAc,OAAO;AAC3B,sBAAc,gBAAgB,MAAM,YAAY,iBAAiB;AAAA,UAC/D,MAAM,cAAc;AAAA,UACpB,MAAM,cAAc;AAAA,UACpB,MAAM,cAAc;AAAA,UACpB,UAAU,cAAc;AAAA,UACxB,UAAU,cAAc;AAAA,UACxB,GAAG,OAAO;AAAA,QACZ,CAAC;AACD;AAAA,MAEF,KAAK;AACH,cAAM,WAAW,OAAO;AACxB,sBAAc,gBAAgB,IAAI,SAAS,OAAO;AAAA,UAChD,MAAM,cAAc;AAAA,UACpB,MAAM,cAAc;AAAA,UACpB,MAAM,cAAc;AAAA,UACpB,UAAU,cAAc;AAAA,UACxB,UAAU,cAAc;AAAA,UACxB,GAAG,OAAO;AAAA,QACZ,CAAC;AACD,cAAO,cAAc,cAAmC,QAAQ;AAChE;AAAA,MAEF,KAAK;AACH,cAAM,UAAU,OAAO;AACvB,sBAAc,gBAAgB,IAAI,QAAQ;AAAA,UACxC,cAAc;AAAA,UACd,QAAQ,iBAAiB,QAAQ;AAAA,UACjC,CAAC,QAAQ;AACP,gBAAI,KAAK;AACP,oBAAM,IAAI,MAAM,qCAAqC,GAAG,EAAE;AAAA,YAC5D;AAAA,UACF;AAAA,QACF;AACA;AAAA,MAEF;AACE,cAAM,IAAI,MAAM,iCAAiC,cAAc,IAAI,EAAE;AAAA,IACzE;AAEA,kBAAc,cAAc;AAC5B,mBAAc,WAAW;AACzB,SAAK;AACL,WAAO;AAAA,EACT;AAAA,EAEA,OAAO,cAA6B;AAClC,QAAI,CAAC,eAAc,UAAU;AAC3B,YAAM,IAAI,MAAM,yCAAyC;AAAA,IAC3D;AAEA,WAAO,eAAc;AAAA,EACvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,aAAa,eACX,IACA,uBACe;AACf,UAAM,MAAM,MAAM,KAAK,YAAY,EAAE;AAAA,MACnC;AAAA,IACF;AACA,QAAI;AACF,YAAM,GAAG,GAAG,EAAE,KAAK,YAAY;AAC7B,YAAI,CAAC,IAAI,UAAU;AACjB;AAAA,QACF;AAEA,cAAM,IAAI,OAAO;AAAA,MACnB,CAAC;AAAA,IACH,SAAS,OAAO;AACd,UAAI,CAAC,IAAI,UAAU;AACjB;AAAA,MACF;AAEA,YAAM,IAAI,SAAS;AACnB,YAAM;AAAA,IACR;AAAA,EACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,MAAM,eACJ,IACA,uBACe;AACf,UAAM,MAAM,MAAM,KAAK,iBAAiB,qBAAqB;AAC7D,QAAI;AACF,YAAM,GAAG,GAAG,EAAE,KAAK,YAAY;AAC7B,YAAI,CAAC,IAAI,UAAU;AACjB;AAAA,QACF;AAEA,cAAM,IAAI,OAAO;AAAA,MACnB,CAAC;AAAA,IACH,SAAS,OAAO;AACd,UAAI,CAAC,IAAI,UAAU;AACjB;AAAA,MACF;AAEA,YAAM,IAAI,SAAS;AACnB,YAAM;AAAA,IACR;AAAA,EACF;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,MAAM,iBACJ,uBACsB;AACtB,UAAM,gBAAgB,IAAI,eAAc;AAAA,MACtC,MAAM,KAAK;AAAA,MACX,MAAM,KAAK;AAAA,MACX,MAAM,KAAK;AAAA,MACX,UAAU,KAAK;AAAA,MACf,UAAU,KAAK;AAAA,MACf,UAAU,KAAK;AAAA,MACf,MAAM,KAAK;AAAA,MACX,GAAG;AAAA,IACL,CAAC;AAED,UAAM,cAAc,cAAc;AAClC,kBAAc,cAAc;AAC5B,UAAM,WAAW,IAAI,YAAY,eAAe,KAAK,IAAI;AACzD,UAAM,SAAS,iBAAiB;AAChC,WAAO;AAAA,EACT;AAAA;AAAA;AAAA;AAAA,EAKA,MAAM,iBACJ,uBACsB;AACtB,WAAO,KAAK,iBAAiB,qBAAqB;AAAA,EACpD;AAAA;AAAA;AAAA;AAAA,EAKA,MAAM,YACJ,uBACsB;AACtB,WAAO,KAAK,iBAAiB,qBAAqB;AAAA,EACpD;AAAA;AAAA;AAAA;AAAA,EAKA,gBACE,OACiB;AACjB,QAAI,CAAC,KAAK,aAAa;AACrB,YAAM,IAAI,MAAM,yCAAyC;AAAA,IAC3D;AAEA,YAAQ,KAAK,MAAM;AAAA,MACjB,KAAK;AAAA,MACL,KAAK;AACH,eAAO,IAAI;AAAA,UACT,KAAK;AAAA,UACL;AAAA,UACA,KAAK;AAAA,UACL,KAAK;AAAA,UACL;AAAA,QACF;AAAA,MACF,KAAK;AACH,eAAO,IAAI;AAAA,UACT;AAAA,UACA,KAAK;AAAA,UACL,KAAK;AAAA,UACL;AAAA,QACF;AAAA,MACF,KAAK;AACH,eAAO,IAAI;AAAA,UACT;AAAA,UACA,KAAK;AAAA,UACL,KAAK;AAAA,UACL;AAAA,QACF;AAAA,MACF;AACE,cAAM,IAAI,MAAM,iCAAiC,KAAK,IAAI,EAAE;AAAA,IAChE;AAAA,EACF;AAAA;AAAA;AAAA;AAAA,EAKA,aAAa,cACX,mBACA,IACA;AACA,UAAM,oBAAoB,IAAI,eAAc,iBAAiB;AAC7D,UAAM,kBAAkB,cAAc;AAAA,MACpC,cAAc,kBAAkB;AAAA,MAChC,WAAW,kBAAkB;AAAA,IAC/B,CAAC;AACD,sBAAkB,cAAc;AAChC,QAAI;AACF,YAAM,GAAG,iBAAiB,EAAE,KAAK,YAAY;AAC3C,YAAI,CAAC,kBAAkB,aAAa;AAClC;AAAA,QACF;AAEA,cAAM,kBAAkB,gBAAgB;AAAA,MAC1C,CAAC;AAAA,IACH,SAAS,OAAO;AACd,UAAI,kBAAkB,aAAa;AACjC,cAAM,kBAAkB,gBAAgB;AAAA,MAC1C;AACA,YAAM;AAAA,IACR;AAAA,EACF;AAAA;AAAA;AAAA;AAAA,EAKA,uBAA0C;AACxC,WAAO,KAAK;AAAA,EACd;AAAA;AAAA;AAAA;AAAA,EAKA,MAAM,iBACJ,uBAC4B;AAC5B,YAAQ,KAAK,MAAM;AAAA,MACjB,KAAK;AAAA,MACL,KAAK;AACH,cAAM,eAAe,MAAM,cAAc,UAAU,OAAO,GACvD;AACH,eAAO,MAAM,YAAY,iBAAiB;AAAA,UACxC,MAAM,KAAK;AAAA,UACX,MAAM,KAAK;AAAA,UACX,MAAM,KAAK;AAAA,UACX,UAAU,KAAK;AAAA,UACf,UAAU,KAAK;AAAA,UACf,GAAG,uBAAuB;AAAA,QAC5B,CAAC;AAAA,MACH,KAAK;AACH,cAAM,MAAM,MAAM,cAAc,UAAU,UAAU,GACjD;AACH,cAAM,SAAS,IAAI,GAAG,OAAO;AAAA,UAC3B,MAAM,KAAK;AAAA,UACX,MAAM,KAAK;AAAA,UACX,MAAM,KAAK;AAAA,UACX,UAAU,KAAK;AAAA,UACf,UAAU,KAAK;AAAA,UACf,GAAG,uBAAuB;AAAA,QAC5B,CAAC;AACD,cAAM,OAAO,QAAQ;AACrB,eAAO;AAAA,MAET,KAAK;AACH,cAAM,WAAW,MAAM,cAAc,UAAU,QAAQ,GACpD;AACH,eAAO,IAAI,QAAQ;AAAA,UACjB,KAAK;AAAA,UACL,QAAQ,iBAAiB,QAAQ;AAAA,UACjC,CAAC,QAAQ;AACP,gBAAI,KAAK;AACP,oBAAM,IAAI,MAAM,qCAAqC,GAAG,EAAE;AAAA,YAC5D;AAAA,UACF;AAAA,QACF;AAAA,MACF;AACE,cAAM,IAAI,MAAM,iCAAiC,KAAK,IAAI,EAAE;AAAA,IAChE;AAAA,EACF;AAAA;AAAA;AAAA;AAAA,EAKA,MAAM,kBAAiC;AACrC,QAAI,CAAC,KAAK,aAAa;AACrB,qBAAO,KAAK,6BAA6B,IAAI;AAC7C;AAAA,IACF;AAEA,mBAAO,KAAK,sBAAsB,IAAI;AACtC,YAAQ,KAAK,MAAM;AAAA,MACjB,KAAK;AAAA,MACL,KAAK;AACH,cAAO,KAAK,cAA0C,IAAI;AAC1D,aAAK,cAAc;AACnB,uBAAc,WAAW;AACzB;AAAA,MACF,KAAK;AACH,cAAO,KAAK,cAAmC,IAAI;AACnD,aAAK,cAAc;AACnB,uBAAc,WAAW;AACzB;AAAA,MACF,KAAK;AACH,cAAM,IAAI,QAAc,CAAC,SAAS,WAAW;AAC3C,UAAC,KAAK,cAA2C,MAAM,CAAC,QAAQ;AAC9D,gBAAI,KAAK;AACP,qBAAO,GAAG;AAAA,YACZ;AACA,oBAAQ;AAAA,UACV,CAAC;AAAA,QACH,CAAC;AACD,aAAK,cAAc;AACnB,uBAAc,WAAW;AACzB;AAAA,MACF;AACE,cAAM,IAAI,MAAM,iCAAiC,KAAK,IAAI,EAAE;AAAA,IAChE;AAAA,EACF;AAAA;AAAA;AAAA;AAAA,EAKA,aAAa,kBAAiC;AAC5C,UAAM,gBAAgB,eAAc,YAAY;AAChD,QAAI,CAAC,cAAc,aAAa;AAC9B,qBAAO,KAAK,6BAA6B,aAAa;AACtD;AAAA,IACF;AAEA,mBAAO,KAAK,sBAAsB,aAAa;AAC/C,YAAQ,cAAc,MAAM;AAAA,MAC1B,KAAK;AAAA,MACL,KAAK;AACH,cAAO,cAAc,cAA0C,IAAI;AACnE,sBAAc,cAAc;AAC5B,uBAAc,WAAW;AACzB;AAAA,MACF,KAAK;AACH,cAAO,cAAc,cAAmC,IAAI;AAC5D,sBAAc,cAAc;AAC5B,uBAAc,WAAW;AACzB;AAAA,MACF,KAAK;AACH,cAAM,IAAI,QAAc,CAAC,SAAS,WAAW;AAC3C,UAAC,cAAc,cAA2C;AAAA,YACxD,CAAC,QAAQ;AACP,kBAAI,KAAK;AACP,uBAAO,GAAG;AAAA,cACZ;AACA,sBAAQ;AAAA,YACV;AAAA,UACF;AAAA,QACF,CAAC;AACD,sBAAc,cAAc;AAC5B,uBAAc,WAAW;AACzB;AAAA,MACF;AACE,cAAM,IAAI,MAAM,iCAAiC,cAAc,IAAI,EAAE;AAAA,IACzE;AAAA,EACF;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,MAAM,aAA4B;AAChC,WAAO,KAAK,gBAAgB;AAAA,EAC9B;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,aAAa,aAA4B;AACvC,WAAO,eAAc,gBAAgB;AAAA,EACvC;AAAA;AAAA;AAAA;AAAA,EAKA,MAAM,SAAkB,OAAe,SAAgB,CAAC,GAAe;AACrE,QAAI,CAAC,KAAK,aAAa;AACrB,YAAM,IAAI,MAAM,yCAAyC;AAAA,IAC3D;AAEA,QAAI,OAAO,KAAK,MAAM,MAAM;AAC5B,YAAQ,KAAK,MAAM;AAAA,MACjB,KAAK;AAAA,MACL,KAAK;AACH,cAAM,CAAC,SAAS,IAAI,MAClB,KAAK,cACL,QAAQ,OAAO,MAAM;AAEvB,eAAO;AAAA,MACT,KAAK;AACH,cAAM,EAAE,KAAK,IAAI,MAAO,KAAK,cAAmC;AAAA,UAC9D;AAAA,UACA;AAAA,QACF;AAEA,eAAO;AAAA,MACT,KAAK;AACH,eAAO,IAAI,QAAQ,CAAC,SAAS,WAAW;AACtC,UAAC,KAAK,cAA2C;AAAA,YAC/C;AAAA,YACA;AAAA,YACA,CAAC,KAAKE,UAAS;AACb,kBAAI,KAAK;AACP,uBAAO,GAAG;AAAA,cACZ;AAEA,sBAAQA,KAAS;AAAA,YACnB;AAAA,UACF;AAAA,QACF,CAAC;AAAA,MACH;AACE,cAAM,IAAI,MAAM,iCAAiC,KAAK,IAAI,EAAE;AAAA,IAChE;AAAA,EACF;AAAA;AAAA;AAAA;AAAA,EAKA,aAAa,SACX,OACA,SAAgB,CAAC,GACL;AACZ,UAAM,gBAAgB,eAAc,YAAY;AAChD,QAAI,CAAC,iBAAiB,CAAC,cAAc,aAAa;AAChD,YAAM,IAAI,MAAM,yCAAyC;AAAA,IAC3D;AAEA,QAAI,OAAO,eAAc,YAAY,GAAG,QAAQ,OAAO,MAAM;AAC7D,YAAQ,cAAc,MAAM;AAAA,MAC1B,KAAK;AAAA,MACL,KAAK;AACH,cAAM,CAAC,SAAS,IAAI,MAClB,cAAc,cACd,QAAQ,OAAO,MAAM;AAEvB,eAAO;AAAA,MACT,KAAK;AACH,cAAM,EAAE,KAAK,IAAI,MACf,cAAc,cACd,MAAM,OAAO,MAAM;AAErB,eAAO;AAAA,MACT,KAAK;AACH,eAAO,IAAI,QAAQ,CAAC,SAAS,WAAW;AACtC,UAAC,cAAc,cAA2C;AAAA,YACxD;AAAA,YACA;AAAA,YACA,CAAC,KAAKA,UAAS;AACb,kBAAI,KAAK;AACP,uBAAO,GAAG;AAAA,cACZ;AAEA,sBAAQA,KAAS;AAAA,YACnB;AAAA,UACF;AAAA,QACF,CAAC;AAAA,MACH;AACE,cAAM,IAAI,MAAM,iCAAiC,cAAc,IAAI,EAAE;AAAA,IACzE;AAAA,EACF;AAAA,EAEA,MAAc,cACZ,uBACe;AACf,YAAQ,KAAK,MAAM;AAAA,MACjB,KAAK;AAAA,MACL,KAAK;AACH,cAAM,SAAS,MAAM,cAAc,UAAU,OAAO,GACjD;AACH,aAAK,gBAAgB,MAAM,MAAM,iBAAiB;AAAA,UAChD,MAAM,KAAK;AAAA,UACX,MAAM,KAAK;AAAA,UACX,MAAM,KAAK;AAAA,UACX,UAAU,KAAK;AAAA,UACf,UAAU,KAAK;AAAA,UACf,GAAG,uBAAuB;AAAA,QAC5B,CAAC;AACD;AAAA,MACF,KAAK;AACH,cAAM,MAAM,MAAM,cAAc,UAAU,UAAU,GACjD;AACH,aAAK,gBAAgB,IAAI,GAAG,OAAO;AAAA,UACjC,MAAM,KAAK;AAAA,UACX,MAAM,KAAK;AAAA,UACX,MAAM,KAAK;AAAA,UACX,UAAU,KAAK;AAAA,UACf,UAAU,KAAK;AAAA,UACf,GAAG,uBAAuB;AAAA,QAC5B,CAAC;AACD,cAAO,KAAK,cAAmC,QAAQ;AACvD;AAAA,MACF,KAAK;AACH,cAAM,WAAW,MAAM,cAAc,UAAU,QAAQ,GACpD;AACH,aAAK,gBAAgB,IAAI,QAAQ;AAAA,UAC/B,KAAK;AAAA,UACL,QAAQ,iBAAiB,QAAQ;AAAA,UACjC,CAAC,QAAQ;AACP,gBAAI,KAAK;AACP,oBAAM,IAAI,MAAM,qCAAqC,GAAG,EAAE;AAAA,YAC5D;AAAA,UACF;AAAA,QACF;AACA;AAAA,MACF;AACE,cAAM,IAAI,MAAM,iCAAiC,KAAK,IAAI,EAAE;AAAA,IAChE;AAAA,EACF;AACF;AA7hBa,eAGI,WAAiC;AAH3C,IAAM,gBAAN;;;A0CxBP;AAAA,OAAOC,SAAQ;AACf,OAAOC,WAAU;AAEjB,OAAOC,aAAY;AAUnBC,QAAO,OAAO;AAEd,eAAsB,kBACpB,eAC+B;AAC/B,UAAQ,QAAQ,IAAI,SAAS;AAAA,IAC3B,KAAK;AAAA,IACL,KAAK;AACH,YAAM,kBAAkB;AACxB,YAAM,gBAAgB;AAAA,QACpB,4BAAmB,4BAA4B;AAAA,MACjD;AACA,YAAM,SAAS,MAAM,gBAAgB;AAAA,QACnC,4BAAmB,gCAAgC;AAAA,MACrD;AACA,aAAO,OAAO,CAAC;AAAA,IAEjB,KAAK;AACH,YAAM,eAAe;AACrB,YAAM,aAAa,MAAM,4BAAmB,yBAAyB,CAAC;AACtE,YAAM,WAAW,MAAM,aAAa;AAAA,QAClC,4BAAmB,gCAAgC;AAAA,MACrD;AACA,aAAO,SAAS;AAAA,IAElB,KAAK;AACH,YAAM;AAAA,QACJ,4BAAmB,6BAA6B;AAAA,QAChD,CAAC;AAAA,QACD;AAAA,MACF;AACA,YAAM,eACH,MAAM;AAAA,QACL,4BAAmB,gCAAgC;AAAA,QACnD,CAAC;AAAA,QACD;AAAA,MACF,KAAM,CAAC;AACT,aAAO,MAAM,QAAQ,YAAY,IAAI,eAAe,CAAC,YAAY;AAAA,IAEnE;AACE,YAAM,IAAI,MAAM,2BAA2B;AAAA,EAC/C;AACF;AAEA,eAAsB,gBAAsC;AAC1D,QAAM,iBAAiB,mBAAmB;AAC1C,QAAM,aAA0B,CAAC;AAEjC,aAAW,iBAAiB,gBAAgB;AAC1C,UAAM,kBAAkB,MAAM,oBAAoB,aAAa;AAC/D,UAAM,YAAuB,IAAI,gBAAgB;AACjD,cAAU,gBAAgB;AAC1B,eAAW,KAAK,SAAS;AAAA,EAC3B;AAEA,SAAO;AACT;AAgBA,eAAe,oBACb,cAC8B;AAC9B,QAAM,OAAOC,MAAK,QAAQ,YAAY,MAAM;AAC5C,MAAI,MAAM;AACR,UAAMC,mBAAkB,MAAM,OAAO;AACrC,WAAOA,iBAAgB;AAAA,EACzB;AAEA,QAAM,SAAS;AACf,SAAO,SAAS;AAAA,IACd,eAAe;AAAA,EACjB,CAAC;AAED,QAAM,kBAAkB,UAAQ,YAAY;AAC5C,SAAO,gBAAgB;AACzB;AAEA,eAAe,oBACb,eACA,sBAA8B,QAAQ,IAAI,iBACtC,QAAQ,IAAI,iBAAiB,MAAM,gBACnC,yBAAyB,eACC;AAC9B,QAAM,gBAAgB,QAAQ,IAAI,IAAI,MAAM;AAC5C,QAAM,kBAAkB,MAAM,oBAAoB,aAAa;AAE/D,MAAI,CAAC,iBAAiB;AACpB,UAAM,IAAI;AAAA,MACR,gDAAgD;AAAA,IAClD;AAAA,EACF;AAEA,SAAO;AACT;AAEA,SAAS,qBAA+B;AACtC,QAAM,uBAAuB,QAAQ,IAAI;AACzC,QAAM,gBAAgBD,MAAK;AAAA,IACzB,QAAQ,IAAI,kBAAkB;AAAA,EAChC;AAEA,QAAM,0BAA0BA,MAAK;AAAA,IACnC;AAAA,IACA;AAAA,EACF;AAEA,MAAI;AACF,UAAM,iBAAiBE,IAAG,YAAY,uBAAuB;AAC7D,QAAI,eAAe,SAAS,GAAG;AAC7B,aAAO;AAAA,IACT;AAEA,UAAM,IAAI;AAAA,MACR,gDAAgD;AAAA,IAClD;AAAA,EACF,SAAS,OAAO;AACd,UAAM,IAAI;AAAA,MACR,gDAAgD;AAAA,IAClD;AAAA,EACF;AACF;AAEA,eAAsB,qBACpB,OACA,QACA,kBACY;AACZ,SAAO,IAAI,QAAW,CAAC,SAAS,WAAW;AACzC,qBAAiB,IAAO,OAAO,QAAQ,CAAC,KAAK,WAAW;AACtD,UAAI,KAAK;AACP,eAAO,GAAG;AAAA,MACZ;AACA,cAAQ,MAAM;AAAA,IAChB,CAAC;AAAA,EACH,CAAC;AACH;;;A7CjJAC,QAAO,OAAO;AAEd,eAAsB,gBAAgB,UAAkC;AACtE,QAAM,MAAM,MAAM,cAAc,QAAQ;AACxC,QAAM,gBAAgB,IAAI,qBAAqB;AAC/C,MAAI;AACF,QAAI,mBAAmB,IAAI;AAC3B,UAAM,cAAc,MAAM,iBAAiB;AAE3C,UAAM,iBACJ,MAAM,kBAAkB,aAAa;AACvC,UAAM,aAA0B,MAAM,cAAc;AACpD,UAAM,oBAAoB,WAAW;AAAA,MACnC,CAAC,cACC,CAAC,eACE,IAAI,CAAC,UAAU,MAAM,IAAI,EACzB,SAAS,UAAU,aAAa;AAAA,IACvC;AAEA,QAAI,kBAAkB,WAAW,GAAG;AAClC,qBAAO,KAAK,wBAAwB;AACpC,YAAM,IAAI,gBAAgB;AAC1B,cAAQ,KAAK,CAAC;AAAA,IAChB;AAEA,QAAI,UAAU;AACZ,YAAM,gBAAgB,kBAAkB;AAAA,QACtC,CAAC,cAAc,UAAU,kBAAkB;AAAA,MAC7C;AAEA,UAAI,kBAAkB,IAAI;AACxB,cAAM,IAAI,MAAM,aAAa,QAAQ,aAAa;AAAA,MACpD;AAEA,YAAM,qBAAqB,kBAAkB,MAAM,GAAG,gBAAgB,CAAC;AACvE,YAAMC,uBAAsB,IAAI;AAAA,QAC9B;AAAA,QACA;AAAA,QACA;AAAA,MACF;AAEA,YAAMA,qBAAoB,aAAa,kBAAkB;AACzD,UAAI,oBAAoB,IAAI;AAC5B,YAAM,cAAc,MAAM,kBAAkB;AAC5C;AAAA,IACF;AAEA,UAAM,sBAAsB,IAAI;AAAA,MAC9B;AAAA,MACA;AAAA,MACA;AAAA,IACF;AAEA,UAAM,oBAAoB,aAAa,iBAAiB;AAExD,QAAI,oBAAoB,IAAI;AAC5B,UAAM,cAAc,MAAM,kBAAkB;AAAA,EAC9C,SAAS,OAAY;AACnB,QAAI,sBAAsB,IAAI;AAC9B,UAAM,cAAc,MAAM,oBAAoB;AAC9C,UAAM;AAAA,EACR,UAAE;AACA,UAAM,IAAI,gBAAgB;AAAA,EAC5B;AACF;;;A8ChFA;AAEA,OAAOC,aAAY;AAcnBC,QAAO,OAAO;AAEd,eAAsB,iBAAiB,UAAkC;AACvE,QAAM,MAAM,MAAM,cAAc,QAAQ;AACxC,QAAM,gBAAgB,IAAI,qBAAqB;AAC/C,MAAI;AACF,QAAI,mBAAmB,IAAI;AAC3B,UAAM,cAAc,iBAAiB;AACrC,UAAM,iBAAuC,MAAM;AAAA,MACjD;AAAA,IACF;AACA,UAAM,aAA0B,MAAM,cAAc;AACpD,UAAM,oBAAoB,WAAW;AAAA,MACnC,CAAC,cACC,CAAC,eACE,IAAI,CAAC,UAAU,MAAM,IAAI,EACzB,SAAS,UAAU,aAAa;AAAA,IACvC;AAEA,QAAI,kBAAkB,WAAW,GAAG;AAClC,qBAAO,KAAK,wBAAwB;AACpC,YAAM,IAAI,gBAAgB;AAC1B,cAAQ,KAAK,CAAC;AAAA,IAChB;AAEA,QAAI,UAAU;AACZ,YAAM,gBAAgB,kBAAkB;AAAA,QACtC,CAAC,cAAc,UAAU,kBAAkB;AAAA,MAC7C;AAEA,UAAI,kBAAkB,IAAI;AACxB,cAAM,IAAI,MAAM,aAAa,QAAQ,aAAa;AAAA,MACpD;AAEA,YAAM,qBAAqB,kBAAkB,MAAM,GAAG,gBAAgB,CAAC;AACvE,YAAMC,uBAAsB,IAAI;AAAA,QAC9B;AAAA,QACA;AAAA,QACA;AAAA,MACF;AACA,YAAMA,qBAAoB,aAAa,kBAAkB;AACzD,UAAI,oBAAoB,IAAI;AAC5B,YAAM,cAAc,OAAO;AAC3B;AAAA,IACF;AAEA,UAAM,sBAAsB,IAAI;AAAA,MAC9B;AAAA,MACA;AAAA,MACA;AAAA,IACF;AAEA,UAAM,oBAAoB,aAAa,iBAAiB;AAExD,QAAI,oBAAoB,IAAI;AAC5B,UAAM,cAAc,OAAO;AAAA,EAC7B,SAAS,OAAY;AACnB,QAAI,sBAAsB,IAAI;AAC9B,UAAM,cAAc,SAAS;AAC7B,UAAM;AAAA,EACR,UAAE;AACA,UAAM,IAAI,gBAAgB;AAAA,EAC5B;AACF;;;AC/EA;AAEA,OAAOC,aAAY;AASnBC,QAAO,OAAO;AAEd,eAAsB,oBAAoB,UAAkC;AAC1E,QAAM,MAAM,MAAM,cAAc,QAAQ;AACxC,QAAM,gBAAgB,IAAI,qBAAqB;AAE/C,MAAI;AACF,UAAM,iBACH,MAAM,kBAAkB,aAAa,KAAM,CAAC;AAC/C,UAAM,aAA0B,MAAM,cAAc;AACpD,UAAM,oBAAoB,WAAW;AAAA,MACnC,CAAC,cACC,CAAC,eACE,IAAI,CAAC,UAAU,MAAM,IAAI,EACzB,SAAS,UAAU,aAAa;AAAA,IACvC;AAEA,QAAI,kBAAkB,WAAW,GAAG;AAClC,qBAAO,KAAK,wBAAwB;AACpC,YAAM,IAAI,gBAAgB;AAC1B,cAAQ,KAAK,CAAC;AAAA,IAChB;AAEA,QAAI,UAAU;AACZ,YAAM,gBAAgB,kBAAkB;AAAA,QACtC,CAAC,cAAc,UAAU,kBAAkB;AAAA,MAC7C;AAEA,UAAI,kBAAkB,IAAI;AACxB,cAAM,IAAI,MAAM,aAAa,QAAQ,aAAa;AAAA,MACpD;AAEA,YAAM,qBAAqB,kBAAkB,MAAM,GAAG,gBAAgB,CAAC;AACvE,YAAMC,uBAAsB,IAAI;AAAA,QAC9B;AAAA,QACA;AAAA,QACA;AAAA,MACF;AAEA,YAAMA,qBAAoB,aAAa,kBAAkB;AAAA,IAC3D;AAEA,UAAM,sBAAsB,IAAI;AAAA,MAC9B;AAAA,MACA;AAAA,MACA;AAAA,IACF;AAEA,UAAM,oBAAoB,aAAa,iBAAiB;AAAA,EAC1D,UAAE;AACA,UAAM,IAAI,gBAAgB;AAAA,EAC5B;AACF;;;AhDzDAC,QAAO,OAAO;AAEd,eAAO,uBAA8C,UAAmB;AACtE,QAAM,eAAe,QAAQ,IAAI;AACjC,MAAI,CAAC,cAAc;AACjB,UAAM,IAAI,MAAM,2CAA2C;AAAA,EAC7D;AAEA,iBAAO,KAAK,0BAA0B,YAAY,EAAE;AACpD,UAAQ,cAAc;AAAA,IACpB,KAAK;AAAA,IACL,KAAK;AACH,YAAM,iBAAiB,QAAQ;AAC/B;AAAA,IACF,KAAK;AACH,YAAM,gBAAgB,QAAQ;AAC9B;AAAA,IACF,KAAK;AACH,YAAM,oBAAoB,QAAQ;AAClC;AAAA,IACF;AACE,YAAM,IAAI;AAAA,QACR,oEACE;AAAA,MACJ;AAAA,EACJ;AAEA,iBAAO,KAAK,6BAA6B;AAC3C;;;AiDlCA;AAAA,OAAOC,cAAY;;;ACAnB;AAEA,OAAOC,aAAY;AAcnBC,QAAO,OAAO;AAEd,eAAsB,qBACpB,eACe;AACf,QAAM,MAAM,MAAM,cAAc,QAAQ;AACxC,QAAM,gBAAgB,IAAI,qBAAqB;AAE/C,MAAI;AACF,QAAI,mBAAmB,IAAI;AAC3B,UAAM,cAAc,iBAAiB;AACrC,UAAM,iBACJ,MAAM,kBAAkB,aAAa;AACvC,UAAM,aAA0B,MAAM,cAAc;AACpD,UAAM,kBAAkB,eAAe,IAAI,CAAC,cAAc,UAAU,IAAI;AACxE,UAAM,oBAAoB,WAAW;AAAA,MAAO,CAAC,cAC3C,gBAAgB,SAAS,UAAU,aAAa;AAAA,IAClD;AAEA,QAAI,kBAAkB,WAAW,GAAG;AAClC,qBAAO,KAAK,wBAAwB;AACpC,YAAM,IAAI,gBAAgB;AAC1B,cAAQ,KAAK,CAAC;AAAA,IAChB;AAEA,QAAI,eAAe;AACjB,YAAM,qBAAqB,kBAAkB;AAAA,QAC3C,CAAC,cAAc,UAAU,kBAAkB;AAAA,MAC7C;AAEA,UAAI,uBAAuB,IAAI;AAC7B,cAAM,IAAI,MAAM,aAAa,aAAa,aAAa;AAAA,MACzD;AAEA,YAAM,qBAAqB,kBAAkB,MAAM,kBAAkB;AACrE,YAAMC,uBAA2C,IAAI;AAAA,QACnD;AAAA,QACA;AAAA,QACA;AAAA,MACF;AAEA,YAAMA,qBAAoB,eAAe,kBAAkB;AAC3D,UAAI,oBAAoB,IAAI;AAC5B,YAAM,cAAc,OAAO;AAC3B;AAAA,IACF;AAEA,UAAM,sBAA2C,IAAI;AAAA,MACnD;AAAA,MACA;AAAA,MACA;AAAA,IACF;AAEA,UAAM,oBAAoB,eAAe,iBAAiB;AAE1D,QAAI,oBAAoB,IAAI;AAC5B,UAAM,cAAc,OAAO;AAAA,EAC7B,SAAS,OAAY;AACnB,QAAI,sBAAsB,IAAI;AAC9B,UAAM,cAAc,SAAS;AAC7B,UAAM;AAAA,EACR,UAAE;AACA,UAAM,IAAI,gBAAgB;AAAA,EAC5B;AACF;;;AChFA;AAEA,OAAOC,aAAY;AAcnBC,QAAO,OAAO;AAEd,eAAsB,oBACpB,eACe;AACf,QAAM,MAAM,MAAM,cAAc,QAAQ;AACxC,QAAM,gBAAgB,IAAI,qBAAqB;AAC/C,MAAI;AACF,UAAM,iBACJ,MAAM,kBAAkB,aAAa;AACvC,UAAM,aAA0B,MAAM,cAAc;AAEpD,UAAM,kBAAkB,eAAe,IAAI,CAAC,cAAc,UAAU,IAAI;AACxE,UAAM,oBAAoB,WAAW;AAAA,MAAO,CAAC,cAC3C,gBAAgB,SAAS,UAAU,aAAa;AAAA,IAClD;AAEA,QAAI,kBAAkB,WAAW,GAAG;AAClC,qBAAO,KAAK,wBAAwB;AACpC,YAAM,IAAI,gBAAgB;AAC1B,cAAQ,KAAK,CAAC;AAAA,IAChB;AAEA,QAAI,eAAe;AACjB,YAAM,qBAAqB,kBAAkB;AAAA,QAC3C,CAAC,cAAc,UAAU,kBAAkB;AAAA,MAC7C;AAEA,UAAI,uBAAuB,IAAI;AAC7B,cAAM,IAAI,MAAM,aAAa,aAAa,aAAa;AAAA,MACzD;AAEA,YAAM,qBAAqB,kBAAkB,MAAM,kBAAkB;AACrE,YAAMC,uBAAsB,IAAI;AAAA,QAC9B;AAAA,QACA;AAAA,QACA;AAAA,MACF;AAEA,UAAI,mBAAmB,IAAI;AAC3B,YAAM,cAAc,MAAM,iBAAiB;AAC3C,YAAMA,qBAAoB,eAAe,kBAAkB;AAC3D,YAAM,cAAc,MAAM,kBAAkB;AAC5C;AAAA,IACF;AAEA,UAAM,sBAAsB,IAAI;AAAA,MAC9B;AAAA,MACA;AAAA,MACA;AAAA,IACF;AACA,QAAI,mBAAmB,IAAI;AAC3B,UAAM,cAAc,MAAM,iBAAiB;AAC3C,UAAM,oBAAoB,eAAe,iBAAiB;AAE1D,QAAI,oBAAoB,IAAI;AAC5B,UAAM,cAAc,MAAM,kBAAkB;AAAA,EAC9C,SAAS,OAAY;AACnB,QAAI,sBAAsB,IAAI;AAC9B,UAAM,cAAc,MAAM,oBAAoB;AAC9C,UAAM;AAAA,EACR,UAAE;AACA,UAAM,IAAI,gBAAgB;AAAA,EAC5B;AACF;;;AChFA;AAEA,OAAOC,cAAY;AASnBC,SAAO,OAAO;AAEd,eAAsB,wBACpB,eACe;AACf,QAAM,MAAM,MAAM,cAAc,QAAQ;AACxC,QAAM,gBAAgB,IAAI,qBAAqB;AAE/C,MAAI;AACF,UAAM,iBACH,MAAM,kBAAkB,aAAa,KAAM,CAAC;AAC/C,UAAM,aAA0B,MAAM,cAAc;AAEpD,UAAM,kBAAkB,eAAe,IAAI,CAAC,cAAc,UAAU,IAAI;AACxE,UAAM,oBAAoB,WAAW;AAAA,MAAO,CAAC,cAC3C,gBAAgB,SAAS,UAAU,aAAa;AAAA,IAClD;AAEA,QAAI,kBAAkB,WAAW,GAAG;AAClC,qBAAO,KAAK,wBAAwB;AACpC,YAAM,IAAI,gBAAgB;AAC1B,cAAQ,KAAK,CAAC;AAAA,IAChB;AAEA,QAAI,eAAe;AACjB,YAAM,qBAAqB,kBAAkB;AAAA,QAC3C,CAAC,cAAc,UAAU,kBAAkB;AAAA,MAC7C;AAEA,UAAI,uBAAuB,IAAI;AAC7B,cAAM,IAAI,MAAM,aAAa,aAAa,aAAa;AAAA,MACzD;AAEA,YAAM,qBAAqB,kBAAkB,MAAM,kBAAkB;AACrE,YAAMC,uBAAsB,IAAI;AAAA,QAC9B;AAAA,QACA;AAAA,QACA;AAAA,MACF;AAEA,YAAMA,qBAAoB,eAAe,kBAAkB;AAC3D;AAAA,IACF;AAEA,UAAM,sBAAsB,IAAI;AAAA,MAC9B;AAAA,MACA;AAAA,MACA;AAAA,IACF;AACA,UAAM,oBAAoB,eAAe,iBAAiB;AAAA,EAC5D,UAAE;AACA,UAAM,IAAI,gBAAgB;AAAA,EAC5B;AACF;;;AH1DAC,SAAO,OAAO;AAEd,eAAO,2BACL,eACA;AACA,QAAM,eAAe,QAAQ,IAAI;AACjC,iBAAO,KAAK,gDAAgD,YAAY;AAExE,UAAQ,cAAc;AAAA,IACpB,KAAK;AAAA,IACL,KAAK;AACH,YAAM,qBAAqB,aAAa;AACxC;AAAA,IACF,KAAK;AACH,YAAM,oBAAoB,aAAa;AACvC;AAAA,IACF,KAAK;AACH,YAAM,wBAAwB,aAAa;AAC3C;AAAA,IACF;AACE,YAAM,IAAI;AAAA,QACR,oFACE;AAAA,MACJ;AAAA,EACJ;AACF;;;ArD1BA,IAAM,UAAU,IAAI,QAAQ;AAE5B,QACG,QAAQ,yBAAyB,EACjC;AAAA,EACC;AACF,EACC;AAAA,EACC;AAAA,EACA;AAAA,EACA;AACF,EACC,OAAO,CAAC,MAAc,WAAoC;AACzD,MAAI,CAAC,MAAM;AACT,YAAQ,MAAM,qCAAqC;AACnD,YAAQ,KAAK,CAAC;AAAA,EAChB;AAEA,2BAAyB,MAAM,OAAO,UAAU;AAClD,CAAC;AAEH,QACG,QAAQ,2BAA2B,EACnC;AAAA,EACC;AACF,EACC,OAAO,OAAO,aAAqB;AAClC,QAAM,uBAAuB,QAAQ;AACvC,CAAC;AAEH,QACG,QAAQ,qCAAqC,EAC7C;AAAA,EACC;AACF,EACC,OAAO,OAAO,kBAA0B;AACvC,QAAM,2BAA4B,aAAa;AACjD,CAAC;AAEH,QACG,QAAQ,oBAAoB,EAC5B;AAAA,EACC;AACF,EACC,OAAO,YAAY;AAClB,QAAM,2BAA4B;AAClC,QAAM,uBAAuB;AAC/B,CAAC;AAEH,QAAQ,MAAM,QAAQ,IAAI;","names":["captureStackTrace","setFunctionName","value","path","fs","fs","path","self","require","value","_a","parse","path","replaceWildcardCharacter","require_tsconfig","require_tsconfig","require_tsconfig","config","basePath","path","require","path","options","fs","path","value","arg","options","path","fileURLToPath","fs","path","result","value","module","program","global","exports","i","TokenType","Position","SourceLocation","Parser","parse","ref","parseExpressionAt","tokenizer","DestructuringErrors","list","ecmaVersion","value","TokContext","Scope","Node","BranchID","self","RegExpValidationState","Token","global","exports","node","override","Found","SyntaxError","node","column","diff","value","path","obj","line","operation","hunk","toPos","j","content","err","_loop","i","self","diff","options","context","_a","_b","path","value","code","module","value","column","path","url","resolveUri","path","value","presortedDecodedMap","decodedMappings","column","encodedMappings","traceSegment","originalPositionFor","generatedPositionFor","eachMapping","decodedMap","encodedMap","encode","decode","bsFound","path","fileURLToPath","fs","sharedData","value","column","options","URL","fileURLToPath","ERR_INVALID_ARG_VALUE","path","packageConfig","exports","packageJSONPath","file","packageJSONUrl","URL","fileURLToPath","source","_b","_a","createTranspiler","path","options","configDiagnosticList","program","value","classification","enabled","path","path","dotenv","dotenv","dotenv","value","value","column","dynamicColumn","column","relationModel","dynamicColumn","value","column","column","value","column","modelColumn","value","column","alias","value","value","relation","column","column","modelColumn","value","value","column","relation","column","column","value","value","column","query","params","rawQuery","query","value","column","column","value","result","join","value","idsToFetchList","column","value","join","value","column","value","result","join","value","table","sqLiteConnection","err","query","params","resolve","reject","rows","fs","path","dotenv","dotenv","path","migrationModule","fs","dotenv","migrationController","dotenv","dotenv","migrationController","dotenv","dotenv","migrationController","dotenv","dotenv","dotenv","dotenv","migrationController","dotenv","dotenv","migrationController","dotenv","dotenv","migrationController","dotenv"]}