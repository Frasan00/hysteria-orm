"use strict";(self.webpackChunkhysteria_orm_docs=self.webpackChunkhysteria_orm_docs||[]).push([[1388],{7398:(e,s,r)=>{r.r(s),r.d(s,{assets:()=>d,contentTitle:()=>a,default:()=>u,frontMatter:()=>t,metadata:()=>n,toc:()=>c});const n=JSON.parse('{"id":"databases/sql/query-builder/basics","title":"Query Builder Basics","description":"This page has been consolidated into the main QueryBuilder documentation. See the full reference at: QueryBuilder (Raw SQL)","source":"@site/docs/databases/sql/query-builder/basics.md","sourceDirName":"databases/sql/query-builder","slug":"/databases/sql/query-builder/basics","permalink":"/hysteria-orm/docs/databases/sql/query-builder/basics","draft":false,"unlisted":false,"editUrl":"https://github.com/Frasan00/hysteria-orm/tree/main/website/docs/databases/sql/query-builder/basics.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"title":"Query Builder Basics","sidebar_position":1},"sidebar":"tutorialSidebar","previous":{"title":"Standard Model Methods","permalink":"/hysteria-orm/docs/databases/sql/standard-methods/basics"},"next":{"title":"ModelQueryBuilder (Type-Safe)","permalink":"/hysteria-orm/docs/databases/sql/query-builder/model-query-builder"}}');var i=r(4848),l=r(8453);const t={title:"Query Builder Basics",sidebar_position:1},a="Query Builder Basics",d={},c=[{value:"title: Query Builder Basics\nsidebar_position: 1",id:"title-query-builder-basicssidebar_position-1",level:2},{value:"Basic Usage",id:"basic-usage",level:2},{value:"Selecting Columns",id:"selecting-columns",level:2},{value:"Filtering",id:"filtering",level:2},{value:"Pagination",id:"pagination",level:2},{value:"Joins",id:"joins",level:2},{value:"Advanced Features",id:"advanced-features",level:2},{value:"<code>annotate</code> (Column Aliasing)",id:"annotate-column-aliasing",level:3},{value:"<code>removeAnnotations</code>",id:"removeannotations",level:3},{value:"<code>pluck</code>",id:"pluck",level:3},{value:"<code>increment</code> / <code>decrement</code>",id:"increment--decrement",level:3},{value:"<code>lockForUpdate</code> / <code>forShare</code>",id:"lockforupdate--forshare",level:3},{value:"<code>with</code> (Common Table Expressions, CTE)",id:"with-common-table-expressions-cte",level:3},{value:"<code>clearSelect</code>",id:"clearselect",level:3},{value:"<code>orderBy</code>",id:"orderby",level:3},{value:"<code>truncate</code>",id:"truncate",level:3},{value:"<code>softDelete</code>",id:"softdelete",level:3},{value:"ModelQueryBuilder vs QueryBuilder",id:"modelquerybuilder-vs-querybuilder",level:2}];function o(e){const s={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,l.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(s.header,{children:(0,i.jsx)(s.h1,{id:"query-builder-basics",children:"Query Builder Basics"})}),"\n",(0,i.jsxs)(s.p,{children:["This page has been consolidated into the main ",(0,i.jsx)(s.code,{children:"QueryBuilder"})," documentation. See the full reference at: ",(0,i.jsx)(s.a,{href:"/hysteria-orm/docs/databases/sql/query-builder/",children:"QueryBuilder (Raw SQL)"})]}),"\n",(0,i.jsxs)(s.p,{children:["Redirecting content consolidated \u2014 the ",(0,i.jsx)(s.code,{children:"query-builder.md"})," page now contains the basics and full API reference."]}),"\n",(0,i.jsx)(s.hr,{}),"\n",(0,i.jsxs)(s.p,{children:["Next: ",(0,i.jsx)(s.a,{href:"/hysteria-orm/docs/databases/sql/query-builder/model-query-builder",children:"Model Query Builder"})]}),"\n",(0,i.jsx)(s.hr,{}),"\n",(0,i.jsx)(s.h2,{id:"title-query-builder-basicssidebar_position-1",children:"title: Query Builder Basics\nsidebar_position: 1"}),"\n",(0,i.jsx)(s.h1,{id:"query-builder-basics-1",children:"Query Builder Basics"}),"\n",(0,i.jsx)(s.p,{children:"Hysteria ORM provides two main query APIs:"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"QueryBuilder"}),": A low-level, Knex-like builder for raw SQL queries. Not type-safe, works with any table."]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"ModelQueryBuilder"}),": A high-level, type-safe builder for model-based queries. All model ",(0,i.jsx)(s.code,{children:".query()"})," calls return a ModelQueryBuilder."]}),"\n"]}),"\n",(0,i.jsxs)(s.blockquote,{children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Best Practice:"})," Use ",(0,i.jsx)(s.code,{children:"Model.query()"})," for type safety and rich features. Use ",(0,i.jsx)(s.code,{children:"sql.query('table')"})," for raw, flexible queries."]}),"\n"]}),"\n",(0,i.jsx)(s.h2,{id:"basic-usage",children:"Basic Usage"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-typescript",children:"// Type-safe (ModelQueryBuilder)\nconst users = await User.query().where('status', 'active').many();\n\n// Not type-safe (QueryBuilder)\nconst users = await sql.query('users').where('status', 'active').many();\n"})}),"\n",(0,i.jsx)(s.h2,{id:"selecting-columns",children:"Selecting Columns"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-typescript",children:"const names = await User.query().select('name').many();\n"})}),"\n",(0,i.jsx)(s.h2,{id:"filtering",children:"Filtering"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-typescript",children:"const users = await User.query().where('age', '>', 18).andWhere('isActive', true).many();\n"})}),"\n",(0,i.jsx)(s.h2,{id:"pagination",children:"Pagination"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-typescript",children:"const page = await User.query().paginate(1, 10);\nconsole.log(page.data, page.paginationMetadata);\n"})}),"\n",(0,i.jsx)(s.h2,{id:"joins",children:"Joins"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-typescript",children:"const postsWithUsers = await Post.query()\n  .join('users', 'posts.userId', 'users.id')\n  .select('posts.*', 'users.name')\n  .many();\n"})}),"\n",(0,i.jsx)(s.h2,{id:"advanced-features",children:"Advanced Features"}),"\n",(0,i.jsxs)(s.h3,{id:"annotate-column-aliasing",children:[(0,i.jsx)(s.code,{children:"annotate"})," (Column Aliasing)"]}),"\n",(0,i.jsx)(s.p,{children:"Add computed columns or aliases to your result set."}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-typescript",children:"const userCount = await User.query()\n  .annotate('count', 'id', 'total') // with sql method\n  .first();\n\nconst user = await User.query()\n  .annotate('id', 'userId') // only alias\n  .first();\n\nconsole.log(userCount.$annotations.total);\nconsole.log(userCount.$annotations.userId);\n"})}),"\n",(0,i.jsx)(s.h3,{id:"removeannotations",children:(0,i.jsx)(s.code,{children:"removeAnnotations"})}),"\n",(0,i.jsx)(s.p,{children:"Remove all annotations from the result."}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-typescript",children:"const user = await User.query()\n  .annotate('count', 'id', 'total')\n  .removeAnnotations()\n  .first();\n\nconsole.log(user.$annotations); // undefined\n"})}),"\n",(0,i.jsx)(s.h3,{id:"pluck",children:(0,i.jsx)(s.code,{children:"pluck"})}),"\n",(0,i.jsx)(s.p,{children:"Extract a single column as an array."}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-typescript",children:"const names = await User.query().pluck('name'); // string[]\n"})}),"\n",(0,i.jsxs)(s.h3,{id:"increment--decrement",children:[(0,i.jsx)(s.code,{children:"increment"})," / ",(0,i.jsx)(s.code,{children:"decrement"})]}),"\n",(0,i.jsx)(s.p,{children:"Atomically increment or decrement a column."}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-typescript",children:"await User.query().increment('age', 1);\nawait User.query().decrement('age', 1);\n"})}),"\n",(0,i.jsxs)(s.h3,{id:"lockforupdate--forshare",children:[(0,i.jsx)(s.code,{children:"lockForUpdate"})," / ",(0,i.jsx)(s.code,{children:"forShare"})]}),"\n",(0,i.jsx)(s.p,{children:"Apply row-level locking (Postgres/MySQL only)."}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-typescript",children:"const users = await User.query().lockForUpdate().many();\nconst users = await User.query().forShare().many();\n"})}),"\n",(0,i.jsxs)(s.h3,{id:"with-common-table-expressions-cte",children:[(0,i.jsx)(s.code,{children:"with"})," (Common Table Expressions, CTE)"]}),"\n",(0,i.jsx)(s.p,{children:"Use CTEs for advanced queries."}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-typescript",children:"const users = await User.query()\n  .with('users_cte', (qb) => qb.select('name').where('isActive', true))\n  .many();\n"})}),"\n",(0,i.jsx)(s.h3,{id:"clearselect",children:(0,i.jsx)(s.code,{children:"clearSelect"})}),"\n",(0,i.jsx)(s.p,{children:"Reset selected columns to default (all columns)."}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-typescript",children:"const users = await User.query().select('name').clearSelect().many();\n"})}),"\n",(0,i.jsx)(s.h3,{id:"orderby",children:(0,i.jsx)(s.code,{children:"orderBy"})}),"\n",(0,i.jsx)(s.p,{children:"Sort results by a column."}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-typescript",children:"const users = await User.query().orderBy('name', 'asc').many();\n"})}),"\n",(0,i.jsx)(s.h3,{id:"truncate",children:(0,i.jsx)(s.code,{children:"truncate"})}),"\n",(0,i.jsx)(s.p,{children:"Delete all rows from a table."}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-typescript",children:"await User.query().truncate();\n"})}),"\n",(0,i.jsx)(s.h3,{id:"softdelete",children:(0,i.jsx)(s.code,{children:"softDelete"})}),"\n",(0,i.jsxs)(s.p,{children:["Mark rows as deleted by setting a column (e.g., ",(0,i.jsx)(s.code,{children:"deletedAt"}),")."]}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-typescript",children:"await User.query().softDelete({ column: 'deletedAt' });\n"})}),"\n",(0,i.jsx)(s.h2,{id:"modelquerybuilder-vs-querybuilder",children:"ModelQueryBuilder vs QueryBuilder"}),"\n",(0,i.jsxs)(s.table,{children:[(0,i.jsx)(s.thead,{children:(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.th,{children:"Feature"}),(0,i.jsx)(s.th,{children:"ModelQueryBuilder"}),(0,i.jsx)(s.th,{children:"QueryBuilder (sql.query)"})]})}),(0,i.jsxs)(s.tbody,{children:[(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"Type Safety"}),(0,i.jsx)(s.td,{children:"\u2705 Yes"}),(0,i.jsx)(s.td,{children:"\u274c No"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"Model Awareness"}),(0,i.jsx)(s.td,{children:"\u2705 Yes"}),(0,i.jsx)(s.td,{children:"\u274c No"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"Decorator Support"}),(0,i.jsx)(s.td,{children:"\u2705 Yes"}),(0,i.jsx)(s.td,{children:"\u274c No"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"Raw SQL Flexibility"}),(0,i.jsx)(s.td,{children:"\u26a0\ufe0f Limited"}),(0,i.jsx)(s.td,{children:"\u2705 Full"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"Use Case"}),(0,i.jsx)(s.td,{children:"App logic, relations"}),(0,i.jsx)(s.td,{children:"Raw SQL, migrations, performance critical queries"})]})]})]}),"\n",(0,i.jsx)(s.hr,{}),"\n",(0,i.jsxs)(s.p,{children:["Next: ",(0,i.jsx)(s.a,{href:"/hysteria-orm/docs/databases/sql/query-builder/model-query-builder",children:"Model Query Builder"})]})]})}function u(e={}){const{wrapper:s}={...(0,l.R)(),...e.components};return s?(0,i.jsx)(s,{...e,children:(0,i.jsx)(o,{...e})}):o(e)}},8453:(e,s,r)=>{r.d(s,{R:()=>t,x:()=>a});var n=r(6540);const i={},l=n.createContext(i);function t(e){const s=n.useContext(l);return n.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function a(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:t(e.components),n.createElement(l.Provider,{value:s},e.children)}}}]);