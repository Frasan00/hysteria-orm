"use strict";(self.webpackChunkhysteria_orm_docs=self.webpackChunkhysteria_orm_docs||[]).push([[6246],{7902:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>r,default:()=>u,frontMatter:()=>i,metadata:()=>o,toc:()=>d});const o=JSON.parse('{"id":"databases/sql/models/annotations","title":"Model Annotations","description":"In Hysteria ORM, every Model instance can have an $annotations field. This field contains any columns returned from a query that are not part of the main Model definition. This is useful for including computed columns, joined fields, or any extra data selected in your queries.","source":"@site/docs/databases/sql/models/annotations.md","sourceDirName":"databases/sql/models","slug":"/databases/sql/models/annotations","permalink":"/hysteria-orm/docs/databases/sql/models/annotations","draft":false,"unlisted":false,"editUrl":"https://github.com/Frasan00/hysteria-orm/tree/main/website/docs/databases/sql/models/annotations.md","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"title":"Model Annotations","sidebar_position":3}}');var s=t(4848),a=t(8453);const i={title:"Model Annotations",sidebar_position:3},r="Model Annotations",l={},d=[{value:"How Annotations Work",id:"how-annotations-work",level:2},{value:"Query-builder",id:"query-builder",level:2},{value:"Example",id:"example",level:3},{value:"Removing Annotations",id:"removing-annotations",level:2}];function c(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"model-annotations",children:"Model Annotations"})}),"\n",(0,s.jsxs)(n.p,{children:["In Hysteria ORM, every Model instance can have an ",(0,s.jsx)(n.code,{children:"$annotations"})," field. This field contains any columns returned from a query that are not part of the main Model definition. This is useful for including computed columns, joined fields, or any extra data selected in your queries.\n",(0,s.jsx)(n.code,{children:"selectRaw"})," statement with functions could add columns in the ",(0,s.jsx)(n.code,{children:"$annotations"})," property but it won't be typified and trying to access the property will result in a ts error, it's always adviced to work with the ",(0,s.jsx)(n.code,{children:"annotate"})," method while using aliases in the query"]}),"\n",(0,s.jsx)(n.h2,{id:"how-annotations-work",children:"How Annotations Work"}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"$annotations"})," property is only added to your model results when you use the ",(0,s.jsx)(n.code,{children:"annotate()"})," method in your query. By default, it\u2019s not included\u2014only columns specifically annotated will appear in ",(0,s.jsx)(n.code,{children:"$annotations"}),"."]}),"\n",(0,s.jsx)(n.h2,{id:"query-builder",children:"Query-builder"}),"\n",(0,s.jsx)(n.p,{children:"Type safe annotations only work in Model queries, raw query builder always returns the raw driver result."}),"\n",(0,s.jsx)(n.h3,{id:"example",children:"Example"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:'const user = await User.query().annotate("count", "id", "total").one(); // type (User & { $annotations: { total: any } }) | null\nconsole.log(user?.$annotations); // { total: number }\n'})}),"\n",(0,s.jsx)(n.h2,{id:"removing-annotations",children:"Removing Annotations"}),"\n",(0,s.jsxs)(n.p,{children:["To remove annotations from the query result, you can use the ",(0,s.jsx)(n.code,{children:"removeAnnotations"})," method from the Model query builder:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"const users = await User.query().removeAnnotations().one(); // User | null\n"})}),"\n",(0,s.jsx)(n.p,{children:"This will ensure that only the fields defined in your Model are present in the result."})]})}function u(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>r});var o=t(6540);const s={},a=o.createContext(s);function i(e){const n=o.useContext(a);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),o.createElement(a.Provider,{value:n},e.children)}}}]);