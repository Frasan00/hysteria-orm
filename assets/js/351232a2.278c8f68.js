"use strict";(self.webpackChunkhysteria_orm_docs=self.webpackChunkhysteria_orm_docs||[]).push([[372],{8453:(s,n,e)=>{e.d(n,{R:()=>a,x:()=>r});var o=e(6540);const i={},t=o.createContext(i);function a(s){const n=o.useContext(t);return o.useMemo((function(){return"function"==typeof s?s(n):{...n,...s}}),[n,s])}function r(s){let n;return n=s.disableParentContext?"function"==typeof s.components?s.components(i):s.components||i:a(s.components),o.createElement(t.Provider,{value:n},s.children)}},8721:(s,n,e)=>{e.r(n),e.d(n,{assets:()=>c,contentTitle:()=>r,default:()=>u,frontMatter:()=>a,metadata:()=>o,toc:()=>d});const o=JSON.parse('{"id":"databases/nosql/mongodb/sessions","title":"MongoDB Sessions & Transactions","description":"MongoDB supports transactions using sessions (requires a replica set).","source":"@site/docs/databases/nosql/mongodb/sessions.md","sourceDirName":"databases/nosql/mongodb","slug":"/databases/nosql/mongodb/sessions","permalink":"/hysteria-orm/docs/databases/nosql/mongodb/sessions","draft":false,"unlisted":false,"editUrl":"https://github.com/Frasan00/hysteria-orm/tree/main/website/docs/databases/nosql/mongodb/sessions.md","tags":[],"version":"current","sidebarPosition":5,"frontMatter":{"title":"MongoDB Sessions & Transactions","sidebar_position":5}}');var i=e(4848),t=e(8453);const a={title:"MongoDB Sessions & Transactions",sidebar_position:5},r="MongoDB Sessions & Transactions",c={},d=[{value:"Starting a Session",id:"starting-a-session",level:2},{value:"Using a Session in Operations",id:"using-a-session-in-operations",level:2},{value:"Best Practices",id:"best-practices",level:2}];function l(s){const n={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",ul:"ul",...(0,t.R)(),...s.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"mongodb-sessions--transactions",children:"MongoDB Sessions & Transactions"})}),"\n",(0,i.jsx)(n.p,{children:"MongoDB supports transactions using sessions (requires a replica set)."}),"\n",(0,i.jsx)(n.h2,{id:"starting-a-session",children:"Starting a Session"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"const session = mongoDataSource.startSession();\n"})}),"\n",(0,i.jsx)(n.h2,{id:"using-a-session-in-operations",children:"Using a Session in Operations"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"try {\n  await User.insert({ name: 'Test' }, { session });\n  await session.commitTransaction();\n} catch (error) {\n  await session.abortTransaction();\n}\n"})}),"\n",(0,i.jsx)(n.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Always commit or abort the session."}),"\n",(0,i.jsx)(n.li,{children:"Use sessions for multi-document atomicity."}),"\n",(0,i.jsx)(n.li,{children:"Sessions require a replica set."}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsxs)(n.p,{children:["Next: ",(0,i.jsx)(n.a,{href:"/hysteria-orm/docs/databases/nosql/redis/introduction",children:"Redis Introduction"})]})]})}function u(s={}){const{wrapper:n}={...(0,t.R)(),...s.components};return n?(0,i.jsx)(n,{...s,children:(0,i.jsx)(l,{...s})}):l(s)}}}]);