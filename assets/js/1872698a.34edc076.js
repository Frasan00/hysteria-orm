"use strict";(self.webpackChunkhysteria_orm_docs=self.webpackChunkhysteria_orm_docs||[]).push([[6341],{8453:(e,n,r)=>{r.d(n,{R:()=>s,x:()=>c});var i=r(6540);const t={},o=i.createContext(t);function s(e){const n=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:s(e.components),i.createElement(o.Provider,{value:n},e.children)}},8547:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>a,contentTitle:()=>c,default:()=>h,frontMatter:()=>s,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"getting-started/performance","title":"Performance","description":"Hysteria ORM is designed for high performance. Here are some tips:","source":"@site/docs/getting-started/performance.md","sourceDirName":"getting-started","slug":"/getting-started/performance","permalink":"/hysteria-orm/docs/getting-started/performance","draft":false,"unlisted":false,"editUrl":"https://github.com/Frasan00/hysteria-orm/tree/main/website/docs/getting-started/performance.md","tags":[],"version":"current","sidebarPosition":7,"frontMatter":{"title":"Performance","sidebar_position":7},"sidebar":"tutorialSidebar","previous":{"title":"JavaScript Usage","permalink":"/hysteria-orm/docs/getting-started/javascript"},"next":{"title":"Logging","permalink":"/hysteria-orm/docs/getting-started/logging"}}');var t=r(4848),o=r(8453);const s={title:"Performance",sidebar_position:7},c="Performance",a={},l=[{value:"Connection Pooling",id:"connection-pooling",level:2},{value:"Query Optimization",id:"query-optimization",level:2},{value:"Built-in Query Performance Methods",id:"built-in-query-performance-methods",level:2},{value:"Logging",id:"logging",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"performance",children:"Performance"})}),"\n",(0,t.jsx)(n.p,{children:"Hysteria ORM is designed for high performance. Here are some tips:"}),"\n",(0,t.jsx)(n.h2,{id:"connection-pooling",children:"Connection Pooling"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"SQL and MongoDB connections use pooling by default (driver-dependent)."}),"\n",(0,t.jsxs)(n.li,{children:["Use ",(0,t.jsx)(n.code,{children:"sql.connect()"})," and ",(0,t.jsx)(n.code,{children:"mongo.connect()"})," for singleton connections."]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"query-optimization",children:"Query Optimization"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Use ",(0,t.jsx)(n.code,{children:".select()"})," to limit columns."]}),"\n",(0,t.jsxs)(n.li,{children:["Use ",(0,t.jsx)(n.code,{children:".paginate()"})," for large datasets."]}),"\n",(0,t.jsxs)(n.li,{children:["Use ",(0,t.jsx)(n.code,{children:"withPerformance()"})," utility to measure query times:"]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"import { withPerformance } from 'hysteria-orm';\n\nconst [ms, users] = await withPerformance(() => User.query().many());\nconsole.log(`Query took ${ms}ms`);\n"})}),"\n",(0,t.jsx)(n.h2,{id:"built-in-query-performance-methods",children:"Built-in Query Performance Methods"}),"\n",(0,t.jsx)(n.p,{children:"Hysteria ORM provides built-in performance api to access query methods with measuring of the execution time:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:".performance.many()"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:".performance.one()"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:".performance.oneOrFail()"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:".performance.exists()"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:".performance.paginate()"})}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["Each method returns an object with ",(0,t.jsx)(n.code,{children:"data"})," (the result) and ",(0,t.jsx)(n.code,{children:"time"})," (the duration)."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"const users = await User.query().performance.many();\nconsole.log(users.data); // query result\nconsole.log(users.time); // execution time in ms\n\nconst user = await User.query().performance.one();\nconsole.log(user.data); // single user\nconsole.log(user.time); // execution time in ms\n\nconst paginated = await User.query().performance.paginate(1, 10);\nconsole.log(paginated.data); // paginated result\nconsole.log(paginated.time); // execution time in ms\n"})}),"\n",(0,t.jsx)(n.h2,{id:"logging",children:"Logging"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Enable query logging with ",(0,t.jsx)(n.code,{children:"DB_LOGS=true"})," or ",(0,t.jsx)(n.code,{children:"logs: true"})," in connection options."]}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsxs)(n.p,{children:["Next: ",(0,t.jsx)(n.a,{href:"/hysteria-orm/docs/getting-started/logging",children:"Logging"})]})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}}}]);