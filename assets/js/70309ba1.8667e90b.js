"use strict";(self.webpackChunkhysteria_orm_docs=self.webpackChunkhysteria_orm_docs||[]).push([[6628],{8453:(e,t,r)=>{r.d(t,{R:()=>a,x:()=>c});var n=r(6540);const i={},s=n.createContext(i);function a(e){const t=n.useContext(s);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),n.createElement(s.Provider,{value:t},e.children)}},9421:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>o,contentTitle:()=>c,default:()=>p,frontMatter:()=>a,metadata:()=>n,toc:()=>d});const n=JSON.parse('{"id":"getting-started/typescript","title":"TypeScript Usage","description":"Hysteria ORM is built with TypeScript in mind, providing full type safety for models, queries, and migrations.","source":"@site/docs/getting-started/typescript.md","sourceDirName":"getting-started","slug":"/getting-started/typescript","permalink":"/hysteria-orm/docs/getting-started/typescript","draft":false,"unlisted":false,"editUrl":"https://github.com/Frasan00/hysteria-orm/tree/main/website/docs/getting-started/typescript.md","tags":[],"version":"current","sidebarPosition":5,"frontMatter":{"title":"TypeScript Usage","sidebar_position":5},"sidebar":"tutorialSidebar","previous":{"title":"Environment Variables","permalink":"/hysteria-orm/docs/getting-started/environment"},"next":{"title":"JavaScript Usage","permalink":"/hysteria-orm/docs/getting-started/javascript"}}');var i=r(4848),s=r(8453);const a={title:"TypeScript Usage",sidebar_position:5},c="TypeScript Usage",o={},d=[{value:"Typescript configuration",id:"typescript-configuration",level:2},{value:"Model Typing",id:"model-typing",level:2},{value:"Query Type Inference",id:"query-type-inference",level:2},{value:"Best Practices",id:"best-practices",level:2}];function l(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.header,{children:(0,i.jsx)(t.h1,{id:"typescript-usage",children:"TypeScript Usage"})}),"\n",(0,i.jsx)(t.p,{children:"Hysteria ORM is built with TypeScript in mind, providing full type safety for models, queries, and migrations."}),"\n",(0,i.jsx)(t.h2,{id:"typescript-configuration",children:"Typescript configuration"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-json",children:'{\n  "compilerOptions": {\n    // Must set decorators support\n    "experimentalDecorators": true,\n    "emitDecoratorMetadata": true\n  },\n}\n'})}),"\n",(0,i.jsx)(t.h2,{id:"model-typing",children:"Model Typing"}),"\n",(0,i.jsx)(t.p,{children:"All models and collections are strongly typed. Example:"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-typescript",children:"import { Model, column } from 'hysteria-orm';\n\nclass User extends Model {\n  @column()\n  declare name: string;\n}\n"})}),"\n",(0,i.jsx)(t.h2,{id:"query-type-inference",children:"Query Type Inference"}),"\n",(0,i.jsx)(t.p,{children:"Query results are automatically typed based on your model definition:"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-typescript",children:"const users = await User.query().many(); // users: User[]\n"})}),"\n",(0,i.jsx)(t.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:["Use ",(0,i.jsx)(t.code,{children:"declare"})," or ",(0,i.jsx)(t.code,{children:"${property}!"})," for model properties, since they are not initialized in a constructor."]}),"\n",(0,i.jsx)(t.li,{children:"Use enums for status fields."}),"\n"]}),"\n",(0,i.jsx)(t.hr,{}),"\n",(0,i.jsxs)(t.p,{children:["Next: ",(0,i.jsx)(t.a,{href:"/hysteria-orm/docs/getting-started/javascript",children:"JavaScript Usage"})]})]})}function p(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}}}]);